<?xml version="1.0" encoding="UTF-8"?>
<window>
	<include content="media_window_attributes">
		<param name="view_ids" value="50,51" /> grids?
	</include>
	<defaultcontrol always="true">11</defaultcontrol>
	<onload condition="String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">setfocus(8000)</onload>
	<views>50,51</views>

	<include content="media_window_attributes" />
<!-- 	1.44 MyPVRGuide.xml
ID 	Type 			Description
2 	button 			Select viewtype (list, thumbnail, media info, etc...)
3 	button 			Select sort method (sort by: name, date size, etc...)
4 	togglebutton 	Select sortmode (ascending or descending)
10 	epggrid 		EPG Guide Timeline
11 	container 		Channel groups selector ?
28 	button 			Channel groups button ?
29 	label 			View name (Now / Next / Timeline)
30 	label 			Channel groups name  
-->
	<controls>
		<control type="button" id="2">
			<include>HiddenObject</include>
		</control>
		<control type="button" id="3">
			<include>HiddenObject</include>
		</control>
		<control type="togglebutton" id="4">
			<include>HiddenObject</include>
		</control>
		<control type="button" id="28">
			<description>use container 11 instead ?</description>
			<include>HiddenObject</include>
		</control>
		<control type="label" id="29">
			<description>may adjust header ?</description>
			<include>HiddenObject</include>
		</control>
		<control type="label" id="30">
			<description>may adjust header ?</description>
			<include>HiddenObject</include>
		</control>
		
		<control type="group">
			<visible>!Skin.HasSetting(BlurEnabled)</visible>
			<visible>String.IsEmpty(Window(home).Property(shortcutaction_inprogress))</visible>
			<include>global_background</include>
		</control>
		<control type="group">
			<visible>Skin.HasSetting(BlurEnabled)</visible>
			<visible>String.IsEmpty(Window(home).Property(shortcutaction_inprogress))</visible>
			<include>GlobalBlurredBackground</include>
		</control>
		
		<control type="group">
			<description>viewtypes</description>
			<include content="Animation_Close_MediaContainer" condition="String.IsEmpty(Window(home).Property(shortcutaction_inprogress))" />
			<animation type="Conditional" condition="$EXP[Infodialog_IsActive] | Window.IsActive(mediasource) | [Window.IsActive(shutdownmenu) + !$EXP[Spotlight_ViewType]] | Window.IsActive(1104)">
				<effect type="fade" start="100" end="0" time="250" tween="sine" easing="out" />
				<effect type="zoom" center="50%,50%" start="100" end="0" time="300" tween="cubic" easing="out" />
			</animation>
			<include condition="!string.isempty(window(home).property(shortcutaction_inprogress))" content="SwanShortcuts_Container" />
			
			<!-- <param name="has_rulerdate_layout" value="" /> -->
			<include condition="String.IsEmpty(Window(home).Property(shortcutaction_inprogress))" content="grid_test">
				<param name="grid_id" value="50" />
				<param name="orientation" value="vertical" />
			</include>
			<include condition="String.IsEmpty(Window(home).Property(shortcutaction_inprogress))" content="grid_test">
				<param name="grid_id" value="51" />
				<param name="orientation" value="horizontal" />
			</include>
			
			<include condition="String.IsEmpty(Window(home).Property(shortcutaction_inprogress))" content="ScrollBar_Alphabet">
				<right>0</right>
				<width>100</width>
				<top>110</top>
				<param name="id" value="600" />
				<param name="visible" value="!$EXP[Scrollbar_Lib_Horizontal]" />
				<param name="orientation" value="vertical" />
				<param name="panel_width" value="60" />
				<param name="height" value="880" />
				<param name="item_hw" value="32.5" />
				<param name="bg_texture_visible" value="true" />
				<param name="is_vertical" value="true" />
				<param name="color_1" value="ff131313" />
				<param name="color_2" value="ffffffff" />
			</include>
			<include condition="String.IsEmpty(Window(home).Property(shortcutaction_inprogress))" content="ScrollBar_Alphabet">
				<bottom>380</bottom>
				<animation effect="slide" start="0,0" end="380,10" condition="[Control.IsVisible(503) + Skin.HasSetting(View_503_DisableFooter) | Control.IsVisible(504) + Skin.HasSetting(View_504_DisableFooter)]">conditional</animation>
				<param name="id" value="610" />
				<param name="visible" value="$EXP[Scrollbar_Lib_Horizontal] + !Control.IsVisible(58)" />
				<param name="orientation" value="horizontal" />
				<param name="panel_width" value="1720" />
				<param name="height" value="90" />
				<param name="item_hw" value="50" />
				<param name="bg_texture_visible" value="true" />
				<param name="is_vertical" value="false" />
				<param name="color_1" value="ff131313" />
				<param name="color_2" value="ffffffff" />
			</include>
			<include condition="String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">Scrollbar_Lib_vertical</include>
			<include condition="String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">Scrollbar_Lib_horizontal</include>
		
		just testing what can|need be done
			<control type="grouplist" id="8000">
				<visible>String.IsEmpty(Window(home).Property(shortcutaction_inprogress))</visible>
				<orientation>vertical</orientation>
				<top>120</top>
				<left>150</left>
				<height>900</height>
				<!-- 
				<control type="button" id="28">
					<height>50</height>
				</control>
				<control type="label" id="29">
					<height>50</height>
				</control>
				<control type="label" id="30">
					<height>50</height>
				</control>
				-->
				<ondown>SetFocus(50)</ondown>
				
				
				<control type="list" id="11">
					<height>400</height>
					<onleft>500</onleft>
					<onright>9001</onright>
					<orientation>horizontal</orientation>
					
					<itemlayout width="200" height="50">
						<control type="image">
							<height>50</height>
							<width>50</width>
							<left>5</left>
							<bordersize>5</bordersize>
							<texture background="true">$INFO[ListItem.Icon]</texture>
						</control>
						<control type="label">
							<right>20</right>
							<left>60</left>
							<height>50</height>
							<aligny>center</aligny>
							<font>debugtiny</font>
							<textcolor>$VAR[color_global_button_text_nf]</textcolor>
							<label>$INFO[ListItem.Label]$INFO[ListItem.Label2, |  ,]</label>
						</control>
					</itemlayout>
					<focusedlayout width="200" height="50">
						<control type="image">
							<texture colordiffuse="$VAR[color_global_button_panel_fo]">colors/white.png</texture>
							<visible>Control.HasFocus(11)</visible>
						</control>
						<control type="image">
							<height>50</height>
							<width>50</width>
							<left>5</left>
							<bordersize>5</bordersize>
							<texture background="true">$INFO[ListItem.Icon]</texture>
						</control>
						<control type="label">
							<right>20</right>
							<left>60</left>
							<height>50</height>
							<aligny>center</aligny>
							<font>debugtiny</font>
							<textcolor>$VAR[color_global_button_text_fo]</textcolor>
							<label>$INFO[ListItem.Label]$INFO[ListItem.Label2, |  ,]</label>
						</control>
					</focusedlayout>
				</control>
			</control>
		</control>
		
		
		
		<include content="HeaderBar">
			<param name="HasBGPanel" value="Skin.HasSetting(MediaWindow_UseHeaderBG)" />
		</include>
		<include content="PreMenucontrol" />
		<control type="group">
			<animation effect="slide" start="-450,0" end="0,0" time="300" tween="cubic" easing="inout">VisibleHidden</animation>
			<visible>String.IsEqual(Window(Home).Property(menucontrol_active),common)</visible>
			<include content="menucontrol_global" condition="String.IsEmpty(Window(home).Property(shortcutaction_inprogress))" />
		</control>
		
		
		
		
		<control type="togglebutton" id="4">
			<include>HiddenObject</include>
		</control>
	<!-- views -->
		<!-- epggrid -->
		<include content="swan_debug_overlay">
			<param name="textleft" value="listitem.filenameandpath :  $INFO[listitem.filenameandpath]

SHORTCUT ONLY: $INFO[Window(home).Property(shortcutitem_nr),- window Prop Shortcuts ,]$INFO[Window(home).Property(shortcutaction_inprogress), - window Prop shortcutaction_inprogress ,]

SKINNED PROPS SET ON FOCUS
  $VAR[debug_trailer_available,VAR Trailer:  ,]
  $INFO[Window(home).Property(listitemtrailer), listitemtrailer ,     |    ]$INFO[Window(home).Property(dbid),  dbid :,  ]$INFO[Window(home).Property(rating),  rating :,  ]$INFO[Window(home).Property(totalseasons),  totalseasons :,  ]$INFO[Window(home).Property(totalepisodes),  totalepisodes ,]$INFO[Window(home).Property(status),  status :,  ]

$INFO[ListItem.UserRating, userrating :,  ]$INFO[ListItem.Rating, rating :,  ]$INFO[ListItem.Rating(themoviedb), rating(themoviedb) :,  ]$INFO[ListItem.Rating(imdb), rating(imdb) :,  ]$INFO[ListItem.Rating(tvdb), rating(tvdb) :,  ]$INFO[ListItem.Rating(metacritic), rating(metacritic) :,  ]$INFO[ListItem.Rating(tomatometerallaudience), rating(tomatometerallaudience) :,  ]$INFO[ListItem.Rating(tomatometerallcritics), rating(tomatometerallcritics) :,  ]$INFO[ListItem.Rating(tomatometeravgaudience), rating(tomatometeravgaudience) :,  ]$INFO[ListItem.Rating(tomatometeraavgcritics), rating(tomatometeraavgcritics) :,  ]
vars
ImageLayout_fanart $VAR[ImageLayout_fanart,[COLOR cyan][B],[/B][/COLOR]]

listitem.art
ListItem.ActualIcon : $INFO[ListItem.ActualIcon]
ListItem.Icon : $INFO[ListItem.Icon]
ListItem.Art(thumb) : $INFO[ListItem.Art(thumb)]
Container.Art(fanart) : $INFO[Container.Art(fanart)]
ListItem.Art(fanart) : $INFO[ListItem.Art(fanart)]
ListItem.Art(tvshow.fanart) : $INFO[ListItem.Art(tvshow.fanart)]
ListItem.Art(artist.fanart) : $INFO[ListItem.Art(artist.fanart)]
ListItem.Art(albumartist.fanart) : $INFO[ListItem.Art(albumartist.fanart)]
Container.ListItem.Art(fanart) : $INFO[Container.ListItem.Art(fanart)]
Container.ListItem.Art(tvshow.fanart) : $INFO[Container.ListItem.Art(tvshow.fanart)]
Container.ListItem.Art(artist.fanart) : $INFO[Container.ListItem.Art(artist.fanart)]
Container.ListItem.Art(albumartist.fanart) : $INFO[Container.ListItem.Art(albumartist.fanart)]
"/>
</include>
	</controls>
</window>
