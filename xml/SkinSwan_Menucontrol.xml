<?xml version="1.0" encoding="UTF-8"?>
<includes>
	
	<include name="Menucontrol_Grouplist">
		<param name="width" default="60%" />
		<definition>
		<control type="grouplist" id="$PARAM[id]">
			<onup>$PARAM[onup]</onup>
			<ondown>$PARAM[ondown]</ondown>
			<top>$PARAM[top]</top>
			<height>$PARAM[height]</height>
			<width>$PARAM[width]</width>
			<orientation>vertical</orientation>
			<itemgap>10</itemgap>
			<nested />
		</control>
		</definition>
	</include>
	
	<include name="PreMenucontrol">
		<control type="image">
			<animation effect="slide" start="0,0" end="450,0" time="300" tween="cubic" easing="inout">visible</animation>
			<animation effect="fade" start="100" end="0" time="150" condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">conditional</animation>
			<visible>String.IsEqual(Window(Home).Property(MenucontrolActive),true)</visible>
			<top>0</top>
			<bottom>0</bottom>
			<width>530</width>
			<left>-450</left>
			<colordiffuse>$VAR[color_global_dialog_background]</colordiffuse>
			<texture>colors/white.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>
		
		
		<control type="grouplist" id="8999">
			<animation effect="slide" start="0,0" end="450,0" time="300" tween="cubic" easing="inout" condition="String.IsEqual(Window(Home).Property(MenucontrolActive),true)">conditional</animation>
			<visible>!Control.IsVisible(58)</visible>
			<visible>String.IsEmpty(Window(home).Property(SetShortcutInProgress))</visible>
			<visible>!$EXP[Infodialog_IsActive]</visible>
			<visible>!Window.IsActive(shutdownmenu)</visible>
			<centertop>50%</centertop>
			
			<align>center</align>
			<aligny>center</aligny>
			<left>12</left>
			<width>110</width>
			<height>620</height>
			<orientation>vertical</orientation>
			<itemgap>10</itemgap>
			<usecontrolcoords>true</usecontrolcoords>
			
			<onright>ClearProperty(MenucontrolActive,Home)</onright>
			<onright>SetFocus(50)</onright>
			
			<onleft condition="!String.IsEmpty(Window(Home).Property(MenucontrolActive))">SetProperty(MenucontrolActive,true,Home)</onleft>
			<onleft>SetFocus(9000)</onleft>
			
			<onup condition="Control.IsVisible(19)">19</onup>
			<onup condition="!Control.IsVisible(19)">50</onup>
			<onup>ClearProperty(MenucontrolActive,Home)</onup>
			
			<control type="radiobutton" id="8001">
				<include content="Menucontrol_RadioButton">
					<param name="radiotexture" value="back1" />
				</include>
				<visible>!Skin.HasSetting(premenu_hide_back)</visible>
				<visible>!String.IsEqual(Window(Home).Property(MenucontrolActive),true)</visible>
				<onclick>Dialog.Close(all,true)</onclick>
				<onclick>Action(back)</onclick>
			</control>
			<control type="radiobutton" id="8002">
				<include content="Menucontrol_RadioButton">
					<param name="radiotexture" value="search" />
				</include>
				<onclick condition="!String.IsEmpty(Skin.String(SearchTerm))">Skin.Reset(SearchTerm)</onclick>
				<onclick>Skin.SetString(SearchTerm)</onclick>
				<onclick>ActivateWindow(1120),return</onclick>
			</control>
			<control type="radiobutton" id="8003">
				<include content="Menucontrol_RadioButton">
					<param name="radiotexture" value="menucontrol" />
				</include>
				<onclick condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onclick>
				<onclick condition="String.IsEqual(Window(Home).Property(MenucontrolActive),true)">ClearProperty(MenucontrolActive,Home)</onclick>
				<onclick condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetFocus(9000)</onclick>
			</control>
			<control type="radiobutton" id="8004">
				<visible>!Skin.HasSetting(premenu_hide_hideshutdown)</visible>
				<include content="Menucontrol_RadioButton">
					<param name="radiotexture" value="shutdownbold" />
				</include>
				<onclick>ClearProperty(MenucontrolActive,Home)</onclick>
				<onclick>ActivateWindow(shutdownmenu)</onclick>
			</control>
			
			<control type="radiobutton" id="8006">
				<visible>!String.IsEqual(Window(Home).Property(MenucontrolActive),true)</visible>
				<visible>String.IsEmpty(Window(home).Property(TrailerIsPlaying))</visible>
				<visible>!String.IsEmpty(Window(home).Property(trailer_avail)) | !String.IsEmpty(ListItem.Trailer)</visible>
				<visible>!Skin.HasSetting(premenu_hide_trailer)</visible>
				<include content="Menucontrol_RadioButton">
					<param name="radiotexture" value="defaultmovies" />
				</include>
				<onclick condition="String.IsEmpty(Window(home).Property(trailer_avail)) + !String.IsEmpty(ListItem.Trailer)">PlayMedia($INFO[ListItem.Trailer],1)</onclick>
				<onclick condition="!String.IsEmpty(Window(home).Property(trailer_avail))">PlayMedia($INFO[container.listitem.path]$INFO[container.ListItem.FolderName,,-trailer.mp4],1)</onclick>
				<onclick>SetProperty(TrailerIsPlaying,true,home)</onclick>
				<onclick>SetFocus(50)</onclick>
			</control>
			<control type="radiobutton" id="8007">
				<visible>!String.IsEqual(Window(Home).Property(MenucontrolActive),true)</visible>
				<visible>!String.IsEmpty(Window(home).Property(TrailerIsPlaying))</visible>
				<visible>!Skin.HasSetting(premenu_hide_trailer)</visible>
				<include content="Menucontrol_RadioButton">
					<param name="radiotexture" value="stop" />
				</include>
				<onclick>ClearProperty(TrailerIsPlaying,home)</onclick>
				<onclick>Action(stop)</onclick>
				<onclick>SetFocus(50)</onclick>
			</control>
			<control type="radiobutton" id="8005">
				<visible>Player.HasMedia</visible>
				<include content="Menucontrol_RadioButton">
					<param name="radiotexture" value="togglefs_2" />
				</include>
				<onclick>Fullscreen</onclick>
			</control>
			<control type="radiobutton" id="8008">
				<visible>!String.IsEqual(Window(Home).Property(MenucontrolActive),true)</visible>
				<visible>!Skin.HasSetting(premenu_hide_info)</visible>
				<visible>
                    String.IsEqual(Container.ListItem.dbtype,movie) | String.IsEqual(Container.ListItem.dbtype,tvshow) | String.IsEqual(Container.ListItem.dbtype,season) | String.IsEqual(Container.ListItem.dbtype,episode) | 
                    String.IsEqual(Container.ListItem.dbtype,artist) | String.IsEqual(Container.ListItem.dbtype,album) | String.IsEqual(Container.ListItem.dbtype,song)
                </visible>
				<include content="Menucontrol_RadioButton">
					<param name="radiotexture" value="radioinfo_1" />
				</include>
				<onclick>SetFocus(50)</onclick>
				<onclick>Action(info)</onclick>
			</control>
			<control type="radiobutton" id="8009">
				<visible>!String.IsEqual(Window(Home).Property(MenucontrolActive),true)</visible>
				<visible>!Skin.HasSetting(premenu_hide_embuarytmdbinfo)</visible>
				<visible>String.IsEqual(Container.ListItem.dbtype,movie) | String.IsEqual(Container.ListItem.dbtype,actor) | String.IsEqual(Container.ListItem.dbtype,tvshow) | String.IsEqual(Container.ListItem.dbtype,season) | String.IsEqual(Container.ListItem.dbtype,episode)</visible>
				<include content="Menucontrol_RadioButton">
					<param name="radiotexture" value="tmdb_3" />
				</include>
				<onclick>RunScript(script.embuary.info,call=$VAR[embtmdbinfocall],query='"$VAR[embtmdbinfoquery]'")</onclick>
			</control>
			
			
		</control>
	</include>
	
	<include name="Menucontrol_RadioButton">
		<include content="Animation_Item_Focus" />
		<textureradioonfocus colordiffuse="$VAR[color_lib_text_main]">icons/radiobuttons/$PARAM[radiotexture].png</textureradioonfocus>
		<textureradioonnofocus colordiffuse="grey">icons/radiobuttons/$PARAM[radiotexture].png</textureradioonnofocus>
		<textureradioofffocus colordiffuse="$VAR[color_lib_text_main]">icons/radiobuttons/$PARAM[radiotexture].png</textureradioofffocus>
		<textureradiooffnofocus colordiffuse="grey">icons/radiobuttons/$PARAM[radiotexture].png</textureradiooffnofocus>
		<textoffsetx />
		<radiowidth>60</radiowidth>
		<radioheight>60</radioheight>
		<radioposx>3</radioposx>
		<textureradioondisabled />
		<textureradiooffdisabled  />
		<texturefocus />
		<texturenofocus />
		<height>80</height>
		<focusedcolor />
		<textcolor />
		<label />
		<selected />
	</include>
	
	<!-- 	1.40 MyPics.xml
ID 	Type 	Description
2 	button 	Select viewtype (list, thumbnail, media info, etc...)
3 	button 	Select sort method (sort by: name, date size, etc...)
4 	togglebutton 	Select sortmode (ascending or descending)
6 	button 	Start a picture slideshow
7 	button 	Start a recursive picture slideshow
9 	radiobutton 	Randomize the picture slideshow
12 	label 	Number of items in the list  -->
	
	<!-- 	1.41 MyPlaylist.xml
ID 	Type 			Description
2 	button 			Select viewtype (list, thumbnail, media info, etc...)
3 	button 			Select sort method (sort by: name, date size, etc...)
4 	togglebutton 	Select sortmode (ascending or descending)
12 	label 			Number of items in the playlist
20 	radiobutton 	Shuffle the playlist
21 	button 			Save the playlist
22 	button 			Clear the playlist
23 	button 			Play the playlist
24 	button 			Play the next item in the playlist
25 	button 			Play the previous item in the playlist
26 	button 			Put the playlist on repeat  -->

	
	<!-- 	1.43 MyPVRChannels.xml
ID 	Type 			Description
2 	button 			Select viewtype (list, thumbnail, media info, etc...)
3 	button 			Select sort method (sort by: name, date size, etc...)
4 	togglebutton 	Select sortmode (ascending or descending)
6 	radiobutton 	Show hidden channels
28 	button 			Channel groups button
29 	label 			Channel groups name
31 	radiobutton 	Filter  -->
	
<!-- 	1.45 MyPVRRecordings.xml
ID 	Type 			Description
2 	button 			Select viewtype (list, thumbnail, media info, etc...)
3 	button 			Select sort method (sort by: name, date size, etc...)
4 	togglebutton 	Select sortmode (ascending or descending)
5 	radiobutton 	Group items by folder structure
7 	radiobutton 	Show deleted recordings
10 	button 			Show only watched, unwatched or all recordings
28 	button 			Channelgroups button
29 	label 			'Deleted' (When show deleted recordings is enabled, otherwise empty)  -->
	
<!-- 	1.38 MyMusicNav.xml
ID 	Type 					Description
2	button	Select viewtype (list, thumbnail, media info, etc...)
3	button	Select sort method (sort by: name, date size, etc...)
4	togglebutton	Select sortmode (ascending or descending)
5	radiobutton	Switch to file mode
8	edit	Search for a string anywhere in the Kodi music database
12	label	Number of items in the list
15	label	Filter label
16	radiobutton	Start party mode (randomly play songs from your entire music collection)
17	button	Manually enter artist and album name to lookup the artist and album information on the internet
18	label	Warning to the user to turn off library mode when no scanned media is found
19	radiobutton / edit	Filter the media files to only show items that include the specified string in the name
20	button	Update library
-->


	<include name="Menucontrol_Media">
	
		<control type="grouplist" id="9000">
			<description>need get cond vis content</description>
			<top>11%</top>
			<bottom>1%</bottom>
			<width>445</width>
			<left>0</left>
			<itemgap>0</itemgap>
			
			<onup>ClearProperty(MenucontrolActive,Home)</onup>
			<onup>19</onup>
			
			<onback>ClearProperty(MenucontrolActive,Home)</onback>
			<onback>SetFocus(50)</onback>
			
			<onright condition="!Control.IsVisible(58)">SetFocus(8999)</onright>
			<onright condition="Control.IsVisible(58)">ClearProperty(MenucontrolActive,Home)</onright>
			<onright condition="Control.IsVisible(58)">SetFocus(50)</onright>
			
			<onleft>SetFocus(50)</onleft>
			<onleft>ClearProperty(MenucontrolActive,Home)</onleft>
			
			<control type="group" id="6048">
				<description>PlaybackCtrl</description>
				<width>98%</width>
				<height>500</height>
				<visible>$EXP[IsCurrentyPlayingCommon] | Player.HasAudio</visible>
				
				<control type="label">
					<left>10</left>
					<right>10</right>
					<height>20</height>
					<width>425</width>
					<font>font17</font>
					<align>center</align>
					<label>CURRENTLY  PLAYING</label>
					<textcolor>cyan</textcolor>
				</control>
				
				<control type="label">
					<top>30</top>
                    <visible>$EXP[PlayerClearLogo_IsEmpty]</visible>
					<left>10</left>
					<right>10</right>
					<height>100</height>
					<width>425</width>
					<wrapmultiline>true</wrapmultiline>
					<font>font22</font>
					<align>center</align>
					<label>$VAR[Menucontrol_LogoFallback,&quot;[B],[/B]&quot;]</label>
					<textcolor>grey</textcolor>
				</control>
				
				<control type="label">
					<visible>player.hasaudio</visible>
					<description>bad bcause overlay temp just use if logo empty</description>
					<!-- <visible>$EXP[PlayerClearLogo_IsEmpty]</visible> -->
					<top>30</top>
					<left>10</left>
					<right>10</right>
					<height>15</height>
					<width>425</width>
					<font>font20_title</font>
					<align>center</align>
					<label>$INFO[MusicPlayer.Album]</label>
					<textcolor>white</textcolor>
				</control>
				
				<control type="image">
					<texture>$VAR[PlayerClearlogo]</texture>
					<aspectratio aligny="center" align="center">keep</aspectratio>
					<height>90</height>
					<top>30</top>
					<left>15</left>
					<right>0</right>
				</control>
				<control type="label">
					<top>130</top>
					<left>20</left>
					<height>20</height>
					<width>425</width>
					<font>MenucontrolItem</font>
					<align>center</align>
					<label>$VAR[MenucontrolPlayerDuration]</label>
					<textcolor>cyan</textcolor>
				</control>
				
				<control type="image">
					<visible>Player.HasAudio</visible>
					<texture>$VAR[PlayerDisc]</texture>
					<aspectratio aligny="bottom" align="right">keep</aspectratio>
					<width>245</width>
					<height>245</height>
					<top>160</top>
					<left>200</left>
					<right>10</right>
					<animation effect="rotate" end="-360" center="auto" time="4800" loop="true" reversible="false" condition="!Player.Paused">Conditional</animation>
				</control>
				<control type="image">
					<visible>Player.HasAudio</visible>
					<texture>$INFO[Player.Icon]</texture>
					<aspectratio aligny="bottom" align="left">keep</aspectratio>
					<width>245</width>
					<height>245</height>
					<top>160</top>
					<left>20</left>
					<right>10</right>
					<animation effect="slide" start="0,0" end="90,0" center="auto" time="0" condition="String.IsEmpty(Player.Art(album.discart)) + String.IsEmpty(Player.Art(discart))">Conditional</animation>
				</control>
				
				
				<control type="videowindow">
					<visible>!Player.HasAudio</visible>
					<height>262</height>
					<top>150</top>
					<left>20</left>
				</control>
				
				<include content="Menucontrol_PlaybackCtrlButton">
					<param name="id" value="1" />
					<param name="actionid" value="previous" />
					<param name="left" value="120" />
					<param name="onleft" value="60494" />
					<param name="onright" value="60492" />
					<param name="visible" value="MusicPlayer.HasPrevious" />
					<param name="action2" value="PlayerControl(previous)" />
				</include>
				<control type="togglebutton" id="60492">
					<left>175</left>
					<top>425</top>
					<width>45</width>
					<height>45</height>
					<label />
					<altlabel />
					<texturefocus colordiffuse="$VAR[color_global_button_selected]">buttons/osd/play_fo.png</texturefocus>
					<texturenofocus>buttons/osd/play.png</texturenofocus>
					<alttexturefocus colordiffuse="$VAR[color_global_button_selected]">buttons/osd/pause_fo.png</alttexturefocus>
					<alttexturenofocus>buttons/osd/pause.png</alttexturenofocus>
					<usealttexture>!Player.Paused</usealttexture>
					<onup>19</onup>
					<ondown>4001</ondown>
					<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
					<onright>60493</onright>
					<onleft>60491</onleft>
					<onclick>PlayerControl(play)</onclick>
				</control>
				
				<include content="Menucontrol_PlaybackCtrlButton">
					<param name="id" value="3" />
					<param name="actionid" value="stop" />
					<param name="left" value="230" />
					<param name="onleft" value="60492" />
					<param name="onright" value="60494" />
				</include>
				<include content="Menucontrol_PlaybackCtrlButton">
					<param name="id" value="4" />
					<param name="actionid" value="next" />
					<param name="left" value="285" />
					<param name="onleft" value="60493" />
					<param name="onright" value="SetFocus(8999)" />
					<param name="visible" value="MusicPlayer.HasNext" />
				</include>
			</control>
			
			<control type="button" id="4001">
				<font>font10</font>
				<label>   Previous ViewMode</label>
				<visible>Integer.IsGreater(Container.ViewCount,1)</visible>
				<onclick>Container.NextViewMode</onclick>
				<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
			</control>
			<control type="button" id="4002">
				<font>font10</font>
				<label>   Next ViewMode</label>
				<visible>Integer.IsGreater(Container.ViewCount,1)</visible>
				<onclick>Container.PreviousViewMode</onclick>
				<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
			</control>
			<include content="spacer_h">
				<param name="id" value="4003" />
				<param name="gap" value="10" />
			</include>
			<control type="button" id="4004">
				<font>font10</font>
				<visible>Control.IsEnabled(3)</visible>
				<label>$INFO[Control.GetLabel(3)]</label>
				<label2 />
				<onclick>SendClick(3)</onclick>
				<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
				<label2 />
			</control>
			<control type="button" id="4005">
				<font>font10</font>
				<visible>Control.IsEnabled(4)</visible>
				<label>Change Order to </label>
				<label2>$VAR[NextSortOrder,[B],[/B]]</label2>
				<onclick>SendClick(4)</onclick>
				<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
				<label2 />
			</control>
			
			<!-- <control type="button" id="5" description="Switch to file mode">
				<label>$LOCALIZE[1214]</label>
			</control> -->
			
			<control type="button" id="6" description="Play DVD (used the play physical DVD discs)">
				<label>$LOCALIZE[341]</label>
				<font>font10</font>
				<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
			</control>
			<control type="button" id="8" description="Search for a string anywhere in the Kodi video database - use own? id otherwise 3 times various  search">
				<label>$LOCALIZE[137]</label>
				<font>font10</font>
				<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
			</control>
			
			<control type="button" id="10" description="Show only watched, unwatched or all videos">
				<visible>Window.IsActive(videos)</visible>
				<font>font10</font>
				<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
			</control>
			
			<!-- 
			<control type="button" id="11" description="Unlock shares ??">
				<label>$LOCALIZE[20336]</label>
			</control>
			 -->
			<control type="button" id="16">
				<label>$LOCALIZE[589]</label>
				<font>font10</font>
				<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
			</control>
			<control type="button" id="20" description="Update library">
				<label>$LOCALIZE[653]</label>
				<font>font10</font>
				<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
			</control>
			
			<include content="spacer_h">
				<param name="id" value="4006" />
				<param name="gap" value="40" />
			</include>
			
			<control type="radiobutton" id="4007">
				<font>font10</font>
				<label>reload skin</label>
				<visible>true</visible>
				<onclick>ReloadSkin()</onclick>
				<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
				<selected />
			</control>
			<control type="radiobutton" id="40077">
				<font>font10</font>
				<label>settings</label>
				<visible>true</visible>
				<onclick>ActivateWindow(settings)</onclick>
				<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
				<selected />
			</control>
			
			<!-- view type settings -->
			
			<control type="radiobutton" id="4008">
				<font>font10</font>
				<label>Show BG Panel</label>
				<visible>Control.IsVisible(50) | Control.IsVisible(51) | Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(54) | Control.IsVisible(56)</visible>
				<onclick condition="Control.IsVisible(50)">Skin.ToggleSetting(View_50_ShowBGPanel)</onclick>
				<onclick condition="Control.IsVisible(51)">Skin.ToggleSetting(View_51_ShowBGPanel)</onclick>
				<onclick condition="Control.IsVisible(52)">Skin.ToggleSetting(View_52_ShowBGPanel)</onclick>
				<onclick condition="Control.IsVisible(53)">Skin.ToggleSetting(View_53_ShowBGPanel)</onclick>
				<onclick condition="Control.IsVisible(54)">Skin.ToggleSetting(View_54_ShowBGPanel)</onclick>
				<onclick condition="Control.IsVisible(56)">Skin.ToggleSetting(View_56_ShowBGPanel)</onclick>
				<selected>
				[Control.IsVisible(50) + Skin.HasSetting(View_50_ShowBGPanel) | 
                Control.IsVisible(51) + Skin.HasSetting(View_51_ShowBGPanel) | 
				Control.IsVisible(52) + Skin.HasSetting(View_52_ShowBGPanel) | 
				Control.IsVisible(53) + Skin.HasSetting(View_53_ShowBGPanel) | 
				Control.IsVisible(54) + Skin.HasSetting(View_54_ShowBGPanel) | 
				Control.IsVisible(56) + Skin.HasSetting(View_56_ShowBGPanel)]
				</selected>
				<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
			</control>
			
			<control type="radiobutton" id="4009">
				<font>font10</font>
				<label>Disable tags</label>
				<visible>Control.IsVisible(51) | Control.IsVisible(53)</visible>
				<onclick condition="Control.IsVisible(51)">Skin.ToggleSetting(View_51_DisableTags)</onclick>
				<onclick condition="Control.IsVisible(53)">Skin.ToggleSetting(View_53_DisableTags)</onclick>
				<selected>
				[Control.IsVisible(51) + Skin.HasSetting(View_51_DisableTags) | 
				Control.IsVisible(53) + Skin.HasSetting(View_53_DisableTags)]
				</selected>
				<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
			</control>
			
			<control type="radiobutton" id="4010">
				<font>font10</font>
				<label>Show footer</label>
				<visible>Control.IsVisible(50) | Control.IsVisible(51) | Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(54) | Control.IsVisible(56)</visible>
				<onclick condition="Control.IsVisible(50)">Skin.ToggleSetting(View_50_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(51)">Skin.ToggleSetting(View_51_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(52)">Skin.ToggleSetting(View_52_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(53)">Skin.ToggleSetting(View_53_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(54)">Skin.ToggleSetting(View_54_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(56)">Skin.ToggleSetting(View_56_DisableFooter)</onclick>
				<selected>
				[Control.IsVisible(50) + !Skin.HasSetting(View_50_DisableFooter) | 
                Control.IsVisible(51) + !Skin.HasSetting(View_51_DisableFooter) | 
				Control.IsVisible(52) + !Skin.HasSetting(View_52_DisableFooter) | 
				Control.IsVisible(53) + !Skin.HasSetting(View_53_DisableFooter) | 
				Control.IsVisible(54) + !Skin.HasSetting(View_54_DisableFooter) | 
				Control.IsVisible(56) + !Skin.HasSetting(View_56_DisableFooter)]
				</selected>
				<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
			</control>
	<!-- set setting prefer  thumbs based on viewtype label="Container.Viewmode" and container.content()
	- will need a huge variable  instead simple one, but better control VIEW TYPE LABEL NEED TO BE HARDCODED
	- may issues with selected definitions
	
	
		settinglabel 
			prefer art ($INFO[Container.Content])
		setting
			posterView_Prefer_Disc_movies
			$INFO[Container.Viewmode]View_Prefer_Disc_$INFO[Container.Content]
	
	
	
	
	video
	id 50
		keyart
		animatedposter
		poster - default
		clearlogo
		clearart
		
		disc e.g. 
		
	id 56
		animatedfanart
		fanart
		landscape - default
		banner
		clearlogo
		clearart
		characterart
		
		
	music
	id 50
		thumb
		disc - song
		disc - album
	
	
	-->
			<include content="PreferArt_Button">
				<param name="button_id" value="4011" />
				<param name="artwork_localized_id" value="Key Art" />
				<param name="artwork" value="keyart" />
				<param name="visible" value="Control.IsVisible(50) + Window.IsActive(videos)" />
				
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedposter)">Skin.ToggleSetting(View_50_Prefer_animatedposter)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedfanart)">Skin.ToggleSetting(View_50_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Disc_Video)">Skin.ToggleSetting(View_50_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_poster)">Skin.ToggleSetting(View_50_Prefer_poster)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearlogo)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearart)">Skin.ToggleSetting(View_50_Prefer_clearart)</onclick>
				
			</include>
			
			<include content="PreferArt_Button">
				<param name="button_id" value="4012" />
				<param name="artwork_localized_id" value="animatedposter" />
				<param name="artwork" value="animatedposter" />
				<param name="visible" value="Control.IsVisible(50) + Window.IsActive(videos)" />
				
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedfanart)">Skin.ToggleSetting(View_50_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Disc_Video)">Skin.ToggleSetting(View_50_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_keyart)">Skin.ToggleSetting(View_50_Prefer_keyart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearlogo)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearart)">Skin.ToggleSetting(View_50_Prefer_clearart)</onclick>
            
			</include>
			
			<include content="PreferArt_Button">
				<param name="button_id" value="4013" />
				<param name="artwork_localized_id" value="Poster" />
				<param name="artwork" value="poster" />
				<param name="visible" value="false" />
			
			</include>
			
			<include content="PreferArt_Button">
				<param name="button_id" value="4014" />
				<param name="artwork_localized_id" value="animatedfanart" />
				<param name="artwork" value="animatedfanart" />
				<param name="visible" value="Control.IsVisible(56) + Window.IsActive(videos)" />
				
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Album)">Skin.ToggleSetting(View_56_Prefer_Discart_Album)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Song)">Skin.ToggleSetting(View_56_Prefer_Discart_Song)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Disc_Video)">Skin.ToggleSetting(View_56_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearart)">Skin.ToggleSetting(View_56_Prefer_clearart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearlogo)">Skin.ToggleSetting(View_56_Prefer_clearlogo)</onclick>
            
			</include>
			
			<include content="PreferArt_Button">
				<param name="button_id" value="4015" />
				<param name="artwork_localized_id" value="Landscape" />
				<param name="artwork" value="landscape" />
				<param name="visible" value="false" />
				
			</include>
			
			<include content="PreferArt_Button">
				<param name="button_id" value="4016" />
				<param name="artwork_localized_id" value="$LOCALIZE[20020]" />
				<param name="artwork" value="banner" />
				<param name="visible" value="false" />
			
			</include>
			
			<include content="PreferArt_Button">
				<param name="button_id" value="4017" />
				<param name="artwork_localized_id" value="Clear Logo" />
				<param name="artwork" value="clearlogo" />
				<param name="visible" value="Control.IsVisible(50) | Control.IsVisible(56)" />
				
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedposter)">Skin.ToggleSetting(View_50_Prefer_animatedposter)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Discart_Album)">Skin.ToggleSetting(View_50_Prefer_Discart_Album)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Discart_Song)">Skin.ToggleSetting(View_50_Prefer_Discart_Song)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Disc_Video)">Skin.ToggleSetting(View_50_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_poster)">Skin.ToggleSetting(View_50_Prefer_poster)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_keyart)">Skin.ToggleSetting(View_50_Prefer_keyart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearart)">Skin.ToggleSetting(View_50_Prefer_clearart)</onclick>
				
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_animatedfanart)">Skin.ToggleSetting(View_56_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Album)">Skin.ToggleSetting(View_56_Prefer_Discart_Album)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Song)">Skin.ToggleSetting(View_56_Prefer_Discart_Song)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Disc_Video)">Skin.ToggleSetting(View_56_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearart)">Skin.ToggleSetting(View_56_Prefer_clearart)</onclick>
            
			</include>
			<include content="PreferArt_Button">
				<param name="button_id" value="4018" />
				<param name="artwork_localized_id" value="Clear Art (else Char)" />
				<param name="artwork" value="clearart" />
				<param name="visible" value="Control.IsVisible(50) | Control.IsVisible(56)" />
				
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedposter)">Skin.ToggleSetting(View_50_Prefer_animatedposter)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Discart_Album)">Skin.ToggleSetting(View_50_Prefer_Discart_Album)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Discart_Song)">Skin.ToggleSetting(View_50_Prefer_Discart_Song)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Disc_Video)">Skin.ToggleSetting(View_50_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_poster)">Skin.ToggleSetting(View_50_Prefer_poster)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_keyart)">Skin.ToggleSetting(View_50_Prefer_keyart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearlogo)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
				
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_animatedfanart)">Skin.ToggleSetting(View_56_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Album)">Skin.ToggleSetting(View_56_Prefer_Discart_Album)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Song)">Skin.ToggleSetting(View_56_Prefer_Discart_Song)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Disc_Video)">Skin.ToggleSetting(View_56_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearlogo)">Skin.ToggleSetting(View_56_Prefer_clearlogo)</onclick>
            
			</include>
			
			<control type="radiobutton" id="4019">
				<label>Prefer Discart - Video Nav</label>
				<font>font10</font>
				<visible>Window.IsActive(videos) + !Container.Content(tvshows) + [Control.IsVisible(50) | Control.IsVisible(56)]</visible>
				<onclick condition="Control.IsVisible(50)">Skin.ToggleSetting(View_50_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(56)">Skin.ToggleSetting(View_56_Prefer_Disc_Video)</onclick>
				
				
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedposter)">Skin.ToggleSetting(View_50_Prefer_animatedposter)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_poster)">Skin.ToggleSetting(View_50_Prefer_poster)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_keyart)">Skin.ToggleSetting(View_50_Prefer_keyart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearlogo)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearart)">Skin.ToggleSetting(View_50_Prefer_clearart)</onclick>
				
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_animatedfanart)">Skin.ToggleSetting(View_56_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearart)">Skin.ToggleSetting(View_56_Prefer_clearart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearlogo)">Skin.ToggleSetting(View_56_Prefer_clearlogo)</onclick>
            
				<selected>
				[Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Disc_Video) | 
				Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Disc_Video)]
				</selected>
				<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
			</control>
			<control type="radiobutton" id="4020">
				<label>Prefer Discart - Music Songs</label>
				<font>font10</font>
				<visible>Window.IsActive(music) + Container.Content(Songs) + [Control.IsVisible(50) | Control.IsVisible(56)]</visible>
				<onclick condition="Control.IsVisible(50)">Skin.ToggleSetting(View_50_Prefer_Discart_Song)</onclick>
				<onclick condition="Control.IsVisible(56)">Skin.ToggleSetting(View_56_Prefer_Discart_Song)</onclick>
				
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedposter)">Skin.ToggleSetting(View_50_Prefer_animatedposter)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_poster)">Skin.ToggleSetting(View_50_Prefer_poster)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_keyart)">Skin.ToggleSetting(View_50_Prefer_keyart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_landscape)">Skin.ToggleSetting(View_50_Prefer_landscape)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_banner)">Skin.ToggleSetting(View_50_Prefer_banner)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearlogo)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearart)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
				
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_animatedfanart)">Skin.ToggleSetting(View_56_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearart)">Skin.ToggleSetting(View_56_Prefer_clearart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearlogo)">Skin.ToggleSetting(View_56_Prefer_clearlogo)</onclick>
            
				<selected>
				[Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Discart_Song) | 
				Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Song)]
				</selected>
				<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
			</control>
			<control type="radiobutton" id="4021">
				<label>Prefer Discart - Music Albums</label>
				<font>font10</font>
				<visible>Window.IsActive(music) + Container.Content(Albums) + Control.IsVisible(50)</visible>
				<onclick condition="Control.IsVisible(50)">Skin.ToggleSetting(View_50_Prefer_Discart_Album)</onclick>
				
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedposter)">Skin.ToggleSetting(View_50_Prefer_animatedposter)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_poster)">Skin.ToggleSetting(View_50_Prefer_poster)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_keyart)">Skin.ToggleSetting(View_50_Prefer_keyart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearlogo)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearart)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
            
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_animatedfanart)">Skin.ToggleSetting(View_56_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearart)">Skin.ToggleSetting(View_56_Prefer_clearart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearlogo)">Skin.ToggleSetting(View_56_Prefer_clearlogo)</onclick>
            
				<selected>
				[Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Discart_Album) | 
				Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Song)]
				</selected>
				<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
			</control>
			
			<control type="radiobutton" id="4022">
				<label>Prefer Circle Artwork with ClearLogo Overlay</label>
				<font>font10</font>
				<visible>Control.IsVisible(56)</visible>
				<onclick condition="Control.IsVisible(56)">Skin.ToggleSetting(View_56_Prefer_CircleArt)</onclick>
				
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_animatedfanart)">Skin.ToggleSetting(View_56_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Disc_Video)">Skin.ToggleSetting(View_56_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_50_Prefer_Discart_Song)">Skin.ToggleSetting(View_50_Prefer_Discart_Song)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_50_Prefer_Discart_Album)">Skin.ToggleSetting(View_50_Prefer_Discart_Album)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearart)">Skin.ToggleSetting(View_56_Prefer_clearart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearlogo)">Skin.ToggleSetting(View_56_Prefer_clearlogo)</onclick>
            
				<selected>Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_CircleArt)</selected>
				<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
			</control>
			
			
			<control type="radiobutton" id="4041">
				<font>font10</font>
				<label>Show Plot right</label>
				<visible>Control.IsVisible(58)</visible>
				<onclick>Skin.ToggleSetting(View58_EpisodeInfoRight)</onclick>
				<selected>Skin.HasSetting(View58_EpisodeInfoRight)</selected>
				<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
			</control>
			<control type="radiobutton" id="40042">
				<font>font10</font>
				<label>EnebleFanart Background</label>
				<visible>Control.IsVisible(58)</visible>
				<onclick>Skin.ToggleSetting(View58_EnebleFanartBG)</onclick>
				<selected>Skin.HasSetting(View58_EnebleFanartBG)</selected>
				<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
			</control>
			<control type="radiobutton" id="4043">
				<font>font10</font>
				<label>Show Bottom Panel</label>
				<visible>Control.IsVisible(58)</visible>
				<onclick>Skin.ToggleSetting(View58_EnableBottomPanel)</onclick>
				<selected>Skin.HasSetting(View58_EnableBottomPanel)</selected>
				<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
			</control>
			<control type="radiobutton" id="4044">
				<font>font10</font>
				<label>Show Fanart right</label>
				<visible>Control.IsVisible(58)</visible>
				<onclick>Skin.ToggleSetting(View58_FanartLeftAlignment)</onclick>
				<selected>Skin.HasSetting(View58_FanartLeftAlignment)</selected>
				<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
			</control>
		</control>
	</include>
	
	
	<!-- temp, just to have easy navigation -->
	<include name="Menucontrol_Home">
		<control type="image">
			<animation effect="slide" start="0,0" end="450,0" time="300" tween="cubic" easing="inout" condition="ControlGroup(9000).HasFocus()">conditional</animation>
			<animation effect="fade" start="100" end="0" time="150" condition="!ControlGroup(9000).HasFocus()">conditional</animation>
			
			<top>0</top>
			<bottom>0</bottom>
			<width>530</width>
			<left>-450</left>
			<colordiffuse>$VAR[color_global_dialog_background]</colordiffuse>
			<texture>colors/white.png</texture>
			<colordiffuse>white</colordiffuse>
			<aspectratio>stretch</aspectratio>
		</control>
		
		<control type="grouplist" id="9000">
			<description>need get cond vis content</description>
			<top>1%</top>
			<bottom>1%</bottom>
			<width>465</width>
			<left>20</left>
			<itemgap>0</itemgap>
			<onup>9000</onup>
			<ondown>9000</ondown>
			
			
			
			<onright>SetFocus(5555)</onright>
			<onleft>SetFocus(5555)</onleft>
			
				<control type="textbox" id="900">
					<textoffset>20</textoffset>
					<label>This is Just a Placeholder and not a final layout nor solution [CR],just  for easy Navigation by work on the skin</label>
					<font>font10</font>
					<wrapmultiline>true</wrapmultiline>
					<height>200</height>
				</control>
				<control type="button" id="901">
					<top></top>
					<height>50</height>
					
					<label>   goto: search</label>
					
					<include>Action_LibrarySearch</include>
				</control>
				<control type="button" id="902">
					<label>   goto: blur test</label>
					<onclick>ActivateWindow(1123)</onclick>
				</control>
				<control type="button" id="903">
					<label>   goto: Music HUB</label>
					<onclick>ActivateWindow(1110)</onclick>
				</control>
				<control type="button" id="904">
					<label>   goto: settings</label>
					<onclick>ActivateWindow(settings)</onclick>
				</control>
				<control type="button" id="905">
					<label>   goto: pvr</label>
					<onclick>ActivateWindow(TVChannels,pvr://channels/tv/)</onclick>
				</control>
<!-- 
TVChannels 	pvr://channels/tv/<GROUPNAME> 	Replace <GROUPNAME> with the name of the specific tv channel group 	Kodi 19
TVGuide 	pvr://channels/tv/<GROUPNAME> 	Replace <GROUPNAME> with the name of the specific tv channel group 	Kodi 19
TVRecordings 	pvr://recordings/tv/active/<DIRECTORY>/ 	Replace <DIRECTORY> with the name of the recording directory to display
TVTimers 			
TVTimerRules 			
TVSearch 			
RadioChannels 	pvr://channels/radio/<GROUPNAME> 	Replace <GROUPNAME> with the name of the specific radio channel group 	Kodi 19
RadioGuide 	pvr://channels/radio/<GROUPNAME> 	Replace <GROUPNAME> with the name of the specific radio channel group 	Kodi 19
RadioRecordings 	pvr://recordings/radio/active/<DIRECTORY>/ 	Replace <DIRECTORY> with the name of the recording directory to display
RadioTimers 			
RadioTimerRules 			
RadioSearch
 
-->	
				
				<control type="textbox" id="910">
					<textoffset>20</textoffset>
					<label>video lib</label>
					<font>font10</font>
					<wrapmultiline>true</wrapmultiline>
					<height>100</height>
				</control>
				<include content="Universal_Container">
					<param name="type" value="panel" />
					<param name="id" value="911" />
					<param name="type_height" value="150" />
					<param name="layout_height" value="100" />
					<param name="layout_width" value="120" />
					<param name="itemheight" value="80" />
					<param name="itemwidth" value="80" />
					<param name="tags_visible" value="true" />
					<param name="tagbgpanel_visible" value="false" />
					<param name="layout" value="circle" />
					<param name="visible" value="Integer.IsGreater(Container(911).NumItems,0) | Container(911).IsUpdating" />
					<animation effect="fade" start="100" end="0" condition="!Integer.IsGreater(Container(911).NumItems,0) | Container(911).IsUpdating">Conditional</animation>
					<content target="videos">library://video</content>
				</include>
				
				<control type="textbox" id="912">
					<textoffset>20</textoffset>
					<label>music lib</label>
					<font>font10</font>
					<wrapmultiline>true</wrapmultiline>
					<height>100</height>
				</control>
				<include content="Universal_Container">
					<param name="type" value="panel" />
					<param name="id" value="913" />
					<param name="type_height" value="150" />
					<param name="layout_height" value="100" />
					<param name="layout_width" value="120" />
					<param name="itemheight" value="80" />
					<param name="itemwidth" value="80" />
					<param name="tags_visible" value="true" />
					<param name="tagbgpanel_visible" value="false" />
					<param name="layout" value="circle" />
					<param name="visible" value="Integer.IsGreater(Container(913).NumItems,0) | Container(913).IsUpdating" />
					<animation effect="fade" start="100" end="0" condition="!Integer.IsGreater(Container(913).NumItems,0) | Container(913).IsUpdating">Conditional</animation>
					<content target="music">library://music/</content>
				</include>
				
				<control type="textbox" id="914">
					<textoffset>20</textoffset>
					<label>musicvideos lib</label>
					<font>font10</font>
					<wrapmultiline>true</wrapmultiline>
					<height>100</height>
				</control>
				<include content="Universal_Container">
					<param name="type" value="panel" />
					<param name="id" value="915" />
					<param name="type_height" value="150" />
					<param name="layout_height" value="100" />
					<param name="layout_width" value="120" />
					<param name="itemheight" value="80" />
					<param name="itemwidth" value="80" />
					<param name="tags_visible" value="true" />
					<param name="tagbgpanel_visible" value="false" />
					<param name="layout" value="circle" />
					<param name="visible" value="Integer.IsGreater(Container(915).NumItems,0) | Container(915).IsUpdating" />
					<animation effect="fade" start="100" end="0" condition="!Integer.IsGreater(Container(915).NumItems,0) | Container(915).IsUpdating">Conditional</animation>
					<content target="videos">videodb://musicvideos/</content>
				</include>
				<control type="textbox" id="916">
					<textoffset>20</textoffset>
					<label>playlists ,video first</label>
					<font>font10</font>
					<wrapmultiline>true</wrapmultiline>
					<height>100</height>
				</control>
				<include content="Universal_Container">
					<param name="type" value="panel" />
					<param name="id" value="917" />
					<param name="type_height" value="150" />
					<param name="layout_height" value="100" />
					<param name="layout_width" value="120" />
					<param name="itemheight" value="80" />
					<param name="itemwidth" value="80" />
					<param name="tags_visible" value="true" />
					<param name="tagbgpanel_visible" value="false" />
					<param name="layout" value="circle" />
					<param name="visible" value="Integer.IsGreater(Container(917).NumItems,0) | Container(917).IsUpdating" />
					<animation effect="fade" start="100" end="0" condition="!Integer.IsGreater(Container(917).NumItems,0) | Container(917).IsUpdating">Conditional</animation>
					<content target="videos">special://videoplaylists/</content>
					<content target="music">special://musicplaylists/ </content>
				</include>
				<control type="textbox" id="918">
					<textoffset>20</textoffset>
					<label>video addons</label>
					<font>font10</font>
					<wrapmultiline>true</wrapmultiline>
					<height>100</height>
				</control>
				<include content="Universal_Container">
					<param name="type" value="panel" />
					<param name="id" value="919" />
					<param name="tagbottom" value="false" />
					<param name="type_height" value="200" />
					<param name="layout_height" value="150" />
					<param name="layout_width" value="450" />
					<param name="itemheight" value="140" />
					<param name="itemwidth" value="440" />
					<param name="banner_overlay_visible" value="false" />
					<param name="tags_visible" value="true" />
					<param name="tagbgpanel_visible" value="false" />
					<param name="layout" value="landscape" />
					<param name="visible" value="Integer.IsGreater(Container(919).NumItems,0) | Container(919).IsUpdating" />
					<animation effect="fade" start="100" end="0" condition="!Integer.IsGreater(Container(919).NumItems,0) | Container(919).IsUpdating">Conditional</animation>
					<content target="videos">addons://sources/video/</content>
				</include>
				
		</control>
			
			
	
	</include>
	
	<!-- params
		id
		actionid = visible = imagename
		left - just if not in grouplist
		onright
		onleft
		! att - playpause alt l+i -->
		
	<include name="Menucontrol_PlaybackCtrlButton">
		<control type="button" description="prev" id="6049$PARAM[id]">
			<top>425</top>
			<width>45</width>
			<height>45</height>
			<onup>19</onup>
			<ondown>4001</ondown>
			<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
			<left>$PARAM[left]</left>
			<onright>$PARAM[onright]</onright>
			<onleft>$PARAM[onleft]</onleft>
			<texturefocus colordiffuse="$VAR[color_global_button_selected]">buttons/osd/$PARAM[actionid]_fo.png</texturefocus>
			<texturenofocus>buttons/osd/$PARAM[actionid].png</texturenofocus>
			<onclick>PlayerControl($PARAM[actionid])</onclick>
			<onclick>PlayerControl($PARAM[action2])</onclick>
			<visible>$PARAM[visible]</visible>
		</control>
	</include>
	<variable name="MenucontrolPlayerDuration">
		<value condition="Player.HasVideo">$INFO[Player.FinishTime,[B]Ends at : ,[/B]]</value>
		<value>$INFO[Player.Title,[B],[/B]] $INFO[Player.Time(mm:ss),  ( , / ]$INFO[Player.Duration(mm:ss),, )]</value>
	</variable>	
	<!-- $INFO[MusicPlayer.TrackNumber, - ,  ] -->
	<variable name="Menucontrol_LogoFallback">
		<value condition="Player.HasAudio">$INFO[MusicPlayer.Artist]</value>
		<value>$INFO[Player.Title]</value>
	</variable>
	
	<include name="PreferArt_Button">
		<control type="radiobutton" id="$PARAM[button_id]">
			<label>Prefer : $PARAM[artwork_localized_id]</label>
			<font>font10</font>
			<visible>$PARAM[visible]</visible>
			<onclick condition="Control.IsVisible(50)">Skin.ToggleSetting(View_50_Prefer_$PARAM[artwork])</onclick>
			<onclick condition="Control.IsVisible(56)">Skin.ToggleSetting(View_56_Prefer_$PARAM[artwork])</onclick>
			<selected>
			[Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_$PARAM[artwork]) | 
			Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_$PARAM[artwork])]
			</selected>
			<onfocus condition="!String.IsEqual(Window(Home).Property(MenucontrolActive),true)">SetProperty(MenucontrolActive,true,Home)</onfocus>
			<nested />
		</control>
	</include>
	
	
	
</includes>
