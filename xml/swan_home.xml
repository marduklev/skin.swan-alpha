<?xml version="1.0" encoding="utf-8"?>
<includes>
	
	<include name="Home_Layout_WidgetOnly">
		<include>home_widgets</include>
	</include>

	<include name="Home_Layout_Spotlight">
		<include>spotlight_layout</include>
		<include>home_widgets</include>
	</include>
	
	<include name="home_listitem_propertys">
		<onfocus condition="!String.IsEmpty(listitem.art(tvshow.clearlogo))">SetProperty(clearlogo,$INFO[listitem.art(tvshow.clearlogo)],home)</onfocus>
		<onfocus condition="!String.IsEmpty(listitem.art(clearlogo))">SetProperty(clearlogo,$INFO[listitem.art(clearlogo)],home)</onfocus>
		<onfocus condition="!String.IsEmpty(listitem.title)">SetProperty(title,$INFO[listitem.title],home)</onfocus>
	</include>
			
	
	<include name="spotlight_layout">
		<param name="spotlight_artwork_visible_right" default="!Skin.HasSetting(spotlight_home_fanart_left) + String.IsEmpty(Window(Home).Property(menucontrol_active))" />	
		<param name="spotlight_artwork_visible_left" default="Skin.HasSetting(spotlight_home_fanart_left) + String.IsEmpty(Window(Home).Property(menucontrol_active))" />	
		
		<param name="info_visible_left" default="!Skin.HasSetting(spotlight_home_fanart_left)" />
		<param name="info_visible_right" default="Skin.HasSetting(spotlight_home_fanart_left)" />
		<param name="info_plot_hidden" default="Skin.HasSetting(home_spotlight_hideplot)" />
		
		<param name="metadata_align_left" default="String.IsEqual(Skin.String(spotlight_home_metadata_align),left)" />
		<param name="metadata_align_center" default="String.IsEqual(Skin.String(spotlight_home_metadata_align),center)" />
		<param name="metadata_align_right" default="String.IsEqual(Skin.String(spotlight_home_metadata_align),right)" />
		<definition>
		
		<control type="group">
			<include content="temp_spotlight_infofade">
				<param name="fade_end" value="10" />
			</include>
			<description>S P O T L I G H T  A R T W O R K</description>
			<include content="Fanart_Diffused">
				<right>0</right>
				<param name="width" value="1267" />
				<param name="height" value="731" />
				<param name="diffuse" value="diffuse/spotlightleftdiffuse.png" />
				<param name="visible" value="$PARAM[spotlight_artwork_visible_right]" />
			</include>
			<include content="Fanart_Diffused">
				<left>0</left>
				<param name="width" value="1267" />
				<param name="height" value="731" />
				<param name="diffuse" value="diffuse/spotlightrightdiffuse.png" />
				<param name="visible" value="$PARAM[spotlight_artwork_visible_left]" />
			</include>
			<include content="Fanart_Diffused" condition="Window.IsActive(home)">
				<description>just load include for home, may delete also for home later</description>
				<left>0</left>
				<param name="width" value="1920" />
				<param name="height" value="1080" />
				<param name="diffuse" value="colors/gradienthorizontal.png" />
				<param name="visible" value="!String.IsEmpty(Window(Home).Property(menucontrol_active))" />
			</include>
		</control>
		
		<control type="group">
			<include condition="$PARAM[info_visible_left]" content="spotlight_trailer_overlay">
				<param name="trailer_visible_right" value="true" />
				<param name="trailer_visible_left" value="false" />
				<param name="diffusetexture" value="diffuse/spotlighttraileroverlayleft.png" />
			</include>
			<include condition="$PARAM[info_visible_right]" content="spotlight_trailer_overlay">
				<param name="trailer_visible_right" value="false" />
				<param name="trailer_visible_left" value="true" />
				<param name="diffusetexture" value="diffuse/spotlighttraileroverlayright.png" />
			</include>
			
			<control type="label">
				<description>JUST HOME and Maybe delete WIP MAYBE HOME MENU LABELS CENTERED</description>
				<visible>Window.IsVisible(home) + [Control.HasFocus(9000) | Control.HasFocus(8888)]</visible>
				<left>50%</left>
				<label>$INFO[Container(9000).ListItem.Label]</label>
				<textcolor>red</textcolor>
				<align>center</align>
				<width>400</width>
				<font>liberationsans_64_regular_b</font>
			</control>
		
		
		
			<control type="grouplist">
				<description>S P O T L I G H T  M E T A D A T A 750w</description>
				<animation effect="fade" start="100" end="0" time="250" condition="Window.IsActive(shutdownmenu)">conditional</animation>
				<animation effect="slide" start="0,0" end="0,-150" time="350" easing="inout" reversible="true" condition="[Control.IsVisible(503) + Skin.HasSetting(view_503_hideplot) + [[Control.HasFocus(50350) + !String.IsEmpty(Window.Property(Spotlight_Sets))] | Control.HasFocus(50352) | Control.HasFocus(50353)]] | [Control.IsVisible(504) + Skin.HasSetting(view_504_hideplot) + [[Control.HasFocus(50350) + !String.IsEmpty(Window.Property(Spotlight_Sets))] | Control.HasFocus(50352) | Control.HasFocus(50353)]]">conditional</animation>
		
				<visible>String.IsEmpty(Window(Home).Property(menucontrol_active))</visible>
				
				<width>39%</width>
				<height>650</height>
				<top>10</top>
				<bottom>10</bottom>
				<itemgap>10</itemgap>
				
				
					<include content="pos_left" condition="$PARAM[info_visible_left]">
						<param name="left" value="110" />
					</include>
					<include content="pos_right" condition="$PARAM[info_visible_right]">
						<param name="right" value="60" />
					</include>
					
					<include content="spacer_h">
						<param name="gap" value="150" />
						<param name="visible" value="$PARAM[info_plot_hidden]" />
					</include>
				
				<control type="image">
					<visible>!$EXP[ListItemClearLogo_IsEmpty]</visible>
					<height>245</height>
					<aspectratio align="center" aligny="bottom">keep</aspectratio>
					<texture background="true">$VAR[ListItemClearLogo]</texture>
				</control>
				
				<control type="label">
					<description>Fallback Label - make expression home_menucontrol_focused as 3 id s</description>
					<visible>![Control.HasFocus(9000) | Control.HasFocus(8888)] + $EXP[ListItemClearLogo_IsEmpty]</visible>
					<height>245</height>
					<wrapmultiline>true</wrapmultiline>
					<font>montserrat_68_extrabold</font>
					
					<include content="pos_alignx" condition="!$PARAM[info_plot_hidden] + $PARAM[metadata_align_left]" />
					<include content="pos_alignx" condition="$PARAM[info_plot_hidden] | $PARAM[metadata_align_center]">
						<param name="align" value="center" />
					</include>
					<include content="pos_alignx" condition="!$PARAM[info_plot_hidden] + $PARAM[metadata_align_right]">
						<param name="align" value="right" />
					</include>
					<include content="pos_right" condition="!$PARAM[info_plot_hidden] + $PARAM[metadata_align_right]">
						<param name="right" value="30" />
					</include>
					<aligny>center</aligny>
					<textcolor>$VAR[color_global_spotlight_accent]</textcolor>
					<label>$VAR[clearLogo_fallback]</label>
				</control>
				
				<include content="Meta_Uncommon_Top">
					<param name="Is_hiddenplot" value="$PARAM[info_plot_hidden]" />
					<param name="Is_left" value="$PARAM[metadata_align_left]" />
					<param name="Is_center" value="$PARAM[metadata_align_center]" />
					<param name="Is_right" value="$PARAM[metadata_align_right]" />
				</include>
				
				<control type="grouplist">
					<visible>String.IsEqual(ListItem.DBTYPE,episode)</visible>
					<orientation>vertical</orientation>
					<height>125</height>
					<fadetime>300</fadetime>
					<itemgap>10</itemgap>
					<include content="pos_right" condition="!$PARAM[info_plot_hidden] + $PARAM[metadata_align_right]">
						<param name="right" value="40" />
					</include>
					<control type="label">
						<height>70</height>
						<font>notosans_24_bold</font>
						
						<include content="pos_alignx" condition="!$PARAM[info_plot_hidden] + $PARAM[metadata_align_left]" />
						<include content="pos_alignx" condition="$PARAM[info_plot_hidden] | $PARAM[metadata_align_center]">
							<param name="align" value="center" />
						</include>
						<include content="pos_alignx" condition="!$PARAM[info_plot_hidden] + $PARAM[metadata_align_right]">
							<param name="align" value="right" />
						</include>
						
						<aligny>center</aligny>
						<textcolor>$VAR[color_global_spotlight_main]</textcolor>
						<label>[CAPITALIZE]$INFO[ListItem.Title,[B],[/B]][CR]$INFO[ListItem.Season,$LOCALIZE[36904] ,]$INFO[ListItem.Episode, $LOCALIZE[36906] ,][/CAPITALIZE]</label>
					</control>
					<include content="spacer_h">
						<param name="gap" value="5" />
					</include>
				</control>
				
				<include condition="!$PARAM[info_plot_hidden]" content="Spotlight_Plot">
					<param name="visible" value="![$EXP[IsEpisode]]" />
					<param name="maxheight" value="205" />
					<param name="Is_left" value="$PARAM[metadata_align_left]" />
					<param name="Is_center" value="$PARAM[metadata_align_center]" />
					<param name="Is_right" value="$PARAM[metadata_align_right]" />
				</include>
				<include condition="!$PARAM[info_plot_hidden]" content="Spotlight_Plot">
					<param name="visible" value="$EXP[IsEpisode]" />
					<param name="maxheight" value="160" />
					<param name="Is_left" value="$PARAM[metadata_align_left]" />
					<param name="Is_center" value="$PARAM[metadata_align_center]" />
					<param name="Is_right" value="$PARAM[metadata_align_right]" />
				</include>
				
				<include content="Meta_Genre_Bottom">
					<param name="Is_hiddenplot" value="$PARAM[info_plot_hidden]" />
					<param name="Is_left" value="$PARAM[metadata_align_left]" />
					<param name="Is_center" value="$PARAM[metadata_align_center]" />
					<param name="Is_right" value="$PARAM[metadata_align_right]" />
				</include>
			</control>
			
				
		</control>
		</definition>
	</include>
	
	
	<include name="Home_WidgetPositioning">
		<param name="height" default="98%" />
		<param name="bottom" default="5" />
		<definition>
			<height>$PARAM[height]</height>
			<bottom>$PARAM[bottom]</bottom>
		</definition>
	</include>


	
	<include name="Meta_Uncommon_Top">
		<control type="grouplist">
			<orientation>horizontal</orientation>
			<height>50</height>
			<itemgap>10</itemgap>
			<right>25</right>
			
			<nested />
			
			<include content="pos_alignx" condition="!$PARAM[Is_hiddenplot] + $PARAM[Is_left]" />
			<include content="pos_alignx" condition="$PARAM[Is_hiddenplot] | $PARAM[Is_center]">
				<param name="align" value="center" />
			</include>
			<include content="pos_alignx" condition="!$PARAM[Is_hiddenplot] + $PARAM[Is_right]">
				<param name="align" value="right" />
			</include>
			
			<include content="stars_rating">
				<param name="colordiffuse" value="$VAR[color_global_spotlight_accent]" />
			</include>
			
			<control type="label">
				<visible>!String.IsEmpty(ListItem.Year)</visible>	
				<top>5</top>
				<left>10</left>
				<height>35</height>
				<width>auto</width>
				<aligny>center</aligny>
				<font>notosans_22_regular</font>
				<label>$INFO[ListItem.Year,[B],[/B]]</label>
				<textcolor>$VAR[color_global_spotlight_main]</textcolor>
			</control>
			
			<control type="button">
				<width min="50">auto</width>
				<font>notosans_22_regular</font>
				<label>$INFO[ListItem.MPAA,[B],[/B]]</label>
				<aligny>top</aligny>
				<align>center</align>
				<textcolor>$VAR[color_global_spotlight_main]</textcolor>
				<disabledcolor>$VAR[color_global_spotlight_main]</disabledcolor>
				<posy>3</posy>
				<height>40</height>
				<textoffsetx>20</textoffsetx>
				<textoffsety>4</textoffsety>
				<texturenofocus colordiffuse="$VAR[color_global_spotlight_main]">flags/detailframe.png</texturenofocus>
				<enable>false</enable>
				<visible>!String.IsEmpty(ListItem.MPAA)</visible>
			</control>
			
			<control type="label">
				<posy>5</posy>
				<width>auto</width>
				<label>$VAR[Meta_Top_Details]</label>
				<height>35</height>
				<aligny>center</aligny>
				<textcolor>$VAR[color_global_spotlight_main]</textcolor>
				<font>notosans_22_regular</font>
			</control>
			
			<include content="FramedCodecInfo">
				<param name="infolabel" value="$VAR[Simple_Resolution,[B],[/B]]" />
				<param name="visible" value="ListItem.IsStereoscopic | !String.IsEmpty(ListItem.VideoResolution)" />
			</include>
			<control type="group">
				<visible>!String.IsEmpty(ListItem.AudioChannels)</visible>
				<left>-10</left>
				<width>70</width>
				<include content="FramedCodecInfo">
					<param name="infolabel" value="$VAR[Simple_AudioChannel,[B],[/B]]" />
					<param name="visible" value="!String.IsEmpty(ListItem.AudioChannels)" />
				</include>
			</control>
			<!-- Games: Number of players -->
			<!-- <control type="group">
				<top>0</top>
				<width>250</width>
				<height>50</height>
				<visible>!String.IsEmpty(ListItem.Property(nplayers))</visible>
				<control type="image">
					<top>-5</top>
					<width>50</width>
					<height>50</height>
					<texture colordiffuse="$INFO[Skin.String(NetflixDetailsFlagColor)]">DefaultActor.png</texture>					
				</control>
				<control type="label">
					<left>55</left>
					<width>100%</width>
					<label>$INFO[ListItem.Property(nplayers)]</label>
					<height>40</height>
					<aligny>center</aligny>
					<align>left</align>
					<textcolor>$VAR[CodecSameLabelColorAsFrames]</textcolor>
					<font>notosans_26_bold</font>
				</control>	 
			</control> -->
		</control>
	</include>
	<include name="Spotlight_Plot">
		<control type="textbox">
			
			<include>temp_spotlight_infofade</include>
			
			<width>95%</width>
			<description>if align right, width doesnt affect alignment</description>
			<visible>$PARAM[visible]</visible>
			<top>0</top>
			<height min="80" max="$PARAM[maxheight]">auto</height>
			<aligny>top</aligny>
			<label>$VAR[plot]</label>
			<textcolor>$VAR[color_global_spotlight_secondary]</textcolor>
			<include content="pos_alignx" condition="$PARAM[Is_left]" />
			<include content="pos_alignx" condition="$PARAM[Is_center]">
				<param name="align" value="center" />
			</include>
			<include content="pos_alignx" condition="$PARAM[Is_right]">
				<param name="align" value="right" />
			</include>
			<font>liberationsans_27_regular</font>
		</control>
	</include>


	<include name="Meta_Genre_Bottom">
		<control type="grouplist">
			<description>got no idea why pos_right is needed but its workin</description>
			<visible>!String.IsEmpty(ListItem.Genre)</visible>
			<height>60</height>
			<orientation>horizontal</orientation>
			<itemgap>10</itemgap>
			<include>temp_spotlight_infofade</include>
			
			<include content="pos_alignx" condition="!$PARAM[Is_hiddenplot] + $PARAM[Is_left]" />
			<include content="pos_alignx" condition="$PARAM[Is_hiddenplot] | $PARAM[Is_center]">
				<param name="align" value="center" />
			</include>
			<include content="pos_alignx" condition="!$PARAM[Is_hiddenplot] + $PARAM[Is_right]">
				<param name="align" value="right" />
			</include>
			<include content="pos_right" condition="!$PARAM[Is_hiddenplot] + $PARAM[Is_right]">
				<param name="right" value="30" />
			</include>
			
			<control type="image">
				<top>5</top>
				<height>50</height>
				<width>50</width>
				<bordertexture colordiffuse="$VAR[color_global_spotlight_accent]" aligny="center" align="center">diffuse/circle.png</bordertexture>
				<texture colordiffuse="$VAR[color_home_background_layer1]" aligny="center" align="center">flags/genre.png</texture>
			</control>
			<control type="label">
				<width>auto</width>
				<height>55</height>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Genre]</label>
				<textcolor>$VAR[color_global_spotlight_main]</textcolor>
				<font>liberationsans_23_bold</font>
			</control>
		</control>
	</include>

	<include name="FramedCodecInfo">
		<param name="font" default="notosans_22_regular" />
		<param name="top" default="5" />
		<definition>
		<control type="group">	
			<visible>$PARAM[visible]</visible>
			<left>2</left>
			<posy>$PARAM[top]</posy>
			<width>70</width>
			<height>40</height>
			<fadetime>150</fadetime>
			<control type="image">
				<description>use netflix bg</description>
				<bordersize>2</bordersize>
				<width>60</width>
				<height>35</height>
				<bordertexture border="1" colordiffuse="$VAR[color_global_spotlight_main]">flags/slimframesoftedge.png</bordertexture>
				<texture colordiffuse="$VAR[color_global_spotlight_background]">colors/white40.png</texture>
			</control>
			<control type="label">
				<width>60</width>
				<height>35</height>
				<aligny>center</aligny>
				<align>center</align>
				<textcolor>$VAR[color_global_spotlight_main]</textcolor>
				<font>$PARAM[font]</font>
				<scroll>false</scroll>
				<label>$PARAM[infolabel]</label>
			</control>
		</control>
		</definition>
	</include>
	
	<variable name="Simple_Resolution">
		<value condition="ListItem.IsStereoscopic">3D</value>
		<value condition="Integer.IsGreater(ListItem.VideoResolution,1080) | String.IsEqual(ListItem.VideoResolution,4K)">UHD</value>
		<value condition="Integer.IsGreater(ListItem.VideoResolution,700)">HD</value>
		<value condition="!String.IsEmpty(ListItem.VideoResolution)">SD</value>
	</variable>
	
	
	<variable name="Simple_AudioChannel">
		<value condition="String.IsEqual(ListItem.AudioChannels,1)">1.0</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,2)">2.0</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,3)">2.1</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,4)">4.0</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,5)">5.0</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,6)">5.1</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,7)">6.1</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,8)">7.1</value>
		<value condition="String.IsEqual(ListItem.AudioChannels,9)">8.1</value>
        <value condition="String.IsEqual(ListItem.AudioChannels,10)">9.1</value>
        <value condition="!String.IsEmpty(ListItem.AudioChannels)">$INFO[ListItem.AudioChannels]</value>
	</variable>

	<variable name="Meta_Top_Details">
		<value condition="String.IsEqual(ListItem.DBTYPE,tvshow) + Integer.IsGreater(ListItem.Property(TotalSeasons),1) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + !String.IsEmpty(ListItem.Property(TotalEpisodes))">$INFO[ListItem.Property(TotalSeasons),[B], $LOCALIZE[33054][/B]]$INFO[ListItem.Property(UnWatchedEpisodes), (, $LOCALIZE[16101])]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,tvshow) + Integer.IsGreater(ListItem.Property(TotalSeasons),1) + !Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + !String.IsEmpty(ListItem.Property(TotalEpisodes))">$INFO[ListItem.Property(TotalSeasons),[B], $LOCALIZE[33054][/B]]</value>																																																																																							
		<value condition="String.IsEqual(ListItem.DBTYPE,tvshow) + Integer.IsEqual(ListItem.Property(TotalSeasons),1) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + !String.IsEmpty(ListItem.Property(TotalEpisodes))">$INFO[ListItem.Property(TotalSeasons),[B], $LOCALIZE[36904][/B]]$INFO[ListItem.Property(UnWatchedEpisodes), (, $LOCALIZE[16101])]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,tvshow) + Integer.IsEqual(ListItem.Property(TotalSeasons),1) + !Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + !String.IsEmpty(ListItem.Property(TotalEpisodes))">$INFO[ListItem.Property(TotalSeasons),[B], $LOCALIZE[36904][/B]]</value>																																																																																							
		<value condition="String.IsEqual(ListItem.DBTYPE,season) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + !String.IsEmpty(ListItem.Property(TotalEpisodes))">$INFO[ListItem.Property(TotalEpisodes),[B], $LOCALIZE[20360][/B]]$INFO[ListItem.Property(UnWatchedEpisodes), (, $LOCALIZE[16101])]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,season) + !Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + !String.IsEmpty(ListItem.Property(TotalEpisodes))">$INFO[ListItem.Property(TotalEpisodes),[B], $LOCALIZE[20360][/B]]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,tvshow)">$INFO[ListItem.Property(TotalSeasons),[B], $LOCALIZE[33054][/B]]$INFO[ListItem.Property(UnWatchedEpisodes), (, $LOCALIZE[16101])]</value>		
 		<value condition="String.Contains(ListItem.Path,videodb://movies/sets/) | String.IsEqual(ListItem.DBTYPE,set)">$INFO[ListItem.Label]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,album) + ![String.IsEmpty(ListItem.art(albumartist.clearlogo)) + String.IsEmpty(ListItem.art(artist.clearlogo))]">$INFO[ListItem.AlbumArtist]$INFO[ListItem.Album, • ,]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,album) + [String.IsEmpty(ListItem.art(albumartist.clearlogo)) + String.IsEmpty(ListItem.art(artist.clearlogo))]">$INFO[ListItem.Album,| [B],[/B]]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,song) + ![String.IsEmpty(ListItem.art(albumartist.clearlogo)) + String.IsEmpty(ListItem.art(artist.clearlogo))]">$INFO[ListItem.AlbumArtist]$INFO[ListItem.Album, • ,]</value>
		<value condition="!String.IsEmpty(ListItem.Duration)">$VAR[ListItemDuration]</value>
		<value>$INFO[ListItem.Label2]</value>
	</variable>

	<variable name="clearLogo_fallback">
		<value condition="$EXP[IsSong]">$INFO[ListItem.AlbumArtist,[B],[/B]][CR]$INFO[ListItem.title]</value>
		<value condition="$EXP[IsAlbum]">$INFO[ListItem.AlbumArtist,[B],[/B]]</value>
		<value condition="$EXP[IsEpisode]">$INFO[ListItem.tvshowtitle]</value>		
		<value>$INFO[ListItem.Label]</value>	
	</variable>
	
	<include name="spotlight_trailer_overlay">
		<control type="group">
			<top>0</top>
			<visible>!$EXP[Infodialog_IsActive]</visible>
			<visible>[Player.HasVideo + String.IsEmpty(Window(Home).Property(TrailerIsPlaying))] | [!Skin.HasSetting(home_trailer_showwidget) + !String.IsEmpty(Window(Home).Property(TrailerIsPlaying))]</visible>
			<control type="videowindow">
				<include content="pos_left" condition="$PARAM[trailer_visible_left]" />
				<include content="pos_right" condition="$PARAM[trailer_visible_right]" />
				<width>1267</width>
				<height>731</height>
			</control>
			<control type="image">
				<include content="pos_left" condition="$PARAM[trailer_visible_left]" />
				<include content="pos_right" condition="$PARAM[trailer_visible_right]" />
				<bordertexture colordiffuse="$VAR[color_global_spotlight_background]" diffuse="$PARAM[diffusetexture]">colors/white.png</bordertexture>
				<texture colordiffuse="$VAR[color_global_spotlight_background_layer2]" diffuse="$PARAM[diffusetexture]">$VAR[spotlight_trailer_layer3_overlayImage]</texture>
			</control>
		</control>
	</include>
	
	<!-- <value condition="[Window.IsActive(home) + !String.IsEmpty(Skin.String(texture_home_background_layer3))] | [!Window.IsActive(home) + !String.IsEmpty(Skin.String(texture_global_background_layer3)]">$VAR[backgroundbuilding_layer3_texture]</value> -->
	<variable name="spotlight_trailer_layer3_overlayImage">
		<value condition="[Window.IsActive(home) + !String.IsEmpty(Skin.String(texture_home_background_layer3))]">$VAR[backgroundbuilding_layer3_texture]</value>
		<value>colors/none.png</value>	
	</variable>
	
	<include name="busyspinner_spotlight_autoplaytrailer">
		<control type="image">
			<visible>!string.isempty(window(home).property(alt_busyspinner_counter))</visible>
			<centerleft>$PARAM[centerleft]</centerleft>
			<centertop>$PARAM[centertop]</centertop>
			<width>130</width>
			<height>130</height>
			<texture colordiffuse="$VAR[color_global_dialog_accent]">special://skin/extras/busy/netflixorigin.apng</texture>
			<aspectratio align="center" aligny="center">keep</aspectratio>
		</control>
	</include>
	
	<include name="home_mainmenu_content">
		<content>
			<nested />
			<include content="mainmenu_item">
				<param name="id" value="01" />
				<param name="nr" value="1" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="02" />
				<param name="nr" value="2" />
				</include>
			<include content="mainmenu_item">
				<param name="id" value="03" />
				<param name="nr" value="3" />
				</include>
			<include content="mainmenu_item">
				<param name="id" value="04" />
				<param name="nr" value="4" />
				</include>
			<include content="mainmenu_item">
				<param name="id" value="05" />
				<param name="nr" value="5" />
				</include>
			<include content="mainmenu_item">
				<param name="id" value="06" />
				<param name="nr" value="6" />
				</include>
			<include content="mainmenu_item">
				<param name="id" value="07" />
				<param name="nr" value="7" />
				</include>
			<include content="mainmenu_item">
				<param name="id" value="08" />
				<param name="nr" value="8" />
				</include>
			<include content="mainmenu_item">
				<param name="id" value="09" />
				<param name="nr" value="9" />
				</include>
			<include content="mainmenu_item">
				<param name="id" value="10" />
				<param name="nr" value="10" />
				</include>
			<include content="mainmenu_item">
				<param name="id" value="11" />
				<param name="nr" value="11" />
				</include>
			<include content="mainmenu_item">
				<param name="id" value="12" />
				<param name="nr" value="12" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="13" />
				<param name="nr" value="13" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="14" />
				<param name="nr" value="14" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="15" />
				<param name="nr" value="15" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="16" />
				<param name="nr" value="16" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="17" />
				<param name="nr" value="17" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="18" />
				<param name="nr" value="18" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="19" />
				<param name="nr" value="19" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="20" />
				<param name="nr" value="20" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="21" />
				<param name="nr" value="21" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="22" />
				<param name="nr" value="22" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="23" />
				<param name="nr" value="23" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="24" />
				<param name="nr" value="24" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="25" />
				<param name="nr" value="25" />
			</include>
		</content>
	</include>
	<include name="mainmenu_item">
		<item id="900$PARAM[id]">
			<visible>!String.IsEmpty(Skin.String(mainmenuitem$PARAM[nr]_target)) | !String.IsEmpty(Skin.String(mainmenuitem$PARAM[nr]_path)) | !String.IsEmpty(Skin.String(mainmenuitem$PARAM[nr]_executebuiltin))</visible>
			<label>$INFO[Skin.String(mainmenuitem$PARAM[nr]_name)]</label>
			<label2 />
			<thumb>$INFO[Skin.String(mainmenuitem$PARAM[nr]_thumb)]</thumb>
			<icon>$INFO[Skin.String(mainmenuitem$PARAM[nr]_thumb)]</icon>
			<property name="fanart">$INFO[Skin.String(mainmenuitem$PARAM[nr]_fanart)]</property>
			<property name="submenu_containerpath">$INFO[Skin.String(mainmenuitem$PARAM[nr]_path)]</property>
			<property name="target">$INFO[Skin.String(mainmenuitem$PARAM[nr]_target)]</property>
			<property name="itemnumber">$NUMBER[$PARAM[nr]]</property>
			<include condition="String.IsEmpty(Window(home).Property(SwanShortcut_LinkWidget))" content="mainmenu_item_actions_common">
				<param name="nr" value="$PARAM[nr]" />
			</include>
			<include condition="!String.IsEmpty(Window(home).Property(SwanShortcut_LinkWidget))" content="mainmenu_item_actions_linkwidget" />
		</item>
	</include>
	<include name="mainmenu_item_actions_common">
		<onclick condition="[Skin.HasSetting(home_tile_focus_submenu) + [!Skin.HasSetting(mainmenuitem$PARAM[nr]_disablesubmenu) + !string.isempty(Skin.String(mainmenuitem$PARAM[nr]_path))]] + string.isequal(Skin.String(HomeLayout),MenuTiles)">SetFocus(5556)</onclick>   
		<onclick condition="String.IsEqual(Skin.String(mainmenuitem$PARAM[nr]_target),1120)">Skin.SetString(SearchTerm)</onclick>   
		<onclick condition="Skin.String(mainmenuitem$PARAM[nr]_executebuiltin)">$INFO[Skin.String(mainmenuitem$PARAM[nr]_executebuiltin)]</onclick>
		<onclick condition="!Skin.String(mainmenuitem$PARAM[nr]_path)">ActivateWindow($INFO[Skin.String(mainmenuitem$PARAM[nr]_target)],return)</onclick>
		<onclick condition="[[[!Skin.HasSetting(home_tile_focus_submenu) | Skin.HasSetting(mainmenuitem$PARAM[nr]_disablesubmenu)] + string.isequal(Skin.String(HomeLayout),MenuTiles)] | !string.isequal(Skin.String(HomeLayout),MenuTiles)] + !String.IsEmpty(Skin.String(mainmenuitem$PARAM[nr]_path))">ActivateWindow($INFO[Skin.String(mainmenuitem$PARAM[nr]_target),,$COMMA]$INFO[Skin.String(mainmenuitem$PARAM[nr]_path)],return)</onclick>
		<onclick condition="String.IsEqual(Window(Home).Property(menucontrol_active),home)">ClearProperty(menucontrol_active,home)</onclick>
	</include>
	<include name="mainmenu_item_actions_linkwidget">
		<onclick>Skin.SetString(userwidget$INFO[Window(home).Property(SwanShortcut_LinkWidget)]_linked,$INFO[Container(9000).ListItem.Property(itemnumber)])</onclick>
		<onclick>Dialog.Close(1102)</onclick>
	</include>
	
	<variable name="home_tiles_background">
		<value condition="skin.string(texturepath_userdefined_hometiles_background)">$INFO[skin.string(texturepath_userdefined_hometiles_background)]</value>
		<value>resource://resource.images.skin.swan/backgroundimages/</value>
	</variable>
	
	<variable name="CurrentlyPlayingItem">
		<value condition="player.hasaudio + !String.IsEmpty(musicplayer.dbid)">musicdb://songs/?songid=$INFO[musicplayer.dbid]</value>
		
		<value condition="player.hasvideo + videoplayer.content(movies)">videodb://movies/titles/?xsp=%7B%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22is%22%2C%22value%22%3A%5B%22$INFO[Player.Title]%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</value>
		<!-- <value condition="videoplayer.content(movies) + [!System.GetBool(videolibrary.groupmoviesets) | [System.GetBool(videolibrary.groupmoviesets) + String.IsEmpty(videoplayer.SetId)]]">videodb://movies/titles/$INFO[videoplayer.dbid]</value> -->
		
		<!-- <value condition="player.hasvideo + videoplayer.content(movies)">videodb://movies/titles/?xsp=%7B%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22is%22%2C%22value%22%3A%5B%22$INFO[Player.Title]%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</value> -->
		<value condition="player.hasvideo + videoplayer.content(episodes)">videodb://tvshows/titles/-1/-1/?xsp=%7B%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22is%22%2C%22value%22%3A%5B%22$INFO[Player.Title]%22%5D%7D%5D%7D%2C%22type%22%3A%22episodes%22%7D</value>
	</variable>
	
	<include name="Menucontrol_Home_MenuTiles">

		<control type="list" id="6999">
			<description>getinfo</description>
			<include>HiddenContainer</include>
			<onup>600</onup>
			<ondown>600</ondown>
			<onleft>600</onleft>
			<onright>600</onright>
			<ondown>600</ondown>
			<content limit="1">$VAR[CurrentlyPlayingItem]</content>
		</control>
		
		<control type="multiimage">
			<depth>DepthBackground</depth>
			<fadetime>3000</fadetime>
			<imagepath>$VAR[home_tiles_background]</imagepath>
		</control>
		
		<control type="group">
			<description>in future template for currently playing bar - ref musci_hub n skinsetting for use it at top</description>
			<visible>[String.IsEmpty(Window(Home).Property(TrailerIsPlaying)) + [Player.HasVideo | Player.HasGame | Player.HasAudio]] + !$EXP[Infodialog_IsActive]</visible>
			<bottom>0</bottom>
			<height>215</height>
			<width>100%</width>
			<centerleft>50%</centerleft>
			<control type="image">
				<description>bg image alpha D9 85% </description>
				<texture colordiffuse="D9131313">colors/white.png</texture>
			</control>
			<control type="videowindow">
				<decription>video window centered</decription>
				<visible>player.hasvideo</visible>
				<top>15</top>
				<height>190</height>
			</control>
			<control type="gamewindow">
				<decription>game window centered</decription>
				<top>15</top>
				<height>190</height>
			</control>
			<control type="image">
				<decription>thumb artist n album centered</decription>
				<visible>player.hasaudio</visible>
				<top>15</top>
				<height>190</height>
				<width>342</width>
				<centerleft>50%</centerleft>
				<texture>$VAR[PlayerThumb]</texture>
				<bordertexture>colors/white.png</bordertexture>
				<bordersize>1</bordersize>
				<aspectratio align="center" aligny="center">keep</aspectratio>
			</control>
			<!-- <control type="image">
				<decription>thumb artist n album centered</decription>
				<visible>player.hasaudio</visible>
				<top>15</top>
				<height>190</height>
				<width>342</width>
				<centerleft>50%</centerleft>
				<aspectratio scalediffuse="true" align="center" aligny="center">keep</aspectratio>
				<texture diffuse="diffuse/compactdisk.png">$VAR[PlayerDisc]</texture>
				<animation effect="rotate" end="-360" center="auto" time="4800" loop="true" reversible="false" condition="!Player.Paused">Conditional</animation>
			</control> -->
				
			<control type="image">
				<description>dimmed logo right</description>
				<visible>!$EXP[PlayerClearLogo_IsEmpty]</visible>
				<include content="left_width" condition="player.hasaudio">
					<param name="width" value="775" />
					<param name="left" value="1100" />
				</include>
				<include content="left_width" condition="!player.hasaudio">
					<param name="width" value="625" />
					<param name="left" value="1250" />
				</include>
				<texture diffuse="colors/white10.png" fallback="">$VAR[PlayerClearlogo]</texture>
				<bordertexture>colors/none.png</bordertexture>
				<top>15</top>
				<bottom>10</bottom>
				<aspectratio align="center" aligny="center">keep</aspectratio>
			</control>
			
			
			<!-- grouplist vertical -->
			<control type="image">
				<animation effect="fade" start="100" end="0" condition="window.isvisible(1140)">conditional</animation>
				<visible>!$EXP[PlayerClearLogo_IsEmpty]</visible>
				<include content="left_width" condition="player.hasaudio">
					<param name="width" value="775" />
					<param name="left" value="50" />
				</include>
				<include content="left_width" condition="!player.hasaudio">
					<param name="width" value="625" />
					<param name="left" value="50" />
				</include>
				<texture diffuse="colors/white.png" fallback="">$VAR[PlayerClearlogo]</texture>
				<bordertexture>colors/none.png</bordertexture>
				<bordersize>25</bordersize>
				<top>0</top>
				<bottom>60</bottom>
				<aspectratio align="center" aligny="center">keep</aspectratio>
			</control>
			
				<control type="grouplist" id="600">
					<description>player controls</description>
					<animation effect="slide" start="0,0" end="0,55" condition="!$EXP[PlayerClearLogo_IsEmpty]">conditional</animation>
					
					<include content="left_width" condition="!player.hasaudio">
						<param name="width" value="750" />
						<param name="left" value="0" />
						
					</include>
					<include content="left_width" condition="player.hasaudio">
						<param name="width" value="700" />
						<param name="left" value="80" />
						
					</include>
					<animation effect="fade" start="100" end="0" condition="window.isvisible(1140)">conditional</animation>
					<height>100</height>
					<bottom>50</bottom>
					
					<align>center</align>
					<orientation>horizontal</orientation>
					<itemgap>15</itemgap>
					<usecontrolcoords>true</usecontrolcoords>
					<onup>5555</onup>
					<ondown>5555</ondown>
					
					<control type="button" id="6009">
						<centertop>50%</centertop>
						<width>45</width>
						<height>45</height>
						<visible>player.hasaudio</visible>
						<texturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/userrating_fo.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/userrating_fo.png</texturenofocus>
						<onclick>SetRating</onclick>
					</control>
					
					<control type="button" id="6011">
						<visible>!Container(6999).IsUpdating + Integer.IsEqual(Container(6999).NumItems,1)</visible>
						<centertop>50%</centertop>
						<width>45</width>
						<height>45</height>
						<label />
						<texturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/infonoborder.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/infonoborder.png</texturenofocus>
						<!-- <onclick condition="player.hasvideo">ActivateWindow(fullscreeninfo)</onclick> -->
						<!-- not done <onclick condition="player.hasaudio">ActivateWindow(songinformation)</onclick> -->
						<onclick condition="true">setfocus(6999)</onclick>
						<onclick condition="true">action(info)</onclick>
					</control>
					
					<control type="button" id="6012">
						<description>get playlist</description>
						<visible>MusicPlayer.HasPrevious | MusicPlayer.HasNext</visible>
						<centertop>50%</centertop>
						<width>45</width>
						<height>45</height>
						<label />
						<texturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/playlist_fo.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/playlist_fo.png</texturenofocus>
						<onclick>SetProperty(CurrentPlaylistVisible,small,home)</onclick>
						<onclick>ActivateWindow(1140)</onclick>
					</control>
					
					<control type="button" id="6013">
						<centertop>50%</centertop>
						<width>50</width>
						<height>50</height>
						<label />
						<texturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/fullscreen.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/fullscreen.png</texturenofocus>
						<onclick>fullscreen</onclick>
					</control>
					
					<include content="spacer_w">
						<param name="visible" value="Player.HasAudio"/>
						<param name="id" value="603"/>
						<param name="gap" value="5"/>
					</include>
					<control type="button" id="604">
						<centertop>50%</centertop>
						<visible>MusicPlayer.HasPrevious | Playlist.IsRepeat</visible>
						<width>50</width>
						<height>50</height>
						<label />
						<texturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/previous_fo.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/previous_fo.png</texturenofocus>
						<!-- <onclick condition="!Integer.IsLessOrEqual(MusicPlayer.Time(ss),03)">PlayerControl(previous)</onclick> -->
						<onclick>PlayerControl(previous)</onclick>
					</control>
				
					<control type="togglebutton" id="605">
						<centertop>50%</centertop>
						<width>50</width>
						<height>50</height>
						<label />
						<altlabel />
						<texturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/play_fo.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/play_fo.png</texturenofocus>
						<alttexturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/pause_fo.png</alttexturefocus>
						<alttexturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/pause_fo.png</alttexturenofocus>
						<usealttexture>!Player.Paused</usealttexture>
						<onclick>PlayerControl(play)</onclick>
					</control>
				
					<control type="button" id="606">
						<centertop>50%</centertop>
						<width>50</width>
						<height>50</height>
						<label />
						<texturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/stop_fo.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/stop_fo.png</texturenofocus>
						<onclick>PlayerControl(stop)</onclick>
					</control>
				
					<control type="togglebutton" id="607">
						<centertop>50%</centertop>
						<animation effect="fade" start="100" end="40" time="1000" loop="true" condition="PVR.IsRecordingPlayingChannel">conditional</animation>
						<visible>PVR.CanRecordPlayingChannel</visible>
						<width>50</width>
						<height>50</height>
						<label />
						<texturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/record.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/record.png</texturenofocus>
						<alttexturefocus colordiffuse="red">buttons/osd/record.png</alttexturefocus>
						<alttexturenofocus colordiffuse="red">buttons/osd/record.png</alttexturenofocus>
						<usealttexture>PVR.IsRecordingPlayingChannel</usealttexture>
						<onclick>PVR.ToggleRecordPlayingChannel</onclick>
					</control>
					
					<control type="button" id="608">
						<centertop>50%</centertop>
						<visible>MusicPlayer.HasNext | Playlist.IsRepeat</visible>
						<centertop>50%</centertop>
						<width>50</width>
						<height>50</height>
						<label />
						<texturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/next_fo.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/next_fo.png</texturenofocus>
						<onclick>PlayerControl(next)</onclick>
					</control>
					
					<include content="spacer_w">
						<param name="id" value="609"/>
						<param name="gap" value="5" />
					</include>
					
					<control type="button" id="6092">
						<centertop>50%</centertop>
						<visible>MusicPlayer.HasNext | Playlist.IsRepeat</visible>
						<centertop>50%</centertop>
						<width>50</width>
						<height>50</height>
						<label />
						<texturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/repeat.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/repeat.png</texturenofocus>
						
						<onclick>PlayerControl(Repeat)</onclick>
						<onclick condition="!Playlist.IsRepeatOne + !Playlist.IsRepeat">Notification(Repeat,[B]A l l[/B],10,buttons/osd/repeatall.png)</onclick>
						<onclick condition="Playlist.IsRepeat">Notification(Repeat,[B]T i t l e[/B],10,buttons/osd/repeatone.png)</onclick>
						<onclick condition="Playlist.IsRepeatOne">Notification(Repeat,[B]D i s a b l e d[/B],10,buttons/osd/repeatoff.png)</onclick>
					</control>
					
					<control type="button" id="6096">
						<description>toggle vs common, currently looks lika a bad symbol</description>
						<centertop>50%</centertop>
						<visible>MusicPlayer.HasNext | Playlist.IsRepeat</visible>
						<centertop>50%</centertop>
						<width>50</width>
						<height>50</height>
						<label />
						<texturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/random.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/random.png</texturenofocus>
						
						<onclick>PlayerControl(Random)</onclick>
						<onclick condition="!Playlist.IsRandom">Notification(Random,[B]O n[/B],10,buttons/osd/random.png)</onclick>
						<onclick condition="Playlist.IsRandom">Notification(Random,[B]O f f[/B],10,buttons/osd/randomoff.png)</onclick>
					</control>
				</control>
				
				<control type="grouplist" id="601">
					<description>player infos</description>
					<include content="left_width" condition="player.hasaudio">
						<param name="width" value="775" />
						<param name="left" value="1100" />
					</include>
					<include content="left_width" condition="!player.hasaudio">
						<param name="width" value="625" />
						<param name="left" value="1250" />
					</include>
					<top>15</top>
					<bottom>10</bottom>
					<align>center</align>
					<orientation>vertical</orientation>
					<itemgap>25</itemgap>
					<usecontrolcoords>true</usecontrolcoords>
					
					<control type="label">
						<height>auto</height>
						<align>center</align>
						<label>$INFO[Player.title]</label>
						<font>notosans_16_bold</font>
						<textcolor>$VAR[color_osdmusic_secondary]</textcolor>
					</control>
					
					
					<control type="label">
						<visible>!string.isempty(musicplayer.artist)</visible>
						
						<height>auto</height>
						<align>center</align>
						<info>musicplayer.artist</info>
						<font>notosans_16_bold</font>
						<textcolor>$VAR[color_osdmusic_secondary]</textcolor>
					</control>
					
					<control type="progress">
						<centerleft>50%</centerleft>
						<width>600</width>
						<texturebg colordiffuse="$VAR[color_hub_menu_text_nf]">colors/white50.png</texturebg>
						<midtexture colordiffuse="$VAR[color_hub_accent]">colors/white.png</midtexture>
						<lefttexture />
						<righttexture />
						<overlaytexture />
						<info>Player.Progress</info>
					</control>
					<control type="label">
						<height>auto</height>
						<align>center</align>
						<label>$INFO[player.time]       |       $INFO[Player.Duration]       |       $INFO[Player.TimeRemaining]</label>
						<font>notosans_16_bold</font>
						<textcolor>$VAR[color_osdmusic_secondary]</textcolor>
					</control>
					<control type="label">
						<visible>!string.isempty(musicplayer.album)</visible>
						
						<height>auto</height>
						<align>center</align>
						<info>musicplayer.album</info>
						<font>notosans_16_bold</font>
						<textcolor>$VAR[color_osdmusic_secondary]</textcolor>
					</control>
					<control type="label">
						<visible>player.hasvideo + !string.isempty(Player.FinishTime)</visible>
						
						<height>auto</height>
						<align>center</align>
						<label>ENDS AT : $INFO[Player.FinishTime]</label>
						<font>notosans_16_bold</font>
						<textcolor>$VAR[color_osdmusic_secondary]</textcolor>
					</control>
				</control>
		</control>
		
		<control type="group">
			<animation effect="fade" start="100" end="0" time="350" condition="Window.IsActive(shutdownmenu)">conditional</animation>
	
			<!-- copy from bg building xml? - make include - usage headerbar,shutdownmenu,profiles -->
			<control type="group">
				<description>time and date weather</description>
				<centerleft>50%</centerleft>
				<top>50</top>
				<height>150</height>
				
				<control type="label">
					<width>100%</width>
					<height>25</height>
					<align>center</align>
					<info>System.Time</info>
					<font>notosans_20_regular</font>
					<textcolor>ff131313</textcolor>
				</control>
				<control type="group">
					<visible>[!String.Contains(Weather.Temperature,$LOCALIZE[503]) + [!String.IsEqual(Weather.fanartcode,na) + Weather.IsFetched]]</visible>
					<control type="image">
						<top>25</top>
						<height>50</height>
						<width>100%</width>
						<texture colordiffuse="ff131313">$INFO[Weather.FanartCode,resource://resource.images.weathericons.outline-hd/,.png]</texture>
						<aspectratio align="center">keep</aspectratio>
					</control>
					<control type="label">
						<top>75</top>
						<width>100%</width>
						<height>10</height>
						<align>center</align>
						<label>$INFO[Weather.Temperature]</label>
						<font>notosans_20_bold</font>
						<textcolor>ff131313</textcolor>
					</control>
				</control>
				
				<control type="label">
					<top>100</top>
					<width>100%</width>
					<height>20</height>
					<align>center</align>
					<info>System.Date</info>
					<font>notosans_16_bold</font>
					<textcolor>ff131313</textcolor>
				</control>
				
				
			
			</control>
			
			
			<!-- copy from loginscreen.xml - make include- usage ,profile, -->
			<control type="radiobutton" id="9000">
				<include content="Animation_Item_Focus" />
				<top>86%</top>
				<width>120</width>
				<height>120</height>
				<centerleft>50%</centerleft>
				<visible allowhiddenfocus="true">![Player.HasVideo | Player.HasGame | Player.HasAudio]</visible>
				<onfocus condition="Player.HasVideo | Player.HasGame | Player.HasAudio">SetFocus(605)</onfocus>
				
				<textureradioonfocus colordiffuse="$VAR[color_home_menu_item_fo]">icons/shutdown.png</textureradioonfocus>
				<textureradioofffocus colordiffuse="$VAR[color_home_menu_item_fo]">icons/shutdown.png</textureradioofffocus>
				<textureradioonnofocus colordiffuse="$VAR[color_home_menu_item_nf]">icons/shutdown.png</textureradioonnofocus>
				<textureradiooffnofocus colordiffuse="$VAR[color_home_menu_item_nf]">icons/shutdown.png</textureradiooffnofocus>
				
				<textoffsetx />
				<radiowidth>120</radiowidth>
				<radioheight>120</radioheight>
				<textureradioondisabled />
				<textureradiooffdisabled />
				<texturefocus />
				<texturenofocus />
				<focusedcolor />
				<textcolor />
				<label />
				<selected />
				<onup>5555</onup>
				<ondown>5555</ondown>
				<onleft>5555</onleft>
				<onright>5555</onright>
				<onclick>ActivateWindow(shutdownmenu)</onclick>
			</control>
			
			<control type="panel" id="5555">
				<orientation>vertical</orientation>
				<preloaditems>4</preloaditems>
				<scrolltime tween="quadratic">400</scrolltime>
				<centertop>52%</centertop>
				<centerleft>50%</centerleft>
				<!-- <include content="width" condition="Integer.IsGreater(Container(5555).NumItems,12)">
					<param name="width" value="1470" />
				</include>
				<include content="width" condition="Integer.IsGreater(Container(5555).NumItems,10) + Integer.IsLessOrEqual(Container(5555).NumItems,12)">
					<param name="width" value="1260" />
				</include>
				<include content="width" condition="Integer.IsGreater(Container(5555).NumItems,8) + Integer.IsLessOrEqual(Container(5555).NumItems,10)">
					<param name="width" value="1050" />
				</include>
				<include content="width" condition="Integer.IsLessOrEqual(Container(5555).NumItems,8)">
					<param name="width" value="840" />
				</include> -->
				<!-- <width>1680</width> 8 per row  greater 12 -->
				
				<!-- <width>1470</width> 7 per row  greater 12 -->
				<width>1260</width> 6 per row - greater 10 equal 12
				<!-- <width>1050</width> 5 per row - greater 8 equal 10 -->
				<!-- <width>840</width> 4 per row - equal 8 or less -->
				<height>680</height>
			<!-- get content as container on focus ?
			suggested movies,shows etc ? big tile fade vis?
				 -->
				<ondown condition="!$EXP[IsCurrentyPlayingCommon]">9000</ondown>
				<ondown condition="$EXP[IsCurrentyPlayingCommon]">605</ondown>
				
				<itemlayout height="340" width="210">
					
					<control type="group">
						<description>NEED A FIXED NUMBER - NOT LISTITEM BASED</description>
						<!-- <visible>integer.isequal(Container(5555).ListItem.Property(row_temp_test),1)</visible> -->
						<animation effect="fade" start="100" end="0" time="150" condition="Control.HasFocus(5556)">conditional</animation>
						<include content="home_mainmenutiles_layout">
							<param name="color1" value="ff131313" />
							<param name="color2" value="ffffffff" />
							<param name="color3" value="ff252525" />
						</include>
					</control>
					
				</itemlayout>
			
				<focusedlayout height="340" width="210">
				
					<control type="group">
						<include>rotatey_360</include>
						<control type="group">
							<!-- <visible>integer.isequal(Container(5555).ListItem.Property(row_temp_test),1)</visible> -->
							<animation effect="fade" start="100" end="0" time="150" condition="Control.HasFocus(5556)">conditional</animation>
							
							<include content="home_mainmenutiles_layout">
								<param name="color1" value="ffffffff" />
								<param name="color2" value="ff131313" />
								<param name="color3" value="ffffffff" />
							</include>
							
						</control>
						
					
					</control>
					
					
				</focusedlayout>
				<include content="home_mainmenu_content" />
			</control>
			
			
			<!-- auto submenu 
			wher to place and how to gain focus?
			
			no other way than split main menu into pieces 
			a)best
			main numitems,1-6
				sub
			main numitems,7-12
				sub
			main numitems,13-18
				sub
			main numitems,19-20(or change hardcoded from 20 to 25)
				sub
				
			b) if click focus and fade submenu in (may get issues with onback)
			-->
			<include content="Universal_Container" condition="Skin.HasSetting(home_tile_focus_submenu)">
				<param name="type" value="panel" />
				<param name="id" value="5556" />
				<param name="type_height" value="150" />
				<param name="type_pos_top" value="300" />
				<param name="layout_height" value="100" />
				<param name="layout_width" value="120" />
				<param name="itemheight" value="110" />
				<param name="itemwidth" value="110" />
				<param name="item_infotags_visible" value="false" />
				<param name="item_infotags_bgpanel_visible" value="false" />
				<param name="item_artwork_name" value="circle" />
				<param name="visible" value="!String.IsEmpty(Container(5555).ListItem.Property(submenu_containerpath))" />
				
				<animation effect="fade" start="100" end="0" condition="[!Integer.IsGreater(Container(5556).NumItems,0) | Container(5556).IsUpdating] | !Control.HasFocus(5556)">Conditional</animation>
						
				<description>width 14 items centered current default is 6 per row - later on use skinstring conditions - also static item need set prop hassubmenu by default in shortcut select window</description>
				
				 <animation effect="slide" start="0,0" end="60,0" time="0" condition="integer.isequal(Container(5556).NumItems,13)">conditional</animation>
				<animation effect="slide" start="0,0" end="120,0" time="0" condition="integer.isequal(Container(5556).NumItems,12)">conditional</animation>
				<animation effect="slide" start="0,0" end="180,0" time="0" condition="integer.isequal(Container(5556).NumItems,11)">conditional</animation>
				<animation effect="slide" start="0,0" end="240,0" time="0" condition="integer.isequal(Container(5556).NumItems,10)">conditional</animation>
				<animation effect="slide" start="0,0" end="300,0" time="0" condition="integer.isequal(Container(5556).NumItems,9)">conditional</animation>
				<animation effect="slide" start="0,0" end="360,0" time="0" condition="integer.isequal(Container(5556).NumItems,8)">conditional</animation>
				<animation effect="slide" start="0,0" end="420,0" time="0" condition="integer.isequal(Container(5556).NumItems,7)">conditional</animation>
				<animation effect="slide" start="0,0" end="480,0" time="0" condition="integer.isequal(Container(5556).NumItems,6)">conditional</animation>
				<animation effect="slide" start="0,0" end="540,0" time="0" condition="integer.isequal(Container(5556).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="600,0" time="0" condition="integer.isequal(Container(5556).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="660,0" time="0" condition="integer.isequal(Container(5556).NumItems,3)">conditional</animation>
				
				<animation effect="slide" start="0,0" end="0,350" time="0" condition="integer.isequal(Container(5555).row,0)">conditional</animation>
				
				<left>121</left>
				<right>121</right>
				<centerleft>50%</centerleft>
				<onback>5555</onback>
				<ondown>5555</ondown>
				<onup>5555</onup>
				<content target="$INFO[Container(5555).ListItem.Property(target)]">$INFO[Container(5555).ListItem.Property(submenu_containerpath)]</content>
			</include>
			
			<control type="group">
				<visible>Skin.HasSetting(home_tile_focus_submenu) + Control.HasFocus(5556)</visible>
				<top>222</top>
				<animation effect="slide" start="0,0" end="0,340" time="0" condition="integer.isequal(Container(5555).row,1)">conditional</animation>
				<animation effect="fade" start="0" end="100" time="250">VisibleChange</animation>
				
				<centerleft>50%</centerleft>
				<include content="home_mainmenutiles_layout">
					<param name="prefix" value="Container(5555)."/>
					<param name="color1" value="ffffffff" />
					<param name="color2" value="ff000000" />
					<param name="color3" value="ffffffff" />
				</include>
			</control>
			<control type="group">
				<animation effect="slide" start="0,0" end="0,350" time="0" condition="integer.isequal(Container(5555).row,0)">conditional</animation>
				<animation effect="fade" start="0" end="100" time="250">VisibleChange</animation>
				
				<visible>Control.HasFocus(5556)</visible>
				<control type="label">
					<align>center</align>
					<top>220</top>
					<label>$INFO[Container(5555).ListItem.Label]</label>
					<width>1900</width>
					<height>50</height>
					<font>montserrat_40_extrabold</font>
					<textcolor>grey</textcolor>
				</control>
				<control type="image">
					<top>425</top>
					<width>1900</width>
					<height>60</height>
					<texture colordiffuse="ff000000">colors/white50.png</texture>
				</control>
				<control type="label">
					<align>center</align>
					<top>430</top>
					<label>$INFO[Container(5556).ListItem.Label]</label>
					<width>1900</width>
					<height>50</height>
					<font>montserrat_40_extrabold</font>
					<textcolor>white</textcolor>
				</control>
			</control>
		</control>		
				
			
	</include>
	
	
	<include name="home_mainmenutiles_layout">
		<param name="prefix" />
		<definition>
		<width>200</width>
		<height>200</height>
		<control type="image">
			<texture colordiffuse="$PARAM[color1]">colors/white80.png</texture>
			<top>0</top>
			<aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
		</control>
		<control type="image">
			<bordersize>30</bordersize>
			<left>10</left>
			<width>190</width>
			<height>190</height>
			<texture background="true" colordiffuse="$PARAM[color2]">$INFO[$PARAM[prefix]ListItem.Art(thumb)]</texture>
			<aspectratio scalediffuse="true" align="left" aligny="top">scale</aspectratio>
		</control>
		<control type="image">
			<texture colordiffuse="$PARAM[color3]">colors/white80.png</texture>
			<top>205</top>
			<height>90</height>
			<aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
		</control>
		<control type="textbox">
			<top>205</top>
			<align>center</align>
			<aligny>center</aligny>
			<height>90</height>
			<label>$INFO[$PARAM[prefix]ListItem.Label]</label>
			<textcolor>$PARAM[color2]</textcolor>
		</control>
		</definition>
	</include>
	
	
	<include name="home_mainmenu_layout_verticalpanel">
		<control type="group">
			<control type="image">
				<description>vis if prop slide true</description>
				<visible>String.IsEqual(Window(Home).Property(menucontrol_active),home)</visible>
				<height>100%</height>
				<width>100%</width>
				<texture colordiffuse="$PARAM[itempanelcolor]">colors/white.png</texture>
			</control>
			<control type="image">
				<description>skinstring homemenu_item_[nr].icon</description>
				<height>80</height>
				<width>40</width>
				<right>25</right>
				<texture colordiffuse="$PARAM[itemcolor]">$INFO[ListItem.Icon]</texture>
				<aspectratio aligny="center">keep</aspectratio>
			</control>
			<control type="label">
				<left>20</left>
				<height>80</height>
				<right>100</right>
				<aligny>center</aligny>
				<align>right</align>
				<textcolor>$PARAM[itemcolor]</textcolor>
				<font>notosans_25_regular_l</font>
				<wrapmultiline>true</wrapmultiline>
				<label>$INFO[ListItem.Label]</label>
			</control>
			
			
		</control>
	
	</include>

	<include name="Menucontrol_Home_test1">
		<animation effect="slide" start="-450,0" end="0,0" time="300" tween="cubic" easing="inout">VisibleHidden</animation>
		<visible>ControlGroup(9000).HasFocus()</visible>
		<control type="image">
			<animation effect="slide" start="0,0" end="450,0" time="300" tween="cubic" easing="inout" condition="ControlGroup(9000).HasFocus()">conditional</animation>
			<animation effect="fade" start="100" end="0" time="150" condition="!ControlGroup(9000).HasFocus()">conditional</animation>
			
			<top>0</top>
			<bottom>0</bottom>
			<width>530</width>
			<left>-450</left>
			<texture colordiffuse="$VAR[color_home_menu_backgroundpanel]">colors/white.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>
		
		<!--
		<control type="group">
			<left>20</left>
			<control type="image">
				<top>0</top>
				<height>90</height>
				<width>150</width>
				<bottom>0</bottom>
				<texture colordiffuse="red">colors/white20.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="label">
				<top>0</top>
				<height>90</height>
				<width>530</width>
				<label>$VAR[color_home_menu_backgroundpanel]</label>
				<aspectratio>stretch</aspectratio>
			</control>
		</control>
		-->
		
		<control type="grouplist" id="9000">
			<description>need get cond vis content</description>
			<top>120</top>
			<bottom>1%</bottom>
			<width>465</width>
			<left>20</left>
			<itemgap>0</itemgap>
			<onup>9000</onup>
			<ondown>9000</ondown>
			
			<onright>SetFocus(5555)</onright>
			<onleft>SetFocus(5555)</onleft>
			<!-- diif colors global vs home ? params -->
			<include content="Menucontrol_Content_Navigation">
				
				
				<!-- <control type="button" id="902">
					<label>Gehe zu</label>
					<label2>sandbox window</label2>
					<include content="Menucontrol_Button">
						<param name="section" value="home" />
					</include>
					<onclick>ActivateWindow(1123)</onclick>
				</control> -->
				<control type="button" id="902">
					<label>Gehe zu</label>
					<label2>Music Hub</label2>
					<include content="Menucontrol_Button">
						<param name="section" value="home" />
					</include>
					<onclick>ActivateWindow(1110)</onclick>
				</control>
				
				
			</include>
			
			
				<control type="textbox" id="900">
					<textoffset>20</textoffset>
					<label>This is Just a Placeholder and not a final layout nor solution [CR],just  for easy Navigation by work on the skin</label>
					<font>notosans_23_regular_l</font>
					<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
					<wrapmultiline>true</wrapmultiline>
					<height>200</height>
				</control>
			
<!-- 
TVChannels 	pvr://channels/tv/<GROUPNAME> 	Replace <GROUPNAME> with the name of the specific tv channel group 	Kodi 19
TVGuide 	pvr://channels/tv/<GROUPNAME> 	Replace <GROUPNAME> with the name of the specific tv channel group 	Kodi 19
TVRecordings 	pvr://recordings/tv/active/<DIRECTORY>/ 	Replace <DIRECTORY> with the name of the recording directory to display
TVTimers 			
TVTimerRules 			
TVSearch 			
RadioChannels 	pvr://channels/radio/<GROUPNAME> 	Replace <GROUPNAME> with the name of the specific radio channel group 	Kodi 19
RadioGuide 	pvr://channels/radio/<GROUPNAME> 	Replace <GROUPNAME> with the name of the specific radio channel group 	Kodi 19
RadioRecordings 	pvr://recordings/radio/active/<DIRECTORY>/ 	Replace <DIRECTORY> with the name of the recording directory to display
RadioTimers 			
RadioTimerRules 			
RadioSearch
 
-->	
				
				<control type="textbox" id="910">
					<textoffset>20</textoffset>
					<label>video lib</label>
					<font>notosans_23_regular_l</font>
					<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
					<wrapmultiline>true</wrapmultiline>
					<height>100</height>
				</control>
				<include content="Universal_Container">
					<param name="type" value="panel" />
					<param name="id" value="911" />
					<param name="type_height" value="150" />
					<param name="layout_height" value="100" />
					<param name="layout_width" value="120" />
					<param name="itemheight" value="80" />
					<param name="itemwidth" value="80" />
					
					<param name="item_infotags_bgpanel_visible" value="false" />
					<param name="item_artwork_name" value="circle" />
					<param name="visible" value="Integer.IsGreater(Container(911).NumItems,0) | Container(911).IsUpdating" />
					<animation effect="fade" start="100" end="0" condition="!Integer.IsGreater(Container(911).NumItems,0) | Container(911).IsUpdating">Conditional</animation>
					<content target="videos">library://video</content>
				</include>
				
				<control type="textbox" id="912">
					<textoffset>20</textoffset>
					<label>music lib</label>
					<font>notosans_23_regular_l</font>
					<wrapmultiline>true</wrapmultiline>
					<height>100</height>
					<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
				</control>
				<include content="Universal_Container">
					<param name="type" value="panel" />
					<param name="id" value="913" />
					<param name="type_height" value="150" />
					<param name="layout_height" value="100" />
					<param name="layout_width" value="120" />
					<param name="itemheight" value="80" />
					<param name="itemwidth" value="80" />
					
					<param name="item_infotags_bgpanel_visible" value="false" />
					<param name="item_artwork_name" value="circle" />
					<param name="visible" value="Integer.IsGreater(Container(913).NumItems,0) | Container(913).IsUpdating" />
					<animation effect="fade" start="100" end="0" condition="!Integer.IsGreater(Container(913).NumItems,0) | Container(913).IsUpdating">Conditional</animation>
					<content target="music">library://music/</content>
				</include>
				
				<control type="textbox" id="914">
					<textoffset>20</textoffset>
					<label>musicvideos lib</label>
					<font>notosans_23_regular_l</font>
					<wrapmultiline>true</wrapmultiline>
					<height>100</height>
					<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
				</control>
				<include content="Universal_Container">
					<param name="type" value="panel" />
					<param name="id" value="915" />
					<param name="type_height" value="150" />
					<param name="layout_height" value="100" />
					<param name="layout_width" value="120" />
					<param name="itemheight" value="80" />
					<param name="itemwidth" value="80" />
					
					<param name="item_infotags_bgpanel_visible" value="false" />
					<param name="item_artwork_name" value="circle" />
					<param name="visible" value="Integer.IsGreater(Container(915).NumItems,0) | Container(915).IsUpdating" />
					<animation effect="fade" start="100" end="0" condition="!Integer.IsGreater(Container(915).NumItems,0) | Container(915).IsUpdating">Conditional</animation>
					<content target="videos">videodb://musicvideos/</content>
				</include>
				<control type="textbox" id="916">
					<textoffset>20</textoffset>
					<label>playlists ,video first</label>
					<font>notosans_23_regular_l</font>
					<wrapmultiline>true</wrapmultiline>
					<height>100</height>
					<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
				</control>
				<include content="Universal_Container">
					<param name="type" value="panel" />
					<param name="id" value="917" />
					<param name="type_height" value="150" />
					<param name="layout_height" value="100" />
					<param name="layout_width" value="120" />
					<param name="itemheight" value="80" />
					<param name="itemwidth" value="80" />
					
					<param name="item_infotags_bgpanel_visible" value="false" />
					<param name="item_artwork_name" value="circle" />
					<param name="visible" value="Integer.IsGreater(Container(917).NumItems,0) | Container(917).IsUpdating" />
					<animation effect="fade" start="100" end="0" condition="!Integer.IsGreater(Container(917).NumItems,0) | Container(917).IsUpdating">Conditional</animation>
					<content target="videos">special://videoplaylists/</content>
					<content target="music">special://musicplaylists/ </content>
				</include>
				<control type="textbox" id="918">
					<textoffset>20</textoffset>
					<label>video addons</label>
					<font>notosans_23_regular_l</font>
					<wrapmultiline>true</wrapmultiline>
					<height>100</height>
					<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
				</control>
				<include content="Universal_Container">
					<param name="type" value="panel" />
					<param name="id" value="919" />
					<param name="type_height" value="200" />
					<param name="layout_height" value="150" />
					<param name="layout_width" value="450" />
					<param name="itemheight" value="140" />
					<param name="itemwidth" value="440" />
					<param name="item_infotags_visible" value="false" />
					<param name="item_infotags_bgpanel_visible" value="false" />
					<param name="item_artwork_name" value="landscape" />
					<param name="visible" value="Integer.IsGreater(Container(919).NumItems,0) | Container(919).IsUpdating" />
					<animation effect="fade" start="100" end="0" condition="!Integer.IsGreater(Container(919).NumItems,0) | Container(919).IsUpdating">Conditional</animation>
					<content target="videos">addons://sources/video/</content>
				</include>
		</control>
	</include>

	<include name="menucontrol_home_iconpanel_left">
		<control type="group">
			<description>info panel right</description>
			<animation effect="slide" start="0" end="-400" easing="in" tween="quadratic" time="300" condition="String.IsEqual(Window(Home).Property(menucontrol_active),home)">conditional</animation>
			<right>-400</right>
			<width>400</width>
			<height>100%</height>	
			<orientation>horizontal</orientation>
			<itemgap>10</itemgap>
			<usecontrolcoords>true</usecontrolcoords>
			<align>left</align>
			<visible>![Skin.HasSetting(HideTimeDate_Header) + Skin.HasSetting(HideWeather_Header)]</visible>
			
			<control type="image">
				<animation effect="fade" start="100" end="80" time="250" condition="String.IsEmpty(Window(Home).Property(menucontrol_active))">conditional</animation>
				<bordersize>2,0,0,0</bordersize>
				<texture colordiffuse="$VAR[color_home_menu_backgroundpanel]">colors/white80.png</texture>
				<bordertexture border="0,0,1,0" diffuse="colors/white80.png" colordiffuse="$VAR[color_home_menu_accent]">diffuse/gradientvertical.png</bordertexture>
			</control>
			
			<control type="group">
				<description>time and date</description>
				<visible>!Skin.HasSetting(HideTimeDate_Header)</visible>
				<top>20</top>
				<width>380</width>
				<height>110</height>
				<control type="label">
					<width>100%</width>
					<height>50</height>
					<align>right</align>
					<info>System.Time</info>
					<font>roboto_70_thin</font>
					<textcolor>$VAR[color_header_text_accent]</textcolor>
				</control>
				<control type="label">
					<right>2</right>
					<top>60</top>
					<width>100%</width>
					<height>20</height>
					<align>right</align>
					<info>System.Date</info>
					<textcolor>$VAR[color_header_text_main]</textcolor>
				</control>
			</control>
				
			<control type="grouplist">
				<usecontrolcoords>true</usecontrolcoords>
				<orientation>vertical</orientation>
				<itemgap>10</itemgap>
				<description>weather</description>
				<visible>!Skin.HasSetting(HideWeather_Header) + [!String.Contains(Weather.Temperature,$LOCALIZE[503]) | [!String.IsEqual(Weather.fanartcode,na) + Weather.IsFetched]]</visible>
				<top>200</top>
				<width>400</width>
				<height>600</height>
				
				<control type="image">
					<height>260</height>
					<width>400</width>
					<texture colordiffuse="$VAR[color_header_text_main]">$INFO[Weather.FanartCode,resource://resource.images.weathericons.outline-hd/,.png]</texture>
					<aspectratio aligny="bottom" align="center">keep</aspectratio>
				</control>
				<control type="label">
					<width>400</width>
					<height>auto</height>
					<align>center</align>
					<label>$INFO[Weather.Temperature]</label>
					<font>notosans_52_bold</font>
					<textcolor>$VAR[color_header_text_main]</textcolor>
				</control>
			</control>
		</control>
		
		
		<control type="group">
			<description>menu panel left</description>
			<animation effect="slide" start="0" end="455" easing="in" tween="quadratic" time="300" condition="String.IsEqual(Window(Home).Property(menucontrol_active),home)">conditional</animation>
			<left>-455</left>
			<width>540</width>
			<height>100%</height>
			
			<control type="image">
				<description>backgroundpanel</description>
				<animation effect="fade" start="100" end="80" time="250" condition="String.IsEmpty(Window(Home).Property(menucontrol_active))">conditional</animation>
				<bordersize>0,0,3,0</bordersize>
				<texture colordiffuse="$VAR[color_home_menu_backgroundpanel]">colors/white.png</texture>
				<bordertexture border="0,0,1,0" colordiffuse="$VAR[color_home_menu_accent]">diffuse/gradientvertical.png</bordertexture>
			</control>
			
			<include condition="Skin.HasSetting(menucontrol_home_showprofiles)" content="menucontrol_profiles" />
			
			
			<control type="panel" id="9000">
				<top>300</top>
				<bottom>300</bottom>
				<aligny>center</aligny>
				<orientation>vertical</orientation>
				
				<onup condition="String.IsEqual(Window(Home).Property(menucontrol_active),home) + [Control.IsVisible(7777)]">7777</onup>
				<onup condition="[String.IsEqual(Window(Home).Property(menucontrol_active),home) + !Control.IsVisible(7777)] | !String.IsEqual(Window(Home).Property(menucontrol_active),home)">9000</onup>
				
				<ondown condition="String.IsEqual(Window(Home).Property(menucontrol_active),home) + Control.IsVisible(8888)">8888</ondown>
				<ondown condition="[String.IsEqual(Window(Home).Property(menucontrol_active),home) + !Control.IsVisible(8888)] | !String.IsEqual(Window(Home).Property(menucontrol_active),home)">9000</ondown> 
				
				<onright condition="String.IsEqual(Window(Home).Property(menucontrol_active),home)">ClearProperty(menucontrol_active,home)</onright>
				<onright>5555</onright>
				
				<onleft condition="!String.IsEqual(Window(Home).Property(menucontrol_active),home)">SetProperty(menucontrol_active,home,home)</onleft>		
				<onleft condition="String.IsEqual(Window(Home).Property(menucontrol_active),home)">8888</onleft>		
				
				<onback condition="!String.IsEqual(Window(Home).Property(menucontrol_active),home)">SetProperty(menucontrol_active,home,home)</onback>
				<onback condition="String.IsEqual(Window(Home).Property(menucontrol_active),home)">ClearProperty(menucontrol_active,home)</onback>
				
				<itemlayout height="80">
					<include content="home_mainmenu_layout_verticalpanel">
						<param name="itemcolor" value="$VAR[color_home_menu_item_nf]" />
						<param name="itempanelcolor" value="$VAR[color_home_menu_itempanel_nf]" />
					</include>
				</itemlayout>
				
				<focusedlayout height="80">
					<include content="home_mainmenu_layout_verticalpanel">
						<param name="itemcolor" value="$VAR[color_home_menu_item_fo]" />
						<param name="itempanelcolor" value="$VAR[color_home_menu_itempanel_fo]" />
					</include>
					<control type="image">
						<animation effect="zoom" start="0,100" end="100,100" time="200" center="auto" tween="quadratic" easing="out" reversible="false">Focus</animation>
						<width>57</width>
						<right>15</right>
						<bottom>4</bottom>
						<height>4</height>
						<texture colordiffuse="color_home_menu_accent">colors/white.png</texture>
					</control>
				</focusedlayout>
				<include content="home_mainmenu_content" />
			</control>
			
			<control type="panel" id="8888">
				<height>120</height>
				<bottom>100</bottom>
				<left>50</left>
				<orientation>vertical</orientation>
				<onup>9000</onup>
				<ondown>9000</ondown>
				<onright condition="String.IsEqual(Window(Home).Property(menucontrol_active),home)">ClearProperty(menucontrol_active,home)</onright>
				<onright>5555</onright>
				<onleft>9000</onleft>		
				
				<itemlayout height="30">
					<control type="label">
						<left>10</left>
						<label>$INFO[Listitem.label]</label>
						<height>20</height>
						<font>liberationsans_22_bold_light</font>
						<textcolor>$VAR[color_home_menu_item_nf]</textcolor>
					</control>
				</itemlayout>
				
				<focusedlayout height="30">
					<control type="label">
						<label>$INFO[Listitem.label]</label>
						<height>20</height>
						<left>20</left>
						<font>liberationsans_22_bold_light</font>
						<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
					</control>
					<control type="image">
						<include>Animation_Item_Focus</include>
						<width>11</width>
						<height>11</height>
						<left>0</left>
						<top>5</top>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="color_home_menu_accent">artworkdiffuse/circle.png</texture>
					</control>
				</focusedlayout>
				<include content="shutdownmenu_content" />
			</control>
		</control>
	</include>
</includes>
