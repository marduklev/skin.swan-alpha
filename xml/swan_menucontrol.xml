<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="viewselect_template">
		<control type="group" id="$PARAM[group_id]001">
			<height>275</height>
			
			<control type="image">
				<description>focus frame amd bg</description>
				<visible>ControlGroup($PARAM[group_id]).HasFocus()</visible>
				<bordersize>1</bordersize>
				<bordertexture border="2" colordiffuse="$VAR[color_lib_menu_item_fo]">frames/frame.png</bordertexture>
				<texture colordiffuse="$VAR[color_global_button_panel_nf]">colors/white.png</texture>
			</control>
			
			<control type="label">
				<description>view label</description>
				<left>485</left>
				<top>10</top>
				<height>50</height>
				<font>notosans_26_semibold</font>
				<textcolor>$VAR[color_lib_menu_item_fo]</textcolor>
				<label>[B]$PARAM[view_label][/B]</label>
			</control>
			
			<control type="group">
				<description>dimmed view id label big</description>
				<animation effect="fade" start="100" end="10" time="0" condition="true">conditional</animation>
				<left>1090</left>
				<top>50</top>
				<width>200</width>
				<height>100</height>
				<control type="label">
					<description>$LOCALIZE[560]</description>
					<width>50</width>
					<align>center</align>
					<font>notosans_24_bold_highlined</font>
					<textcolor>$VAR[color_lib_menu_item_fo]</textcolor>
					<label>[B]id[/B]</label>
				</control>
				<control type="label">
					<top>30</top>
					<width>200</width>
					<align>left</align>
					<left>35</left>
					<font>montserrat_90_bold</font>
					<textcolor>$VAR[color_lib_menu_item_fo]</textcolor>
					<label>[B]$NUMBER[$PARAM[view_id]][/B]</label>
				</control>
			</control>
			
			<control type="label">
				<description>function label bottom</description>
				<left>485</left>
				<top>190</top>
				<height>50</height>
				<font>notosans_21_semibold</font>
				<textcolor>$VAR[color_lib_menu_accent]</textcolor>
				<textcolor>$VAR[color_lib_menu_item_fo]</textcolor>
				<visible>ControlGroup($PARAM[group_id]).HasFocus() + [String.EndsWith(System.CurrentControlID,005) | String.EndsWith(System.CurrentControlID,006) | String.EndsWith(System.CurrentControlID,007)]</visible>
				<label>$INFO[System.CurrentControl]</label>
			</control>
			
			<control type="grouplist" id="$PARAM[group_id]">
				<description>buttons for options</description>
				<orientation>horizontal</orientation>
				
				<height>250</height>
				<left>20</left>
				<top>20</top>
				<itemgap>20</itemgap>
				<onleft>100060</onleft>
				<onright>$PARAM[group_id]005</onright>
				
				<onup condition="String.StartsWith(System.CurrentControlID,1001)">1015</onup>
				<onup condition="String.StartsWith(System.CurrentControlID,1002)">1001</onup>
				<onup condition="String.StartsWith(System.CurrentControlID,1003)">1002</onup>
				<onup condition="String.StartsWith(System.CurrentControlID,1004)">1003</onup>
				<onup condition="String.StartsWith(System.CurrentControlID,1005)">1004</onup>
				<onup condition="String.StartsWith(System.CurrentControlID,1006)">1005</onup>
				<onup condition="String.StartsWith(System.CurrentControlID,1007)">1006</onup>
				<onup condition="String.StartsWith(System.CurrentControlID,1008) + Control.IsVisible(1007)">1007</onup>
				<onup condition="String.StartsWith(System.CurrentControlID,1008) + !Control.IsVisible(1007)">1006</onup>
				<onup condition="String.StartsWith(System.CurrentControlID,1009)">1008</onup>
				<onup condition="String.StartsWith(System.CurrentControlID,1010)">1009</onup>
				<onup condition="String.StartsWith(System.CurrentControlID,1011)">1010</onup>
				<onup condition="String.StartsWith(System.CurrentControlID,1012)">1011</onup>
				<onup condition="String.StartsWith(System.CurrentControlID,1013)">1012</onup>
				<onup condition="String.StartsWith(System.CurrentControlID,1014)">1013</onup>
				<onup condition="String.StartsWith(System.CurrentControlID,1015) + Control.IsVisible(1014)">1014</onup>
				<onup condition="String.StartsWith(System.CurrentControlID,1015) + !Control.IsVisible(1014)">1013</onup>
				
				<ondown condition="String.StartsWith(System.CurrentControlID,1001)">1002</ondown>
				<ondown condition="String.StartsWith(System.CurrentControlID,1002)">1003</ondown>
				<ondown condition="String.StartsWith(System.CurrentControlID,1003)">1004</ondown>
				<ondown condition="String.StartsWith(System.CurrentControlID,1004)">1005</ondown>
				<ondown condition="String.StartsWith(System.CurrentControlID,1005)">1006</ondown>
				<ondown condition="String.StartsWith(System.CurrentControlID,1006) + Control.IsVisible(1007)">1007</ondown>
				<ondown condition="String.StartsWith(System.CurrentControlID,1006) + !Control.IsVisible(1007)">1008</ondown>
				<ondown condition="String.StartsWith(System.CurrentControlID,1007)">1008</ondown>
				<ondown condition="String.StartsWith(System.CurrentControlID,1008)">1009</ondown>
				<ondown condition="String.StartsWith(System.CurrentControlID,1009)">1010</ondown>
				<ondown condition="String.StartsWith(System.CurrentControlID,1010)">1011</ondown>
				<ondown condition="String.StartsWith(System.CurrentControlID,1011)">1012</ondown>
				<ondown condition="String.StartsWith(System.CurrentControlID,1012)">1013</ondown>
				<ondown condition="String.StartsWith(System.CurrentControlID,1013) + Control.IsVisible(1014)">1014</ondown>
				<ondown condition="String.StartsWith(System.CurrentControlID,1013) + !Control.IsVisible(1014)">1015</ondown>
				<ondown condition="String.StartsWith(System.CurrentControlID,1014)">1015</ondown>
				<ondown condition="String.StartsWith(System.CurrentControlID,1015)">1001</ondown>
				
					
				<control type="image" id="$PARAM[group_id]002">
					<description>preview image</description>
					<width>382</width>
					<height>225</height>
					<aspectratio align="center">keep</aspectratio>
					<bordersize>3</bordersize>
					<bordertexture colordiffuse="$VAR[color_lib_menu_item_fo]">colors/white.png</bordertexture>
					<texture>special://skin/extras/views/$PARAM[view_id].png</texture>
					<animation effect="fade" start="100" end="40" condition="[String.IsEqual(Window(home).Property(view_disable_mediawindow),music) + !String.IsEmpty(Skin.String(music_disabled_view_$PARAM[view_id]))] | [String.IsEqual(Window(home).Property(view_disable_mediawindow),videos) + !String.IsEmpty(Skin.String(videos_disabled_view_$PARAM[view_id]))]">conditional</animation>
				</control>
				
				<include content="spacer_w">
					<param name="gap" value="50" />
					<param name="id" value="$PARAM[group_id]003" />
				</include>
				
				<control type="button" id="$PARAM[group_id]005">
					<description>set viewmode $LOCALIZE[21480], may use with alarm to delay Container.SetViewMode + SetFocus</description>
					<visible>Window.IsMedia</visible>
					<top>70</top>
					<width>75</width>
					<height>75</height>
					<texturefocus colordiffuse="$VAR[color_lib_menu_item_fo]">icons/checkbox.png</texturefocus>
					<texturenofocus colordiffuse="$VAR[color_lib_menu_item_nf]">icons/checkbox.png</texturenofocus>
					<label>Use View Type $PARAM[view_id]</label>
					<focusedcolor />
					<textcolor />
					<disabledcolor />
					<invalidcolor />
					<onclick>Dialog.Close(1105,true)</onclick>
					<onclick>ClearProperty(menucontrol_active,home)</onclick>
					<onclick>Container.SetViewMode($PARAM[view_id])</onclick>
					<onclick>SetFocus($PARAM[view_id])</onclick>
				</control>
				
				<control type="togglebutton" id="$PARAM[group_id]006">
					<top>70</top>
					<width>75</width>
					<height>75</height>
					<usealttexture>
					[String.IsEqual(Window(home).Property(view_disable_mediawindow),videos) + 
						   [String.IsEqual(skin.string(view_locked_movies),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_sets),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_tvshows),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_seasons),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_episodes),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_musicvideos),$PARAM[view_id]) |
							String.IsEqual(skin.string(view_locked_artists),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_albums),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_actors),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_directors),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_sources),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_tags),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_genres),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_years),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_studios),$PARAM[view_id]) |
							String.IsEqual(skin.string(view_locked_countries),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_playlists),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_images),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_livetv),$PARAM[view_id])]]
							| 
					[String.IsEqual(Window(home).Property(view_disable_mediawindow),music) + 
						   [String.IsEqual(skin.string(view_locked_musicvideos),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_artists),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_albums),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_songs),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_roles),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_directors),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_sources),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_tags),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_genres),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_years),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_studios),$PARAM[view_id]) |
							String.IsEqual(skin.string(view_locked_playlists),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_images),$PARAM[view_id])]]
							|
					[String.IsEqual(Window(home).Property(view_disable_mediawindow),pictures) + String.IsEqual(skin.string(view_locked_images),$PARAM[view_id])]
							|
					[String.IsEqual(Window(home).Property(view_disable_mediawindow),games) + String.IsEqual(skin.string(view_locked_games),$PARAM[view_id])]
							|
							String.IsEqual(skin.string(view_locked_listing),$PARAM[view_id]) |
							String.IsEqual(skin.string(view_locked_files),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_addons),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_mixed),$PARAM[view_id]) |
							String.IsEqual(skin.string(view_locked_unknown),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_plugins),$PARAM[view_id])
					</usealttexture>
					<texturefocus colordiffuse="$VAR[color_lib_menu_item_fo]">icons/unlocked.png</texturefocus>
					<texturenofocus colordiffuse="$VAR[color_lib_menu_item_nf]">icons/unlocked.png</texturenofocus>
					<alttexturefocus colordiffuse="$VAR[color_lib_menu_item_fo]">icons/locked.png</alttexturefocus>
					<alttexturenofocus colordiffuse="$VAR[color_lib_menu_item_nf]">icons/locked.png</alttexturenofocus>
					<label>Lock View [B]$PARAM[view_id][/B] in [B][I]Content Containers[/I][/B]</label>
					<altlabel>Change Locking of View [B]$PARAM[view_id][/B] for [B][I]Media Content Containers[/I][/B]</altlabel>
					<focusedcolor />
					<textcolor />
					<onclick condition="String.IsEmpty(window(home).property($PARAM[group_id]008))">SetFocus($PARAM[group_id]008)</onclick>
					<onclick condition="!String.IsEmpty(window(home).property($PARAM[group_id]008))">ClearProperty($PARAM[group_id]008,home)</onclick>
				</control>
				
				<control type="togglebutton" id="$PARAM[group_id]007">
					<visible>$PARAM[view_disableable]</visible>
					<visible>!String.Contains(Control.GetLabel($PARAM[group_id]006),Change Locking of View)</visible>
					
					<focusedcolor />
					<textcolor />
					<disabledcolor />
					
					<top>70</top>
					<width>75</width>
					<height>75</height>
					<enable>!String.Contains(Control.GetLabel($PARAM[group_id]006),Change Locking of View)</enable>
					<label>$INFO[Window(home).Property(view_disable_mediawindow),Disable View [B]$PARAM[view_id][/B] for [UPPERCASE][B][I],[/I][/B][/UPPERCASE]]  windows</label>
					<altlabel>$INFO[Window(home).Property(view_disable_mediawindow),Enable View [B]$PARAM[view_id][/B] for [UPPERCASE][B][I],[/I][/B][/UPPERCASE]]  windows</altlabel>
					
					<texturefocus colordiffuse="$VAR[color_lib_menu_item_fo]">icons/viewenable.png</texturefocus>
					<texturenofocus colordiffuse="$VAR[color_lib_menu_item_nf]">icons/viewenable.png</texturenofocus>
					<alttexturefocus colordiffuse="$VAR[color_lib_menu_item_fo]">icons/viewdisable.png</alttexturefocus>
					<alttexturenofocus colordiffuse="$VAR[color_lib_menu_item_nf]">icons/viewdisable.png</alttexturenofocus>
					<include condition="String.IsEqual(Window(home).Property(view_disable_mediawindow),videos)" content="viewselect_disable_mediacontent">
						<param name="view_window" value="videos" />
						<param name="view_container_id" value="$PARAM[view_id]" />
					</include>
					<include condition="String.IsEqual(Window(home).Property(view_disable_mediawindow),music)" content="viewselect_disable_mediacontent">
						<param name="view_window" value="music" />
						<param name="view_container_id" value="$PARAM[view_id]" />
					</include>
					<include condition="String.IsEqual(Window(home).Property(view_disable_mediawindow),pictures)" content="viewselect_disable_mediacontent">
						<param name="view_window" value="pictures" />
						<param name="view_container_id" value="$PARAM[view_id]" />
					</include>
					<include condition="String.IsEqual(Window(home).Property(view_disable_mediawindow),games)" content="viewselect_disable_mediacontent">
						<param name="view_window" value="games" />
						<param name="view_container_id" value="$PARAM[view_id]" />
					</include>
				</control>
			</control>
			<control type="panel" id="$PARAM[group_id]008">
				<left>485</left>
				<right>40</right>
				<top>175</top>
				<height>100</height>
				<orientation>horizontal</orientation>
				<onfocus>SetProperty($PARAM[group_id]008,fade,home)</onfocus>
				<onup>$PARAM[group_id]006</onup>
				<onup>ClearProperty($PARAM[group_id]008,home)</onup>
				<ondown>$PARAM[group_id]006</ondown>
				<ondown>ClearProperty($PARAM[group_id]008,home)</ondown>		
				<onback>$PARAM[group_id]006</onback>
				<onback>ClearProperty($PARAM[group_id]008,home)</onback>
				
				<animation effect="fade" start="0" end="100" time="250" condition="String.IsEqual(Window(home).Property($PARAM[group_id]008),fade)">conditional</animation>
				<animation effect="fade" start="100" end="0" time="250" condition="!String.IsEqual(Window(home).Property($PARAM[group_id]008),fade)">conditional</animation>
				<description>mostly a 'soft'locking (linked content to viewid) will be stored in .db file , some addons also provide addon settings to force a view id</description>
				<orientation>horizontal</orientation>
				
				<itemlayout height="50" width="170">
					<control type="group">
						<centerleft>50%</centerleft>
						<centertop>50%</centertop>
						<width>155</width>
						<height>40</height>
						<control type="image">
							<visible>!String.IsEqual(listitem.label2,$PARAM[view_id])</visible>
							<texture colordiffuse="$VAR[color_lib_menu_item_fo]">colors/white20.png</texture>
						</control>
						<control type="image">
							<visible>String.IsEqual(listitem.label2,$PARAM[view_id])</visible>
							<texture colordiffuse="$VAR[color_lib_menu_accent]">colors/white.png</texture>
						</control>
						<control type="label">
							<font>notosans_16_bold</font>
							<left>7</left>
							<right>7</right>
							<scroll>false</scroll>
							<align>center</align>
							<textcolor>$VAR[color_lib_menu_backgroundpanel]</textcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
					</control>
				</itemlayout>
				<focusedlayout height="50" width="170">
					<control type="image">
						<width>170</width>
						<height>50</height>
						<texture colordiffuse="$VAR[color_lib_menu_item_fo]">artworkdiffuse_unthemed/thumbborder.png</texture>
						<centerleft>50%</centerleft>
					</control>
					<control type="group">
						<centerleft>50%</centerleft>
						<centertop>50%</centertop>
						<width>155</width>
						<height>40</height>
						<control type="image">
							<visible>!String.IsEqual(listitem.label2,$PARAM[view_id])</visible>
							<texture colordiffuse="$VAR[color_lib_menu_item_fo]">colors/white20.png</texture>
						</control>
						<control type="image">
							<visible>String.IsEqual(listitem.label2,$PARAM[view_id])</visible>
							<texture colordiffuse="$VAR[color_lib_menu_accent]">colors/white.png</texture>
						</control>
						<control type="label">
							<font>notosans_16_bold</font>
							<left>7</left>
							<right>7</right>
							<scroll>true</scroll>
							<align>center</align>
							<textcolor>$VAR[color_lib_menu_backgroundpanel]</textcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
					</control>
				</focusedlayout>
				 <!-- not adjusted for new infopanel views + !String.StartsWith(System.CurrentControlID,1011) + !String.StartsWith(System.CurrentControlID,1012) + !String.StartsWith(System.CurrentControlID,1013) + !String.StartsWith(System.CurrentControlID,1014) -->
				<content>
					<item>
						<visible>string.isequal(window(home).property(view_disable_mediawindow),videos)</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007)</visible>
						<label>20342</label>
						<label2>$INFO[skin.string(view_locked_movies)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_movies)) | [!String.IsEqual(skin.string(view_locked_movies),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_movies))]">Skin.SetString(view_locked_movies,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_movies),$PARAM[view_id])">Skin.Reset(view_locked_movies)</onclick>
					</item>
					<item>
						<visible>string.isequal(window(home).property(view_disable_mediawindow),videos)</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007)</visible>
						<label>20434</label>
						<label2>$INFO[skin.string(view_locked_sets)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_sets)) | [!String.IsEqual(skin.string(view_locked_sets),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_sets))]">Skin.SetString(view_locked_sets,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_sets),$PARAM[view_id])">Skin.Reset(view_locked_sets)</onclick>
					</item>
					<item>
						<visible>string.isequal(window(home).property(view_disable_mediawindow),videos)</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007)</visible>
						<label>20343</label>
						<label2>$INFO[skin.string(view_locked_tvshows)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_tvshows)) | [!String.IsEqual(skin.string(view_locked_tvshows),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_tvshows))]">Skin.SetString(view_locked_tvshows,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_tvshows),$PARAM[view_id])">Skin.Reset(view_locked_tvshows)</onclick>
					</item>
					<item>
						<visible>string.isequal(window(home).property(view_disable_mediawindow),videos)</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1006)</visible>
						<label>36905</label>
						<label2>$INFO[skin.string(view_locked_seasons)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_seasons)) | [!String.IsEqual(skin.string(view_locked_seasons),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_seasons))]">Skin.SetString(view_locked_seasons,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_seasons),$PARAM[view_id])">Skin.Reset(view_locked_seasons)</onclick>
					</item>
					<item>
						<visible>string.isequal(window(home).property(view_disable_mediawindow),videos)</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007) + !String.StartsWith(System.CurrentControlID,1009) + !String.StartsWith(System.CurrentControlID,1011) + !String.StartsWith(System.CurrentControlID,1012) + !String.StartsWith(System.CurrentControlID,1013) + !String.StartsWith(System.CurrentControlID,1014)</visible>
						<label>20360</label>
						<label2>$INFO[skin.string(view_locked_episodes)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_episodes)) | [!String.IsEqual(skin.string(view_locked_episodes),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_episodes))]">Skin.SetString(view_locked_episodes,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_episodes),$PARAM[view_id])">Skin.Reset(view_locked_episodes)</onclick>
					</item>
					<item>
						<visible>string.isequal(window(home).property(view_disable_mediawindow),videos) | string.isequal(window(home).property(view_disable_mediawindow),music)</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007)</visible>
						<label>20389</label>
						<label2>$INFO[skin.string(view_locked_musicvideos)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_musicvideos)) | [!String.IsEqual(skin.string(view_locked_musicvideos),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_musicvideos))]">Skin.SetString(view_locked_musicvideos,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_musicvideos),$PARAM[view_id])">Skin.Reset(view_locked_musicvideos)</onclick>
					</item>
					<item>
						<visible>string.isequal(window(home).property(view_disable_mediawindow),videos) | string.isequal(window(home).property(view_disable_mediawindow),music)</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007)</visible>
						<label>133</label>
						<label2>$INFO[skin.string(view_locked_artists)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_artists)) | [!String.IsEqual(skin.string(view_locked_artists),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_artists))]">Skin.SetString(view_locked_artists,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_artists),$PARAM[view_id])">Skin.Reset(view_locked_artists)</onclick>
					</item>
					<item>
						<visible>string.isequal(window(home).property(view_disable_mediawindow),videos) | string.isequal(window(home).property(view_disable_mediawindow),music)</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007)</visible>
						<label>132</label>
						<label2>$INFO[skin.string(view_locked_albums)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_albums)) | [!String.IsEqual(skin.string(view_locked_albums),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_albums))]">Skin.SetString(view_locked_albums,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_albums),$PARAM[view_id])">Skin.Reset(view_locked_albums)</onclick>
					</item>
					<item>
						<visible>string.isequal(window(home).property(view_disable_mediawindow),music)</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007) + !String.StartsWith(System.CurrentControlID,1009) + !String.StartsWith(System.CurrentControlID,1011) + !String.StartsWith(System.CurrentControlID,1012) + !String.StartsWith(System.CurrentControlID,1013) + !String.StartsWith(System.CurrentControlID,1014)</visible>
						<label>134</label>
						<label2>$INFO[skin.string(view_locked_songs)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_songs)) | [!String.IsEqual(skin.string(view_locked_songs),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_songs))]">Skin.SetString(view_locked_songs,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_songs),$PARAM[view_id])">Skin.Reset(view_locked_songs)</onclick>
					</item>
					<item>
						<visible>string.isequal(window(home).property(view_disable_mediawindow),videos) | string.isequal(window(home).property(view_disable_mediawindow),music)</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007) + !String.StartsWith(System.CurrentControlID,1009) + !String.StartsWith(System.CurrentControlID,1011) + !String.StartsWith(System.CurrentControlID,1012) + !String.StartsWith(System.CurrentControlID,1013) + !String.StartsWith(System.CurrentControlID,1014)</visible>
						<label>1214</label>
						<label2>$INFO[skin.string(view_locked_files)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_files)) | [!String.IsEqual(skin.string(view_locked_files),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_files))]">Skin.SetString(view_locked_files,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_files),$PARAM[view_id])">Skin.Reset(view_locked_files)</onclick>
					</item>
					<item>
						<visible>string.isequal(window(home).property(view_disable_mediawindow),videos) | string.isequal(window(home).property(view_disable_mediawindow),music)</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007) + !String.StartsWith(System.CurrentControlID,1009) + !String.StartsWith(System.CurrentControlID,1010) + !String.StartsWith(System.CurrentControlID,1011) + !String.StartsWith(System.CurrentControlID,1012) + !String.StartsWith(System.CurrentControlID,1013) + !String.StartsWith(System.CurrentControlID,1014)</visible>
						<label>39031</label>
						<label2>$INFO[skin.string(view_locked_sources)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_sources)) | [!String.IsEqual(skin.string(view_locked_sources),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_sources))]">Skin.SetString(view_locked_sources,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_sources),$PARAM[view_id])">Skin.Reset(view_locked_sources)</onclick>
					</item>
					<item>
						<visible>string.isequal(window(home).property(view_disable_mediawindow),videos)</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007) + !String.StartsWith(System.CurrentControlID,1009) + !String.StartsWith(System.CurrentControlID,1011) + !String.StartsWith(System.CurrentControlID,1012) + !String.StartsWith(System.CurrentControlID,1013) + !String.StartsWith(System.CurrentControlID,1014)</visible>
						<label>344</label>
						<label2>$INFO[skin.string(view_locked_actors)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_actors)) | [!String.IsEqual(skin.string(view_locked_actors),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_actors))]">Skin.SetString(view_locked_actors,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_actors),$PARAM[view_id])">Skin.Reset(view_locked_actors)</onclick>
					</item>
					<item>
						<visible>string.isequal(window(home).property(view_disable_mediawindow),videos)</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007) + !String.StartsWith(System.CurrentControlID,1009) + !String.StartsWith(System.CurrentControlID,1011) + !String.StartsWith(System.CurrentControlID,1012) + !String.StartsWith(System.CurrentControlID,1013) + !String.StartsWith(System.CurrentControlID,1014)</visible>
						<label>29994</label>
						<label2>$INFO[skin.string(view_locked_roles)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_roles)) | [!String.IsEqual(skin.string(view_locked_roles),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_roles))]">Skin.SetString(view_locked_roles,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_roles),$PARAM[view_id])">Skin.Reset(view_locked_roles)</onclick>
					</item>
					<item>
						<visible>string.isequal(window(home).property(view_disable_mediawindow),videos) | string.isequal(window(home).property(view_disable_mediawindow),music)</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007) + !String.StartsWith(System.CurrentControlID,1009) + !String.StartsWith(System.CurrentControlID,1011) + !String.StartsWith(System.CurrentControlID,1012) + !String.StartsWith(System.CurrentControlID,1013) + !String.StartsWith(System.CurrentControlID,1014)</visible>
						<label>20348</label>
						<label2>$INFO[skin.string(view_locked_directors)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_directors)) | [!String.IsEqual(skin.string(view_locked_directors),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_directors))]">Skin.SetString(view_locked_directors,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_directors),$PARAM[view_id])">Skin.Reset(view_locked_directors)</onclick>
					</item>
					<item>
						<visible>string.isequal(window(home).property(view_disable_mediawindow),videos) | string.isequal(window(home).property(view_disable_mediawindow),music)</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007) + !String.StartsWith(System.CurrentControlID,1009) + !String.StartsWith(System.CurrentControlID,1011) + !String.StartsWith(System.CurrentControlID,1012) + !String.StartsWith(System.CurrentControlID,1013) + !String.StartsWith(System.CurrentControlID,1014)</visible>
						<label>20459</label>
						<label2>$INFO[skin.string(view_locked_tags)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_tags)) | [!String.IsEqual(skin.string(view_locked_tags),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_tags))]">Skin.SetString(view_locked_tags,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_tags),$PARAM[view_id])">Skin.Reset(view_locked_tags)</onclick>
					</item>
					<item>
						<visible>string.isequal(window(home).property(view_disable_mediawindow),videos) | string.isequal(window(home).property(view_disable_mediawindow),music)</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007) + !String.StartsWith(System.CurrentControlID,1009) + !String.StartsWith(System.CurrentControlID,1011) + !String.StartsWith(System.CurrentControlID,1012) + !String.StartsWith(System.CurrentControlID,1013) + !String.StartsWith(System.CurrentControlID,1014)</visible>
						<label>135</label>
						<label2>$INFO[skin.string(view_locked_genres)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_genres)) | [!String.IsEqual(skin.string(view_locked_genres),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_genres))]">Skin.SetString(view_locked_genres,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_genres),$PARAM[view_id])">Skin.Reset(view_locked_genres)</onclick>
					</item>
					<item>
						<visible>string.isequal(window(home).property(view_disable_mediawindow),videos) | string.isequal(window(home).property(view_disable_mediawindow),music)</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007) + !String.StartsWith(System.CurrentControlID,1009) + !String.StartsWith(System.CurrentControlID,1011) + !String.StartsWith(System.CurrentControlID,1012) + !String.StartsWith(System.CurrentControlID,1013) + !String.StartsWith(System.CurrentControlID,1014)</visible>
						<label>652</label>
						<label2>$INFO[skin.string(view_locked_years)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_years)) | [!String.IsEqual(skin.string(view_locked_years),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_years))]">Skin.SetString(view_locked_years,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_years),$PARAM[view_id])">Skin.Reset(view_locked_years)</onclick>
					</item>
					<item>
						<visible>string.isequal(window(home).property(view_disable_mediawindow),videos) | string.isequal(window(home).property(view_disable_mediawindow),music)</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007) + !String.StartsWith(System.CurrentControlID,1009) + !String.StartsWith(System.CurrentControlID,1011) + !String.StartsWith(System.CurrentControlID,1012) + !String.StartsWith(System.CurrentControlID,1013) + !String.StartsWith(System.CurrentControlID,1014)</visible>
						<label>20388</label>
						<label2>$INFO[skin.string(view_locked_studios)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_studios)) | [!String.IsEqual(skin.string(view_locked_studios),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_studios))]">Skin.SetString(view_locked_studios,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_studios),$PARAM[view_id])">Skin.Reset(view_locked_studios)</onclick>
					</item>
					<item>
						<visible>string.isequal(window(home).property(view_disable_mediawindow),videos)</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007) + !String.StartsWith(System.CurrentControlID,1009) + !String.StartsWith(System.CurrentControlID,1011) + !String.StartsWith(System.CurrentControlID,1012) + !String.StartsWith(System.CurrentControlID,1013) + !String.StartsWith(System.CurrentControlID,1014)</visible>
						<label>20451</label>
						<label2>$INFO[skin.string(view_locked_countries)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_countries)) | [!String.IsEqual(skin.string(view_locked_countries),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_countries))]">Skin.SetString(view_locked_countries,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_countries),$PARAM[view_id])">Skin.Reset(view_locked_countries)</onclick>
					</item>
					<item>
						<visible>string.isequal(window(home).property(view_disable_mediawindow),videos) | string.isequal(window(home).property(view_disable_mediawindow),music)</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007) + !String.StartsWith(System.CurrentControlID,1009) + !String.StartsWith(System.CurrentControlID,1011) + !String.StartsWith(System.CurrentControlID,1012) + !String.StartsWith(System.CurrentControlID,1013) + !String.StartsWith(System.CurrentControlID,1014)</visible>
						<label>136</label>
						<label2>$INFO[skin.string(view_locked_playlists)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_playlists)) | [!String.IsEqual(skin.string(view_locked_playlists),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_playlists))]">Skin.SetString(view_locked_playlists,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_playlists),$PARAM[view_id])">Skin.Reset(view_locked_playlists)</onclick>
					</item>
					<item>
						<visible>string.isequal(window(home).property(view_disable_mediawindow),videos)</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007) + !String.StartsWith(System.CurrentControlID,1009) + !String.StartsWith(System.CurrentControlID,1011) + !String.StartsWith(System.CurrentControlID,1012) + !String.StartsWith(System.CurrentControlID,1013) + !String.StartsWith(System.CurrentControlID,1014)</visible>
						<label>LiveTV (htsp tvheadend )</label>
						<label2>$INFO[skin.string(view_locked_livetv)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_livetv)) | [!String.IsEqual(skin.string(view_locked_livetv),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_livetv))]">Skin.SetString(view_locked_livetv,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_livetv),$PARAM[view_id])">Skin.Reset(view_locked_livetv)</onclick>
					</item>
					<item>
						<visible>string.isequal(window(home).property(view_disable_mediawindow),games)</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007) + !String.StartsWith(System.CurrentControlID,1009)</visible>
						<label>15016</label>
						<label2>$INFO[skin.string(view_locked_games)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_games)) | [!String.IsEqual(skin.string(view_locked_games),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_games))]">Skin.SetString(view_locked_games,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_games),$PARAM[view_id])">Skin.Reset(view_locked_games)</onclick>
					</item>
					<item>
						<visible>$EXP[viewselect_locking_allMedia]</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007) + !String.StartsWith(System.CurrentControlID,1009) + !String.StartsWith(System.CurrentControlID,1011) + !String.StartsWith(System.CurrentControlID,1012) + !String.StartsWith(System.CurrentControlID,1013) + !String.StartsWith(System.CurrentControlID,1014)</visible>
						<label>24001</label>
						<label2>$INFO[skin.string(view_locked_addons)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_addons)) | [!String.IsEqual(skin.string(view_locked_addons),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_addons))]">Skin.SetString(view_locked_addons,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_addons),$PARAM[view_id])">Skin.Reset(view_locked_addons)</onclick>
					</item>
					<item>
						<visible>$EXP[viewselect_locking_allMedia]</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007) + !String.StartsWith(System.CurrentControlID,1009)</visible>
						<label>20395</label>
						<label2>$INFO[skin.string(view_locked_mixed)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_mixed)) | [!String.IsEqual(skin.string(view_locked_mixed),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_mixed))]">Skin.SetString(view_locked_mixed,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_mixed),$PARAM[view_id])">Skin.Reset(view_locked_mixed)</onclick>
					</item>
					<item>
						<visible>$EXP[viewselect_locking_allMedia]</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007) + !String.StartsWith(System.CurrentControlID,1009) + !String.StartsWith(System.CurrentControlID,1011) + !String.StartsWith(System.CurrentControlID,1012) + !String.StartsWith(System.CurrentControlID,1013) + !String.StartsWith(System.CurrentControlID,1014)</visible>
						<label>13205</label>
						<label2>$INFO[skin.string(view_locked_unknown)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_unknown)) | [!String.IsEqual(skin.string(view_locked_unknown),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_unknown))]">Skin.SetString(view_locked_unknown,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_unknown),$PARAM[view_id])">Skin.Reset(view_locked_unknown)</onclick>
					</item>
					<item>
						<visible>$EXP[viewselect_locking_allMedia]</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007) + !String.StartsWith(System.CurrentControlID,1009)</visible>
						<label>10001</label>
						<label2>$INFO[skin.string(view_locked_plugins)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_plugins)) | [!String.IsEqual(skin.string(view_locked_plugins),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_plugins))]">Skin.SetString(view_locked_plugins,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_plugins),$PARAM[view_id])">Skin.Reset(view_locked_plugins)</onclick>
					</item>
					<item>
						<visible>$EXP[viewselect_locking_allMedia]</visible>
						<visible>!String.StartsWith(System.CurrentControlID,1007) + !String.StartsWith(System.CurrentControlID,1009)</visible>
						<label>10002</label>
						<label2>$INFO[skin.string(view_locked_images)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_images)) | [!String.IsEqual(skin.string(view_locked_images),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_images))]">Skin.SetString(view_locked_images,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_images),$PARAM[view_id])">Skin.Reset(view_locked_images)</onclick>
					</item>
					<item>
						<visible>!String.StartsWith(System.CurrentControlID,1006) + !String.StartsWith(System.CurrentControlID,1007)</visible>
						<label>undefined (e.g. root listings)</label>
						<label2>$INFO[skin.string(view_locked_listing)]</label2>
						<onclick condition="String.IsEmpty(skin.string(view_locked_listing)) | [!String.IsEqual(skin.string(view_locked_listing),$PARAM[view_id]) + !String.IsEmpty(skin.string(view_locked_listing))]">Skin.SetString(view_locked_listing,$PARAM[view_id])</onclick>
						<onclick condition="String.IsEqual(skin.string(view_locked_listing),$PARAM[view_id])">Skin.Reset(view_locked_listing)</onclick>
					</item>
					
				</content>
			</control>
		</control>
	</include>
	
	<include name="viewselect_disable_mediacontent">
		<usealttexture>!String.IsEmpty(Skin.String($PARAM[view_window]_disabled_view_$PARAM[view_container_id])) | String.IsEqual(Skin.String($PARAM[view_window]_disabled_view_$PARAM[view_container_id]),isdisabled)</usealttexture>
		<onclick condition="String.IsEmpty(Skin.String($PARAM[view_window]_disabled_view_$PARAM[view_container_id])) + String.IsEqual(Window(home).Property(view_disable_mediawindow),$PARAM[view_window])">Skin.SetString($PARAM[view_window]_disabled_view_$PARAM[view_container_id],isdisabled)</onclick>
		<onclick condition="!String.IsEmpty(Skin.String($PARAM[view_window]_disabled_view_$PARAM[view_container_id])) + String.IsEqual(Window(home).Property(view_disable_mediawindow),$PARAM[view_window])">Skin.Reset($PARAM[view_window]_disabled_view_$PARAM[view_container_id])</onclick>
	</include>			
	
	<variable name="viewselect_window_image">
		<value condition="String.IsEqual(Window(home).Property(view_disable_mediawindow),videos)">defaultvideo.png</value>
		<value condition="String.IsEqual(Window(home).Property(view_disable_mediawindow),music)">music.png</value>
		<value condition="String.IsEqual(Window(home).Property(view_disable_mediawindow),pictures)">defaultpicture.png</value>
		<value condition="String.IsEqual(Window(home).Property(view_disable_mediawindow),games)">defaultaddongame.png</value>
	</variable>
	<variable name="playlistedit_window_image">
		<value condition="Window.IsActive(videos)">icons/movie_play.png</value>
		<value condition="Window.IsActive(music)">music.png</value>
	</variable>
	
	<variable name="viewselect_window_label">
		<value condition="String.IsEqual(Window(home).Property(view_disable_mediawindow),videos)">$LOCALIZE[10025]</value>
		<value condition="String.IsEqual(Window(home).Property(view_disable_mediawindow),music)">$LOCALIZE[10502]</value>
		<value condition="String.IsEqual(Window(home).Property(view_disable_mediawindow),pictures)">$LOCALIZE[10002]</value>
		<value condition="String.IsEqual(Window(home).Property(view_disable_mediawindow),games)">$LOCALIZE[10821]</value>
	</variable>
	
	<expression name="viewselect_locking_allMedia">
		string.isequal(window(home).property(view_disable_mediawindow),videos) | 
		string.isequal(window(home).property(view_disable_mediawindow),music) | 
		string.isequal(window(home).property(view_disable_mediawindow),pictures) | 
		string.isequal(window(home).property(view_disable_mediawindow),games) | 
		string.isequal(window(home).property(view_disable_mediawindow),music)
	</expression>
	
	<!-- ############## PROFILES - may delete implemented stuff ############## -->
	
	<variable name="menucontrol_profiles_fovsnf">
		<value condition="Control.HasFocus(7777)">$VAR[color_home_menu_item_fo]</value>
		<value>$VAR[color_home_menu_item_nf]</value>
	</variable>
			<!-- 
			<control type="image">
				<visible>false</visible>
				<visible>Control.HasFocus(7777)</visible>
				<animation effect="zoom" start="0,100" end="100,100" time="300" center="left" tween="quadratic" easing="out">Visible</animation>
				<top>5</top>
				<height>280</height>
				<texture diffuse="diffuse/gradientleftsoft.png" colordiffuse="$VAR[color_home_menu_item_fo]">colors/white50.png</texture>
			</control>
			-->
	<include name="menucontrol_profiles">
		<control type="group">
			<top>15</top>
			<control type="label">
				<description>20092 vs 13200</description>
				<left>50</left>
				<height>26</height>
				<font>notosans_21_semibold</font>
				<textcolor>$VAR[menucontrol_profiles_fovsnf]</textcolor>
				<label>[B]$LOCALIZE[13200][/B]</label>
			</control>
			<control type="group">
				<description>current profile</description>
				<visible>!Skin.HasSetting(menucontrol_home_hidecurrentprofile) + [Window.IsActive(home) + String.IsEqual(Window(Home).Property(menucontrol_active), true)]</visible>
				<top>5</top>
				<control type="image">
					<right>15</right>
					<width>60</width>
					<height>60</height>
					<bordersize>1</bordersize>
					<bordertexture colordiffuse="$VAR[color_home_menu_item_fo]">frames/bordercircler25.png</bordertexture>
					<texture diffuse="artworkdiffuse/circle.png">$INFO[System.ProfileThumb]</texture>
					<aspectratio scalediffuse="true" align="center" aligny="center">scale</aspectratio>
				</control>
				<control type="label">
					<right>90</right>
					<width>300</width>
					<height>50</height>
					<align>right</align>
					<font>notosans_18_semibold</font>
					<textcolor>$VAR[color_home_menu_item_nf]</textcolor>
					<label>Logged in as [CR]$INFO[System.ProfileName] </label>
				</control>
			</control>
				
				
			<control type="panel" id="7777">
				<description>profile container NEED CHANGE ID</description>
				<left>25</left>
				<right>80</right>
				<top>35</top>
				<height>227</height>
				<onup>9000</onup>
				<ondown>9000</ondown>
				<onback>9000</onback>
				<onleft>9000</onleft>
				<onright>9000</onright>
				<orientation>vertical</orientation>
				<preloaditems>2</preloaditems>
				<scrolltime tween="quadratic">400</scrolltime>
				<itemlayout height="57">
					<control type="group">
						<height>56</height>
						<control type="image">
							<left>40</left>
							<height>56</height>
							<width>56</width>
							<texture>artworkdiffuse/squareborder.png</texture>
							<colordiffuse>white</colordiffuse>
							<bordersize>4</bordersize>
						</control>
						<control type="image">
							<left>40</left>
							<height>56</height>
							<width>56</width>
							<description>Fallback aspect scale</description>
							<texture background="true" diffuse="artworkdiffuse/usebganel/square.png">$INFO[ListItem.Icon]</texture>
							<aspect align="left" aligny="center">keep</aspect>
							<bordersize>8</bordersize>
						</control>
						<control type="label">
							<left>100</left>
							<right>10</right>
							<textcolor>$VAR[color_home_menu_item_nf]</textcolor>
							<info>ListItem.Label</info>
							<font>notosans_18_semibold</font>
						</control>
					</control>
				</itemlayout>
				<focusedlayout height="57">
					<control type="group">
						<include>Animation_Item_Focus</include>
						<height>56</height>
						<control type="image">
							<left>40</left>
							<height>56</height>
							<width>56</width>
							<texture>artworkdiffuse/circleborder.png</texture>
							<colordiffuse>white</colordiffuse>
							<bordersize>6</bordersize>
						</control>
						<control type="image">
							<left>40</left>
							<height>56</height>
							<width>56</width>
							<description>Fallback aspect scale</description>
							<texture background="true" diffuse="artworkdiffuse/circle.png">$INFO[ListItem.Icon]</texture>
							<aspect align="left" aligny="center">scale</aspect>
							<bordersize>8</bordersize>
						</control>
						<control type="label">
							<left>110</left>
							<right>10</right>
							<label>$INFO[ListItem.Label,[B],[/B]]</label>
							<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
							<font>notosans_18_semibold</font>
						</control>
					</control>
					<control type="image">
						<width>12</width>
						<height>12</height>
						<left>0</left>
						<top>18</top>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="color_home_menu_accent">artworkdiffuse/circle.png</texture>
					</control>
				</focusedlayout>
				<content>
					<item>
						<visible>!String.IsEqual(System.ProfileName,Skin.String(profile_01_label)) + !String.IsEmpty(Skin.String(profile_01_label))</visible>
						<label>$INFO[Skin.String(profile_01_label)]</label>
						<icon>$INFO[Skin.String(profile_01_thumb)]</icon>
						<onclick>LoadProfile($INFO[Skin.String(profile_01_label)],prompt)</onclick>
					</item>
					<item>
						<visible>!String.IsEqual(System.ProfileName,Skin.String(profile_02_label)) + !String.IsEmpty(Skin.String(profile_02_label))</visible>
						<label>$INFO[Skin.String(profile_02_label)]</label>
						<icon>$INFO[Skin.String(profile_02_thumb)]</icon>
						<onclick>LoadProfile($INFO[Skin.String(profile_02_label)],prompt)</onclick>
					</item>
					<item>
						<visible>!String.IsEqual(System.ProfileName,Skin.String(profile_03_label)) + !String.IsEmpty(Skin.String(profile_03_label))</visible>
						<label>$INFO[Skin.String(profile_03_label)]</label>
						<icon>$INFO[Skin.String(profile_03_thumb)]</icon>
						<onclick>LoadProfile($INFO[Skin.String(profile_03_label)],prompt)</onclick>
					</item>
					<item>
						<visible>!String.IsEqual(System.ProfileName,Skin.String(profile_04_label)) + !String.IsEmpty(Skin.String(profile_04_label))</visible>
						<label>$INFO[Skin.String(profile_04_label)]</label>
						<icon>$INFO[Skin.String(profile_04_thumb)]</icon>
						<onclick>LoadProfile($INFO[Skin.String(profile_04_label)],prompt)</onclick>
					</item>
					<item>
						<visible>!String.IsEqual(System.ProfileName,Skin.String(profile_05_label)) + !String.IsEmpty(Skin.String(profile_05_label))</visible>
						<label>$INFO[Skin.String(profile_05_label)]</label>
						<icon>$INFO[Skin.String(profile_05_thumb)]</icon>
						<onclick>LoadProfile($INFO[Skin.String(profile_05_label)],prompt)</onclick>
					</item>
					<item>
						<visible>!String.IsEqual(System.ProfileName,Skin.String(profile_06_label)) + !String.IsEmpty(Skin.String(profile_06_label))</visible>
						<label>$INFO[Skin.String(profile_06_label)]</label>
						<icon>$INFO[Skin.String(profile_06_thumb)]</icon>
						<onclick>LoadProfile($INFO[Skin.String(profile_06_label)],prompt)</onclick>
					</item>
				</content>
			</control>
		</control>
	</include>
	
	<!-- musicinfo-->
	<include name="IconButton">
		<control type="radiobutton" id="$PARAM[id]">
			<animation type="focus" reversible="false">
				<effect type="slide" start="0" end="350" easing="in" tween="quadratic" time="300" />
			</animation>
			<animation type="unfocus" reversible="false">
				<effect type="slide" start="350" end="0" easing="in" tween="quadratic" time="300" />
			</animation>
			<textoffsetx>50</textoffsetx>
			<height>65</height>
			<width>400</width>
			<focusedcolor>white</focusedcolor>
			<textcolor>5cC6C6C8</textcolor>
			<textureradioonfocus colordiffuse="white">$PARAM[radiobutton_texture].png</textureradioonfocus>
			<textureradioonnofocus colordiffuse="5cC6C6C8">$PARAM[radiobutton_texture].png</textureradioonnofocus>
			<textureradioofffocus colordiffuse="white">$PARAM[radiobutton_texture].png</textureradioofffocus>
			<textureradiooffnofocus colordiffuse="5cC6C6C8">$PARAM[radiobutton_texture].png</textureradiooffnofocus>
			<texturefocus colordiffuse="white">diffuse/gradientborderleft.png</texturefocus>
			<texturenofocus colordiffuse="5cC6C6C8">diffuse/gradientborderleft.png</texturenofocus>		 
			<label>$PARAM[label]</label>
			<nested />
		</control>
	</include>
	
	
	<!-- game osd - future global ? - revisit alpha chanel n colors -->
	<include name="IconButton_games">
			
			
			<radioposx>10</radioposx>
			<textoffsetx>90</textoffsetx>
			
			<textureradioonfocus colordiffuse="white">$PARAM[radiobutton_texture].png</textureradioonfocus>
			<textureradioonnofocus colordiffuse="5cC6C6C8">$PARAM[radiobutton_texture].png</textureradioonnofocus>
			<textureradioofffocus colordiffuse="white">$PARAM[radiobutton_texture].png</textureradioofffocus>
			<textureradiooffnofocus colordiffuse="5cC6C6C8">$PARAM[radiobutton_texture].png</textureradiooffnofocus>
			<texturefocus colordiffuse="white">diffuse/gradientborderleft.png</texturefocus>
			<!-- <texturenofocus flipx="true" colordiffuse="white">diffuse/gradientleftsoft.png</texturenofocus> -->
			
	</include>
	
	<!-- Custom_1104_CustomContextual.xml , DialogContextMenu.xml -->
	<include name="Menucontrol_Grouplist">
		<param name="width" default="60%" />
		<definition>
		<control type="grouplist" id="$PARAM[id]">
			<onup>$PARAM[onup]</onup>
			<ondown>$PARAM[ondown]</ondown>
			<top>$PARAM[top]</top>
			<height>$PARAM[height]</height>
			<width>$PARAM[width]</width>
			<orientation>vertical</orientation>
			<itemgap>10</itemgap>
			<nested />
		</control>
		</definition>
	</include>
	
	<!-- global menu bg panel image -->
	<include name="menucontrol_background_layer">
		<control type="image">
			<animation effect="slide" start="0,0" end="450,0" time="300" tween="cubic" easing="inout">visible</animation>
			<animation effect="fade" start="100" end="0" time="150" condition="!String.IsEqual(Window(Home).Property(menucontrol_active),common)">conditional</animation>
			<visible>String.IsEqual(Window(Home).Property(menucontrol_active),common)</visible>
			<top>0</top>
			<bottom>0</bottom>
			<width>530</width>
			<left>-450</left>
			<colordiffuse>$VAR[color_lib_menu_backgroundpanel]</colordiffuse>
			<texture>colors/white.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>
	</include>
		
	<include name="PreMenucontrol">
		<include content="menucontrol_background_layer" />
		
		<control type="grouplist" id="8999">
			<animation effect="slide" start="0,0" end="450,0" time="300" tween="cubic" easing="inout" condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">conditional</animation>
			
			<visible>String.IsEmpty(Window(home).Property(shortcutaction_inprogress))</visible>
			<visible>!$EXP[Infodialog_IsActive]</visible>
			<visible>!Window.IsActive(shutdownmenu)</visible>
			<centertop>50%</centertop>
			
			<align>center</align>
			<aligny>center</aligny>
			<left>12</left>
			<width>110</width>
			<height>90%</height>
			<orientation>vertical</orientation>
			<itemgap>10</itemgap>
			<usecontrolcoords>true</usecontrolcoords>
			
			<onright>ClearProperty(menucontrol_active,home)</onright>
			<onright>SetFocus(50)</onright>
			
			<onleft condition="!String.IsEmpty(Window(Home).Property(menucontrol_active))">SetProperty(menucontrol_active,common,Home)</onleft>
			<onleft>SetFocus(9000)</onleft>
			
			<onup condition="Control.IsVisible(11)">11</onup>
			<onup condition="Control.IsVisible(19)">19</onup>
			<onup condition="!Control.IsVisible(19)">50</onup>
			<onup>ClearProperty(menucontrol_active,home)</onup>
			
			<control type="radiobutton" id="8001">
				<include content="PreMenucontrol_RadioButton">
					<param name="radiotexture" value="buttons/back" />
				</include>
				<visible>!Skin.HasSetting(premenu_hide_back)</visible>
				<visible>!String.IsEqual(Window(Home).Property(menucontrol_active),common)</visible>
				<onclick>Dialog.Close(all,true)</onclick>
				<onclick>Action(back)</onclick>
			</control>
			<control type="radiobutton" id="8002">
				<include content="PreMenucontrol_RadioButton">
					<param name="radiotexture" value="buttons/search" />
				</include>
				<onclick>ClearProperty(menucontrol_active,home)</onclick>
				<onclick condition="!String.IsEmpty(Skin.String(SearchTerm))">Skin.Reset(SearchTerm)</onclick>
				<onclick>Skin.SetString(SearchTerm)</onclick>
				<onclick>ActivateWindow(1120,return)</onclick>
			</control>
			<control type="radiobutton" id="8003">
				<include content="PreMenucontrol_RadioButton">
					<param name="radiotexture" value="buttons/menucontrol" />
				</include>
				<onclick condition="!String.IsEqual(Window(Home).Property(menucontrol_active),common)">SetProperty(menucontrol_active,common,Home)</onclick>
				<onclick condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">ClearProperty(menucontrol_active,home)</onclick>
				<onclick condition="!String.IsEqual(Window(Home).Property(menucontrol_active),common)">SetFocus(9000)</onclick>
			</control>
			<control type="radiobutton" id="8004">
				<visible>!Skin.HasSetting(premenu_hide_hideshutdown)</visible>
				<include content="PreMenucontrol_RadioButton">
					<param name="radiotexture" value="buttons/shutdownmenubutton" />
				</include>
				<onclick>ClearProperty(menucontrol_active,home)</onclick>
				<onclick>ActivateWindow(shutdownmenu)</onclick>
			</control>
			
			<control type="togglebutton" id="8005">
				<description>go trough cases - keep focus vs focus mediacontainer 'SetFocus(50)'</description>
				
				<visible>!String.IsEqual(Window(Home).Property(menucontrol_active),common) + !Skin.HasSetting(premenu_hide_trailer)</visible>
				<visible>$EXP[Has_Trailer]</visible>
				<usealttexture>!String.IsEmpty(Window(home).Property(TrailerIsPlaying))</usealttexture>
				<width>65</width>
				<height>65</height>
				<label />
				<altlabel />
				<include content="Animation_Item_Focus" />
				<texturefocus colordiffuse="$VAR[PreMenucontrol_button_fo]">buttons/trailer.png</texturefocus>
				<texturenofocus colordiffuse="$VAR[PreMenucontrol_button_nf]">buttons/trailer.png</texturenofocus>
				<alttexturefocus colordiffuse="$VAR[PreMenucontrol_button_fo]">buttons/stop.png</alttexturefocus>
				<alttexturenofocus colordiffuse="$VAR[PreMenucontrol_button_nf]">buttons/stop.png</alttexturenofocus>	
				<onclick condition="Control.IsVisible(503) | Control.IsVisible(504)">SetProperty(alt_busyspinner_counter,1,home)</onclick>
				<onclick>PlayMedia($INFO[Window(home).Property(listitemtrailer)],1)</onclick>
				<onclick>SetProperty(TrailerIsPlaying,true,home)</onclick>
				<!-- <onclick condition="![Control.IsVisible(502) | Control.IsVisible(510) | Control.IsVisible(511) | Control.IsVisible(512) | Control.IsVisible(513) | Control.IsVisible(520)]">SetFocus(50)</onclick> -->
				<onclick condition="Control.IsVisible(51) | Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(54)">ActivateWindow(1122)</onclick>
				<altclick>ClearProperty(TrailerIsPlaying,home)</altclick>
				<altclick>Action(stop)</altclick>
				<altclick>SetFocus(50)</altclick>
			</control>
			
			<control type="radiobutton" id="8006">
				<visible>Player.HasMedia</visible>
				<include content="PreMenucontrol_RadioButton">
					<param name="radiotexture" value="buttons/togglefullscreen" />
				</include>
				<onclick>Fullscreen</onclick>
			</control>
			<control type="radiobutton" id="8008">
				<visible>!String.IsEqual(Window(Home).Property(menucontrol_active),common)</visible>
				<visible>!Skin.HasSetting(premenu_hide_info)</visible>
				<visible>
                    String.IsEqual(Container.ListItem.dbtype,movie) | String.IsEqual(Container.ListItem.dbtype,tvshow) | String.IsEqual(Container.ListItem.dbtype,season) | String.IsEqual(Container.ListItem.dbtype,episode) | 
                    String.IsEqual(Container.ListItem.dbtype,artist) | String.IsEqual(Container.ListItem.dbtype,album) | String.IsEqual(Container.ListItem.dbtype,song)
                </visible>
				<include content="PreMenucontrol_RadioButton">
					<param name="radiotexture" value="buttons/info" />
				</include>
				<onclick>SetFocus(50)</onclick>
				<onclick>Action(info)</onclick>
			</control>
			<control type="radiobutton" id="8009">
				<visible>!String.IsEqual(Window(Home).Property(menucontrol_active),common) + !Skin.HasSetting(premenu_hide_embuarytmdbinfo)</visible>
				<visible>String.IsEqual(Container.ListItem.dbtype,movie) | String.IsEqual(Container.ListItem.dbtype,actor) | String.IsEqual(Container.ListItem.dbtype,tvshow) | String.IsEqual(Container.ListItem.dbtype,season) | String.IsEqual(Container.ListItem.dbtype,episode)</visible>
				<include content="PreMenucontrol_RadioButton">
					<param name="radiotexture" value="buttons/tmdbembuaryinfo" />
				</include>
				<onclick>RunScript(script.embuary.info,$VAR[embuaryinfo_listitem])</onclick>
			</control>
			<control type="radiobutton" id="8010">
				<visible>!String.IsEqual(Window(Home).Property(menucontrol_active),common) + !Skin.HasSetting(premenu_hide_trakt)</visible>
				<visible>!String.IsEmpty(Window(home).Property(movie_tmdbid)) | !String.IsEmpty(Window(home).Property(tvshow_tmdbid)) | !String.IsEmpty(Window(home).Property(episodetvshow_tmdbid))</visible>
				<radiowidth>40</radiowidth>
				<radioheight>40</radioheight>
				<left>10</left>
				<include content="PreMenucontrol_RadioButton">
					<param name="radiotexture" value="flags/ratings/trakt_monochrome" />
				</include>
				<onclick condition="string.startswith(System.BuildVersion,19.) + !String.IsEmpty(Window(home).Property(movie_tmdbid))">RunScript(plugin.video.themoviedb.helper,sync_trakt,type=movie,tmdb_id=$INFO[Window(home).Property(movie_tmdbid)])</onclick>
				<onclick condition="string.startswith(System.BuildVersion,19.) + !String.IsEmpty(Window(home).Property(tvshow_tmdbid))">RunScript(plugin.video.themoviedb.helper,sync_trakt,type=tv,tmdb_id=$INFO[Window(home).Property(movie_tmdbid)])</onclick>
				<onclick condition="string.startswith(System.BuildVersion,19.) + !String.IsEmpty(Window(home).Property(episodetvshow_tmdbid))">RunScript(plugin.video.themoviedb.helper,sync_trakt,type=tv,tmdb_id=$INFO[ListItem.Property(episodetvshow_tmdbid)],season=$INFO[ListItem.Season],episode=$INFO[ListItem.Episode])</onclick>
				<onclick condition="string.startswith(System.BuildVersion,18.)">ActivateWindow(1104,return)</onclick>
			</control>
			
			<!-- 
			<control type="radiobutton" id="8020">
				<visible>!String.IsEqual(Window(Home).Property(menucontrol_active),common)</visible>
				<visible>[control.isvisible(503) | control.isvisible(504)] + [control.isvisible(50350)]</visible>
				<include content="PreMenucontrol_RadioButton">
					<param name="radiotexture" value="icons/actor" />
				</include>
				
				<onclick condition="String.IsEmpty(Window.Property(Spotlight_Cast))">SetFocus(50350,0,absolute)</onclick>
				<onclick condition="!String.IsEmpty(Window.Property(Spotlight_Cast))">ClearProperty(Spotlight_Cast)</onclick>
				<onclick condition="!String.IsEmpty(Window.Property(Spotlight_Cast))">SetFocus(50)</onclick>
			</control>
			<control type="radiobutton" id="8021">
				<visible>!String.IsEqual(Window(Home).Property(menucontrol_active),common)</visible>
				<visible>[control.isvisible(503) | control.isvisible(504)] + [control.isvisible(50352) + Integer.IsGreater(container(50352).NumItems,0)]</visible>
				<include content="PreMenucontrol_RadioButton">
					<param name="radiotexture" value="defaultsets" />
				</include>
				<onclick condition="String.IsEmpty(Window.Property(Spotlight_Sets))">SetFocus(50352,absolute)</onclick>
				
				<onclick condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">ClearProperty(Spotlight_Sets)</onclick>
				<onclick condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">SetFocus(50)</onclick>
			</control> 
			-->
			
			
		</control>
	</include>
		<!-- 8020 8021
			vis cond here or in container
			eg	!string.isempty(container(503).listitem.dbtype) | !string.isempty(container(504).listitem.dbtype) 
		-->
	<include name="PreMenucontrol_RadioButton">
		<include content="Animation_Item_Focus" />
		<textureradioonfocus colordiffuse="$VAR[PreMenucontrol_button_fo]">$PARAM[radiotexture].png</textureradioonfocus>
		<textureradioonnofocus colordiffuse="$VAR[PreMenucontrol_button_nf]">$PARAM[radiotexture].png</textureradioonnofocus>
		<textureradioofffocus colordiffuse="$VAR[PreMenucontrol_button_fo]">$PARAM[radiotexture].png</textureradioofffocus>
		<textureradiooffnofocus colordiffuse="$VAR[PreMenucontrol_button_nf]">$PARAM[radiotexture].png</textureradiooffnofocus>
		<textoffsetx />
		<radiowidth>60</radiowidth>
		<radioheight>60</radioheight>
		<radioposx>3</radioposx>
		<textureradioondisabled />
		<textureradiooffdisabled  />
		<texturefocus />
		<texturenofocus />
		<height>80</height>
		<focusedcolor />
		<textcolor />
		<label />
		<selected />
	</include>
	<variable name="PreMenucontrol_button_fo">
		<value condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">$VAR[color_lib_menu_item_fo]</value>
		<value>$VAR[color_lib_text_main]</value>
	</variable>
	<variable name="PreMenucontrol_button_nf">
		<value condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">$VAR[color_lib_menu_item_nf]</value>
		<value>$VAR[color_lib_text_secondary]</value>
	</variable>

	

	<!-- 
	is failing
	<variable name="media_menucontrol">
		<value condition="false">9000</value>
		<value condition="true">8999</value>
	</variable>
	
	is also failing
	<include name="media_menucontrol">
		<param name="forced_menu_id" default="9000" />
		<menucontrol>$PARAM[forced_menu_id]</menucontrol>
	</include>
	
	-->
	<include name="media_menucontrol">
		<include content="media_menucontrol_9000" condition="!Skin.HasSetting(menucontrol_forcedfocus_premenu)" />
		<include content="media_menucontrol_8999" condition="Skin.HasSetting(menucontrol_forcedfocus_premenu)" />
	</include>
	<include name="media_menucontrol_9000">
		<menucontrol>9000</menucontrol>
	</include>
	<include name="media_menucontrol_8999">
		<menucontrol>8999</menucontrol>
	</include>
	
	
	<!-- ERROR if changed to default menu control is premenu 
	consider removed params has_premenu, has_no_premenu
	-->
	<!-- global Window.Is(media) , My[foo]Nav.xml -->
	
	<!-- note check the f***ng ids -->
	<include name="menucontrol_global">
		<param name="window_defaultcontrol_id" default="50" />
		<param name="has_premenu" default="true" />
		<param name="has_no_premenu" default="false" />
		
		<definition>
		<control type="grouplist" id="9000">
			<description>need get cond vis content - IT IS REALLY TIME TO REASIGN ID VALUES ,PRETTY MESSY</description>
			<top>110</top>
			<left>20</left>
				
			<bottom>10</bottom>
			<width>445</width>
			<left>0</left>
			<itemgap>0</itemgap>
			
			<onup>ClearProperty(menucontrol_active,home)</onup>
			<onup condition="Control.IsVisible(19)">19</onup>
			<onup condition="Control.IsVisible(7777)">7777</onup>
			<onup condition="![Control.IsVisible(19) + Control.IsVisible(7777)]">9000</onup>
			
			<onback>ClearProperty(menucontrol_active,home)</onback>
			<onback>SetFocus($PARAM[window_defaultcontrol_id])</onback>
			
			<onright condition="$PARAM[has_premenu]">SetFocus(8999)</onright>
			<onright condition="$PARAM[has_no_premenu]">ClearProperty(menucontrol_active,home)</onright>
			<onright condition="$PARAM[has_no_premenu]">SetFocus($PARAM[window_defaultcontrol_id])</onright>
			
			<onleft>SetFocus(50)</onleft>
			<onleft>ClearProperty(menucontrol_active,home)</onleft>
			
			<control type="image" id="9001">
				<visible>Window.IsActive(settings)</visible>
				<height>300</height>
				<bordersize>100</bordersize>
				<texture colordiffuse="$VAR[color_lib_menu_item_nf]">icons/swanwatersign.png</texture>
				<aspectratio>keep</aspectratio>
			</control>
			
			<include content="menucontrol_currentlyplaying" condition="!Skin.HasSetting(header_currentlyplaying)" />
			
			<control type="image" id="9002">
				<height>1</height>
				<texture colordiffuse="$VAR[color_lib_menu_item_nf]">diffuse/gradienthorizontal.png</texture>
				<visible>Control.IsVisible(6048)</visible>
			</control> 
			
			<control type="label" id="910">
				<visible>Control.HasFocus(911)</visible>
				<textoffset>20</textoffset>
				<label>$INFO[Container(911).Listitem.Label,[B],[/B]][CR][COLOR $VAR[color_lib_menu_accent]]$INFO[Container(911).Listitem.Label2][/COLOR][CR]</label>
				<font>notosans_25_regular_l</font>
				<wrapmultiline>true</wrapmultiline>
				<height>90</height>
				<align>center</align>
				<textcolor>$VAR[color_lib_menu_item_fo]</textcolor>
			</control>
			<control type="label" id="920">
				<visible>!Control.HasFocus(911) + Control.IsVisible(911)</visible>
				<textoffset>20</textoffset>
				<label>[CR][B] Container Settings[/B]</label>
				<font>notosans_25_regular_l</font>
				<wrapmultiline>true</wrapmultiline>
				<height>70</height>
				<align>left</align>
				<textcolor>$VAR[color_lib_menu_item_fo]</textcolor>
			</control>
			
			<control type="panel" id="911">
				<visible>Window.IsMedia</visible>
				<visible>Integer.IsGreaterOrEqual(Container(911).NumItems,1)</visible>
				<onfocus condition="!String.IsEqual(Window(Home).Property(menucontrol_active),common)">SetProperty(menucontrol_active,common,Home)</onfocus>
				<scrolltime tween="quadratic">400</scrolltime>
				<top>0</top>
				<preloaditems>2</preloaditems>
				<orientation>vertical</orientation>
				<height>165</height>
				
				<itemlayout height="74" width="74">
					<control type="group">
						<height>78</height>
						<width>78</width>
						<include content="universal_itemlayout">
							<param name="artwork_bordercolor" value="$VAR[color_lib_menu_item_nf]" />
							<param name="artwork" value="square" />
							<param name="artwork_focusoverlay_visible" value="false" />
							<param name="infotags_visible" value="false" />
							<param name="infotags_autoscroll" value="false" />
							<param name="artwork_bg_bordersize" value="4" />
							<param name="artwork_diffuse_themed" value="true" />
							<param name="artwork_diffuse_override" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout height="74" width="74">
					<control type="group">
						<height>78</height>
						<width>78</width>
						<include>Animation_Item_Focus</include>
						<include content="universal_itemlayout">
							<param name="artwork_bordercolor" value="$VAR[color_lib_menu_accent]" />
							<param name="artwork" value="square" />
							<param name="artwork_focusoverlay_visible" value="false" />
							<param name="infotags_visible" value="false" />
							<param name="infotags_autoscroll" value="true" />
							<param name="artwork_bg_bordersize" value="4" />
							<param name="artwork_diffuse_themed" value="true" />
							<param name="artwork_diffuse_override" value="false" />
						</include>
					</control>
				</focusedlayout>
				<content>
					<item>
						<description>music,video</description>
						<icon>defaultpartymode.png</icon>
						<property name="icon">defaultpartymode.png</property>
						<label>$LOCALIZE[589]</label>
						<label2>$INFO[Control.GetLabel(16)]</label2>
						<onclick>SendClick(16)</onclick>
						<visible>Control.IsVisible(16)</visible>
					</item>
					<item>
						<description>stop scan 13353 condition library.isscanningvideo</description>
						<icon>buttons/refresh.png</icon>
						<property name="icon">buttons/refresh.png</property>
						<label>$LOCALIZE[653]</label>
						<label2>$VAR[lib_isscanningmedia]</label2>
						<onclick>SendClick(20)</onclick>
						<visible>Control.IsEnabled(20)</visible>
					</item>
					<item>
						<description>addonbrowser update</description>
						<icon>buttons/refresh.png</icon>
						<property name="icon">buttons/refresh.png</property>
						<label>$LOCALIZE[24034]</label>
						<onclick>SendClick(9)</onclick>
						<visible>Control.IsVisible(9) + Window.IsActive(addonbrowser)</visible>
					</item>
					<item>
						<visible>[Window.IsActive(videos) | Window.IsActive(music) | Window.IsActive(games) | Window.IsActive(pictures)]</visible>
						<icon>buttons/viewswitch.png</icon>
						<property name="icon">buttons/viewswitch.png</property>
						<label>ViewMode Select</label>
						<label2>$INFO[Container.Viewmode]</label2>
						<onclick condition="Window.IsActive(videos)">SetProperty(view_disable_mediawindow,videos,home)</onclick>
						<onclick condition="Window.IsActive(music)">SetProperty(view_disable_mediawindow,music,home)</onclick>
						<onclick condition="Window.IsActive(pictures)">SetProperty(view_disable_mediawindow,pictures,home)</onclick>
						<onclick condition="Window.IsActive(games)">SetProperty(view_disable_mediawindow,games,home)</onclick>
						<onclick>ActivateWindow(1105)</onclick>
					</item>
					<item>
						<description>next view id - native - use for pvr windows</description>
						<property name="icon">buttons/viewswitch.png</property>
						<label>native: Container.NextViewMode</label>
						<label2>$INFO[Container.Viewmode]</label2>
						<onclick>SendClick(2)</onclick>
						<visible>Control.IsVisible(2)</visible>
					</item>
					<item>
						<icon>defaultmusicvideotitle.png</icon>
						<property name="icon">defaultmusicvideotitle.png</property>
						<label>$LOCALIZE[580] (↓↑)</label>
						<label2>$INFO[Container.SortOrder] $VAR[ContainerSortOrderUnicodeArrow]</label2>
						<onclick>SendClick(4)</onclick>
						<visible>Control.IsEnabled(4)</visible>
					</item>
					<item>
						<icon>buttons/togglewatched.png</icon>
						<property name="icon">buttons/togglewatched.png</property>
						<label>Zeige $LOCALIZE[127]</label>
						<label2>$INFO[Control.GetLabel(10)]$INFO[Container.NumItems, (,)]</label2>
						<onclick>SendClick(10)</onclick>
						<visible>Control.IsVisible(10)</visible>
					</item>
					<item>
						<icon>buttons/method.png</icon>
						<property name="icon">buttons/method.png</property>
						<label>$LOCALIZE[21429]</label>
						<label2>$INFO[Container.SortMethod]</label2>
						<onclick>SendClick(3)</onclick>
						<visible>Control.IsEnabled(3)</visible>
					</item>
					<item>
						<icon>buttons/advancedfiltermethod.png</icon>
						<property name="icon">buttons/advancedfiltermethod.png</property>
						<label>$LOCALIZE[10152]</label>
						<label2>$LOCALIZE[35226]</label2>
						<visible>Container.CanFilterAdvanced</visible>
						<onclick>SetFocus(50)</onclick>
						<onclick>Filter</onclick>
					</item>
					<item>
						<icon>defaultaddonvfs.png</icon>
						<property name="icon">defaultaddonvfs.png</property>
						<label>$INFO[Control.GetLabel(11)]</label>
						<onclick>SendClick(11)</onclick>
						<label>$LOCALIZE[20336]</label>
						<visible>system.haslocks</visible>
					</item> 
				</content>
			</control>
			<control type="label" id="7000">
				<top>30</top>
				<textoffset>20</textoffset>
				<label>$VAR[menucontrol_container930_heading]</label>
				<font>notosans_22_regular_lowlined</font>
				<textcolor>$VAR[color_lib_menu_item_fo]</textcolor>
				<wrapmultiline>true</wrapmultiline>
				<height>55</height>
				<align>left</align>
			</control>
			
			<control type="group" id="9555">
				<height>650</height>
				<control type="list" id="930">
					<onfocus condition="!String.IsEqual(Window(Home).Property(menucontrol_active),common)">SetProperty(menucontrol_active,common,Home)</onfocus>
					<scrolltime tween="quadratic">400</scrolltime>
					<preloaditems>2</preloaditems>
					<orientation>horizontal</orientation>
					<height>80</height>
					<onup>7000</onup>
					<ondown>93999</ondown>
					<onright>ClearProperty(menucontrol_active,home)</onright>
					<onright>SetFocus(8999)</onright>
					<itemlayout height="74" width="74">
						<control type="group">
							<height>78</height>
							<animation effect="fade" start="100" end="20" time="250" easing="out" condition="!Control.HasFocus(930) + !Control.HasFocus(911)">conditional</animation>
							<control type="image">
								<animation effect="fade" end="20" time="0" condition="true">conditional</animation>
								<texture colordiffuse="$VAR[color_lib_menu_item_fo]">colors/white30.png</texture>
							</control>
							<control type="image">
								<bordersize>10</bordersize>
								<texture colordiffuse="$VAR[color_lib_menu_item_fo]" diffuse="colors/white30.png">$INFO[listitem.icon]</texture>
								<aspectratio>keep</aspectratio>
							</control>
						</control>
					</itemlayout>
					<focusedlayout height="74" width="74">
						<control type="group">
							<height>78</height>
							<description>need n make global change - instead of button colors use fo 30 percent alpha bg ?</description>
							<control type="image">
								<animation effect="fade" start="100" end="20" time="0" condition="!Control.HasFocus(930)">conditional</animation>
								<texture colordiffuse="$VAR[color_lib_menu_item_fo]">colors/white30.png</texture>
							</control>
							<control type="image">
								<bordersize>10</bordersize>
								<texture colordiffuse="$VAR[color_lib_menu_item_fo]">$INFO[listitem.icon]</texture>
								<aspectratio>keep</aspectratio>
							</control>
							<control type="image">
								<bottom>-1</bottom>
								<height>4</height>
								<width>100%</width>
								<texture colordiffuse="$VAR[color_lib_menu_accent]">colors/white.png</texture>
								<animation effect="zoom" start="0,100" end="100,100" time="300" center="auto" tween="quadratic" easing="out">Focus</animation>
							</control>
						</control>
						</focusedlayout>
					<content>
						<item id="9301">
							<icon>icons/settingsnavlib.png</icon>
							<label>$LOCALIZE[31060]</label>
							<label2>1st label2</label2>
							<onclick />
						</item>
						<item id="9302">
							<visible>Window.IsMedia | Window.IsActive(weather)</visible>
							<icon>icons/settingsviews.png</icon>
							<label>$LOCALIZE[14018]$INFO[Container.Viewmode, : ,]</label>
							<label2>2nd label2</label2>
							<onclick />
						</item>
						<item id="9304">
							<icon>icons/settingsnavtv.png</icon>
							<label>PVR TV Windows</label>
							<label2></label2>
							<onclick></onclick>
						</item>
						<item id="9305">
							<icon>icons/settingsnavradio.png</icon>
							<label>PVR RADIO Windows</label>
							<label2></label2>
							<onclick></onclick>
						</item>					
						<item id="9306">
							<icon>icons/reload.png</icon>
							<label>20183</label>
							<label2></label2>
							<onclick>ReloadSkin()</onclick>
						</item>
						<item id="9308">
							<icon>icons/debug.png</icon>
							<label>654</label>
							<label2 />
							<onclick>Skin.ToggleDebug()</onclick>
						</item>
					</content>
				</control>
				<control type="image" id="9399">
					<top>79</top>
					<height>2</height>
					<width>100%</width>
					<texture colordiffuse="$VAR[color_lib_menu_accent]">colors/white.png</texture>
				</control>
				
				<control type="grouplist" id="93999">
					<orientation>vertical</orientation>
						<description>doing built in control.move, will focus grid</description>
					<onup>930</onup>
					<top>81</top>
					<!-- <onleft>Control.Move(930,-1)</onleft> -->
					<!-- <onright>Control.Move(930,1)</onright> -->
					<onleft>930</onleft>
					<onright>930</onright>
					
					<include content="Menucontrol_Content_Navigation" /> 
					<include content="menucontrol_mymedia_epg_grid_settings" condition="Window.IsActive(MyPVRGuide.xml)" />
					<include content="menucontrol_mymedia_viewid_settings" condition="!Window.IsActive(MyPVRGuide.xml) + Window.IsMedia + !Window.IsActive(musicplaylisteditor) + !Window.IsActive(videoplaylist) + !Window.IsActive(musicplaylist)" />
					<include content="menucontrol_musicplaylisteditor_settings" condition="Window.IsActive(musicplaylisteditor) | Window.IsActive(videoplaylist) | Window.IsActive(musicplaylist)" />
				</control>
			
			</control>
		
		</control>
		</definition>
	</include>
	
	<include name="menucontrol_currentlyplaying">
		<control type="group" id="6048">
			<description>PlaybackCtrl</description>
			<width>98%</width>
			<height>500</height>
			<visible>$EXP[IsCurrentyPlayingCommon]</visible>
			
			<control type="label">
				<left>10</left>
				<right>10</right>
				<height>20</height>
				<width>425</width>
				<font>montserrat_18_semibold</font>
				<align>center</align>
				<label>CURRENTLY  PLAYING</label>
				<textcolor>$VAR[color_lib_menu_accent]</textcolor>
			</control>
			
			<control type="label">
				<top>30</top>
				<visible>$EXP[PlayerClearLogo_IsEmpty]</visible>
				<left>10</left>
				<right>10</right>
				<height>100</height>
				<width>425</width>
				<wrapmultiline>true</wrapmultiline>
				<font>montserrat_22_semibold</font>
				<align>center</align>
				<label>$VAR[Menucontrol_LogoFallback,&quot;[B],[/B]&quot;]</label>
				<textcolor>$VAR[color_lib_menu_item_nf]</textcolor>
			</control>
			
			<control type="label">
				<visible>player.hasaudio</visible>
				<description>bad bcause overlay temp just use if logo empty</description>
				<visible>$EXP[PlayerClearLogo_IsEmpty]</visible>
				<top>30</top>
				<left>10</left>
				<right>10</right>
				<height>15</height>
				<width>425</width>
				<font>notosans_20_bold</font>
				<align>center</align>
				<label>$INFO[MusicPlayer.Album]</label>
				<textcolor>$VAR[color_lib_menu_item_fo]</textcolor>
			</control>
			
			<control type="image">
				<texture>$VAR[PlayerClearlogo]</texture>
				<visible>!$EXP[PlayerClearLogo_IsEmpty]</visible>
				<aspectratio aligny="center" align="center">keep</aspectratio>
				<height>90</height>
				<top>30</top>
				<left>15</left>
				<right>0</right>
			</control>
			<control type="label">
				<top>130</top>
				<left>20</left>
				<height>20</height>
				<width>425</width>
				<font>notosans_18_bold</font>
				<align>center</align>
				<label>$VAR[MenucontrolPlayerDuration]</label>
				<textcolor>$VAR[color_lib_menu_accent]</textcolor>
			</control>
			
			<control type="image">
				<visible>Player.HasAudio</visible>
				<texture diffuse="diffuse/compactdisk.png">$VAR[PlayerDisc]</texture>
				<aspectratio aligny="bottom" align="right">keep</aspectratio>
				<width>245</width>
				<height>245</height>
				<top>160</top>
				<left>200</left>
				<right>10</right>
				<animation effect="rotate" end="-360" center="auto" time="4800" loop="true" reversible="false" condition="!Player.Paused">Conditional</animation>
			</control>
			<control type="image">
				<visible>Player.HasAudio</visible>
				<texture>$INFO[Player.Icon]</texture>
				<aspectratio aligny="center" align="left">keep</aspectratio>
				<width>245</width>
				<height>245</height>
				<top>160</top>
				<left>20</left>
				<right>10</right>
				<animation effect="slide" start="0,0" end="90,0" center="auto" time="0" condition="String.IsEmpty(Player.Art(album.discart)) + String.IsEmpty(Player.Art(discart))">Conditional</animation>
			</control>
			
			<control type="videowindow">
				<visible>!Player.HasAudio</visible>
				<height>262</height>
				<top>150</top>
				<left>20</left>
			</control>
			
			<include content="Menucontrol_PlaybackCtrlButton">
				<param name="id" value="1" />
				<param name="actionid" value="previous" />
				<param name="left" value="120" />
				<param name="onleft" value="60494" />
				<param name="onright" value="60492" />
				<param name="visible" value="MusicPlayer.HasPrevious" />
				<param name="action2" value="PlayerControl(previous)" />
			</include>
			<control type="togglebutton" id="60492">
				<left>175</left>
				<top>425</top>
				<width>45</width>
				<height>45</height>
				<label />
				<altlabel />
				<texturefocus colordiffuse="$VAR[color_lib_menu_accent]">buttons/osd/play_fo.png</texturefocus>
				<texturenofocus colordiffuse="$VAR[color_lib_menu_item_nf]">buttons/osd/play.png</texturenofocus>
				<alttexturefocus colordiffuse="$VAR[color_lib_menu_accent]">buttons/osd/pause_fo.png</alttexturefocus>
				<alttexturenofocus colordiffuse="$VAR[color_lib_menu_item_nf]">buttons/osd/pause.png</alttexturenofocus>
				<usealttexture>!Player.Paused</usealttexture>
				<onup>19</onup>
				<ondown>911</ondown>
				<onfocus condition="!String.IsEqual(Window(Home).Property(menucontrol_active),common)">SetProperty(menucontrol_active,common,Home)</onfocus>
				<onright>60493</onright>
				<onleft>60491</onleft>
				<onclick>PlayerControl(play)</onclick>
			</control>
			
			<include content="Menucontrol_PlaybackCtrlButton">
				<param name="id" value="3" />
				<param name="actionid" value="stop" />
				<param name="left" value="230" />
				<param name="onleft" value="60492" />
				<param name="onright" value="60494" />
			</include>
			<include content="Menucontrol_PlaybackCtrlButton">
				<param name="id" value="4" />
				<param name="actionid" value="next" />
				<param name="left" value="285" />
				<param name="onleft" value="60493" />
				<param name="onright" value="SetFocus(8999)" />
				<param name="visible" value="MusicPlayer.HasNext" />
			</include>
		</control>
	</include>
	
	<!-- View Type Settings - use include placements? myvideo, mymusic...? -->
	<!-- differ some things between videos|music|musicplaylisteditor... -->
	
	<include name="menucontrol_musicplaylisteditor_settings">
		<control type="label" id="4228">
			<label>   [B]$LOCALIZE[14018][/B]</label>
			<height>60</height>
			<font>notosans_25_regular_l</font>
			<textcolor>$VAR[color_lib_menu_item_fo]</textcolor>
		</control>
		<control type="radiobutton" id="4008">
			<include>Menucontrol_RadioButton</include>
			<label>Show BG Panel</label>
			<onclick>Skin.ToggleSetting(media_isplaylist_showbgpanel)</onclick>
			<selected>Skin.HasSetting(media_isplaylist_showbgpanel)</selected>
		</control>
	</include>
	
	<include name="menucontrol_mymedia_epg_grid_settings">
		<control type="radiobutton" id="4008">
			<description>need reload else freeze</description>
			<include>Menucontrol_RadioButton</include>
			<label>Hide Channel Nr and Labels</label>
			<visible>Container(930).HasFocus(9302)</visible>
			<visible>Control.IsVisible(50) | Control.IsVisible(51) | Control.IsVisible(52)</visible>
			<onclick condition="Control.IsVisible(50)">Skin.ToggleSetting(Grid_50_HideChannelLabels)</onclick>
			<onclick condition="Control.IsVisible(51)">Skin.ToggleSetting(Grid_51_HideChannelLabels)</onclick>
			<onclick condition="Control.IsVisible(52)">Skin.ToggleSetting(Grid_52_HideChannelLabels)</onclick>
			<onclick condition="window.IsActive(tvguide)">ReloadSkin()</onclick>
			<selected>
			[
			 Control.IsVisible(50) + Skin.HasSetting(Grid_50_HideChannelLabels) | 
			 Control.IsVisible(51) + Skin.HasSetting(Grid_51_HideChannelLabels) |
			 Control.IsVisible(52) + Skin.HasSetting(Grid_52_HideChannelLabels)
			]
			</selected>
		</control>
		<control type="button" id="4009">
			<include>Menucontrol_RadioButton</include>
			<label>$LOCALIZE[31215]</label>
			<visible>Container(930).HasFocus(9302)</visible>
			<onclick>Skin.SelectBool(31215, 31216|Grid_greatertimespan, 31217|Grid_commontimespan, 31218|Grid_lesstimespan)</onclick>
			<onclick>ReloadSkin()</onclick>
		</control>
	</include>
	
	<include name="menucontrol_mymedia_viewid_settings">
			
			<!-- <include content="spacer_h">
				<param name="id" value="4006" />
				<param name="gap" value="40" />
			</include>
			<control type="label" id="4228">
				<label>   [B]$LOCALIZE[14018][/B]</label>
				<height>60</height>
				<font>notosans_25_regular_l</font>
				<textcolor>$VAR[color_lib_menu_item_fo]</textcolor>
			</control> -->
			<control type="radiobutton" id="4007">
				<include>Menucontrol_RadioButton</include>
				<visible>Container(930).HasFocus(9302)</visible>
				<visible>Control.IsVisible(520)</visible>
				<label>Disable Touch Control Buttons</label>
				<onclick condition="Control.IsVisible(520)">Skin.ToggleSetting(View_520_Hide_Touch_Controls)</onclick>
				<selected>Control.IsVisible(520) + Skin.HasSetting(View_520_Hide_Touch_Controls)</selected>
			</control>
			
			<control type="radiobutton" id="4008">
				
				<include>Menucontrol_RadioButton</include>
				<label>Show BG Panel</label>
				
				<visible>Container(930).HasFocus(9302)</visible>
				<visible>Control.IsVisible(50) | Control.IsVisible(51) | Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(54) | Control.IsVisible(56) | Control.IsVisible(510) | Control.IsVisible(511) | Control.IsVisible(512) | Control.IsVisible(513)</visible>
				<onclick condition="Control.IsVisible(50)">Skin.ToggleSetting(View_50_ShowBGPanel)</onclick>
				<onclick condition="Control.IsVisible(51)">Skin.ToggleSetting(View_51_ShowBGPanel)</onclick>
				<onclick condition="Control.IsVisible(52)">Skin.ToggleSetting(View_52_ShowBGPanel)</onclick>
				<onclick condition="Control.IsVisible(53)">Skin.ToggleSetting(View_53_ShowBGPanel)</onclick>
				<onclick condition="Control.IsVisible(54)">Skin.ToggleSetting(View_54_ShowBGPanel)</onclick>
				<onclick condition="Control.IsVisible(56)">Skin.ToggleSetting(View_56_ShowBGPanel)</onclick>
				<onclick condition="Control.IsVisible(510)">Skin.ToggleSetting(View_510_ShowBGPanel)</onclick>
				<onclick condition="Control.IsVisible(511)">Skin.ToggleSetting(View_511_ShowBGPanel)</onclick>
				<onclick condition="Control.IsVisible(512)">Skin.ToggleSetting(View_512_ShowBGPanel)</onclick>
				<onclick condition="Control.IsVisible(513)">Skin.ToggleSetting(View_513_ShowBGPanel)</onclick>
				<selected>
				[
				 Control.IsVisible(50) + Skin.HasSetting(View_50_ShowBGPanel) | 
                 Control.IsVisible(51) + Skin.HasSetting(View_51_ShowBGPanel) | 
			 	 Control.IsVisible(52) + Skin.HasSetting(View_52_ShowBGPanel) | 
				 Control.IsVisible(53) + Skin.HasSetting(View_53_ShowBGPanel) | 
				 Control.IsVisible(54) + Skin.HasSetting(View_54_ShowBGPanel) | 
				 Control.IsVisible(56) + Skin.HasSetting(View_56_ShowBGPanel) | 
				 Control.IsVisible(510) + Skin.HasSetting(View_510_ShowBGPanel) | 
				 Control.IsVisible(511) + Skin.HasSetting(View_511_ShowBGPanel) | 
				 Control.IsVisible(512) + Skin.HasSetting(View_512_ShowBGPanel) | 
				 Control.IsVisible(513) + Skin.HasSetting(View_513_ShowBGPanel)
				]
				</selected>
			</control>
			
			<control type="radiobutton" id="4207">
				<include>Menucontrol_RadioButton</include>
				<label>Disable Fanart</label>
				<visible>Container(930).HasFocus(9302)</visible>
				<visible>Control.IsVisible(510) | Control.IsVisible(511) | Control.IsVisible(512) | Control.IsVisible(513)</visible>
				<onclick condition="Control.IsVisible(510)">Skin.ToggleSetting(View_510_disabledart)</onclick>
				<onclick condition="Control.IsVisible(511)">Skin.ToggleSetting(View_511_disabledart)</onclick>
				<onclick condition="Control.IsVisible(512)">Skin.ToggleSetting(View_512_disabledart)</onclick>
				<onclick condition="Control.IsVisible(513)">Skin.ToggleSetting(View_513_disabledart)</onclick>
				<selected>
				[
				 Control.IsVisible(510) + Skin.HasSetting(View_510_disabledart) | 
			 	 Control.IsVisible(511) + Skin.HasSetting(View_511_disabledart) | 
				 Control.IsVisible(512) + Skin.HasSetting(View_512_disabledart) | 
				 Control.IsVisible(513) + Skin.HasSetting(View_513_disabledart)
				]
				</selected>
			</control>
			<control type="radiobutton" id="4208">
				<include>Menucontrol_RadioButton</include>
				<label>Info Gaps - MAYBE DELETE</label>
				<visible>Container(930).HasFocus(9302)</visible>
				<visible>Control.IsVisible(57) | Control.IsVisible(510) | Control.IsVisible(511) | Control.IsVisible(512) | Control.IsVisible(513)</visible>
				<onclick condition="Control.IsVisible(57)">Skin.ToggleSetting(View_57_InfoPanel_gap)</onclick>
				<onclick condition="Control.IsVisible(510)">Skin.ToggleSetting(View_510_InfoPanel_gap)</onclick>
				<onclick condition="Control.IsVisible(511)">Skin.ToggleSetting(View_511_InfoPanel_gap)</onclick>
				<onclick condition="Control.IsVisible(512)">Skin.ToggleSetting(View_512_InfoPanel_gap)</onclick>
				<onclick condition="Control.IsVisible(513)">Skin.ToggleSetting(View_513_InfoPanel_gap)</onclick>
				
				<selected>
				[
				 Control.IsVisible(57) + Skin.HasSetting(View_57_InfoPanel_gap) | 
                 Control.IsVisible(510) + Skin.HasSetting(View_510_InfoPanel_gap) | 
			 	 Control.IsVisible(511) + Skin.HasSetting(View_511_InfoPanel_gap) | 
				 Control.IsVisible(512) + Skin.HasSetting(View_512_InfoPanel_gap) | 
				 Control.IsVisible(513) + Skin.HasSetting(View_513_InfoPanel_gap)
				]
				</selected>
			</control>
			
			<control type="radiobutton" id="4009">
				<include>Menucontrol_RadioButton</include>
				<label>Disable tags</label>
				<visible>!Container.Content(Studios)</visible>
				<visible>Container(930).HasFocus(9302)</visible>
				<visible>Control.IsVisible(51) | Control.IsVisible(53) | Control.IsVisible(54) | Control.IsVisible(503) | Control.IsVisible(504) | Control.IsVisible(510) | Control.IsVisible(512) | Control.IsVisible(513)</visible>
				<onclick condition="Control.IsVisible(51)">Skin.ToggleSetting(View_51_DisableTags)</onclick>
				<onclick condition="Control.IsVisible(53)">Skin.ToggleSetting(View_53_DisableTags)</onclick>
				<onclick condition="Control.IsVisible(54)">Skin.ToggleSetting(View_54_DisableTags)</onclick>
				<onclick condition="Control.IsVisible(503)">Skin.ToggleSetting(View_503_DisableTags)</onclick>
				<onclick condition="Control.IsVisible(504)">Skin.ToggleSetting(View_504_DisableTags)</onclick>
				<onclick condition="Control.IsVisible(510)">Skin.ToggleSetting(View_510_DisableTags)</onclick>
				<onclick condition="Control.IsVisible(512)">Skin.ToggleSetting(View_512_DisableTags)</onclick>
				<onclick condition="Control.IsVisible(513)">Skin.ToggleSetting(View_513_DisableTags)</onclick>
				<selected>
				[
				 Control.IsVisible(51) + Skin.HasSetting(View_51_DisableTags) | 
				 Control.IsVisible(53) + Skin.HasSetting(View_53_DisableTags) | 
				 Control.IsVisible(54) + Skin.HasSetting(View_54_DisableTags) | 
				 Control.IsVisible(503) + Skin.HasSetting(View_503_DisableTags) | 
				 Control.IsVisible(504) + Skin.HasSetting(View_504_DisableTags) | 
				 Control.IsVisible(510) + Skin.HasSetting(View_510_DisableTags) | 
				 Control.IsVisible(512) + Skin.HasSetting(View_512_DisableTags) | 
				 Control.IsVisible(513) + Skin.HasSetting(View_513_DisableTags)
				]
				</selected>
			</control>
			
			<control type="radiobutton" id="4010">
				<include>Menucontrol_RadioButton</include>
				<label>Show footer</label>
				<visible>Container(930).HasFocus(9302)</visible>
				<visible>Control.IsVisible(50) | Control.IsVisible(51) | Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(54) | Control.IsVisible(56) | Control.IsVisible(502) | Control.IsVisible(503) | Control.IsVisible(504) | Control.IsVisible(510) | Control.IsVisible(511) | Control.IsVisible(512) | Control.IsVisible(513)</visible>
				<onclick condition="Control.IsVisible(50)">Skin.ToggleSetting(View_50_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(51)">Skin.ToggleSetting(View_51_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(52)">Skin.ToggleSetting(View_52_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(53)">Skin.ToggleSetting(View_53_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(54)">Skin.ToggleSetting(View_54_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(56)">Skin.ToggleSetting(View_56_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(502)">Skin.ToggleSetting(View_502_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(503)">Skin.ToggleSetting(View_503_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(504)">Skin.ToggleSetting(View_504_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(510)">Skin.ToggleSetting(View_510_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(511)">Skin.ToggleSetting(View_511_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(512)">Skin.ToggleSetting(View_512_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(513)">Skin.ToggleSetting(View_513_DisableFooter)</onclick>
				<selected>
				[
				 Control.IsVisible(50) + !Skin.HasSetting(View_50_DisableFooter) | 
                 Control.IsVisible(51) + !Skin.HasSetting(View_51_DisableFooter) | 
				 Control.IsVisible(52) + !Skin.HasSetting(View_52_DisableFooter) | 
				 Control.IsVisible(53) + !Skin.HasSetting(View_53_DisableFooter) | 
				 Control.IsVisible(54) + !Skin.HasSetting(View_54_DisableFooter) | 
				 Control.IsVisible(56) + !Skin.HasSetting(View_56_DisableFooter) | 
				 Control.IsVisible(502) + !Skin.HasSetting(View_502_DisableFooter) | 
				 Control.IsVisible(503) + !Skin.HasSetting(View_503_DisableFooter) | 
				 Control.IsVisible(504) + !Skin.HasSetting(View_504_DisableFooter) | 
				 Control.IsVisible(510) + !Skin.HasSetting(View_510_DisableFooter) | 
				 Control.IsVisible(511) + !Skin.HasSetting(View_511_DisableFooter) | 
				 Control.IsVisible(512) + !Skin.HasSetting(View_512_DisableFooter) | 
				 Control.IsVisible(513) + !Skin.HasSetting(View_513_DisableFooter)
				]
				</selected>
			</control>
	<!--
	video
	id 50
		keyart
		animatedposter
		poster - default
		clearlogo
		clearart
		
		disc e.g. 
		
	id 56
		animatedfanart
		fanart
		landscape - default
		banner
		clearlogo
		clearart
		characterart
		
		
	music
	id 50
		thumb
		disc - song
		disc - album
	
	
	-->
		
			<control type="radiobutton" id="4011">
				<description>auto play trailer</description>
				<include>Menucontrol_RadioButton</include>
				<label>Auto Play Trailer</label>
				<visible>Container(930).HasFocus(9302)</visible>
				<visible>Control.IsVisible(50) | Control.IsVisible(56) | Control.IsVisible(502) | Control.IsVisible(503) | Control.IsVisible(504) | Control.IsVisible(510) | Control.IsVisible(511) | Control.IsVisible(512) | Control.IsVisible(513) | Control.IsVisible(520)</visible>
				<onclick condition="Control.IsVisible(50)">Skin.ToggleSetting(View_50_AutoPlayTrailer)</onclick>
				<onclick condition="Control.IsVisible(56)">Skin.ToggleSetting(View_56_AutoPlayTrailer)</onclick>
				<onclick condition="Control.IsVisible(502)">Skin.ToggleSetting(View_502_AutoPlayTrailer)</onclick>
				<onclick condition="Control.IsVisible(503)">Skin.ToggleSetting(View_503_AutoPlayTrailer)</onclick>
				<onclick condition="Control.IsVisible(504)">Skin.ToggleSetting(View_504_AutoPlayTrailer)</onclick>
				<onclick condition="Control.IsVisible(510)">Skin.ToggleSetting(View_510_AutoPlayTrailer)</onclick>
				<onclick condition="Control.IsVisible(511)">Skin.ToggleSetting(View_511_AutoPlayTrailer)</onclick>
				<onclick condition="Control.IsVisible(512)">Skin.ToggleSetting(View_512_AutoPlayTrailer)</onclick>
				<onclick condition="Control.IsVisible(513)">Skin.ToggleSetting(View_513_AutoPlayTrailer)</onclick>
				<onclick condition="Control.IsVisible(520)">Skin.ToggleSetting(View_520_AutoPlayTrailer)</onclick>
				<selected>
				[
				 Control.IsVisible(50) + Skin.HasSetting(View_50_AutoPlayTrailer) | 
                 Control.IsVisible(56) + Skin.HasSetting(View_56_AutoPlayTrailer) | 
				 Control.IsVisible(502) + Skin.HasSetting(View_502_AutoPlayTrailer) | 
				 Control.IsVisible(503) + Skin.HasSetting(View_503_AutoPlayTrailer) | 
				 Control.IsVisible(504) + Skin.HasSetting(View_504_AutoPlayTrailer) | 
                 Control.IsVisible(510) + Skin.HasSetting(View_510_AutoPlayTrailer) | 
				 Control.IsVisible(511) + Skin.HasSetting(View_511_AutoPlayTrailer) | 
				 Control.IsVisible(512) + Skin.HasSetting(View_512_AutoPlayTrailer) | 
				 Control.IsVisible(513) + Skin.HasSetting(View_513_AutoPlayTrailer) | 
				 Control.IsVisible(520) + Skin.HasSetting(View_520_AutoPlayTrailer)
				]
				</selected>
			</control>
			
			<include content="PreferArt_Button">
				<param name="button_id" value="4012" />
				<param name="artwork_localized_id" value="Key Art" />
				<param name="artwork" value="keyart" />
				<param name="visible" value="Control.IsVisible(50) + Window.IsActive(videos)" />
				
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedposter)">Skin.ToggleSetting(View_50_Prefer_animatedposter)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedfanart)">Skin.ToggleSetting(View_50_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Disc_Video)">Skin.ToggleSetting(View_50_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_poster)">Skin.ToggleSetting(View_50_Prefer_poster)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearlogo)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearart)">Skin.ToggleSetting(View_50_Prefer_clearart)</onclick>
				
			</include>
			
			<include content="PreferArt_Button">
				<param name="button_id" value="4013" />
				<param name="artwork_localized_id" value="animatedposter" />
				<param name="artwork" value="animatedposter" />
				<param name="visible" value="Control.IsVisible(50) + Window.IsActive(videos)" />
				
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedfanart)">Skin.ToggleSetting(View_50_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Disc_Video)">Skin.ToggleSetting(View_50_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_keyart)">Skin.ToggleSetting(View_50_Prefer_keyart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearlogo)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearart)">Skin.ToggleSetting(View_50_Prefer_clearart)</onclick>
            
			</include>
			
			<include content="PreferArt_Button">
				<param name="button_id" value="4014" />
				<param name="artwork_localized_id" value="Poster" />
				<param name="artwork" value="poster" />
				<param name="visible" value="false" />
			
			</include>
			
			<include content="PreferArt_Button">
				<param name="button_id" value="4015" />
				<param name="artwork_localized_id" value="animatedfanart" />
				<param name="artwork" value="animatedfanart" />
				<param name="visible" value="Control.IsVisible(56) + Window.IsActive(videos)" />
				
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Album)">Skin.ToggleSetting(View_56_Prefer_Discart_Album)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Song)">Skin.ToggleSetting(View_56_Prefer_Discart_Song)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Disc_Video)">Skin.ToggleSetting(View_56_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearart)">Skin.ToggleSetting(View_56_Prefer_clearart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearlogo)">Skin.ToggleSetting(View_56_Prefer_clearlogo)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_CircleArt)">Skin.ToggleSetting(View_56_Prefer_CircleArt)</onclick>
            
			</include>
			
			<include content="PreferArt_Button">
				<param name="button_id" value="4016" />
				<param name="artwork_localized_id" value="Landscape" />
				<param name="artwork" value="landscape" />
				<param name="visible" value="false" />
				
			</include>
			
			<include content="PreferArt_Button">
				<param name="button_id" value="4017" />
				<param name="artwork_localized_id" value="$LOCALIZE[20020]" />
				<param name="artwork" value="banner" />
				<param name="visible" value="false" />
			
			</include>
			
			<include content="PreferArt_Button">
				<param name="button_id" value="4018" />
				<param name="artwork_localized_id" value="Clear Logo" />
				<param name="artwork" value="clearlogo" />
				<param name="visible" value="Control.IsVisible(50) | Control.IsVisible(56)" />
				
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedposter)">Skin.ToggleSetting(View_50_Prefer_animatedposter)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Discart_Album)">Skin.ToggleSetting(View_50_Prefer_Discart_Album)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Discart_Song)">Skin.ToggleSetting(View_50_Prefer_Discart_Song)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Disc_Video)">Skin.ToggleSetting(View_50_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_poster)">Skin.ToggleSetting(View_50_Prefer_poster)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_keyart)">Skin.ToggleSetting(View_50_Prefer_keyart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearart)">Skin.ToggleSetting(View_50_Prefer_clearart)</onclick>
				
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_animatedfanart)">Skin.ToggleSetting(View_56_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Album)">Skin.ToggleSetting(View_56_Prefer_Discart_Album)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Song)">Skin.ToggleSetting(View_56_Prefer_Discart_Song)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Disc_Video)">Skin.ToggleSetting(View_56_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearart)">Skin.ToggleSetting(View_56_Prefer_clearart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_CircleArt)">Skin.ToggleSetting(View_56_Prefer_CircleArt)</onclick>
            
			</include>
			<include content="PreferArt_Button">
				
				<param name="button_id" value="4019" />
				<param name="artwork_localized_id" value="Clear Art (else Char)" />
				<param name="artwork" value="clearart" />
				<param name="visible" value="Control.IsVisible(50) | Control.IsVisible(56)" />
				
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedposter)">Skin.ToggleSetting(View_50_Prefer_animatedposter)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Discart_Album)">Skin.ToggleSetting(View_50_Prefer_Discart_Album)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Discart_Song)">Skin.ToggleSetting(View_50_Prefer_Discart_Song)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Disc_Video)">Skin.ToggleSetting(View_50_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_poster)">Skin.ToggleSetting(View_50_Prefer_poster)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_keyart)">Skin.ToggleSetting(View_50_Prefer_keyart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearlogo)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
				
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_animatedfanart)">Skin.ToggleSetting(View_56_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Album)">Skin.ToggleSetting(View_56_Prefer_Discart_Album)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Song)">Skin.ToggleSetting(View_56_Prefer_Discart_Song)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Disc_Video)">Skin.ToggleSetting(View_56_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearlogo)">Skin.ToggleSetting(View_56_Prefer_clearlogo)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_CircleArt)">Skin.ToggleSetting(View_56_Prefer_CircleArt)</onclick>
            
			</include>
			
			<control type="radiobutton" id="4020">
				<include>Menucontrol_RadioButton</include>
				<label>Prefer Discart - Video Nav</label>
				<visible>Container(930).HasFocus(9302)</visible>
				<visible>Window.IsActive(videos) + !Container.Content(tvshows) + [Control.IsVisible(50) | Control.IsVisible(56)]</visible>
				<onclick condition="Control.IsVisible(50)">Skin.ToggleSetting(View_50_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(56)">Skin.ToggleSetting(View_56_Prefer_Disc_Video)</onclick>
				
				
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedposter)">Skin.ToggleSetting(View_50_Prefer_animatedposter)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_poster)">Skin.ToggleSetting(View_50_Prefer_poster)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_keyart)">Skin.ToggleSetting(View_50_Prefer_keyart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearlogo)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearart)">Skin.ToggleSetting(View_50_Prefer_clearart)</onclick>
				
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_animatedfanart)">Skin.ToggleSetting(View_56_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearart)">Skin.ToggleSetting(View_56_Prefer_clearart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearlogo)">Skin.ToggleSetting(View_56_Prefer_clearlogo)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_CircleArt)">Skin.ToggleSetting(View_56_Prefer_CircleArt)</onclick>
				
				<selected>[Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Disc_Video) | Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Disc_Video)]</selected>
			</control>
			<control type="radiobutton" id="4021">
				<include>Menucontrol_RadioButton</include>
				<label>Prefer Discart - Music Songs</label>
				<visible>Container(930).HasFocus(9302)</visible>
				<visible>Window.IsActive(music) + Container.Content(Songs) + [Control.IsVisible(50) | Control.IsVisible(56)]</visible>
				<onclick condition="Control.IsVisible(50)">Skin.ToggleSetting(View_50_Prefer_Discart_Song)</onclick>
				<onclick condition="Control.IsVisible(56)">Skin.ToggleSetting(View_56_Prefer_Discart_Song)</onclick>
				
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedposter)">Skin.ToggleSetting(View_50_Prefer_animatedposter)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_poster)">Skin.ToggleSetting(View_50_Prefer_poster)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_keyart)">Skin.ToggleSetting(View_50_Prefer_keyart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_landscape)">Skin.ToggleSetting(View_50_Prefer_landscape)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearlogo)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearart)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
				
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_animatedfanart)">Skin.ToggleSetting(View_56_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearart)">Skin.ToggleSetting(View_56_Prefer_clearart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearlogo)">Skin.ToggleSetting(View_56_Prefer_clearlogo)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_CircleArt)">Skin.ToggleSetting(View_56_Prefer_CircleArt)</onclick>
            
				<selected>[Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Discart_Song) | Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Song)]</selected>
			</control>
			<control type="radiobutton" id="4022">
				<include>Menucontrol_RadioButton</include>
				<label>Prefer Discart - Music Albums</label>
				<visible>Container(930).HasFocus(9302)</visible>
				<visible>Window.IsActive(music) + Container.Content(Albums) + Control.IsVisible(50)</visible>
				<onclick condition="Control.IsVisible(50)">Skin.ToggleSetting(View_50_Prefer_Discart_Album)</onclick>
				
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedposter)">Skin.ToggleSetting(View_50_Prefer_animatedposter)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_poster)">Skin.ToggleSetting(View_50_Prefer_poster)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_keyart)">Skin.ToggleSetting(View_50_Prefer_keyart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearlogo)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearart)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
            
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_animatedfanart)">Skin.ToggleSetting(View_56_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearart)">Skin.ToggleSetting(View_56_Prefer_clearart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearlogo)">Skin.ToggleSetting(View_56_Prefer_clearlogo)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_CircleArt)">Skin.ToggleSetting(View_56_Prefer_CircleArt)</onclick>
            
				<selected>[Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Discart_Album) | Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Song)]</selected>
			</control>
			
			<control type="radiobutton" id="4023">
				<include>Menucontrol_RadioButton</include>
				<label>Prefer Circle Artwork with ClearLogo Overlay</label>
				<visible>Container(930).HasFocus(9302)</visible>
				<visible>Control.IsVisible(56)</visible>
				<onclick condition="Control.IsVisible(56)">Skin.ToggleSetting(View_56_Prefer_CircleArt)</onclick>
				
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_animatedfanart)">Skin.ToggleSetting(View_56_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Disc_Video)">Skin.ToggleSetting(View_56_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_50_Prefer_Discart_Song)">Skin.ToggleSetting(View_50_Prefer_Discart_Song)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_50_Prefer_Discart_Album)">Skin.ToggleSetting(View_50_Prefer_Discart_Album)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearart)">Skin.ToggleSetting(View_56_Prefer_clearart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearlogo)">Skin.ToggleSetting(View_56_Prefer_clearlogo)</onclick>
            
				<selected>Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_CircleArt)</selected>
			</control>
			
			<control type="radiobutton" id="4030">
				<include>Menucontrol_RadioButton</include>
				<label>Switch Artwotk and Info Position</label>
				<visible>Container(930).HasFocus(9302)</visible>
				<visible>Control.IsVisible(503) | Control.IsVisible(504)</visible>
				<onclick condition="Control.IsVisible(503)">Skin.ToggleSetting(view_503_fanart_left)</onclick>
				<onclick condition="Control.IsVisible(504)">Skin.ToggleSetting(view_504_fanart_left)</onclick>
				
				<!-- 
				also need set default bool on init load, skinupdate -->
				
				<!-- <onclick condition="Control.IsVisible(503) + [Skin.HasSetting(view_503_metadata_align_left) + Skin.HasSetting(view_503_fanart_left)]">Skin.ToggleSetting(view_503_fanart_left)</onclick> -->
				
				<onclick condition="Control.IsVisible(503) | Control.IsVisible(504)">ReloadSkin()</onclick>
				
				<selected>[Control.IsVisible(503) + Skin.HasSetting(view_503_fanart_left)] | [Control.IsVisible(504) + Skin.HasSetting(view_504_fanart_left)]</selected>
			</control>
			
			
			<!-- 
			<control type="radiobutton" id="4031">
				<include>Menucontrol_RadioButton</include>
				<visible>Container(930).HasFocus(9302)</visible>
				<label>Use Multirow Panel</label>
				<visible>Control.IsVisible(504)</visible>
				<onclick condition="Control.IsVisible(504)">Skin.ToggleSetting(view_504_multirow)</onclick>
				<onclick condition="Control.IsVisible(504)">ReloadSkin()</onclick>
				<selected>Control.IsVisible(504) + Skin.HasSetting(view_504_multirow)</selected>
			</control>
			 -->
			<control type="button" id="4032">
				<include>Menucontrol_RadioButton</include>
				<label>31209</label>
				<visible>Container(930).HasFocus(9302)</visible>
				<visible>Control.IsVisible(503) | Control.IsVisible(504)</visible>
				<onclick condition="Control.IsVisible(503)">Skin.SelectBool(31209, 31210|view_503_metadata_align_left, 31211|view_503_metadata_align_center, 31212|view_503_metadata_align_right)</onclick>
				<onclick condition="Control.IsVisible(504)">Skin.SelectBool(31209, 31210|view_504_metadata_align_left, 31211|view_504_metadata_align_center, 31212|view_504_metadata_align_right)</onclick>
				
				<onclick condition="Control.IsVisible(503) | Control.IsVisible(504)">ReloadSkin()</onclick>
			</control>
			
			<control type="radiobutton" id="4035">
				<include>Menucontrol_RadioButton</include>
				<label>Hide Plot</label>
				<visible>Container(930).HasFocus(9302)</visible>
				<visible>Control.IsVisible(503) | Control.IsVisible(504)</visible>
				<onclick condition="Control.IsVisible(503)">Skin.ToggleSetting(view_503_hideplot)</onclick>
				<onclick condition="Control.IsVisible(504)">Skin.ToggleSetting(view_504_hideplot)</onclick>
				<onclick condition="Control.IsVisible(503) | Control.IsVisible(504)">ReloadSkin()</onclick>
				<selected>[Control.IsVisible(503) + Skin.HasSetting(view_503_hideplot)] | [Control.IsVisible(504) + Skin.HasSetting(view_504_hideplot)]</selected>
			</control>
			
			<control type="radiobutton" id="4036">
				<include>Menucontrol_RadioButton</include>
				<label>Be able to focus Cast Container ([B]↓[/B])</label>
				<visible>Container(930).HasFocus(9302)</visible>
				<visible>Control.IsVisible(503) | Control.IsVisible(504)</visible>
				<onclick condition="Control.IsVisible(503)">Skin.ToggleSetting(view_503_focusable_cast)</onclick>
				<onclick condition="Control.IsVisible(504)">Skin.ToggleSetting(view_504_focusable_cast)</onclick>
				<selected>[Control.IsVisible(503) + Skin.HasSetting(view_503_focusable_cast)] | [Control.IsVisible(504) + Skin.HasSetting(view_504_focusable_cast)]</selected>
			</control>
			<control type="radiobutton" id="4037">
				<visible>false</visible>
				<include>Menucontrol_RadioButton</include>
				<label>Never Show Cast</label>
				<visible>Container(930).HasFocus(9302)</visible>
				<visible>Control.IsVisible(503) | Control.IsVisible(504)</visible>
				
				<onclick condition="Control.IsVisible(503) + Skin.HasSetting(view_503_focusable_cast)">Skin.ToggleSetting(view_503_focusable_cast)</onclick>
				<onclick condition="Control.IsVisible(503)">Skin.ToggleSetting(view_503_hide_cast)</onclick>
				
				<onclick condition="Control.IsVisible(504) + Skin.HasSetting(view_504_focusable_cast)">Skin.ToggleSetting(view_504_focusable_cast)</onclick>
				<onclick condition="Control.IsVisible(504)">Skin.ToggleSetting(view_504_hide_cast)</onclick>
				
				<selected>[Control.IsVisible(503) + Skin.HasSetting(view_503_hide_cast)] | [Control.IsVisible(504) + Skin.HasSetting(view_504_hide_cast)]</selected>
			</control>
		
			<control type="radiobutton" id="4040">
				<include>Menucontrol_RadioButton</include>
				<label>View_58_DisableOnlineTrailers</label>
				<visible>Container(930).HasFocus(9302)</visible>
				<visible>Control.IsVisible(58)</visible>
				<onclick>Skin.ToggleSetting(View_58_DisableOnlineTrailers)</onclick>
				<onclick>ReloadSkin()</onclick>
				<selected>Skin.HasSetting(View_58_DisableOnlineTrailers)</selected>
			</control>
			<control type="radiobutton" id="4041">
				<include>Menucontrol_RadioButton</include>
				<label>Show Plot right</label>
				<visible>Container(930).HasFocus(9302)</visible>
				<visible>Control.IsVisible(58)</visible>
				<onclick>Skin.ToggleSetting(view_58_EpisodeInfoRight)</onclick>
				<selected>Skin.HasSetting(view_58_EpisodeInfoRight)</selected>
			</control>
			<control type="radiobutton" id="40042">
				<include>Menucontrol_RadioButton</include>
				<label>EnebleFanart Background</label>
				<visible>Container(930).HasFocus(9302)</visible>
				<visible>Control.IsVisible(58)</visible>
				<onclick>Skin.ToggleSetting(view_58_EnableFanartBG)</onclick>
				<selected>Skin.HasSetting(view_58_EnableFanartBG)</selected>
			</control>
			<control type="radiobutton" id="4043">
				<include>Menucontrol_RadioButton</include>
				<visible>Container(930).HasFocus(9302)</visible>
				<label>Show Bottom Panel</label>
				<visible>Control.IsVisible(58)</visible>
				<onclick>Skin.ToggleSetting(view_58_EnableBottomPanel)</onclick>
				<selected>Skin.HasSetting(view_58_EnableBottomPanel)</selected>
			</control>
			<control type="radiobutton" id="4044">
				<include>Menucontrol_RadioButton</include>
				<label>Show Fanart right</label>
				<visible>Container(930).HasFocus(9302)</visible>
				<visible>Control.IsVisible(58)</visible>
				<onclick>Skin.ToggleSetting(view_58_FanartLeftAlignment)</onclick>
				<selected>Skin.HasSetting(view_58_FanartLeftAlignment)</selected>
			</control>
		</include>
	
	<include name="Menucontrol_Content_Navigation">
			<nested />
			
			<control type="button" id="7001">
				<visible>Container(930).HasFocus(9301)</visible>
				
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>$LOCALIZE[10004]</label2>
				<onclick>ActivateWindow(settings)</onclick>
				<visible>!Skin.HasSetting(menu_hide_navigationsettings)</visible>
			</control>
			<control type="button" id="7002">
				<visible>Container(930).HasFocus(9301)</visible>
				
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>do  a</label>
				<label2>$LOCALIZE[137]</label2>
				<include>Action_LibrarySearch</include>
				<visible>!Skin.HasSetting(menu_hide_navigationsearch)</visible>
			</control>
			<control type="button" id="7003">
				<visible>Container(930).HasFocus(9301)</visible>
				
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>$LOCALIZE[31050]</label2>
				<onclick>ActivateWindow(1110)</onclick>
				<visible>!Skin.HasSetting(menu_hide_navigationhubmusic)</visible>
			</control>
			<control type="button" id="7004">
				<visible>Container(930).HasFocus(9301)</visible>
				
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>$LOCALIZE[15016]</label2>
				<onclick>ActivateWindow(games)</onclick>
				<visible>!Skin.HasSetting(menu_hide_navigationhubmusic) + !Window.IsActive(games)</visible>
			</control>
			
			<control type="button" id="7005">
				<visible>Container(930).HasFocus(9301)</visible>
				
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>$LOCALIZE[10000]</label2>
				<onclick>ActivateWindow(home)</onclick>
				<visible>!Window.IsVisible(home)</visible>
				<visible>!Skin.HasSetting(menu_hide_navigationhome)</visible>
			</control>
			<control type="button" id="7006">
				<visible>Container(930).HasFocus(9301)</visible>
				
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>$LOCALIZE[13350]</label2>
				<onclick condition="Player.HasAudio">ActivateWindow(musicplaylist)</onclick>
				<onclick condition="Player.HasVideo">ActivateWindow(videoplaylist)</onclick>
				
			</control>
			
			<control type="button" id="7010">
				<visible>Container(930).HasFocus(9301)</visible>
				
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>$LOCALIZE[3]</label2>
				<onclick>ReplaceWindow(videos,library://video/)</onclick>
				<visible>!Window.Is(videos) + Library.HasContent(videos)</visible>
				<visible>!Skin.HasSetting(menu_hide_navigationvideos)</visible>
			</control>
			<control type="button" id="7011">
				<visible>Container(930).HasFocus(9301)</visible>
				
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>20342</label2>
				<onclick>ReplaceWindow(videos,videodb://movies/)</onclick>
				<visible>!string.contains(container.folderpath,movies)</visible>
				<visible>!Skin.HasSetting(menu_hide_navigationmovies)</visible>
			</control>
			<control type="button" id="7012">
				<visible>Container(930).HasFocus(9301)</visible>
				
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>20343</label2>
				<onclick>ReplaceWindow(videos,videodb://tvshows/)</onclick>
				<visible>!string.contains(container.folderpath,tvshows)</visible>
				<visible>!Skin.HasSetting(menu_hide_navigationtvshows)</visible>
			</control>
			<control type="button" id="7013">
				<visible>Container(930).HasFocus(9301)</visible>
				
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>$LOCALIZE[20012]</label2>
				<onclick>ReplaceWindow(videos,special://videoplaylists/)</onclick>
				<visible>!Skin.HasSetting(menu_hide_navigationvideoplaylists)</visible>
			</control>
		
			
			<control type="button" id="7015">
				<visible>Container(930).HasFocus(9301)</visible>
				
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>$LOCALIZE[2]</label2>
				<onclick>ReplaceWindow(music,musicdb:/)</onclick>
				<visible>!Window.Is(music) + Library.HasContent(Music)</visible>
				<visible>!Skin.HasSetting(menu_hide_navigationmusic)</visible>
			</control>
			<control type="button" id="7016">
				<visible>Container(930).HasFocus(9301)</visible>
				
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>20389</label2>
				<onclick>ReplaceWindow(videos,videodb://musicvideos/)</onclick>
				<visible>!string.contains(container.folderpath,musicvideos) + Library.HasContent(musicvideos)</visible>
				<visible>!Skin.HasSetting(menu_hide_navigationmusicvideos)</visible>
			</control>
			<control type="button" id="7017">
				<visible>Container(930).HasFocus(9301)</visible>
				
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>$LOCALIZE[20011]</label2>
				<onclick>ReplaceWindow(music,special://musicplaylists/)</onclick>
				<visible>!Skin.HasSetting(menu_hide_navigationmusicplaylists)</visible>
			</control>
			
			<control type="button" id="7019">
				<visible>Container(930).HasFocus(9301)</visible>
				
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>$LOCALIZE[1]</label2>
				<onclick>ReplaceWindow(pictures)</onclick>
				<visible>!Window.Is(pictures)</visible>
				<visible>!Skin.HasSetting(menu_hide_navigationpictures)</visible>
			</control>
			
			
			<control type="button" id="7030">
				<visible>Container(930).HasFocus(9304)</visible>
				<visible>System.HasPVRAddon</visible>
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>tvsearch</label2>
				<onclick>ReplaceWindow(tvsearch)</onclick>
				<visible>!Window.Is(tvsearch)</visible>
			</control>
			<control type="button" id="7031">
				<visible>Container(930).HasFocus(9304)</visible>
				<visible>System.HasPVRAddon</visible>
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>tvchannels</label2>
				<onclick>ReplaceWindow(tvchannels)</onclick>
				<visible>!Window.Is(tvchannels)</visible>
			</control>
			<control type="button" id="7032">
				<visible>Container(930).HasFocus(9304)</visible>
				<visible>System.HasPVRAddon</visible>
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>tvrecordings</label2>
				<onclick>ReplaceWindow(tvrecordings)</onclick>
				<visible>!Window.Is(tvrecordings)</visible>
			</control>
			<control type="button" id="7033">
				<visible>Container(930).HasFocus(9304)</visible>
				<visible>System.HasPVRAddon</visible>
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>tvguide</label2>
				<onclick>ReplaceWindow(tvguide)</onclick>
				<visible>!Window.Is(tvguide)</visible>
			</control>
			<control type="button" id="7034">
				<visible>Container(930).HasFocus(9304)</visible>
				<visible>System.HasPVRAddon</visible>
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>tvtimers</label2>
				<onclick>ReplaceWindow(tvtimers)</onclick>
				<visible>!Window.Is(tvtimers)</visible>
			</control>
			<control type="button" id="7035">
				<visible>Container(930).HasFocus(9304)</visible>
				<visible>System.HasPVRAddon</visible>
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>tvtimerrules</label2>
				<onclick>ReplaceWindow(tvtimerrules)</onclick>
				<visible>!Window.Is(tvtimerrules)</visible>
			</control>
			<control type="button" id="7040">
				<visible>Container(930).HasFocus(9305)</visible>
				<visible>System.HasPVRAddon</visible>
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>radiosearch</label2>
				<onclick>ReplaceWindow(radiosearch)</onclick>
				<visible>!Window.Is(radiosearch)</visible>
			</control>
			<control type="button" id="7041">
				<visible>Container(930).HasFocus(9305)</visible>
				<visible>System.HasPVRAddon</visible>
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>radiochannels</label2>
				<onclick>ReplaceWindow(radiochannels)</onclick>
				<visible>!Window.Is(radiochannels)</visible>
			</control>
			<control type="button" id="7042">
				<visible>Container(930).HasFocus(9305)</visible>
				<visible>System.HasPVRAddon</visible>
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>radiorecordings</label2>
				<onclick>ReplaceWindow(radiorecordings)</onclick>
				<visible>!Window.Is(radiorecordings)</visible>
			</control>
			<control type="button" id="7043">
				<visible>Container(930).HasFocus(9305)</visible>
				<visible>System.HasPVRAddon</visible>
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>radioguide</label2>
				<onclick>ReplaceWindow(radioguide)</onclick>
				<visible>!Window.Is(radioguide)</visible>
			</control>
			<control type="button" id="7044">
				<visible>Container(930).HasFocus(9305)</visible>
				<visible>System.HasPVRAddon</visible>
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>radiotimers</label2>
				<onclick>ReplaceWindow(radiotimers)</onclick>
				<visible>!Window.Is(radiotimers)</visible>
			</control>
			<control type="button" id="7045">
				<visible>Container(930).HasFocus(9305)</visible>
				<visible>System.HasPVRAddon</visible>
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>radiotimerrules</label2>
				<onclick>ReplaceWindow(radiotimerrules)</onclick>
				<visible>!Window.Is(radiotimerrules)</visible>
			</control>
		<include condition="window.isactive(weather)" content="menucontrol_settings_windowweather" />
		
	</include>
	
	<!-- Home.xml -->
	
	<include name="menucontrol_home_iconpanel_left">
		<control type="group">
			<description>info panel right</description>
			<animation effect="slide" start="0" end="-400" easing="in" tween="quadratic" time="300" condition="String.IsEqual(Window(Home).Property(menucontrol_active),home)">conditional</animation>
			<right>-400</right>
			<width>400</width>
			<height>100%</height>	
			<orientation>horizontal</orientation>
			<itemgap>10</itemgap>
			<usecontrolcoords>true</usecontrolcoords>
			<align>left</align>
			<visible>![Skin.HasSetting(HideTimeDate_Header) + Skin.HasSetting(HideWeather_Header)]</visible>
			
			<control type="image">
				<animation effect="fade" start="100" end="80" time="250" condition="String.IsEmpty(Window(Home).Property(menucontrol_active))">conditional</animation>
				<bordersize>2,0,0,0</bordersize>
				<texture colordiffuse="$VAR[color_home_menu_backgroundpanel]">colors/white80.png</texture>
				<bordertexture border="0,0,1,0" diffuse="colors/white80.png" colordiffuse="$VAR[color_home_menu_accent]">diffuse/gradientvertical.png</bordertexture>
			</control>
			
			<control type="group">
				<description>time and date</description>
				<visible>!Skin.HasSetting(HideTimeDate_Header)</visible>
				<top>20</top>
				<width>380</width>
				<height>110</height>
				<control type="label">
					<width>100%</width>
					<height>50</height>
					<align>right</align>
					<info>System.Time</info>
					<font>roboto_70_thin</font>
					<textcolor>$VAR[color_header_text_accent]</textcolor>
				</control>
				<control type="label">
					<right>2</right>
					<top>60</top>
					<width>100%</width>
					<height>20</height>
					<align>right</align>
					<info>System.Date</info>
					<textcolor>$VAR[color_header_text_main]</textcolor>
				</control>
			</control>
				
			<control type="grouplist">
				<usecontrolcoords>true</usecontrolcoords>
				<orientation>vertical</orientation>
				<itemgap>10</itemgap>
				<description>weather</description>
				<visible>!Skin.HasSetting(HideWeather_Header) + [!String.Contains(Weather.Temperature,$LOCALIZE[503]) | [!String.IsEqual(Weather.fanartcode,na) + Weather.IsFetched]]</visible>
				<top>200</top>
				<width>400</width>
				<height>600</height>
				
				<control type="image">
					<height>260</height>
					<width>400</width>
					<texture colordiffuse="$VAR[color_header_text_main]">$INFO[Weather.FanartCode,resource://resource.images.weathericons.outline-hd/,.png]</texture>
					<aspectratio aligny="bottom" align="center">keep</aspectratio>
				</control>
				<control type="label">
					<width>400</width>
					<height>auto</height>
					<align>center</align>
					<label>$INFO[Weather.Temperature]</label>
					<font>notosans_52_bold</font>
					<textcolor>$VAR[color_header_text_main]</textcolor>
				</control>
			</control>
		</control>
		
		
		<control type="group">
			<description>menu panel left</description>
			<animation effect="slide" start="0" end="455" easing="in" tween="quadratic" time="300" condition="String.IsEqual(Window(Home).Property(menucontrol_active),home)">conditional</animation>
			<left>-455</left>
			<width>540</width>
			<height>100%</height>
			
			<control type="image">
				<description>backgroundpanel</description>
				<animation effect="fade" start="100" end="80" time="250" condition="String.IsEmpty(Window(Home).Property(menucontrol_active))">conditional</animation>
				<bordersize>0,0,3,0</bordersize>
				<texture colordiffuse="$VAR[color_home_menu_backgroundpanel]">colors/white.png</texture>
				<bordertexture border="0,0,1,0" colordiffuse="$VAR[color_home_menu_accent]">diffuse/gradientvertical.png</bordertexture>
			</control>
			
			<include condition="Skin.HasSetting(menucontrol_home_showprofiles)" content="menucontrol_profiles" />
			
			
			<control type="panel" id="9000">
				<top>300</top>
				<bottom>300</bottom>
				<aligny>center</aligny>
				<orientation>vertical</orientation>
				
				<onup condition="String.IsEqual(Window(Home).Property(menucontrol_active),home) + [Control.IsVisible(7777)]">7777</onup>
				<onup condition="[String.IsEqual(Window(Home).Property(menucontrol_active),home) + !Control.IsVisible(7777)] | !String.IsEqual(Window(Home).Property(menucontrol_active),home)">9000</onup>
				
				<ondown condition="String.IsEqual(Window(Home).Property(menucontrol_active),home) + Control.IsVisible(8888)">8888</ondown>
				<ondown condition="[String.IsEqual(Window(Home).Property(menucontrol_active),home) + !Control.IsVisible(8888)] | !String.IsEqual(Window(Home).Property(menucontrol_active),home)">9000</ondown> 
				
				<onright condition="String.IsEqual(Window(Home).Property(menucontrol_active),home)">ClearProperty(menucontrol_active,home)</onright>
				<onright>5555</onright>
				
				<onleft condition="!String.IsEqual(Window(Home).Property(menucontrol_active),home)">SetProperty(menucontrol_active,home,home)</onleft>		
				<onleft condition="String.IsEqual(Window(Home).Property(menucontrol_active),home)">8888</onleft>		
				
				<onback condition="!String.IsEqual(Window(Home).Property(menucontrol_active),home)">SetProperty(menucontrol_active,home,home)</onback>
				<onback condition="String.IsEqual(Window(Home).Property(menucontrol_active),home)">ClearProperty(menucontrol_active,home)</onback>
				
				<itemlayout height="80">
					<include content="home_mainmenu_layout_verticalpanel">
						<param name="itemcolor" value="$VAR[color_home_menu_item_nf]" />
						<param name="itempanelcolor" value="$VAR[color_home_menu_itempanel_nf]" />
					</include>
				</itemlayout>
				
				<focusedlayout height="80">
					<include content="home_mainmenu_layout_verticalpanel">
						<param name="itemcolor" value="$VAR[color_home_menu_item_fo]" />
						<param name="itempanelcolor" value="$VAR[color_home_menu_itempanel_fo]" />
					</include>
					<control type="image">
						<animation effect="zoom" start="0,100" end="100,100" time="200" center="auto" tween="quadratic" easing="out" reversible="false">Focus</animation>
						<width>57</width>
						<right>15</right>
						<bottom>4</bottom>
						<height>4</height>
						<texture colordiffuse="color_home_menu_accent">colors/white.png</texture>
					</control>
				</focusedlayout>
				<include content="home_mainmenu_content" />
			</control>
			
			<control type="panel" id="8888">
				<height>120</height>
				<bottom>100</bottom>
				<left>50</left>
				<orientation>vertical</orientation>
				<onup>9000</onup>
				<ondown>9000</ondown>
				<onright condition="String.IsEqual(Window(Home).Property(menucontrol_active),home)">ClearProperty(menucontrol_active,home)</onright>
				<onright>5555</onright>
				<onleft>9000</onleft>		
				
				<itemlayout height="30">
					<control type="label">
						<left>10</left>
						<label>$INFO[Listitem.label]</label>
						<height>20</height>
						<font>liberationsans_22_bold_light</font>
						<textcolor>$VAR[color_home_menu_item_nf]</textcolor>
					</control>
				</itemlayout>
				
				<focusedlayout height="30">
					<control type="label">
						<label>$INFO[Listitem.label]</label>
						<height>20</height>
						<left>20</left>
						<font>liberationsans_22_bold_light</font>
						<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
					</control>
					<control type="image">
						<include>Animation_Item_Focus</include>
						<width>11</width>
						<height>11</height>
						<left>0</left>
						<top>5</top>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="color_home_menu_accent">artworkdiffuse/circle.png</texture>
					</control>
				</focusedlayout>
				<include content="shutdownmenu_content" />
			</control>
		</control>
	</include>
	

<!-- 
optional onclick focus fade submenu	
include condition  vs onclick condition 
<onlick>setfocus(5556)</onlick>
autosubmenu is mostly dynamic, even favourites when use a variable in 5556 content -
-->
	<!-- maybe <property name="target">$INFO[Skin.String(mainmenuitem$PARAM[nr]_target)]</property> need variable -->
	
	<!-- custom build ins could be interesting _executebuiltin-->
	<include name="mainmenu_item">
		<item id="900$PARAM[id]">
			<visible>!String.IsEmpty(Skin.String(mainmenuitem$PARAM[nr]_target)) | !String.IsEmpty(Skin.String(mainmenuitem$PARAM[nr]_path)) | !String.IsEmpty(Skin.String(mainmenuitem$PARAM[nr]_executebuiltin))</visible>
			<label>$INFO[Skin.String(mainmenuitem$PARAM[nr]_name)]</label>
			<label2 />
			<thumb>$INFO[Skin.String(mainmenuitem$PARAM[nr]_thumb)]</thumb>
			<icon>$INFO[Skin.String(mainmenuitem$PARAM[nr]_thumb)]</icon>
			<property name="fanart">$INFO[Skin.String(mainmenuitem$PARAM[nr]_fanart)]</property>
			<property name="submenu_containerpath">$INFO[Skin.String(mainmenuitem$PARAM[nr]_path)]</property>
			<property name="target">$INFO[Skin.String(mainmenuitem$PARAM[nr]_target)]</property>
			
			<property name="itemnumber">$NUMBER[$PARAM[nr]]</property>
			
			<include condition="String.IsEmpty(Window(home).Property(SwanShortcut_LinkWidget))" content="mainmenu_item_actions_common">
				<param name="nr" value="$PARAM[nr]" />
			</include>
			<include condition="!String.IsEmpty(Window(home).Property(SwanShortcut_LinkWidget))" content="mainmenu_item_actions_linkwidget" />
			
		</item>
	</include>
	
	<include condition="!String.IsEmpty(Window(home).Property(SwanShortcut_LinkWidget))" content="mainmenu_item_actions_" />
	
	<include name="mainmenu_item_actions_linkwidget">
		<onclick>Skin.SetString(userwidget$INFO[Window(home).Property(SwanShortcut_LinkWidget)]_linked,$INFO[Container(9000).ListItem.Property(itemnumber)])</onclick>
		<onclick>Dialog.Close(selectdialog)</onclick>
	</include>
	
	<include name="mainmenu_item_actions_common">
		<onclick condition="[Skin.HasSetting(home_tile_focus_submenu) + !Skin.HasSetting(mainmenuitem$PARAM[nr]_disablesubmenu)] + string.isequal(Skin.String(HomeLayout),MenuTiles)">SetFocus(5556)</onclick>   
		<onclick condition="String.IsEqual(Skin.String(mainmenuitem$PARAM[nr]_target),1120)">Skin.SetString(SearchTerm)</onclick>   
		<onclick condition="Skin.String(mainmenuitem$PARAM[nr]_executebuiltin)">$INFO[Skin.String(mainmenuitem$PARAM[nr]_executebuiltin)]</onclick>
		<onclick condition="!Skin.String(mainmenuitem$PARAM[nr]_path)">ActivateWindow($INFO[Skin.String(mainmenuitem$PARAM[nr]_target)],return)</onclick>
		<onclick condition="[[[!Skin.HasSetting(home_tile_focus_submenu) | Skin.HasSetting(mainmenuitem$PARAM[nr]_disablesubmenu)] + string.isequal(Skin.String(HomeLayout),MenuTiles)] | !string.isequal(Skin.String(HomeLayout),MenuTiles)] + !String.IsEmpty(Skin.String(mainmenuitem$PARAM[nr]_path))">ActivateWindow($INFO[Skin.String(mainmenuitem$PARAM[nr]_target),,$COMMA]$INFO[Skin.String(mainmenuitem$PARAM[nr]_path)],return)</onclick>
		<onclick condition="String.IsEqual(Window(Home).Property(menucontrol_active),home)">ClearProperty(menucontrol_active,home)</onclick>
	</include>
			
	
	
	<variable name="home_tiles_background">
		<value condition="skin.string(texturepath_userdefined_hometiles_background)">$INFO[skin.string(texturepath_userdefined_hometiles_background)]</value>
		<value>resource://resource.images.skin.swan/backgroundimages/</value>
	</variable>
	
	
<!--
getinfo - json provide propertys Library.Id = **episodeid ** seasonid **tvshowid **movieid ... default -1
https kodi.wiki/view/JSON-RPC_API/v8#VideoLibrary_2

{
  "id": "Library.Id",
  "type": "integer",
  "default": -1
}

https /kodi.wiki/view/Smart_playlists/Rules_and_groupings#Operators

https /github.com/xbmc/xbmc/blob/master/xbmc/playlists/SmartPlayList.cpp 
-->
<!-- fail , always return dbid 1 <value condition="player.hasvideo + !String.IsEmpty(videoplayer.dbid)">
			videodb://movies/titles/?movieid=$INFO[videoplayer.dbid]</value>
			videodb://movies/titles/$INFO[videoplayer.dbid]

embuary helper

path		   /? [property names?] =
musicdb://songs/? songid = $INFO[musicplayer.dbid]
musicdb://songs/? xsp    = %7B%22rules...%22%7D
...

plugin://script.embuary.helper/?info=getbyargs&filter_args='"{"field": "playcount", "operator": "lessthan", "value": "1"}"'&sort_args='"{"order": "ascending", "method": "title"}"'&tag=HDR&type=movie

 -->
		
		
		
	<variable name="CurrentlyPlayingItem">
		<value condition="player.hasaudio + !String.IsEmpty(musicplayer.dbid)">musicdb://songs/?songid=$INFO[musicplayer.dbid]</value>
		
		<value condition="player.hasvideo + videoplayer.content(movies)">videodb://movies/titles/?xsp=%7B%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22is%22%2C%22value%22%3A%5B%22$INFO[Player.Title]%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</value>
		<!-- <value condition="videoplayer.content(movies) + [!System.GetBool(videolibrary.groupmoviesets) | [System.GetBool(videolibrary.groupmoviesets) + String.IsEmpty(videoplayer.SetId)]]">videodb://movies/titles/$INFO[videoplayer.dbid]</value> -->
		
		<!-- <value condition="player.hasvideo + videoplayer.content(movies)">videodb://movies/titles/?xsp=%7B%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22is%22%2C%22value%22%3A%5B%22$INFO[Player.Title]%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D</value> -->
		<value condition="player.hasvideo + videoplayer.content(episodes)">videodb://tvshows/titles/-1/-1/?xsp=%7B%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22is%22%2C%22value%22%3A%5B%22$INFO[Player.Title]%22%5D%7D%5D%7D%2C%22type%22%3A%22episodes%22%7D</value>
	</variable>
	
	<include name="Menucontrol_Home_MenuTiles">

		<control type="list" id="699">
			<description>getinfo</description>
			<include>HiddenContainer</include>
			<onup>600</onup>
			<ondown>600</ondown>
			<onleft>600</onleft>
			<onright>600</onright>
			<ondown>600</ondown>
			<content limit="1">$VAR[CurrentlyPlayingItem]</content>
		</control>
		
		<control type="group">
			<!-- option a|b using big window
			<width>1800</width>
			<height>700</height>
			<centerleft>50%</centerleft>
			<centertop>50%</centertop>
			may get rid
			-->
			<visible>false</visible>
			<control type="videowindow" />
			<!-- <control type="image">
				option b overlay common if big window
			</control> -->
		</control>
		
		<control type="multiimage">
			<depth>DepthBackground</depth>
			<fadetime>3000</fadetime>
			<imagepath>$VAR[home_tiles_background]</imagepath>
		</control>
		
		
		
		<control type="group">
			<description>in future template for currently playing bar - ref musci_hub n skinsetting for use it at top</description>
			<visible>$EXP[IsCurrentyPlayingCommon] + !$EXP[Infodialog_IsActive]</visible>
			<bottom>0</bottom>
			<height>215</height>
			<width>100%</width>
			<centerleft>50%</centerleft>
			<control type="image">
				<description>bg image alpha D9 85% </description>
				<texture colordiffuse="D9131313">colors/white.png</texture>
			</control>
			<control type="videowindow">
				<decription>video window centered</decription>
				<visible>player.hasvideo</visible>
				<top>15</top>
				<height>190</height>
			</control>
			<control type="gamewindow">
				<decription>game window centered</decription>
				<top>15</top>
				<height>190</height>
			</control>
			<control type="image">
				<decription>thumb artist n album centered</decription>
				<visible>player.hasaudio</visible>
				<top>15</top>
				<height>190</height>
				<width>342</width>
				<centerleft>50%</centerleft>
				<texture>$VAR[PlayerThumb]</texture>
				<bordertexture>colors/white.png</bordertexture>
				<bordersize>1</bordersize>
				<aspectratio align="center" aligny="center">keep</aspectratio>
			</control>
			<!-- <control type="image">
				<decription>thumb artist n album centered</decription>
				<visible>player.hasaudio</visible>
				<top>15</top>
				<height>190</height>
				<width>342</width>
				<centerleft>50%</centerleft>
				<aspectratio scalediffuse="true" align="center" aligny="center">keep</aspectratio>
				<texture diffuse="diffuse/compactdisk.png">$VAR[PlayerDisc]</texture>
				<animation effect="rotate" end="-360" center="auto" time="4800" loop="true" reversible="false" condition="!Player.Paused">Conditional</animation>
			</control> -->
				
			<control type="image">
				<description>dimmed logo right</description>
				<visible>!$EXP[PlayerClearLogo_IsEmpty]</visible>
				<include content="left_width" condition="player.hasaudio">
					<param name="width" value="775" />
					<param name="left" value="1100" />
				</include>
				<include content="left_width" condition="!player.hasaudio">
					<param name="width" value="625" />
					<param name="left" value="1250" />
				</include>
				<texture diffuse="colors/white10.png" fallback="">$VAR[PlayerClearlogo]</texture>
				<bordertexture>colors/none.png</bordertexture>
				<top>15</top>
				<bottom>10</bottom>
				<aspectratio align="center" aligny="center">keep</aspectratio>
			</control>
			
			
			<!-- grouplist vertical -->
			<control type="image">
				<animation effect="fade" start="100" end="0" condition="window.isvisible(1140)">conditional</animation>
				<visible>!$EXP[PlayerClearLogo_IsEmpty]</visible>
				<include content="left_width" condition="player.hasaudio">
					<param name="width" value="775" />
					<param name="left" value="50" />
				</include>
				<include content="left_width" condition="!player.hasaudio">
					<param name="width" value="625" />
					<param name="left" value="50" />
				</include>
				<texture diffuse="colors/white.png" fallback="">$VAR[PlayerClearlogo]</texture>
				<bordertexture>colors/none.png</bordertexture>
				<bordersize>25</bordersize>
				<top>0</top>
				<bottom>60</bottom>
				<aspectratio align="center" aligny="center">keep</aspectratio>
			</control>
			
				<control type="grouplist" id="600">
					<description>player controls</description>
					<animation effect="slide" start="0,0" end="0,55" condition="!$EXP[PlayerClearLogo_IsEmpty]">conditional</animation>
					
					<include content="left_width" condition="!player.hasaudio">
						<param name="width" value="750" />
						<param name="left" value="0" />
						
					</include>
					<include content="left_width" condition="player.hasaudio">
						<param name="width" value="700" />
						<param name="left" value="80" />
						
					</include>
					<animation effect="fade" start="100" end="0" condition="window.isvisible(1140)">conditional</animation>
					<height>100</height>
					<bottom>50</bottom>
					
					<align>center</align>
					<orientation>horizontal</orientation>
					<itemgap>15</itemgap>
					<usecontrolcoords>true</usecontrolcoords>
					<onup>5555</onup>
					<ondown>5555</ondown>
					
					<control type="button" id="6009">
						<centertop>50%</centertop>
						<width>45</width>
						<height>45</height>
						<visible>player.hasaudio</visible>
						<texturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/userrating_fo.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/userrating_fo.png</texturenofocus>
						<onclick>SetRating</onclick>
					</control>
					
					<control type="button" id="6011">
						<visible>!Container(699).IsUpdating + Integer.IsEqual(Container(699).NumItems,1)</visible>
						<centertop>50%</centertop>
						<width>45</width>
						<height>45</height>
						<label />
						<texturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/infonoborder.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/infonoborder.png</texturenofocus>
						<!-- <onclick condition="player.hasvideo">ActivateWindow(fullscreeninfo)</onclick> -->
						<!-- not done <onclick condition="player.hasaudio">ActivateWindow(songinformation)</onclick> -->
						<onclick condition="true">setfocus(699)</onclick>
						<onclick condition="true">action(info)</onclick>
					</control>
					
					<control type="button" id="6012">
						<description>get playlist</description>
						<visible>MusicPlayer.HasPrevious | MusicPlayer.HasNext</visible>
						<centertop>50%</centertop>
						<width>45</width>
						<height>45</height>
						<label />
						<texturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/playlist_fo.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/playlist_fo.png</texturenofocus>
						<onclick>ActivateWindow(1140,return)</onclick>
					</control>
					
					<control type="button" id="6013">
						<centertop>50%</centertop>
						<width>50</width>
						<height>50</height>
						<label />
						<texturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/fullscreen.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/fullscreen.png</texturenofocus>
						<onclick>fullscreen</onclick>
					</control>
					
					<include content="spacer_w">
						<param name="visible" value="Player.HasAudio"/>
						<param name="id" value="603"/>
						<param name="gap" value="5"/>
					</include>
					<control type="button" id="604">
						<centertop>50%</centertop>
						<visible>MusicPlayer.HasPrevious | Playlist.IsRepeat</visible>
						<width>50</width>
						<height>50</height>
						<label />
						<texturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/previous_fo.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/previous_fo.png</texturenofocus>
						<!-- <onclick condition="!Integer.IsLessOrEqual(MusicPlayer.Time(ss),03)">PlayerControl(previous)</onclick> -->
						<onclick>PlayerControl(previous)</onclick>
					</control>
				
					<control type="togglebutton" id="605">
						<centertop>50%</centertop>
						<width>50</width>
						<height>50</height>
						<label />
						<altlabel />
						<texturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/play_fo.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/play_fo.png</texturenofocus>
						<alttexturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/pause_fo.png</alttexturefocus>
						<alttexturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/pause_fo.png</alttexturenofocus>
						<usealttexture>!Player.Paused</usealttexture>
						<onclick>PlayerControl(play)</onclick>
					</control>
				
					<control type="button" id="606">
						<centertop>50%</centertop>
						<width>50</width>
						<height>50</height>
						<label />
						<texturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/stop_fo.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/stop_fo.png</texturenofocus>
						<onclick>PlayerControl(stop)</onclick>
					</control>
				
					<control type="togglebutton" id="607">
						<centertop>50%</centertop>
						<animation effect="fade" start="100" end="40" time="1000" loop="true" condition="PVR.IsRecordingPlayingChannel">conditional</animation>
						<visible>PVR.CanRecordPlayingChannel</visible>
						<width>50</width>
						<height>50</height>
						<label />
						<texturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/record.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/record.png</texturenofocus>
						<alttexturefocus colordiffuse="red">buttons/osd/record.png</alttexturefocus>
						<alttexturenofocus colordiffuse="red">buttons/osd/record.png</alttexturenofocus>
						<usealttexture>PVR.IsRecordingPlayingChannel</usealttexture>
						<onclick>PVR.ToggleRecordPlayingChannel</onclick>
					</control>
					
					<control type="button" id="608">
						<centertop>50%</centertop>
						<visible>MusicPlayer.HasNext | Playlist.IsRepeat</visible>
						<centertop>50%</centertop>
						<width>50</width>
						<height>50</height>
						<label />
						<texturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/next_fo.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/next_fo.png</texturenofocus>
						<onclick>PlayerControl(next)</onclick>
					</control>
					
					<include content="spacer_w">
						<param name="id" value="609"/>
						<param name="gap" value="5" />
					</include>
					
					<control type="button" id="6092">
						<centertop>50%</centertop>
						<visible>MusicPlayer.HasNext | Playlist.IsRepeat</visible>
						<centertop>50%</centertop>
						<width>50</width>
						<height>50</height>
						<label />
						<texturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/repeat.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/repeat.png</texturenofocus>
						
						<onclick>PlayerControl(Repeat)</onclick>
						<onclick condition="!Playlist.IsRepeatOne + !Playlist.IsRepeat">Notification(Repeat,[B]A l l[/B],10,buttons/osd/repeatall.png)</onclick>
						<onclick condition="Playlist.IsRepeat">Notification(Repeat,[B]T i t l e[/B],10,buttons/osd/repeatone.png)</onclick>
						<onclick condition="Playlist.IsRepeatOne">Notification(Repeat,[B]D i s a b l e d[/B],10,buttons/osd/repeatoff.png)</onclick>
					</control>
					
					<control type="button" id="6096">
						<description>toggle vs common, currently looks lika a bad symbol</description>
						<centertop>50%</centertop>
						<visible>MusicPlayer.HasNext | Playlist.IsRepeat</visible>
						<centertop>50%</centertop>
						<width>50</width>
						<height>50</height>
						<label />
						<texturefocus colordiffuse="$VAR[color_osdmusic_accent]">buttons/osd/random.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdmusic_secondary]">buttons/osd/random.png</texturenofocus>
						
						<onclick>PlayerControl(Random)</onclick>
						<onclick condition="!Playlist.IsRandom">Notification(Random,[B]O n[/B],10,buttons/osd/random.png)</onclick>
						<onclick condition="Playlist.IsRandom">Notification(Random,[B]O f f[/B],10,buttons/osd/randomoff.png)</onclick>
					</control>
				</control>
				
				<control type="grouplist" id="601">
					<description>player infos</description>
					<include content="left_width" condition="player.hasaudio">
						<param name="width" value="775" />
						<param name="left" value="1100" />
					</include>
					<include content="left_width" condition="!player.hasaudio">
						<param name="width" value="625" />
						<param name="left" value="1250" />
					</include>
					<top>15</top>
					<bottom>10</bottom>
					<align>center</align>
					<orientation>vertical</orientation>
					<itemgap>25</itemgap>
					<usecontrolcoords>true</usecontrolcoords>
					
					<control type="label">
						<height>auto</height>
						<align>center</align>
						<label>$INFO[Player.title]</label>
						<font>notosans_16_bold</font>
						<textcolor>$VAR[color_osdmusic_secondary]</textcolor>
					</control>
					
					
					<control type="label">
						<visible>!string.isempty(musicplayer.artist)</visible>
						
						<height>auto</height>
						<align>center</align>
						<info>musicplayer.artist</info>
						<font>notosans_16_bold</font>
						<textcolor>$VAR[color_osdmusic_secondary]</textcolor>
					</control>
					
					<control type="progress">
						<centerleft>50%</centerleft>
						<width>600</width>
						<texturebg colordiffuse="$VAR[color_hub_menu_text_nf]">colors/white50.png</texturebg>
						<midtexture colordiffuse="$VAR[color_hub_accent]">colors/white.png</midtexture>
						<lefttexture />
						<righttexture />
						<overlaytexture />
						<info>Player.Progress</info>
					</control>
					<control type="label">
						<height>auto</height>
						<align>center</align>
						<label>$INFO[player.time]       |       $INFO[Player.Duration]       |       $INFO[Player.TimeRemaining]</label>
						<font>notosans_16_bold</font>
						<textcolor>$VAR[color_osdmusic_secondary]</textcolor>
					</control>
					<control type="label">
						<visible>!string.isempty(musicplayer.album)</visible>
						
						<height>auto</height>
						<align>center</align>
						<info>musicplayer.album</info>
						<font>notosans_16_bold</font>
						<textcolor>$VAR[color_osdmusic_secondary]</textcolor>
					</control>
					<control type="label">
						<visible>player.hasvideo + !string.isempty(Player.FinishTime)</visible>
						
						<height>auto</height>
						<align>center</align>
						<label>ENDS AT : $INFO[Player.FinishTime]</label>
						<font>notosans_16_bold</font>
						<textcolor>$VAR[color_osdmusic_secondary]</textcolor>
					</control>
				</control>
		</control>
		
		<control type="group">
			<animation effect="fade" start="100" end="0" time="350" condition="Window.IsActive(shutdownmenu)">conditional</animation>
	
			<!-- copy from bg building xml? - make include - usage headerbar,shutdownmenu,profiles -->
			<control type="group">
				<description>time and date weather</description>
				<centerleft>50%</centerleft>
				<top>50</top>
				<height>150</height>
				
				<control type="label">
					<width>100%</width>
					<height>25</height>
					<align>center</align>
					<info>System.Time</info>
					<font>notosans_20_regular</font>
					<textcolor>ff131313</textcolor>
				</control>
				<control type="group">
					<visible>[!String.Contains(Weather.Temperature,$LOCALIZE[503]) + [!String.IsEqual(Weather.fanartcode,na) + Weather.IsFetched]]</visible>
					<control type="image">
						<top>25</top>
						<height>50</height>
						<width>100%</width>
						<texture colordiffuse="ff131313">$INFO[Weather.FanartCode,resource://resource.images.weathericons.outline-hd/,.png]</texture>
						<aspectratio align="center">keep</aspectratio>
					</control>
					<control type="label">
						<top>75</top>
						<width>100%</width>
						<height>10</height>
						<align>center</align>
						<label>$INFO[Weather.Temperature]</label>
						<font>notosans_20_bold</font>
						<textcolor>ff131313</textcolor>
					</control>
				</control>
				
				<control type="label">
					<top>100</top>
					<width>100%</width>
					<height>20</height>
					<align>center</align>
					<info>System.Date</info>
					<font>notosans_16_bold</font>
					<textcolor>ff131313</textcolor>
				</control>
				
				
			
			</control>
			
			
			<!-- copy from loginscreen.xml - make include- usage ,profile, -->
			<control type="radiobutton" id="9000">
				<include content="Animation_Item_Focus" />
				<top>86%</top>
				<width>120</width>
				<height>120</height>
				<centerleft>50%</centerleft>
				<visible allowhiddenfocus="true">!$EXP[IsCurrentyPlayingCommon]</visible>
				<onfocus condition="$EXP[IsCurrentyPlayingCommon]">SetFocus(605)</onfocus>
				
				<textureradioonfocus colordiffuse="$VAR[color_profilelogin_text_main]">icons/shutdown.png</textureradioonfocus> 
				<textureradioonnofocus colordiffuse="ff131313">icons/shutdown.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="$VAR[color_profilelogin_text_main]">icons/shutdown.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="ff131313">icons/shutdown.png</textureradiooffnofocus>
				
				<!-- 
				<textureradioonfocus colordiffuse="$VAR[color_home_menu_itempanel_fo]">icons/shutdown.png</textureradioonfocus>
				<textureradioonnofocus colordiffuse="$VAR[color_home_menu_itempanel_nf]">icons/shutdown.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="$VAR[color_home_menu_itempanel_fo]">icons/shutdown.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="$VAR[color_home_menu_itempanel_nf]">icons/shutdown.png</textureradiooffnofocus>
				-->
				<textoffsetx />
				<radiowidth>120</radiowidth>
				<radioheight>120</radioheight>
				<textureradioondisabled />
				<textureradiooffdisabled  />
				<texturefocus />
				<texturenofocus />
				<focusedcolor />
				<textcolor />
				<label />
				<selected />
				<onup>5555</onup>
				<ondown>5555</ondown>
				<onleft>5555</onleft>
				<onright>5555</onright>
				<onclick>ActivateWindow(shutdownmenu)</onclick>
			</control>
			
			<control type="panel" id="5555">
				<orientation>vertical</orientation>
				<preloaditems>4</preloaditems>
				<scrolltime tween="quadratic">400</scrolltime>
				<centertop>52%</centertop>
				<centerleft>50%</centerleft>
				<!-- <include content="width" condition="Integer.IsGreater(Container(5555).NumItems,12)">
					<param name="width" value="1470" />
				</include>
				<include content="width" condition="Integer.IsGreater(Container(5555).NumItems,10) + Integer.IsLessOrEqual(Container(5555).NumItems,12)">
					<param name="width" value="1260" />
				</include>
				<include content="width" condition="Integer.IsGreater(Container(5555).NumItems,8) + Integer.IsLessOrEqual(Container(5555).NumItems,10)">
					<param name="width" value="1050" />
				</include>
				<include content="width" condition="Integer.IsLessOrEqual(Container(5555).NumItems,8)">
					<param name="width" value="840" />
				</include> -->
				<!-- <width>1680</width> 8 per row  greater 12 -->
				
				<!-- <width>1470</width> 7 per row  greater 12 -->
				<width>1260</width> 6 per row - greater 10 equal 12
				<!-- <width>1050</width> 5 per row - greater 8 equal 10 -->
				<!-- <width>840</width> 4 per row - equal 8 or less -->
				<height>680</height>
			<!-- get content as container on focus ?
			suggested movies,shows etc ? big tile fade vis?
				 -->
				<ondown condition="!$EXP[IsCurrentyPlayingCommon]">9000</ondown>
				<ondown condition="$EXP[IsCurrentyPlayingCommon]">605</ondown>
				
				<itemlayout height="340" width="210">
					
					<control type="group">
						<description>NEED A FIXED NUMBER - NOT LISTITEM BASED</description>
						<!-- <visible>integer.isequal(Container(5555).ListItem.Property(row_temp_test),1)</visible> -->
						<animation effect="fade" start="100" end="0" time="150" condition="Control.HasFocus(5556)">conditional</animation>
						<include content="home_mainmenutiles_layout">
							<param name="color1" value="ff131313" />
							<param name="color2" value="ffffffff" />
							<param name="color3" value="ff252525" />
						</include>
					</control>
					
				</itemlayout>
			
				<focusedlayout height="340" width="210">
				
					<control type="group">
						<animation type="focus" loop="false" reversible="false">
							<effect type="rotatey" end="360" center="100" time="500"/>
						</animation>
				
						<control type="group">
							<!-- <visible>integer.isequal(Container(5555).ListItem.Property(row_temp_test),1)</visible> -->
							<animation effect="fade" start="100" end="0" time="150" condition="Control.HasFocus(5556)">conditional</animation>
							
							<include content="home_mainmenutiles_layout">
								<param name="color1" value="ffffffff" />
								<param name="color2" value="ff131313" />
								<param name="color3" value="ffffffff" />
							</include>
							
						</control>
						
					
					</control>
					
					
				</focusedlayout>
				<include content="home_mainmenu_content" />
			</control>
			
			
			<!-- auto submenu 
			wher to place and how to gain focus?
			
			no other way than split main menu into pieces 
			a)best
			main numitems,1-6
				sub
			main numitems,7-12
				sub
			main numitems,13-18
				sub
			main numitems,19-20(or change hardcoded from 20 to 25)
				sub
				
			b) if click focus and fade submenu in (may get issues with onback)
			-->
			<include content="Universal_Container">
				<param name="type" value="panel" />
				<param name="id" value="5556" />
				<param name="type_height" value="150" />
				<param name="type_pos_top" value="300" />
				<param name="layout_height" value="100" />
				<param name="layout_width" value="120" />
				<param name="itemheight" value="110" />
				<param name="itemwidth" value="110" />
				<param name="item_infotags_visible" value="false" />
				<param name="item_infotags_bgpanel_visible" value="false" />
				<param name="item_artwork_name" value="circle" />
				<param name="visible" value="!String.IsEmpty(Container(5555).ListItem.Property(submenu_containerpath))" />
				
				<animation effect="fade" start="100" end="0" condition="[!Integer.IsGreater(Container(5556).NumItems,0) | Container(5556).IsUpdating] | !Control.HasFocus(5556)">Conditional</animation>
						
				<description>width 14 items centered current default is 6 per row - later on use skinstring conditions - also static item need set prop hassubmenu by default in shortcut select window</description>
				
				 <animation effect="slide" start="0,0" end="60,0" time="0" condition="integer.isequal(Container(5556).NumItems,13)">conditional</animation>
				<animation effect="slide" start="0,0" end="120,0" time="0" condition="integer.isequal(Container(5556).NumItems,12)">conditional</animation>
				<animation effect="slide" start="0,0" end="180,0" time="0" condition="integer.isequal(Container(5556).NumItems,11)">conditional</animation>
				<animation effect="slide" start="0,0" end="240,0" time="0" condition="integer.isequal(Container(5556).NumItems,10)">conditional</animation>
				<animation effect="slide" start="0,0" end="300,0" time="0" condition="integer.isequal(Container(5556).NumItems,9)">conditional</animation>
				<animation effect="slide" start="0,0" end="360,0" time="0" condition="integer.isequal(Container(5556).NumItems,8)">conditional</animation>
				<animation effect="slide" start="0,0" end="420,0" time="0" condition="integer.isequal(Container(5556).NumItems,7)">conditional</animation>
				<animation effect="slide" start="0,0" end="480,0" time="0" condition="integer.isequal(Container(5556).NumItems,6)">conditional</animation>
				<animation effect="slide" start="0,0" end="540,0" time="0" condition="integer.isequal(Container(5556).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="600,0" time="0" condition="integer.isequal(Container(5556).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="660,0" time="0" condition="integer.isequal(Container(5556).NumItems,3)">conditional</animation>
				
				<animation effect="slide" start="0,0" end="0,350" time="0" condition="integer.isequal(Container(5555).row,0)">conditional</animation>
				
				<left>121</left>
				<right>121</right>
				<centerleft>50%</centerleft>
				<onback>5555</onback>
				<ondown>5555</ondown>
				<onup>5555</onup>
				<content target="$INFO[Container(5555).ListItem.Property(target)]">$INFO[Container(5555).ListItem.Property(submenu_containerpath)]</content>
			</include>
			
			<control type="group">
				<visible>Control.HasFocus(5556)</visible>
				<top>222</top>
				<animation effect="slide" start="0,0" end="0,340" time="0" condition="integer.isequal(Container(5555).row,1)">conditional</animation>
				<animation effect="fade" start="0" end="100" time="250">VisibleChange</animation>
				
				<centerleft>50%</centerleft>
				<include content="home_mainmenutiles_layout">
					<param name="prefix" value="Container(5555)."/>
					<param name="color1" value="ffffffff" />
					<param name="color2" value="ff000000" />
					<param name="color3" value="ffffffff" />
				</include>
			</control>
			<control type="group">
				<animation effect="slide" start="0,0" end="0,350" time="0" condition="integer.isequal(Container(5555).row,0)">conditional</animation>
				<animation effect="fade" start="0" end="100" time="250">VisibleChange</animation>
				
				<visible>Control.HasFocus(5556)</visible>
				<control type="label">
					<align>center</align>
					<top>220</top>
					<label>$INFO[Container(5555).ListItem.Label]</label>
					<width>1900</width>
					<height>50</height>
					<font>montserrat_40_extrabold</font>
					<textcolor>grey</textcolor>
				</control>
				<control type="image">
					<top>425</top>
					<width>1900</width>
					<height>60</height>
					<texture colordiffuse="ff000000">colors/white50.png</texture>
				</control>
				<control type="label">
					<align>center</align>
					<top>430</top>
					<label>$INFO[Container(5556).ListItem.Label]</label>
					<width>1900</width>
					<height>50</height>
					<font>montserrat_40_extrabold</font>
					<textcolor>white</textcolor>
				</control>
			</control>
		</control>		
				
			
	</include>
	
	
	<include name="home_mainmenutiles_layout">
		<param name="prefix" />
		<definition>
		<width>200</width>
		<height>200</height>
		<control type="image">
			<texture colordiffuse="$PARAM[color1]">colors/white80.png</texture>
			<top>0</top>
			<aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
		</control>
		<control type="image">
			<bordersize>30</bordersize>
			<left>10</left>
			<width>190</width>
			<height>190</height>
			<texture background="true" colordiffuse="$PARAM[color2]">$INFO[$PARAM[prefix]ListItem.Art(thumb)]</texture>
			<aspectratio scalediffuse="true" align="left" aligny="top">scale</aspectratio>
		</control>
		<control type="image">
			<texture colordiffuse="$PARAM[color3]">colors/white80.png</texture>
			<top>205</top>
			<height>90</height>
			<aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
		</control>
		<control type="textbox">
			<top>205</top>
			<align>center</align>
			<aligny>center</aligny>
			<height>90</height>
			<label>$INFO[$PARAM[prefix]ListItem.Label]</label>
			<textcolor>$PARAM[color2]</textcolor>
		</control>
		</definition>
	</include>
	
	<!-- WIP BROKEN use setting for submenu true/false/auto? 
	need indicate row not via fixed to item, need autodetection
	submenu if mainmenu tiles - current default is 6 per row - later on use skinstring conditions -->
	<include name="home_mainmenu_content">
		<content>
			<nested />
			<include content="mainmenu_item">
				<param name="id" value="01" />
				<param name="nr" value="1" />
				
			</include>
			<include content="mainmenu_item">
				<param name="id" value="02" />
				<param name="nr" value="2" />
				</include>
			<include content="mainmenu_item">
				<param name="id" value="03" />
				<param name="nr" value="3" />
				</include>
			<include content="mainmenu_item">
				<param name="id" value="04" />
				<param name="nr" value="4" />
				</include>
			<include content="mainmenu_item">
				<param name="id" value="05" />
				<param name="nr" value="5" />
				</include>
			<include content="mainmenu_item">
				<param name="id" value="06" />
				<param name="nr" value="6" />
				</include>
			<include content="mainmenu_item">
				<param name="id" value="07" />
				<param name="nr" value="7" />
				</include>
			<include content="mainmenu_item">
				<param name="id" value="08" />
				<param name="nr" value="8" />
				</include>
			<include content="mainmenu_item">
				<param name="id" value="09" />
				<param name="nr" value="9" />
				</include>
			<include content="mainmenu_item">
				<param name="id" value="10" />
				<param name="nr" value="10" />
				</include>
			<include content="mainmenu_item">
				<param name="id" value="11" />
				<param name="nr" value="11" />
				</include>
			<include content="mainmenu_item">
				<param name="id" value="12" />
				<param name="nr" value="12" />
				
			</include>
			<include content="mainmenu_item">
				<param name="id" value="13" />
				<param name="nr" value="13" />
				
			</include>
			<include content="mainmenu_item">
				<param name="id" value="14" />
				<param name="nr" value="14" />
				
			</include>
			<include content="mainmenu_item">
				<param name="id" value="15" />
				<param name="nr" value="15" />
				
			</include>
			<include content="mainmenu_item">
				<param name="id" value="16" />
				<param name="nr" value="16" />
				
			</include>
			<include content="mainmenu_item">
				<param name="id" value="17" />
				<param name="nr" value="17" />
				
			</include>
			<include content="mainmenu_item">
				<param name="id" value="18" />
				<param name="nr" value="18" />
				
			</include>
			<include content="mainmenu_item">
				<param name="id" value="19" />
				<param name="nr" value="19" />
				
			</include>
			<include content="mainmenu_item">
				<param name="id" value="20" />
				<param name="nr" value="20" />
				
			</include>
			
			<include content="mainmenu_item">
				<param name="id" value="21" />
				<param name="nr" value="21" />
				
			</include>
			<include content="mainmenu_item">
				<param name="id" value="22" />
				<param name="nr" value="22" />
				
			</include>
			<include content="mainmenu_item">
				<param name="id" value="23" />
				<param name="nr" value="23" />
				
			</include>
			<include content="mainmenu_item">
				<param name="id" value="24" />
				<param name="nr" value="24" />
				
			</include>
			<include content="mainmenu_item">
				<param name="id" value="25" />
				<param name="nr" value="25" />
				
			</include>
		</content>
	</include>
	
	<include name="home_mainmenu_layout_verticalpanel">
		<control type="group">
			<control type="image">
				<description>vis if prop slide true</description>
				<visible>String.IsEqual(Window(Home).Property(menucontrol_active),home)</visible>
				<height>100%</height>
				<width>100%</width>
				<texture colordiffuse="$PARAM[itempanelcolor]">colors/white.png</texture>
			</control>
			<control type="image">
				<description>skinstring homemenu_item_[nr].icon</description>
				<height>80</height>
				<width>40</width>
				<right>25</right>
				<texture colordiffuse="$PARAM[itemcolor]">$INFO[ListItem.Icon]</texture>
				<aspectratio aligny="center">keep</aspectratio>
			</control>
			<control type="label">
				<left>20</left>
				<height>80</height>
				<right>100</right>
				<aligny>center</aligny>
				<align>right</align>
				<textcolor>$PARAM[itemcolor]</textcolor>
				<font>notosans_25_regular_l</font>
				<wrapmultiline>true</wrapmultiline>
				<label>$INFO[ListItem.Label]</label>
			</control>
			
			
		</control>
	
	</include>

	<include name="Menucontrol_Home_test1">
		<animation effect="slide" start="-450,0" end="0,0" time="300" tween="cubic" easing="inout">VisibleHidden</animation>
		<visible>ControlGroup(9000).HasFocus()</visible>
		<control type="image">
			<animation effect="slide" start="0,0" end="450,0" time="300" tween="cubic" easing="inout" condition="ControlGroup(9000).HasFocus()">conditional</animation>
			<animation effect="fade" start="100" end="0" time="150" condition="!ControlGroup(9000).HasFocus()">conditional</animation>
			
			<top>0</top>
			<bottom>0</bottom>
			<width>530</width>
			<left>-450</left>
			<texture colordiffuse="$VAR[color_home_menu_backgroundpanel]">colors/white.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>
		
		<!--
		<control type="group">
			<left>20</left>
			<control type="image">
				<top>0</top>
				<height>90</height>
				<width>150</width>
				<bottom>0</bottom>
				<texture colordiffuse="red">colors/white20.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="label">
				<top>0</top>
				<height>90</height>
				<width>530</width>
				<label>$VAR[color_home_menu_backgroundpanel]</label>
				<aspectratio>stretch</aspectratio>
			</control>
		</control>
		-->
		
		<control type="grouplist" id="9000">
			<description>need get cond vis content</description>
			<top>120</top>
			<bottom>1%</bottom>
			<width>465</width>
			<left>20</left>
			<itemgap>0</itemgap>
			<onup>9000</onup>
			<ondown>9000</ondown>
			
			<onright>SetFocus(5555)</onright>
			<onleft>SetFocus(5555)</onleft>
			<!-- diif colors global vs home ? params -->
			<include content="Menucontrol_Content_Navigation">
				
				
				<!-- <control type="button" id="902">
					<label>Gehe zu</label>
					<label2>sandbox window</label2>
					<include content="Menucontrol_Button">
						<param name="section" value="home" />
					</include>
					<onclick>ActivateWindow(1123)</onclick>
				</control> -->
				<control type="button" id="902">
					<label>Gehe zu</label>
					<label2>Music Hub</label2>
					<include content="Menucontrol_Button">
						<param name="section" value="home" />
					</include>
					<onclick>ActivateWindow(1110)</onclick>
				</control>
				
				
			</include>
			
			
				<control type="textbox" id="900">
					<textoffset>20</textoffset>
					<label>This is Just a Placeholder and not a final layout nor solution [CR],just  for easy Navigation by work on the skin</label>
					<font>notosans_23_regular_l</font>
					<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
					<wrapmultiline>true</wrapmultiline>
					<height>200</height>
				</control>
			
<!-- 
TVChannels 	pvr://channels/tv/<GROUPNAME> 	Replace <GROUPNAME> with the name of the specific tv channel group 	Kodi 19
TVGuide 	pvr://channels/tv/<GROUPNAME> 	Replace <GROUPNAME> with the name of the specific tv channel group 	Kodi 19
TVRecordings 	pvr://recordings/tv/active/<DIRECTORY>/ 	Replace <DIRECTORY> with the name of the recording directory to display
TVTimers 			
TVTimerRules 			
TVSearch 			
RadioChannels 	pvr://channels/radio/<GROUPNAME> 	Replace <GROUPNAME> with the name of the specific radio channel group 	Kodi 19
RadioGuide 	pvr://channels/radio/<GROUPNAME> 	Replace <GROUPNAME> with the name of the specific radio channel group 	Kodi 19
RadioRecordings 	pvr://recordings/radio/active/<DIRECTORY>/ 	Replace <DIRECTORY> with the name of the recording directory to display
RadioTimers 			
RadioTimerRules 			
RadioSearch
 
-->	
				
				<control type="textbox" id="910">
					<textoffset>20</textoffset>
					<label>video lib</label>
					<font>notosans_23_regular_l</font>
					<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
					<wrapmultiline>true</wrapmultiline>
					<height>100</height>
				</control>
				<include content="Universal_Container">
					<param name="type" value="panel" />
					<param name="id" value="911" />
					<param name="type_height" value="150" />
					<param name="layout_height" value="100" />
					<param name="layout_width" value="120" />
					<param name="itemheight" value="80" />
					<param name="itemwidth" value="80" />
					
					<param name="item_infotags_bgpanel_visible" value="false" />
					<param name="item_artwork_name" value="circle" />
					<param name="visible" value="Integer.IsGreater(Container(911).NumItems,0) | Container(911).IsUpdating" />
					<animation effect="fade" start="100" end="0" condition="!Integer.IsGreater(Container(911).NumItems,0) | Container(911).IsUpdating">Conditional</animation>
					<content target="videos">library://video</content>
				</include>
				
				<control type="textbox" id="912">
					<textoffset>20</textoffset>
					<label>music lib</label>
					<font>notosans_23_regular_l</font>
					<wrapmultiline>true</wrapmultiline>
					<height>100</height>
					<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
				</control>
				<include content="Universal_Container">
					<param name="type" value="panel" />
					<param name="id" value="913" />
					<param name="type_height" value="150" />
					<param name="layout_height" value="100" />
					<param name="layout_width" value="120" />
					<param name="itemheight" value="80" />
					<param name="itemwidth" value="80" />
					
					<param name="item_infotags_bgpanel_visible" value="false" />
					<param name="item_artwork_name" value="circle" />
					<param name="visible" value="Integer.IsGreater(Container(913).NumItems,0) | Container(913).IsUpdating" />
					<animation effect="fade" start="100" end="0" condition="!Integer.IsGreater(Container(913).NumItems,0) | Container(913).IsUpdating">Conditional</animation>
					<content target="music">library://music/</content>
				</include>
				
				<control type="textbox" id="914">
					<textoffset>20</textoffset>
					<label>musicvideos lib</label>
					<font>notosans_23_regular_l</font>
					<wrapmultiline>true</wrapmultiline>
					<height>100</height>
					<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
				</control>
				<include content="Universal_Container">
					<param name="type" value="panel" />
					<param name="id" value="915" />
					<param name="type_height" value="150" />
					<param name="layout_height" value="100" />
					<param name="layout_width" value="120" />
					<param name="itemheight" value="80" />
					<param name="itemwidth" value="80" />
					
					<param name="item_infotags_bgpanel_visible" value="false" />
					<param name="item_artwork_name" value="circle" />
					<param name="visible" value="Integer.IsGreater(Container(915).NumItems,0) | Container(915).IsUpdating" />
					<animation effect="fade" start="100" end="0" condition="!Integer.IsGreater(Container(915).NumItems,0) | Container(915).IsUpdating">Conditional</animation>
					<content target="videos">videodb://musicvideos/</content>
				</include>
				<control type="textbox" id="916">
					<textoffset>20</textoffset>
					<label>playlists ,video first</label>
					<font>notosans_23_regular_l</font>
					<wrapmultiline>true</wrapmultiline>
					<height>100</height>
					<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
				</control>
				<include content="Universal_Container">
					<param name="type" value="panel" />
					<param name="id" value="917" />
					<param name="type_height" value="150" />
					<param name="layout_height" value="100" />
					<param name="layout_width" value="120" />
					<param name="itemheight" value="80" />
					<param name="itemwidth" value="80" />
					
					<param name="item_infotags_bgpanel_visible" value="false" />
					<param name="item_artwork_name" value="circle" />
					<param name="visible" value="Integer.IsGreater(Container(917).NumItems,0) | Container(917).IsUpdating" />
					<animation effect="fade" start="100" end="0" condition="!Integer.IsGreater(Container(917).NumItems,0) | Container(917).IsUpdating">Conditional</animation>
					<content target="videos">special://videoplaylists/</content>
					<content target="music">special://musicplaylists/ </content>
				</include>
				<control type="textbox" id="918">
					<textoffset>20</textoffset>
					<label>video addons</label>
					<font>notosans_23_regular_l</font>
					<wrapmultiline>true</wrapmultiline>
					<height>100</height>
					<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
				</control>
				<include content="Universal_Container">
					<param name="type" value="panel" />
					<param name="id" value="919" />
					<param name="tagbottom" value="false" />
					<param name="type_height" value="200" />
					<param name="layout_height" value="150" />
					<param name="layout_width" value="450" />
					<param name="itemheight" value="140" />
					<param name="itemwidth" value="440" />
					
					<param name="item_infotags_bgpanel_visible" value="false" />
					<param name="item_artwork_name" value="landscape" />
					<param name="visible" value="Integer.IsGreater(Container(919).NumItems,0) | Container(919).IsUpdating" />
					<animation effect="fade" start="100" end="0" condition="!Integer.IsGreater(Container(919).NumItems,0) | Container(919).IsUpdating">Conditional</animation>
					<content target="videos">addons://sources/video/</content>
				</include>
		</control>
			
			
	
	</include>
	
	<!-- params
		id
		actionid = visible = imagename
		left - just if not in grouplist
		onright
		onleft
		! att - playpause alt l+i -->
		
	<include name="Menucontrol_PlaybackCtrlButton">
		<control type="button" id="6049$PARAM[id]">
			<top>425</top>
			<width>45</width>
			<height>45</height>
			<onup>19</onup>
			<ondown>911</ondown>
			<onfocus condition="!String.IsEqual(Window(Home).Property(menucontrol_active),common)">SetProperty(menucontrol_active,common,Home)</onfocus>
			<left>$PARAM[left]</left>
			<onright>$PARAM[onright]</onright>
			<onleft>$PARAM[onleft]</onleft>
			<texturefocus colordiffuse="$VAR[color_lib_menu_accent]">buttons/osd/$PARAM[actionid]_fo.png</texturefocus>
			<texturenofocus colordiffuse="$VAR[color_lib_menu_item_nf]">buttons/osd/$PARAM[actionid].png</texturenofocus>
			<onclick>PlayerControl($PARAM[actionid])</onclick>
			<onclick>PlayerControl($PARAM[action2])</onclick>
			<visible>$PARAM[visible]</visible>
		</control>
	</include>
	<variable name="MenucontrolPlayerDuration">
		<value condition="Player.HasVideo">$INFO[Player.FinishTime,[B]Ends at : ,[/B]]</value>
		<value>$INFO[Player.Title,[B],[/B]] $INFO[Player.Time(mm:ss),  ( , / ]$INFO[Player.Duration(mm:ss),, )]</value>
	</variable>	
	<!-- $INFO[MusicPlayer.TrackNumber, - ,  ] -->
	<variable name="Menucontrol_LogoFallback">
		<value condition="Player.HasAudio">$INFO[MusicPlayer.Artist]</value>
		<value>$INFO[Player.Title]</value>
	</variable>
	
	<include name="PreferArt_Button">
		<control type="radiobutton" id="$PARAM[button_id]">
			<include>Menucontrol_RadioButton</include>
			<label>Prefer : $PARAM[artwork_localized_id]</label>
			<visible>$PARAM[visible]</visible>
			<visible>Container(930).HasFocus(9302)</visible>
			<onclick condition="Control.IsVisible(50)">Skin.ToggleSetting(View_50_Prefer_$PARAM[artwork])</onclick>
			<onclick condition="Control.IsVisible(56)">Skin.ToggleSetting(View_56_Prefer_$PARAM[artwork])</onclick>
			<selected>
			[Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_$PARAM[artwork]) | 
			Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_$PARAM[artwork])]
			</selected>
			<nested />
		</control>
	</include>
	
	<include name="Menucontrol_Button">
		<param name="section" default="lib" />
		<definition>
			<animation effect="fade" start="0" end="100" time="150" tween="quadratic" easing="in">Visible</animation>
			<font>notosans_23_regular_l</font>
			<height>40</height>
			<onfocus condition="!String.IsEqual(Window(Home).Property(menucontrol_active),common)">SetProperty(menucontrol_active,common,Home)</onfocus>
			<texturefocus colordiffuse="$VAR[color_$PARAM[section]_menu_itempanel_fo]">colors/white.png</texturefocus>
			<texturenofocus colordiffuse="$VAR[color_$PARAM[section]_menu_itempanel_nf]">colors/white.png</texturenofocus>
			<focusedcolor>$VAR[color_$PARAM[section]_menu_item_fo]</focusedcolor>
			<textcolor>$VAR[color_$PARAM[section]_menu_item_nf]</textcolor>
		</definition>
	</include>
	<!-- Menucontrol_RadioButton - SkinSettings_SettingsRadioButton-->
	<include name="Menucontrol_RadioButton">
		<param name="section" default="lib" />
		<param name="radio_on_texture" default="buttons/radioonfo.png" />
		<param name="radio_off_texture" default="buttons/radioofffo.png" />
		<definition>
			<animation effect="fade" start="0" end="100" time="150" tween="quadratic" easing="in">Visible</animation>
			<font>notosans_23_regular_l</font>
			<height>40</height>
			<radiowidth>30</radiowidth>
			<radioheight>25</radioheight>
			<onfocus condition="!String.IsEqual(Window(Home).Property(menucontrol_active),common)">SetProperty(menucontrol_active,common,Home)</onfocus>
			<texturefocus colordiffuse="$VAR[color_$PARAM[section]_menu_itempanel_fo]">colors/white.png</texturefocus>
			<texturenofocus colordiffuse="$VAR[color_$PARAM[section]_menu_itempanel_nf]">colors/white.png</texturenofocus>
			<focusedcolor>$VAR[color_$PARAM[section]_menu_item_fo]</focusedcolor>
			<textcolor>$VAR[color_$PARAM[section]_menu_item_nf]</textcolor>
			<textureradioonfocus colordiffuse="$VAR[color_$PARAM[section]_menu_item_fo]">$PARAM[radio_on_texture]</textureradioonfocus>
			<textureradioonnofocus colordiffuse="$VAR[color_$PARAM[section]_menu_item_fo]">$PARAM[radio_on_texture]</textureradioonnofocus>
			<textureradioofffocus colordiffuse="$VAR[color_$PARAM[section]_menu_item_fo]">$PARAM[radio_off_texture]</textureradioofffocus>
			<textureradiooffnofocus colordiffuse="$VAR[color_$PARAM[section]_menu_item_nf]">$PARAM[radio_off_texture]</textureradiooffnofocus>
			<textureradioondisabled colordiffuse="disabled">$PARAM[radio_on_texture]</textureradioondisabled>
			<textureradiooffdisabled colordiffuse="disabled">$PARAM[radio_off_texture]</textureradiooffdisabled>
		</definition>
	</include>
	
	<variable name="ContainerSortOrderUnicodeArrow">
		<value condition="String.IsEqual(Container.SortOrder,$LOCALIZE[21430])">[B]↓[/B]</value>
		<value condition="!String.IsEqual(Container.SortOrder,$LOCALIZE[21430])">[B]↑[/B]</value>
	</variable>
	
	<variable name="ContainerToggleWatchedUnwatchedFilter">
		<value condition="String.IsEqual(Control.GetLabel(10),$LOCALIZE[16100])">$LOCALIZE[20367]</value>
		<value condition="String.IsEqual(Control.GetLabel(10),$LOCALIZE[16101])">$LOCALIZE[593]</value>
		<value condition="String.IsEqual(Control.GetLabel(10),$LOCALIZE[16102])"></value>
	</variable>
	

	<!-- revisit System.Platform.Android | System.ShowExitButton -->
	<include name="shutdownmenu_item">
		<item>
			<include condition="string.isequal(skin.string(shutdownmenuitem$PARAM[nr]_action),ActivateWindow(home))" content="shutdownmenu_itemvisibility">
				<param name="visible" value="!Window.IsVisible(loginscreen) + !Window.IsVisible(home)" />
			</include>
			<include condition="string.isequal(skin.string(shutdownmenuitem$PARAM[nr]_action),ActivateWindow(settings))" content="shutdownmenu_itemvisibility">
				<param name="visible" value="!Window.IsVisible(loginscreen) + !Window.IsVisible(settings)" />
			</include>
			<include condition="string.isequal(skin.string(shutdownmenuitem$PARAM[nr]_action),quit())" content="shutdownmenu_itemvisibility">
				<param name="visible" value="System.Platform.Android | System.ShowExitButton" />
			</include>
			<include condition="string.isequal(skin.string(shutdownmenuitem$PARAM[nr]_action),powerdown())" content="shutdownmenu_itemvisibility">
				<param name="visible" value="System.CanPowerDown" />
			</include>
			<include condition="string.isequal(skin.string(shutdownmenuitem$PARAM[nr]_action),reboot())" content="shutdownmenu_itemvisibility">
				<param name="visible" value="System.CanReboot" />
			</include>
			
			<include condition="string.isequal(skin.string(shutdownmenuitem$PARAM[nr]_action),suspend())" content="shutdownmenu_itemvisibility">
				<param name="visible" value="System.CanSuspend" />
			</include>
			<include condition="string.isequal(skin.string(shutdownmenuitem$PARAM[nr]_action),hibernate())" content="shutdownmenu_itemvisibility">
				<param name="visible" value="System.CanHibernate" />
			</include>
			<include condition="string.isequal(skin.string(shutdownmenuitem$PARAM[nr]_action),system.logoff)" content="shutdownmenu_itemvisibility">
				<param name="visible" value="[System.HasLoginScreen | Integer.IsGreater(System.ProfileCount,1)] + System.Loggedon" />
			</include>
			
			
			<visible>!String.IsEmpty(Skin.String(shutdownmenuitem$PARAM[nr]_action))</visible>
			<label>$INFO[Skin.String(shutdownmenuitem$PARAM[nr]_name)]</label>
			<label2>[I]user defined[/I]</label2>
			<thumb>$INFO[Skin.String(shutdownmenuitem$PARAM[nr]_thumb)]</thumb>
			<icon>$INFO[Skin.String(shutdownmenuitem$PARAM[nr]_thumb)]</icon>
			<onclick condition="System.HasActiveModalDialog">Dialog.Close(all,true)</onclick>
			<onclick condition="!System.HasActiveModalDialog">Close</onclick>
			<onclick>$INFO[Skin.String(shutdownmenuitem$PARAM[nr]_action)]</onclick>
		</item>
		
		<item>
			<label>$LOCALIZE[20151] $INFO[System.AlarmPos,(,)]</label>
			<icon>icons/alarmcancel.png</icon>
			<onclick>CancelAlarm(shutdowntimer)</onclick>
			<visible>System.HasAlarm(shutdowntimer) + string.isequal(skin.string(shutdownmenuitem$PARAM[nr]_action),alarmclock(shutdowntimer,shutdown()))</visible>
		</item>
		
	</include>
	
	<include name="shutdownmenu_itemvisibility">
		<visible>$PARAM[visible]</visible>
	</include>
		
	<!-- 
<include name="shutdownmenu_content old">
	<content>
		<item>
			<label>$LOCALIZE[10000]</label>
			<icon>icons/home.png</icon>
			<onclick>Dialog.Close(all,true)</onclick>
			<onclick>ActivateWindow(home)</onclick>
			<visible>!Window.IsVisible(loginscreen) + !Window.IsVisible(home)</visible>
		</item>
		<item>
			<label>$LOCALIZE[5]</label>
			<icon>icons/settingsslider.png</icon>
			<onclick>Dialog.Close(all,true)</onclick>
			<onclick>ActivateWindow(settings)</onclick>
			<visible>!Window.IsVisible(loginscreen) + !Window.IsVisible(settings) + !Skin.HasSetting(DialogButton_HidePowerSettings)</visible>
		</item>
		<item>
			<label>$LOCALIZE[13012]</label>
			<icon>icons/arrowleft.png</icon>
			<onclick>Quit()</onclick>
			<visible>System.Platform.Android | [System.ShowExitButton + [!Skin.HasSetting(DialogButton_HidePowerExit) | Window.IsVisible(loginscreen)]]</visible>
		</item>
		<item>
			<label>$LOCALIZE[13016]</label>
			<icon>icons/shutdown.png</icon>
			<onclick>Powerdown()</onclick>
			<visible>System.CanPowerDown + [!Skin.HasSetting(DialogButton_HidePowerOff) | Window.IsVisible(loginscreen)]</visible>
		</item>
		<item>
			<label>$LOCALIZE[13013]</label>
			<icon>icons/shittyrebbot.png</icon>
			<onclick>Reboot()</onclick>
			<visible>System.CanReboot + [!Skin.HasSetting(DialogButton_HideReboot) | Window.IsVisible(loginscreen)]</visible>
		</item>
		<item>
			<label>$LOCALIZE[20150]</label>
			<icon>icons/alarmadd.png</icon>
			<onclick>AlarmClock(shutdowntimer,Shutdown())</onclick>
			<visible>!System.HasAlarm(shutdowntimer) + !Skin.HasSetting(DialogButton_HidePowerTimer) + [System.CanPowerDown | System.CanSuspend | System.CanHibernate]</visible>
		</item>
		<item>
			<label>$LOCALIZE[20151] $INFO[System.AlarmPos,(,)]</label>
			<icon>icons/alarmcancel.png</icon>
			<onclick>CancelAlarm(shutdowntimer)</onclick>
			<visible>System.HasAlarm(shutdowntimer) + !Skin.HasSetting(DialogButton_HidePowerTimer)</visible>
		</item>
		<item>
			<label>$LOCALIZE[13011]</label>
			<onclick>Suspend()</onclick>
			<visible>System.CanSuspend + [!Skin.HasSetting(DialogButton_HidePowerSuspend) | Window.IsVisible(loginscreen)]</visible>
		</item>
		<item>
			<label>$LOCALIZE[13010]</label>
			<icon>icons/hibernate.png</icon>
			<label2></label2>
			<onclick>Hibernate()</onclick>
			<visible>System.CanHibernate + [!Skin.HasSetting(DialogButton_HidePowerHibernate) | Window.IsVisible(loginscreen)]</visible>
		</item>
		<item>
			<label>$LOCALIZE[13017]</label>
			<label2></label2>
			<onclick>InhibitIdleShutdown(true)</onclick>
			<visible>System.HasShutdown + !System.IsInhibit + !Skin.HasSetting(DialogButton_HidePowerIdleShutdown)</visible>
		</item>
		<item>
			<label>$LOCALIZE[13018]</label>
			<label2></label2>
			<onclick>InhibitIdleShutdown(false)</onclick>
			<visible>System.HasShutdown + System.IsInhibit + !Skin.HasSetting(DialogButton_HidePowerIdleShutdown)</visible>
		</item>
		<item>
			<label>$LOCALIZE[20126][CR]$INFO[system.profilename]</label>
			<label2></label2>
			<icon>icons/profilelogoff.png</icon>
			<onclick>Dialog.Close(all,true)</onclick>
			<onclick>System.LogOff</onclick>
			<visible>[System.HasLoginScreen | Integer.IsGreater(System.ProfileCount,1)] + System.Loggedon</visible>
		</item>
		<item>
			<label>$LOCALIZE[20046]</label>
			<label2></label2>
			<onclick>mastermode</onclick>
			<visible>!Window.IsVisible(loginscreen) + System.HasLocks + System.IsMaster + !Window.IsVisible(loginscreen)</visible>
		</item>
		<item>
			<label>$LOCALIZE[20045]</label>
			<label2></label2>
			<onclick>mastermode</onclick>
			<visible>!Window.IsVisible(loginscreen) + System.HasLocks + !System.IsMaster</visible>
		</item>
		</content>
	</include>
	-->
	
	
	
	<variable name="menucontrol_container930_heading">
		<value condition="Control.HasFocus(930) | String.StartsWith(System.CurrentControlid,70) | String.StartsWith(System.CurrentControlid,40)">[B]$INFO[Container(930).ListItem.Label][/B]</value>
		<value>Navigation and View Options</value>
	</variable>
</includes>
