<?xml version="1.0" encoding="UTF-8"?>
<includes>


	<variable name="menucontrol_profiles_fovsnf">
		<value condition="Control.HasFocus(7777)">$VAR[color_home_menu_item_fo]</value>
		<value>$VAR[color_home_menu_item_nf]</value>
	</variable>
			<!-- 
			<control type="image">
				<visible>false</visible>
				<visible>Control.HasFocus(7777)</visible>
				<animation effect="zoom" start="0,100" end="100,100" time="300" center="left" tween="quadratic" easing="out">Visible</animation>
				<top>5</top>
				<height>280</height>
				<texture diffuse="diffuse/gradientleftsoft.png" colordiffuse="$VAR[color_home_menu_item_fo]">colors/white50.png</texture>
			</control>
			-->
	<include name="menucontrol_profiles">
		<control type="group">
			<top>15</top>
			<control type="label">
				<description>20092 vs 13200</description>
				<left>50</left>
				<height>26</height>
				<font>menucontrol_heading</font>
				<textcolor>$VAR[menucontrol_profiles_fovsnf]</textcolor>
				<label>[B]$LOCALIZE[13200][/B]</label>
			</control>
			<control type="group">
				<description>current profile</description>
				<visible>!Skin.HasSetting(menucontrol_home_hidecurrentprofile) + [Window.IsActive(home) + String.IsEqual(Window(Home).Property(menucontrol_active), true)]</visible>
				<top>5</top>
				<control type="image">
					<right>15</right>
					<width>60</width>
					<height>60</height>
					<bordersize>1</bordersize>
					<bordertexture colordiffuse="$VAR[color_home_menu_item_fo]">frames/bordercircler25.png</bordertexture>
					<texture diffuse="artworkdiffuse/circle.png">$INFO[System.ProfileThumb]</texture>
					<aspectratio scalediffuse="true" align="center" aligny="center">scale</aspectratio>
				</control>
				<control type="label">
					<right>90</right>
					<width>300</width>
					<height>50</height>
					<align>right</align>
					<font>font_labelprofile</font>
					<textcolor>$VAR[color_home_menu_item_nf]</textcolor>
					<label>Logged in as [CR]$INFO[System.ProfileName] </label>
				</control>
			</control>
				
				
			<control type="panel" id="7777">
				<description>profile container NEED CHANGE ID</description>
				<left>25</left>
				<right>80</right>
				<top>35</top>
				<height>227</height>
				<onup>9000</onup>
				<ondown>9000</ondown>
				<onback>9000</onback>
				<onleft>9000</onleft>
				<onright>9000</onright>
				<orientation>vertical</orientation>
				<preloaditems>2</preloaditems>
				<scrolltime tween="quadratic">400</scrolltime>
				<itemlayout height="57">
					<control type="group">
						<height>56</height>
						<control type="image">
							<left>40</left>
							<height>56</height>
							<width>56</width>
							<texture>artworkdiffuse/squareborder.png</texture>
							<colordiffuse>white</colordiffuse>
							<bordersize>4</bordersize>
						</control>
						<control type="image">
							<left>40</left>
							<height>56</height>
							<width>56</width>
							<description>Fallback aspect scale</description>
							<texture background="true" diffuse="artworkdiffuse/usebganel/square.png">$INFO[ListItem.Icon]</texture>
							<aspect align="left" aligny="center">keep</aspect>
							<bordersize>8</bordersize>
						</control>
						<control type="label">
							<left>100</left>
							<right>10</right>
							<textcolor>$VAR[color_home_menu_item_nf]</textcolor>
							<info>ListItem.Label</info>
							<font>font_labelprofile</font>
						</control>
					</control>
				</itemlayout>
				<focusedlayout height="57">
					<control type="group">
						<include>Animation_Item_Focus</include>
						<height>56</height>
						<control type="image">
							<left>40</left>
							<height>56</height>
							<width>56</width>
							<texture>artworkdiffuse/circleborder.png</texture>
							<colordiffuse>white</colordiffuse>
							<bordersize>6</bordersize>
						</control>
						<control type="image">
							<left>40</left>
							<height>56</height>
							<width>56</width>
							<description>Fallback aspect scale</description>
							<texture background="true" diffuse="artworkdiffuse/circle.png">$INFO[ListItem.Icon]</texture>
							<aspect align="left" aligny="center">scale</aspect>
							<bordersize>8</bordersize>
						</control>
						<control type="label">
							<left>110</left>
							<right>10</right>
							<label>$INFO[ListItem.Label,[B],[/B]]</label>
							<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
							<font>font_labelprofile</font>
						</control>
					</control>
					<control type="image">
						<width>12</width>
						<height>12</height>
						<left>0</left>
						<top>18</top>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="color_home_menu_accent">artworkdiffuse/circle.png</texture>
					</control>
				</focusedlayout>
				<content>
					<item>
						<visible>!String.IsEqual(System.ProfileName,Skin.String(profile_01_label)) + !String.IsEmpty(Skin.String(profile_01_label))</visible>
						<label>$INFO[Skin.String(profile_01_label)]</label>
						<icon>$INFO[Skin.String(profile_01_thumb)]</icon>
						<onclick>LoadProfile($INFO[Skin.String(profile_01_label)],prompt)</onclick>
					</item>
					<item>
						<visible>!String.IsEqual(System.ProfileName,Skin.String(profile_02_label)) + !String.IsEmpty(Skin.String(profile_02_label))</visible>
						<label>$INFO[Skin.String(profile_02_label)]</label>
						<icon>$INFO[Skin.String(profile_02_thumb)]</icon>
						<onclick>LoadProfile($INFO[Skin.String(profile_02_label)],prompt)</onclick>
					</item>
					<item>
						<visible>!String.IsEqual(System.ProfileName,Skin.String(profile_03_label)) + !String.IsEmpty(Skin.String(profile_03_label))</visible>
						<label>$INFO[Skin.String(profile_03_label)]</label>
						<icon>$INFO[Skin.String(profile_03_thumb)]</icon>
						<onclick>LoadProfile($INFO[Skin.String(profile_03_label)],prompt)</onclick>
					</item>
					<item>
						<visible>!String.IsEqual(System.ProfileName,Skin.String(profile_04_label)) + !String.IsEmpty(Skin.String(profile_04_label))</visible>
						<label>$INFO[Skin.String(profile_04_label)]</label>
						<icon>$INFO[Skin.String(profile_04_thumb)]</icon>
						<onclick>LoadProfile($INFO[Skin.String(profile_04_label)],prompt)</onclick>
					</item>
					<item>
						<visible>!String.IsEqual(System.ProfileName,Skin.String(profile_05_label)) + !String.IsEmpty(Skin.String(profile_05_label))</visible>
						<label>$INFO[Skin.String(profile_05_label)]</label>
						<icon>$INFO[Skin.String(profile_05_thumb)]</icon>
						<onclick>LoadProfile($INFO[Skin.String(profile_05_label)],prompt)</onclick>
					</item>
					<item>
						<visible>!String.IsEqual(System.ProfileName,Skin.String(profile_06_label)) + !String.IsEmpty(Skin.String(profile_06_label))</visible>
						<label>$INFO[Skin.String(profile_06_label)]</label>
						<icon>$INFO[Skin.String(profile_06_thumb)]</icon>
						<onclick>LoadProfile($INFO[Skin.String(profile_06_label)],prompt)</onclick>
					</item>
				</content>
			</control>
		</control>
	</include>
	
	<!-- musicinfo-->
	<include name="IconButton">
		<control type="radiobutton" id="$PARAM[id]">
			<animation type="focus" reversible="false">
				<effect type="slide" start="0" end="350" easing="in" tween="quadratic" time="300" />
			</animation>
			<animation type="unfocus" reversible="false">
				<effect type="slide" start="350" end="0" easing="in" tween="quadratic" time="300" />
			</animation>
			<textoffsetx>50</textoffsetx>
			<height>65</height>
			<width>400</width>
			<focusedcolor>white</focusedcolor>
			<textcolor>5cC6C6C8</textcolor>
			<textureradioonfocus colordiffuse="white">$PARAM[radiobutton_texture].png</textureradioonfocus>
			<textureradioonnofocus colordiffuse="5cC6C6C8">$PARAM[radiobutton_texture].png</textureradioonnofocus>
			<textureradioofffocus colordiffuse="white">$PARAM[radiobutton_texture].png</textureradioofffocus>
			<textureradiooffnofocus colordiffuse="5cC6C6C8">$PARAM[radiobutton_texture].png</textureradiooffnofocus>
			<texturefocus colordiffuse="white">diffuse/gradientborderleft.png</texturefocus>
			<texturenofocus colordiffuse="5cC6C6C8">diffuse/gradientborderleft.png</texturenofocus>		 
			<label>$PARAM[label]</label>
			<nested />
		</control>
	</include>
	
	
	<!-- game osd - future global ?-->
	<include name="IconButton_games">
			<animation type="focus" reversible="false">
				<effect type="zoom" start="100" end="103" easing="in" tween="quadratic" time="150" />
			</animation>
			<animation type="unfocus" reversible="false">
				<effect type="zoom" start="103" end="100" easing="in" tween="quadratic" time="150" />
			</animation>
			
			<radioposx>10</radioposx>
			<textoffsetx>90</textoffsetx>
			
			<textureradioonfocus colordiffuse="white">$PARAM[radiobutton_texture].png</textureradioonfocus>
			<textureradioonnofocus colordiffuse="5cC6C6C8">$PARAM[radiobutton_texture].png</textureradioonnofocus>
			<textureradioofffocus colordiffuse="white">$PARAM[radiobutton_texture].png</textureradioofffocus>
			<textureradiooffnofocus colordiffuse="5cC6C6C8">$PARAM[radiobutton_texture].png</textureradiooffnofocus>
			<texturefocus colordiffuse="white">diffuse/gradientborderleft.png</texturefocus>
			
	</include>
	
	<!-- Custom_1104_CustomContextual.xml , DialogContextMenu.xml -->
	<include name="Menucontrol_Grouplist">
		<param name="width" default="60%" />
		<definition>
		<control type="grouplist" id="$PARAM[id]">
			<onup>$PARAM[onup]</onup>
			<ondown>$PARAM[ondown]</ondown>
			<top>$PARAM[top]</top>
			<height>$PARAM[height]</height>
			<width>$PARAM[width]</width>
			<orientation>vertical</orientation>
			<itemgap>10</itemgap>
			<nested />
		</control>
		</definition>
	</include>
	
	<!-- global menu bg panel image -->
	<include name="menucontrol_background_layer">
		<control type="image">
			<animation effect="slide" start="0,0" end="450,0" time="300" tween="cubic" easing="inout">visible</animation>
			<animation effect="fade" start="100" end="0" time="150" condition="!String.IsEqual(Window(Home).Property(menucontrol_active),common)">conditional</animation>
			<visible>String.IsEqual(Window(Home).Property(menucontrol_active),common)</visible>
			<top>0</top>
			<bottom>0</bottom>
			<width>530</width>
			<left>-450</left>
			<colordiffuse>$VAR[color_lib_menu_backgroundpanel]</colordiffuse>
			<texture>colors/white.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>
	</include>
		
	<!-- take care of this id , may change - 8999 - its a global skin id -->
	<include name="PreMenucontrol">
		<include content="menucontrol_background_layer"/>
		
		
		<control type="grouplist" id="8999">
			<animation effect="slide" start="0,0" end="450,0" time="300" tween="cubic" easing="inout" condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">conditional</animation>
			
			<visible>String.IsEmpty(Window(home).Property(SetShortcutInProgress))</visible>
			<visible>!$EXP[Infodialog_IsActive]</visible>
			<visible>!Window.IsActive(shutdownmenu)</visible>
			<centertop>50%</centertop>
			
			<align>center</align>
			<aligny>center</aligny>
			<left>12</left>
			<width>110</width>
			<height>90%</height>
			<orientation>vertical</orientation>
			<itemgap>10</itemgap>
			<usecontrolcoords>true</usecontrolcoords>
			
			<onright>ClearProperty(menucontrol_active,home)</onright>
			<onright>SetFocus(50)</onright>
			
			<onleft condition="!String.IsEmpty(Window(Home).Property(menucontrol_active))">SetProperty(menucontrol_active,common,Home)</onleft>
			<onleft>SetFocus(9000)</onleft>
			
			<onup condition="Control.IsVisible(19)">19</onup>
			<onup condition="!Control.IsVisible(19)">50</onup>
			<onup>ClearProperty(menucontrol_active,home)</onup>
			
			<control type="radiobutton" id="8001">
				<include content="PreMenucontrol_RadioButton">
					<param name="radiotexture" value="buttons/back" />
				</include>
				<visible>!Skin.HasSetting(premenu_hide_back)</visible>
				<visible>!String.IsEqual(Window(Home).Property(menucontrol_active),common)</visible>
				<onclick>Dialog.Close(all,true)</onclick>
				<onclick>Action(back)</onclick>
			</control>
			<control type="radiobutton" id="8002">
				<include content="PreMenucontrol_RadioButton">
					<param name="radiotexture" value="buttons/search" />
				</include>
				<onclick condition="!String.IsEmpty(Skin.String(SearchTerm))">Skin.Reset(SearchTerm)</onclick>
				<onclick>Skin.SetString(SearchTerm)</onclick>
				<onclick>ActivateWindow(1120,return)</onclick>
			</control>
			<control type="radiobutton" id="8003">
				<include content="PreMenucontrol_RadioButton">
					<param name="radiotexture" value="buttons/menucontrol" />
				</include>
				<onclick condition="!String.IsEqual(Window(Home).Property(menucontrol_active),common)">SetProperty(menucontrol_active,common,Home)</onclick>
				<onclick condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">ClearProperty(menucontrol_active,home)</onclick>
				<onclick condition="!String.IsEqual(Window(Home).Property(menucontrol_active),common)">SetFocus(9000)</onclick>
			</control>
			<control type="radiobutton" id="8004">
				<visible>!Skin.HasSetting(premenu_hide_hideshutdown)</visible>
				<include content="PreMenucontrol_RadioButton">
					<param name="radiotexture" value="buttons/shutdownmenubutton" />
				</include>
				<onclick>ClearProperty(menucontrol_active,home)</onclick>
				<onclick>ActivateWindow(shutdownmenu)</onclick>
			</control>
			
			<control type="radiobutton" id="8006">
				<visible>!String.IsEqual(Window(Home).Property(menucontrol_active),common)</visible>
				<visible>String.IsEmpty(Window(home).Property(TrailerIsPlaying))</visible>
				<visible>$EXP[Has_Trailer]</visible>
				<visible>!Skin.HasSetting(premenu_hide_trailer)</visible>
				<include content="PreMenucontrol_RadioButton">
					<param name="radiotexture" value="buttons/trailer" />
				</include>
				<onclick>PlayMedia($INFO[Window(home).Property(listitemtrailer)],1)</onclick>
				<onclick>SetProperty(TrailerIsPlaying,true,home)</onclick>
				<onclick>SetFocus(50)</onclick>
			</control>
			<control type="radiobutton" id="8007">
				<visible>!String.IsEqual(Window(Home).Property(menucontrol_active),common)</visible>
				<visible>!String.IsEmpty(Window(home).Property(TrailerIsPlaying))</visible>
				<visible>!Skin.HasSetting(premenu_hide_trailer)</visible>
				<include content="PreMenucontrol_RadioButton">
					<param name="radiotexture" value="buttons/stop" />
				</include>
				<onclick>ClearProperty(TrailerIsPlaying,home)</onclick>
				<onclick>Action(stop)</onclick>
				<onclick>SetFocus(50)</onclick>
			</control>
			<control type="radiobutton" id="8005">
				<visible>Player.HasMedia</visible>
				<include content="PreMenucontrol_RadioButton">
					<param name="radiotexture" value="buttons/togglefullscreen" />
				</include>
				<onclick>Fullscreen</onclick>
			</control>
			<control type="radiobutton" id="8008">
				<visible>!String.IsEqual(Window(Home).Property(menucontrol_active),common)</visible>
				<visible>!Skin.HasSetting(premenu_hide_info)</visible>
				<visible>
                    String.IsEqual(Container.ListItem.dbtype,movie) | String.IsEqual(Container.ListItem.dbtype,tvshow) | String.IsEqual(Container.ListItem.dbtype,season) | String.IsEqual(Container.ListItem.dbtype,episode) | 
                    String.IsEqual(Container.ListItem.dbtype,artist) | String.IsEqual(Container.ListItem.dbtype,album) | String.IsEqual(Container.ListItem.dbtype,song)
                </visible>
				<include content="PreMenucontrol_RadioButton">
					<param name="radiotexture" value="buttons/info" />
				</include>
				<onclick>SetFocus(50)</onclick>
				<onclick>Action(info)</onclick>
			</control>
			<control type="radiobutton" id="8009">
				<visible>!String.IsEqual(Window(Home).Property(menucontrol_active),common)</visible>
				<visible>!Skin.HasSetting(premenu_hide_embuarytmdbinfo)</visible>
				<visible>String.IsEqual(Container.ListItem.dbtype,movie) | String.IsEqual(Container.ListItem.dbtype,actor) | String.IsEqual(Container.ListItem.dbtype,tvshow) | String.IsEqual(Container.ListItem.dbtype,season) | String.IsEqual(Container.ListItem.dbtype,episode)</visible>
				<include content="PreMenucontrol_RadioButton">
					<param name="radiotexture" value="buttons/tmdbembuaryinfo" />
				</include>
				<onclick>RunScript(script.embuary.info,call=$VAR[embtmdbinfocall],query='"$VAR[embtmdbinfoquery]'")</onclick>
			</control>
			
			<!-- 
			<control type="radiobutton" id="8020">
				<visible>!String.IsEqual(Window(Home).Property(menucontrol_active),common)</visible>
				<visible>[control.isvisible(503) | control.isvisible(504)] + [control.isvisible(50350)]</visible>
				<include content="PreMenucontrol_RadioButton">
					<param name="radiotexture" value="icons/actor" />
				</include>
				
				<onclick condition="String.IsEmpty(Window.Property(Spotlight_Cast))">SetFocus(50350,0,absolute)</onclick>
				<onclick condition="!String.IsEmpty(Window.Property(Spotlight_Cast))">ClearProperty(Spotlight_Cast)</onclick>
				<onclick condition="!String.IsEmpty(Window.Property(Spotlight_Cast))">SetFocus(50)</onclick>
			</control>
			<control type="radiobutton" id="8021">
				<visible>!String.IsEqual(Window(Home).Property(menucontrol_active),common)</visible>
				<visible>[control.isvisible(503) | control.isvisible(504)] + [control.isvisible(50352) + Integer.IsGreater(container(50352).NumItems,0)]</visible>
				<include content="PreMenucontrol_RadioButton">
					<param name="radiotexture" value="defaultsets" />
				</include>
				<onclick condition="String.IsEmpty(Window.Property(Spotlight_Sets))">SetFocus(50352,absolute)</onclick>
				
				<onclick condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">ClearProperty(Spotlight_Sets)</onclick>
				<onclick condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">SetFocus(50)</onclick>
			</control> 
			-->
			
			
		</control>
	</include>
		<!-- 8020 8021
			vis cond here or in container
			eg	!string.isempty(container(503).listitem.dbtype) | !string.isempty(container(504).listitem.dbtype) 
		-->
	<include name="PreMenucontrol_RadioButton">
		<include content="Animation_Item_Focus" />
		<textureradioonfocus colordiffuse="$VAR[PreMenucontrol_button_fo]">$PARAM[radiotexture].png</textureradioonfocus>
		<textureradioonnofocus colordiffuse="$VAR[PreMenucontrol_button_nf]">$PARAM[radiotexture].png</textureradioonnofocus>
		<textureradioofffocus colordiffuse="$VAR[PreMenucontrol_button_fo]">$PARAM[radiotexture].png</textureradioofffocus>
		<textureradiooffnofocus colordiffuse="$VAR[PreMenucontrol_button_nf]">$PARAM[radiotexture].png</textureradiooffnofocus>
		<textoffsetx />
		<radiowidth>60</radiowidth>
		<radioheight>60</radioheight>
		<radioposx>3</radioposx>
		<textureradioondisabled />
		<textureradiooffdisabled  />
		<texturefocus />
		<texturenofocus />
		<height>80</height>
		<focusedcolor />
		<textcolor />
		<label />
		<selected />
	</include>
	<variable name="PreMenucontrol_button_fo">
		<value condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">$VAR[color_lib_menu_item_fo]</value>
		<value>$VAR[color_lib_text_main]</value>
	</variable>
	<variable name="PreMenucontrol_button_nf">
		<value condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">$VAR[color_lib_menu_item_nf]</value>
		<value>$VAR[color_lib_text_secondary]</value>
	</variable>

	<!-- 	1.40 MyPics.xml
ID 	Type 	Description
2 	button 	Select viewtype (list, thumbnail, media info, etc...)
3 	button 	Select sort method (sort by: name, date size, etc...)
4 	togglebutton 	Select sortmode (ascending or descending)
6 	button 	Start a picture slideshow
7 	button 	Start a recursive picture slideshow
9 	radiobutton 	Randomize the picture slideshow
12 	label 	Number of items in the list  -->
	
	<!-- 	1.41 MyPlaylist.xml
ID 	Type 			Description
2 	button 			Select viewtype (list, thumbnail, media info, etc...)
3 	button 			Select sort method (sort by: name, date size, etc...)
4 	togglebutton 	Select sortmode (ascending or descending)
12 	label 			Number of items in the playlist
20 	radiobutton 	Shuffle the playlist
21 	button 			Save the playlist
22 	button 			Clear the playlist
23 	button 			Play the playlist
24 	button 			Play the next item in the playlist
25 	button 			Play the previous item in the playlist
26 	button 			Put the playlist on repeat  -->

	
	<!-- 	1.43 MyPVRChannels.xml
ID 	Type 			Description
2 	button 			Select viewtype (list, thumbnail, media info, etc...)
3 	button 			Select sort method (sort by: name, date size, etc...)
4 	togglebutton 	Select sortmode (ascending or descending)
6 	radiobutton 	Show hidden channels
28 	button 			Channel groups button
29 	label 			Channel groups name
31 	radiobutton 	Filter  -->
	
<!-- 	1.45 MyPVRRecordings.xml
ID 	Type 			Description
2 	button 			Select viewtype (list, thumbnail, media info, etc...)
3 	button 			Select sort method (sort by: name, date size, etc...)
4 	togglebutton 	Select sortmode (ascending or descending)
5 	radiobutton 	Group items by folder structure
7 	radiobutton 	Show deleted recordings
10 	button 			Show only watched, unwatched or all recordings
28 	button 			Channelgroups button
29 	label 			'Deleted' (When show deleted recordings is enabled, otherwise empty)  -->
	
<!-- 	1.38 MyMusicNav.xml
ID 	Type 					Description
2	button	Select viewtype (list, thumbnail, media info, etc...)
3	button	Select sort method (sort by: name, date size, etc...)
4	togglebutton	Select sortmode (ascending or descending)
5	radiobutton	Switch to file mode
8	edit	Search for a string anywhere in the Kodi music database
12	label	Number of items in the list
15	label	Filter label
16	radiobutton	Start party mode (randomly play songs from your entire music collection)
17	button	Manually enter artist and album name to lookup the artist and album information on the internet
18	label	Warning to the user to turn off library mode when no scanned media is found
19	radiobutton / edit	Filter the media files to only show items that include the specified string in the name
20	button	Update library
-->

	<!-- 
	is failing
	<variable name="media_menucontrol">
		<value condition="false">9000</value>
		<value condition="true">8999</value>
	</variable>
	
	is also failing
	<include name="media_menucontrol">
		<param name="forced_menu_id" default="9000" />
		<menucontrol>$PARAM[forced_menu_id]</menucontrol>
	</include>
	
	-->
	<include name="media_menucontrol">
		<include content="media_menucontrol_9000" condition="!Skin.HasSetting(menucontrol_forcedfocus_8999)" />
		<include content="media_menucontrol_8999" condition="Skin.HasSetting(menucontrol_forcedfocus_8999)" />
	</include>
	
	<include name="media_menucontrol_9000">
		<menucontrol>9000</menucontrol>
	</include>
	<include name="media_menucontrol_8999">
		<menucontrol>8999</menucontrol>
	</include>
	
	
	<!-- ERROR if changed to default menu control is premenu 
	consider removed params has_premenu, has_no_premenu
	-->
	<!-- global Window.Is(media) , My[foo]Nav.xml -->
	<include name="menucontrol_global">
		<param name="menucontrol_id" default="9000" />
		<param name="window_defaultcontrol_id" default="50" />
		<param name="has_premenu" default="true" />
		<param name="has_no_premenu" default="false" />
		
		<definition>
		<control type="grouplist" id="$PARAM[menucontrol_id]">
			<description>need get cond vis content</description>
			<top>110</top>
			<bottom>10</bottom>
			<width>445</width>
			<left>0</left>
			<itemgap>0</itemgap>
			
			<onup>ClearProperty(menucontrol_active,home)</onup>
			<onup condition="Control.IsVisible(19)">19</onup>
			<onup condition="Control.IsVisible(7777)">7777</onup>
			<onup condition="![Control.IsVisible(19) + Control.IsVisible(7777)]">$PARAM[menucontrol_id]</onup>
			
			<onback>ClearProperty(menucontrol_active,home)</onback>
			<onback>SetFocus($PARAM[window_defaultcontrol_id])</onback>
			
			<onright condition="$PARAM[has_premenu]">SetFocus(8999)</onright>
			<onright condition="$PARAM[has_no_premenu]">ClearProperty(menucontrol_active,home)</onright>
			<onright condition="$PARAM[has_no_premenu]">SetFocus($PARAM[window_defaultcontrol_id])</onright>
			
			<onleft>SetFocus(50)</onleft>
			<onleft>ClearProperty(menucontrol_active,home)</onleft>
			
			<control type="image" id="4398768">
				<visible>Window.IsActive(settings)</visible>
				<height>300</height>
				<bordersize>100</bordersize>
				<texture colordiffuse="$VAR[color_lib_menu_item_nf]">icons/swanwatersign.png</texture>
				<aspectratio>keep</aspectratio>
			</control>
			
			<!-- Currently Playing HUB -->
			<include content="menucontrol_currentlyplaying" condition="!Skin.HasSetting(header_currentlyplaying)" />
			
			<!-- Native GUI Ctrls + Cond Seperators -->
			<control type="image" id="4398768">
				<height>1</height>
				<texture colordiffuse="$VAR[color_lib_menu_item_nf]">diffuse/gradienthorizontal.png</texture>
				<visible>Control.IsVisible(6048)</visible>
			</control> 
			
			<control type="label" id="910">
				<visible>Control.HasFocus(911)</visible>
				<textoffset>20</textoffset>
				<label>$INFO[Container(911).Listitem.Label,[B],[/B]][CR][COLOR $VAR[color_lib_menu_accent]]$INFO[Container(911).Listitem.Label2][/COLOR][CR]</label>
				<font>font12</font>
				<wrapmultiline>true</wrapmultiline>
				<height>90</height>
				<align>center</align>
				<textcolor>$VAR[color_lib_menu_item_fo]</textcolor>
			</control>
			<control type="label" id="912">
				<visible>Window.IsMedia</visible>
				<visible>!Control.HasFocus(911)</visible>
				<textoffset>20</textoffset>
				<label>[CR][B]    Container Settings[/B]</label>
				<font>font12</font>
				<wrapmultiline>true</wrapmultiline>
				<height>70</height>
				<align>left</align>
				<textcolor>$VAR[color_lib_menu_item_fo]</textcolor>
			</control>
			
			<control type="panel" id="911">
				<visible>Window.IsMedia</visible>
				<onfocus condition="!String.IsEqual(Window(Home).Property(menucontrol_active),common)">SetProperty(menucontrol_active,common,Home)</onfocus>
				<scrolltime tween="quadratic">400</scrolltime>
				<top>0</top>
				<preloaditems>2</preloaditems>
				<orientation>vertical</orientation>
				<height>165</height>
				
				<itemlayout height="74" width="74">
					<control type="group">
						<height>78</height>
						<width>78</width>
						<include content="UniversalLayout">
							<param name="colordiffuse" value="$VAR[color_lib_menu_item_nf]" />
							<param name="artwork" value="square" />
							<param name="get_tags" value="false" />
							<param name="autoscroll" value="false" />
							<param name="bordersize_bg" value="4" />
							<param name="conditional_artworkdiffuse_themed" value="true" />
							<param name="conditional_artworkdiffuse_override" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout height="74" width="74">
					<control type="group">
						<height>78</height>
						<width>78</width>
						<include>Animation_Item_Focus</include>
						<include content="UniversalLayout">
							<param name="colordiffuse" value="$VAR[color_lib_menu_accent]" />
							<param name="artwork" value="square" />
							<param name="get_tags" value="false" />
							<param name="bordersize_bg" value="4" />
							<param name="conditional_artworkdiffuse_themed" value="true" />
							<param name="conditional_artworkdiffuse_override" value="false" />
						</include>
					</control>
				</focusedlayout>
				<content>
					<!-- 
					<item>
						<description>keep here or in premenu?</description>
						<icon>buttons/settings.png</icon>
						<label>Gehe zu</label>
						<label2>$LOCALIZE[10004]</label2>
						<onclick>ActivateWindow(settings)</onclick>
					</item>
					<item>
						<description>keep here or in premenu?</description>
						<icon>buttons/home.png</icon>
						<label>Gehe zu</label>
						<label2>$LOCALIZE[10000]</label2>
						<onclick>ActivateWindow(home)</onclick>
						<visible>!Window.IsVisible(home)</visible>
					</item>
					<item>
						<icon>buttons/music_transborder.png</icon>
						<label>Gehe zu</label>
						<label2>$LOCALIZE[2]</label2>
						<onclick>ReplaceWindow(music,musiclibrary://music/)</onclick>
						<visible>!Window.Is(music)</visible>
					</item>
					<item>
						<icon>defaultmovies.png</icon>
						<label>Gehe zu</label>
						<label2>$LOCALIZE[3]</label2>
						<onclick>ReplaceWindow(videos,library://video/)</onclick>
						<visible>!Window.Is(videos)</visible>
					</item>
					<item>
						<icon>defaultaddonpvrclient.png</icon>
						<label>Gehe zu</label>
						<label2>$LOCALIZE[14204]</label2>
						<onclick>ReplaceWindow(tvguide)</onclick>
						 or ReplaceWindow(pvr,pvr://channels/tv/)</onclick> 
						<visible>!Window.Is(tvguide)</visible>
					</item>
					<item>
						<icon>defaultaddonimages.png</icon>
						<label>Gehe zu</label>
						<label2>$LOCALIZE[1]</label2>
						<onclick>ReplaceWindow(pictures)</onclick>
						<visible>!Window.Is(pictures)</visible>
					</item>
					<item>
						<icon>defaultmusicplaylists.png</icon>
						<label>Gehe zu</label>
						<label2>$LOCALIZE[559]</label2>
				 msgctxt "#20011"
msgid "Music playlists"
msgstr "Musik-Wiedergabelisten"

msgctxt "#20012"
msgid "Video playlists"
msgstr "Video-Wiedergabelisten" 
						<onclick condition="false">ReplaceWindow(music,special://musicplaylists/)</onclick>
						<onclick condition="true">ReplaceWindow(videos,special://videoplaylists/)</onclick>
						<visible>true</visible>
					</item> -->
					<item>
						<icon>defaultpartymode.png</icon>
						<label>$LOCALIZE[589]</label>
						<label2>$INFO[Control.GetLabel(16)]</label2>
						<onclick>SendClick(16)</onclick>
						<visible>Control.IsVisible(16)</visible>
						<property name="icon">default</property>
					</item>
					<item>
						<description>stop scan 13353 condition library.isscanningvideo</description>
						<icon>buttons/refresh.png</icon>
						<label>$LOCALIZE[653]</label>
						<label2>$VAR[lib_isscanningmedia]</label2>
						<onclick>SendClick(20)</onclick>
						<visible>Control.IsEnabled(20)</visible>
						<property name="icon">default</property>
					</item>
					<item>
						<description>addonbrowser update</description>
						<icon>buttons/refresh.png</icon>
						<label>$LOCALIZE[24034]</label>
						<onclick>SendClick(9)</onclick>
						<visible>Control.IsVisible(9) + Window.IsActive(addonbrowser)</visible>
						<property name="icon">default</property>
					</item>
					<item>
						<icon>buttons/viewswitch.png</icon>
						<label>$LOCALIZE[457]</label>
						<label2>$INFO[Container.Viewmode]</label2>
						<onclick>SendClick(2)</onclick>
						<visible>Control.IsVisible(2)</visible>
						<property name="icon">default</property>
					</item>
					<item>
						<description>WIP make viewselector</description>
						<icon>buttons/viewswitch2.png</icon>
						<label>WIP OPEN VIEW SELECTOR</label>
						<label2>$INFO[Container.Viewmode]</label2>
						<onclick>SetProperty(view_selection,visible,home)</onclick>
						<onclick>SetFocus(100)</onclick>
						<visible>Control.IsVisible(2)</visible>
						<visible>false</visible>
						<property name="icon">default</property>
					</item>
					<item>
						<icon>defaultmusicvideotitle.png</icon>
						<label>$LOCALIZE[580] (↓↑)</label>
						<label2>$INFO[Container.SortOrder] $VAR[ContainerSortOrderUnicodeArrow]</label2>
						<onclick>SendClick(4)</onclick>
						<visible>Control.IsEnabled(4)</visible>
						<property name="icon">default</property>
					</item>
					<item>
						<icon>buttons/togglewatched.png</icon>
						<label>Zeige $LOCALIZE[127]</label>
						<label2>$INFO[Control.GetLabel(10)]$INFO[Container.NumItems, (,)]</label2>
						<onclick>SendClick(10)</onclick>
						<visible>Control.IsVisible(10)</visible>
						<property name="icon">default</property>
					</item>
					
					<item>
						<icon>buttons/method.png</icon>
						<label>$LOCALIZE[21429]</label>
						<label2>$INFO[Container.SortMethod]</label2>
						<onclick>SendClick(3)</onclick>
						<visible>Control.IsEnabled(3)</visible>
						<property name="icon">default</property>
					</item>
					<item>
						<icon>buttons/advancedfiltermethod.png</icon>
						<label>$LOCALIZE[10152]</label>
						<label2>$LOCALIZE[35226]</label2>
						<visible>Container.CanFilterAdvanced</visible>
						<onclick>SetFocus(50)</onclick>
						<onclick>Filter</onclick>
						<property name="icon">default</property>
					</item>
					<item>
					<icon>defaultaddonvfs.png</icon>
						<label>$INFO[Control.GetLabel(11)]</label>
						<onclick>SendClick(11)</onclick>
						<label>$LOCALIZE[20336]</label>
						<visible>system.haslocks</visible>
						<property name="icon">default</property>
					</item> 
				</content>
			</control>
			
			<!-- Naviagtion Panel -->
			<!-- diff colors global vs home ? params -->
			<include content="Menucontrol_Content_Navigation" />
			<include content="menucontrol_mymedia_viewid_settings" condition="Window.IsMedia" />
		
		</control>
		</definition>
	</include>
	
	<include name="menucontrol_currentlyplaying">
		<control type="group" id="6048">
			<description>PlaybackCtrl</description>
			<width>98%</width>
			<height>500</height>
			<visible>$EXP[IsCurrentyPlayingCommon] | Player.HasAudio</visible>
			
			<control type="label">
				<left>10</left>
				<right>10</right>
				<height>20</height>
				<width>425</width>
				<font>font17</font>
				<align>center</align>
				<label>CURRENTLY  PLAYING</label>
				<textcolor>$VAR[color_lib_menu_accent]</textcolor>
			</control>
			
			<control type="label">
				<top>30</top>
				<visible>$EXP[PlayerClearLogo_IsEmpty]</visible>
				<left>10</left>
				<right>10</right>
				<height>100</height>
				<width>425</width>
				<wrapmultiline>true</wrapmultiline>
				<font>font22</font>
				<align>center</align>
				<label>$VAR[Menucontrol_LogoFallback,&quot;[B],[/B]&quot;]</label>
				<textcolor>$VAR[color_lib_menu_item_nf]</textcolor>
			</control>
			
			<control type="label">
				<visible>player.hasaudio</visible>
				<description>bad bcause overlay temp just use if logo empty</description>
				<visible>$EXP[PlayerClearLogo_IsEmpty]</visible>
				<top>30</top>
				<left>10</left>
				<right>10</right>
				<height>15</height>
				<width>425</width>
				<font>font20_title</font>
				<align>center</align>
				<label>$INFO[MusicPlayer.Album]</label>
				<textcolor>$VAR[color_lib_menu_item_fo]</textcolor>
			</control>
			
			<control type="image">
				<texture>$VAR[PlayerClearlogo]</texture>
				<visible>!$EXP[PlayerClearLogo_IsEmpty]</visible>
				<aspectratio aligny="center" align="center">keep</aspectratio>
				<height>90</height>
				<top>30</top>
				<left>15</left>
				<right>0</right>
			</control>
			<control type="label">
				<top>130</top>
				<left>20</left>
				<height>20</height>
				<width>425</width>
				<font>MenucontrolItem</font>
				<align>center</align>
				<label>$VAR[MenucontrolPlayerDuration]</label>
				<textcolor>$VAR[color_lib_menu_accent]</textcolor>
			</control>
			
			<control type="image">
				<visible>Player.HasAudio</visible>
				<texture diffuse="diffuse/compactdisk.png">$VAR[PlayerDisc]</texture>
				<aspectratio aligny="bottom" align="right">keep</aspectratio>
				<width>245</width>
				<height>245</height>
				<top>160</top>
				<left>200</left>
				<right>10</right>
				<animation effect="rotate" end="-360" center="auto" time="4800" loop="true" reversible="false" condition="!Player.Paused">Conditional</animation>
			</control>
			<control type="image">
				<visible>Player.HasAudio</visible>
				<texture>$INFO[Player.Icon]</texture>
				<aspectratio aligny="center" align="left">keep</aspectratio>
				<width>245</width>
				<height>245</height>
				<top>160</top>
				<left>20</left>
				<right>10</right>
				<animation effect="slide" start="0,0" end="90,0" center="auto" time="0" condition="String.IsEmpty(Player.Art(album.discart)) + String.IsEmpty(Player.Art(discart))">Conditional</animation>
			</control>
			
			<control type="videowindow">
				<visible>!Player.HasAudio</visible>
				<height>262</height>
				<top>150</top>
				<left>20</left>
			</control>
			
			<include content="Menucontrol_PlaybackCtrlButton">
				<param name="id" value="1" />
				<param name="actionid" value="previous" />
				<param name="left" value="120" />
				<param name="onleft" value="60494" />
				<param name="onright" value="60492" />
				<param name="visible" value="MusicPlayer.HasPrevious" />
				<param name="action2" value="PlayerControl(previous)" />
			</include>
			<control type="togglebutton" id="60492">
				<left>175</left>
				<top>425</top>
				<width>45</width>
				<height>45</height>
				<label />
				<altlabel />
				<texturefocus colordiffuse="$VAR[color_lib_menu_accent]">buttons/osd/play_fo.png</texturefocus>
				<texturenofocus colordiffuse="$VAR[color_lib_menu_item_nf]">buttons/osd/play.png</texturenofocus>
				<alttexturefocus colordiffuse="$VAR[color_lib_menu_accent]">buttons/osd/pause_fo.png</alttexturefocus>
				<alttexturenofocus colordiffuse="$VAR[color_lib_menu_item_nf]">buttons/osd/pause.png</alttexturenofocus>
				<usealttexture>!Player.Paused</usealttexture>
				<onup>19</onup>
				<ondown>911</ondown>
				<onfocus condition="!String.IsEqual(Window(Home).Property(menucontrol_active),common)">SetProperty(menucontrol_active,common,Home)</onfocus>
				<onright>60493</onright>
				<onleft>60491</onleft>
				<onclick>PlayerControl(play)</onclick>
			</control>
			
			<include content="Menucontrol_PlaybackCtrlButton">
				<param name="id" value="3" />
				<param name="actionid" value="stop" />
				<param name="left" value="230" />
				<param name="onleft" value="60492" />
				<param name="onright" value="60494" />
			</include>
			<include content="Menucontrol_PlaybackCtrlButton">
				<param name="id" value="4" />
				<param name="actionid" value="next" />
				<param name="left" value="285" />
				<param name="onleft" value="60493" />
				<param name="onright" value="SetFocus(8999)" />
				<param name="visible" value="MusicPlayer.HasNext" />
			</include>
		</control>
	</include>
	<include name="menucontrol_mymedia_viewid_settings">
			<!-- View Type Settings - use include placements? myvideo, mymusic...? -->
			<include content="spacer_h">
				<param name="id" value="4006" />
				<param name="gap" value="40" />
			</include>
			<control type="label" id="4228">
				<label>   [B]$LOCALIZE[14018][/B]</label>
				<height>60</height>
				<font>font12</font>
				<visible>Window.IsMedia</visible>
				<textcolor>$VAR[color_lib_menu_item_fo]</textcolor>
			</control>
			<control type="radiobutton" id="4008">
				<include>Menucontrol_RadioButton</include>
				<label>Show BG Panel</label>
				<visible>Control.IsVisible(50) | Control.IsVisible(51) | Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(54) | Control.IsVisible(56)</visible>
				<onclick condition="Control.IsVisible(50)">Skin.ToggleSetting(View_50_ShowBGPanel)</onclick>
				<onclick condition="Control.IsVisible(51)">Skin.ToggleSetting(View_51_ShowBGPanel)</onclick>
				<onclick condition="Control.IsVisible(52)">Skin.ToggleSetting(View_52_ShowBGPanel)</onclick>
				<onclick condition="Control.IsVisible(53)">Skin.ToggleSetting(View_53_ShowBGPanel)</onclick>
				<onclick condition="Control.IsVisible(54)">Skin.ToggleSetting(View_54_ShowBGPanel)</onclick>
				<onclick condition="Control.IsVisible(56)">Skin.ToggleSetting(View_56_ShowBGPanel)</onclick>
				<selected>
				[
				 Control.IsVisible(50) + Skin.HasSetting(View_50_ShowBGPanel) | 
                 Control.IsVisible(51) + Skin.HasSetting(View_51_ShowBGPanel) | 
			 	 Control.IsVisible(52) + Skin.HasSetting(View_52_ShowBGPanel) | 
				 Control.IsVisible(53) + Skin.HasSetting(View_53_ShowBGPanel) | 
				 Control.IsVisible(54) + Skin.HasSetting(View_54_ShowBGPanel) | 
				 Control.IsVisible(56) + Skin.HasSetting(View_56_ShowBGPanel)
				]
				</selected>
			</control>
			
			<control type="radiobutton" id="4009">
				<include>Menucontrol_RadioButton</include>
				<label>Disable tags</label>
				<visible>Control.IsVisible(51) | Control.IsVisible(53) | Control.IsVisible(54) | Control.IsVisible(503) | Control.IsVisible(504)</visible>
				<onclick condition="Control.IsVisible(51)">Skin.ToggleSetting(View_51_DisableTags)</onclick>
				<onclick condition="Control.IsVisible(53)">Skin.ToggleSetting(View_53_DisableTags)</onclick>
				<onclick condition="Control.IsVisible(54)">Skin.ToggleSetting(View_54_DisableTags)</onclick>
				
				<onclick condition="Control.IsVisible(503)">Skin.ToggleSetting(View_503_DisableTags)</onclick>
				<onclick condition="Control.IsVisible(504)">Skin.ToggleSetting(View_504_DisableTags)</onclick>
				<selected>
				[
				 Control.IsVisible(51) + Skin.HasSetting(View_51_DisableTags) | 
				 Control.IsVisible(53) + Skin.HasSetting(View_53_DisableTags) | 
				 Control.IsVisible(54) + Skin.HasSetting(View_54_DisableTags) | 
				 Control.IsVisible(503) + Skin.HasSetting(View_503_DisableTags) | 
				 Control.IsVisible(504) + Skin.HasSetting(View_504_DisableTags)
				]
				</selected>
			</control>
			
			<control type="radiobutton" id="4010">
				<include>Menucontrol_RadioButton</include>
				<label>Show footer</label>
				<visible>Control.IsVisible(50) | Control.IsVisible(51) | Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(54) | Control.IsVisible(56) | Control.IsVisible(502) | Control.IsVisible(503) | Control.IsVisible(504)</visible>
				<onclick condition="Control.IsVisible(50)">Skin.ToggleSetting(View_50_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(51)">Skin.ToggleSetting(View_51_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(52)">Skin.ToggleSetting(View_52_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(53)">Skin.ToggleSetting(View_53_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(54)">Skin.ToggleSetting(View_54_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(56)">Skin.ToggleSetting(View_56_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(502)">Skin.ToggleSetting(View_502_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(503)">Skin.ToggleSetting(View_503_DisableFooter)</onclick>
				<onclick condition="Control.IsVisible(504)">Skin.ToggleSetting(View_504_DisableFooter)</onclick>
				<selected>
				[
				 Control.IsVisible(50) + !Skin.HasSetting(View_50_DisableFooter) | 
                 Control.IsVisible(51) + !Skin.HasSetting(View_51_DisableFooter) | 
				 Control.IsVisible(52) + !Skin.HasSetting(View_52_DisableFooter) | 
				 Control.IsVisible(53) + !Skin.HasSetting(View_53_DisableFooter) | 
				 Control.IsVisible(54) + !Skin.HasSetting(View_54_DisableFooter) | 
				 Control.IsVisible(56) + !Skin.HasSetting(View_56_DisableFooter) | 
				 Control.IsVisible(502) + !Skin.HasSetting(View_502_DisableFooter) | 
				 Control.IsVisible(503) + !Skin.HasSetting(View_503_DisableFooter) | 
				 Control.IsVisible(504) + !Skin.HasSetting(View_504_DisableFooter)
				]
				</selected>
			</control>
	<!--
	video
	id 50
		keyart
		animatedposter
		poster - default
		clearlogo
		clearart
		
		disc e.g. 
		
	id 56
		animatedfanart
		fanart
		landscape - default
		banner
		clearlogo
		clearart
		characterart
		
		
	music
	id 50
		thumb
		disc - song
		disc - album
	
	
	-->
		
			<control type="radiobutton" id="4011">
				<description>auto play trailer</description>
				<include>Menucontrol_RadioButton</include>
				<label>Auto Play Trailer</label>
				<visible>Control.IsVisible(50) | Control.IsVisible(56) | Control.IsVisible(502) | Control.IsVisible(503) | Control.IsVisible(504)</visible>
				<onclick condition="Control.IsVisible(50)">Skin.ToggleSetting(View_50_AutoPlayTrailer)</onclick>
				<onclick condition="Control.IsVisible(56)">Skin.ToggleSetting(View_56_AutoPlayTrailer)</onclick>
				<onclick condition="Control.IsVisible(502)">Skin.ToggleSetting(View_502_AutoPlayTrailer)</onclick>
				<onclick condition="Control.IsVisible(503)">Skin.ToggleSetting(View_503_AutoPlayTrailer)</onclick>
				<onclick condition="Control.IsVisible(504)">Skin.ToggleSetting(View_504_AutoPlayTrailer)</onclick>
				<selected>
				[
				 Control.IsVisible(50) + Skin.HasSetting(View_50_AutoPlayTrailer) | 
                 Control.IsVisible(56) + Skin.HasSetting(View_56_AutoPlayTrailer) | 
				 Control.IsVisible(502) + Skin.HasSetting(View_502_AutoPlayTrailer) | 
				 Control.IsVisible(503) + Skin.HasSetting(View_503_AutoPlayTrailer) | 
				 Control.IsVisible(504) + Skin.HasSetting(View_504_AutoPlayTrailer)
				]
				</selected>
			</control>
			
			<include content="PreferArt_Button">
				<param name="button_id" value="4012" />
				<param name="artwork_localized_id" value="Key Art" />
				<param name="artwork" value="keyart" />
				<param name="visible" value="Control.IsVisible(50) + Window.IsActive(videos)" />
				
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedposter)">Skin.ToggleSetting(View_50_Prefer_animatedposter)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedfanart)">Skin.ToggleSetting(View_50_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Disc_Video)">Skin.ToggleSetting(View_50_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_poster)">Skin.ToggleSetting(View_50_Prefer_poster)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearlogo)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearart)">Skin.ToggleSetting(View_50_Prefer_clearart)</onclick>
				
			</include>
			
			<include content="PreferArt_Button">
				<param name="button_id" value="4013" />
				<param name="artwork_localized_id" value="animatedposter" />
				<param name="artwork" value="animatedposter" />
				<param name="visible" value="Control.IsVisible(50) + Window.IsActive(videos)" />
				
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedfanart)">Skin.ToggleSetting(View_50_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Disc_Video)">Skin.ToggleSetting(View_50_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_keyart)">Skin.ToggleSetting(View_50_Prefer_keyart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearlogo)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearart)">Skin.ToggleSetting(View_50_Prefer_clearart)</onclick>
            
			</include>
			
			<include content="PreferArt_Button">
				<param name="button_id" value="4014" />
				<param name="artwork_localized_id" value="Poster" />
				<param name="artwork" value="poster" />
				<param name="visible" value="false" />
			
			</include>
			
			<include content="PreferArt_Button">
				<param name="button_id" value="4015" />
				<param name="artwork_localized_id" value="animatedfanart" />
				<param name="artwork" value="animatedfanart" />
				<param name="visible" value="Control.IsVisible(56) + Window.IsActive(videos)" />
				
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Album)">Skin.ToggleSetting(View_56_Prefer_Discart_Album)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Song)">Skin.ToggleSetting(View_56_Prefer_Discart_Song)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Disc_Video)">Skin.ToggleSetting(View_56_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearart)">Skin.ToggleSetting(View_56_Prefer_clearart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearlogo)">Skin.ToggleSetting(View_56_Prefer_clearlogo)</onclick>
            
			</include>
			
			<include content="PreferArt_Button">
				<param name="button_id" value="4016" />
				<param name="artwork_localized_id" value="Landscape" />
				<param name="artwork" value="landscape" />
				<param name="visible" value="false" />
				
			</include>
			
			<include content="PreferArt_Button">
				<param name="button_id" value="4017" />
				<param name="artwork_localized_id" value="$LOCALIZE[20020]" />
				<param name="artwork" value="banner" />
				<param name="visible" value="false" />
			
			</include>
			
			<include content="PreferArt_Button">
				<param name="button_id" value="4018" />
				<param name="artwork_localized_id" value="Clear Logo" />
				<param name="artwork" value="clearlogo" />
				<param name="visible" value="Control.IsVisible(50) | Control.IsVisible(56)" />
				
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedposter)">Skin.ToggleSetting(View_50_Prefer_animatedposter)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Discart_Album)">Skin.ToggleSetting(View_50_Prefer_Discart_Album)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Discart_Song)">Skin.ToggleSetting(View_50_Prefer_Discart_Song)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Disc_Video)">Skin.ToggleSetting(View_50_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_poster)">Skin.ToggleSetting(View_50_Prefer_poster)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_keyart)">Skin.ToggleSetting(View_50_Prefer_keyart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearart)">Skin.ToggleSetting(View_50_Prefer_clearart)</onclick>
				
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_animatedfanart)">Skin.ToggleSetting(View_56_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Album)">Skin.ToggleSetting(View_56_Prefer_Discart_Album)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Song)">Skin.ToggleSetting(View_56_Prefer_Discart_Song)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Disc_Video)">Skin.ToggleSetting(View_56_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearart)">Skin.ToggleSetting(View_56_Prefer_clearart)</onclick>
            
			</include>
			<include content="PreferArt_Button">
				
				<param name="button_id" value="4019" />
				<param name="artwork_localized_id" value="Clear Art (else Char)" />
				<param name="artwork" value="clearart" />
				<param name="visible" value="Control.IsVisible(50) | Control.IsVisible(56)" />
				
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedposter)">Skin.ToggleSetting(View_50_Prefer_animatedposter)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Discart_Album)">Skin.ToggleSetting(View_50_Prefer_Discart_Album)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Discart_Song)">Skin.ToggleSetting(View_50_Prefer_Discart_Song)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Disc_Video)">Skin.ToggleSetting(View_50_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_poster)">Skin.ToggleSetting(View_50_Prefer_poster)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_keyart)">Skin.ToggleSetting(View_50_Prefer_keyart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearlogo)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
				
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_animatedfanart)">Skin.ToggleSetting(View_56_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Album)">Skin.ToggleSetting(View_56_Prefer_Discart_Album)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Song)">Skin.ToggleSetting(View_56_Prefer_Discart_Song)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Disc_Video)">Skin.ToggleSetting(View_56_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearlogo)">Skin.ToggleSetting(View_56_Prefer_clearlogo)</onclick>
            
			</include>
			
			<control type="radiobutton" id="4020">
				<include>Menucontrol_RadioButton</include>
				<label>Prefer Discart - Video Nav</label>
				<visible>Window.IsActive(videos) + !Container.Content(tvshows) + [Control.IsVisible(50) | Control.IsVisible(56)]</visible>
				<onclick condition="Control.IsVisible(50)">Skin.ToggleSetting(View_50_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(56)">Skin.ToggleSetting(View_56_Prefer_Disc_Video)</onclick>
				
				
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedposter)">Skin.ToggleSetting(View_50_Prefer_animatedposter)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_poster)">Skin.ToggleSetting(View_50_Prefer_poster)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_keyart)">Skin.ToggleSetting(View_50_Prefer_keyart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearlogo)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearart)">Skin.ToggleSetting(View_50_Prefer_clearart)</onclick>
				
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_animatedfanart)">Skin.ToggleSetting(View_56_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearart)">Skin.ToggleSetting(View_56_Prefer_clearart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearlogo)">Skin.ToggleSetting(View_56_Prefer_clearlogo)</onclick>
            
				<selected>[Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Disc_Video) | Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Disc_Video)]</selected>
			</control>
			<control type="radiobutton" id="4021">
				<include>Menucontrol_RadioButton</include>
				<label>Prefer Discart - Music Songs</label>
				<visible>Window.IsActive(music) + Container.Content(Songs) + [Control.IsVisible(50) | Control.IsVisible(56)]</visible>
				<onclick condition="Control.IsVisible(50)">Skin.ToggleSetting(View_50_Prefer_Discart_Song)</onclick>
				<onclick condition="Control.IsVisible(56)">Skin.ToggleSetting(View_56_Prefer_Discart_Song)</onclick>
				
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedposter)">Skin.ToggleSetting(View_50_Prefer_animatedposter)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_poster)">Skin.ToggleSetting(View_50_Prefer_poster)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_keyart)">Skin.ToggleSetting(View_50_Prefer_keyart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_landscape)">Skin.ToggleSetting(View_50_Prefer_landscape)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearlogo)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearart)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
				
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_animatedfanart)">Skin.ToggleSetting(View_56_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearart)">Skin.ToggleSetting(View_56_Prefer_clearart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearlogo)">Skin.ToggleSetting(View_56_Prefer_clearlogo)</onclick>
            
				<selected>[Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Discart_Song) | Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Song)]</selected>
			</control>
			<control type="radiobutton" id="4022">
				<include>Menucontrol_RadioButton</include>
				<label>Prefer Discart - Music Albums</label>
				<visible>Window.IsActive(music) + Container.Content(Albums) + Control.IsVisible(50)</visible>
				<onclick condition="Control.IsVisible(50)">Skin.ToggleSetting(View_50_Prefer_Discart_Album)</onclick>
				
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_animatedposter)">Skin.ToggleSetting(View_50_Prefer_animatedposter)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_poster)">Skin.ToggleSetting(View_50_Prefer_poster)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_keyart)">Skin.ToggleSetting(View_50_Prefer_keyart)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearlogo)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
				<onclick condition="Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_clearart)">Skin.ToggleSetting(View_50_Prefer_clearlogo)</onclick>
            
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_animatedfanart)">Skin.ToggleSetting(View_56_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearart)">Skin.ToggleSetting(View_56_Prefer_clearart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearlogo)">Skin.ToggleSetting(View_56_Prefer_clearlogo)</onclick>
            
				<selected>[Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_Discart_Album) | Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Discart_Song)]</selected>
			</control>
			
			<control type="radiobutton" id="4023">
				<include>Menucontrol_RadioButton</include>
				<label>Prefer Circle Artwork with ClearLogo Overlay</label>
				<visible>Control.IsVisible(56)</visible>
				<onclick condition="Control.IsVisible(56)">Skin.ToggleSetting(View_56_Prefer_CircleArt)</onclick>
				
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_animatedfanart)">Skin.ToggleSetting(View_56_Prefer_animatedfanart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_Disc_Video)">Skin.ToggleSetting(View_56_Prefer_Disc_Video)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_50_Prefer_Discart_Song)">Skin.ToggleSetting(View_50_Prefer_Discart_Song)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_50_Prefer_Discart_Album)">Skin.ToggleSetting(View_50_Prefer_Discart_Album)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearart)">Skin.ToggleSetting(View_56_Prefer_clearart)</onclick>
				<onclick condition="Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_clearlogo)">Skin.ToggleSetting(View_56_Prefer_clearlogo)</onclick>
            
				<selected>Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_CircleArt)</selected>
			</control>
			
			<control type="radiobutton" id="4030">
				<include>Menucontrol_RadioButton</include>
				<label>Switch Artwotk and Info Position</label>
				<visible>Control.IsVisible(503) | Control.IsVisible(504)</visible>
				<onclick condition="Control.IsVisible(503)">Skin.ToggleSetting(view_503_fanart_left)</onclick>
				<onclick condition="Control.IsVisible(504)">Skin.ToggleSetting(view_504_fanart_left)</onclick>
				
				<!-- 
				also need set default bool on init load, skinupdate -->
				
				<!-- <onclick condition="Control.IsVisible(503) + [Skin.HasSetting(view_503_metadata_align_left) + Skin.HasSetting(view_503_fanart_left)]">Skin.ToggleSetting(view_503_fanart_left)</onclick> -->
				
				<onclick condition="Control.IsVisible(503) | Control.IsVisible(504)">ReloadSkin()</onclick>
				
				<selected>[Control.IsVisible(503) + Skin.HasSetting(view_503_fanart_left)] | [Control.IsVisible(504) + Skin.HasSetting(view_504_fanart_left)]</selected>
			</control>
			
			<!-- 
			<control type="radiobutton" id="4031">
				<include>Menucontrol_RadioButton</include>
				<visible>false</visible>
				<label>Use Multirow Panel</label>
				<visible>Control.IsVisible(504)</visible>
				<onclick condition="Control.IsVisible(504)">Skin.ToggleSetting(view_504_multirow)</onclick>
				<onclick condition="Control.IsVisible(504)">ReloadSkin()</onclick>
				<selected>Control.IsVisible(504) + Skin.HasSetting(view_504_multirow)</selected>
			</control>
			 -->
			<control type="button" id="4032">
				<include>Menucontrol_RadioButton</include>
				<label>31209</label>
				<visible>Control.IsVisible(503) | Control.IsVisible(504)</visible>
				
				<onclick condition="Control.IsVisible(503)">Skin.SelectBool(31209, 31210|view_503_metadata_align_left, 31211|view_503_metadata_align_center, 31212|view_503_metadata_align_right)</onclick>
				<onclick condition="Control.IsVisible(504)">Skin.SelectBool(31209, 31210|view_504_metadata_align_left, 31211|view_504_metadata_align_center, 31212|view_504_metadata_align_right)</onclick>
				
				<onclick condition="Control.IsVisible(503) | Control.IsVisible(504)">ReloadSkin()</onclick>
			</control>
			
			<control type="radiobutton" id="4035">
				<include>Menucontrol_RadioButton</include>
				<label>Hide Plot</label>
				<visible>Control.IsVisible(503) | Control.IsVisible(504)</visible>
				<onclick condition="Control.IsVisible(503)">Skin.ToggleSetting(view_503_hideplot)</onclick>
				<onclick condition="Control.IsVisible(504)">Skin.ToggleSetting(view_504_hideplot)</onclick>
				<onclick condition="Control.IsVisible(503) | Control.IsVisible(504)">ReloadSkin()</onclick>
				<selected>[Control.IsVisible(503) + Skin.HasSetting(view_503_hideplot)] | [Control.IsVisible(504) + Skin.HasSetting(view_504_hideplot)]</selected>
			</control>
			
			<control type="radiobutton" id="4036">
				<include>Menucontrol_RadioButton</include>
				<label>Be able to focus Cast Container ([B]↓[/B])</label>
				<visible>Control.IsVisible(503) | Control.IsVisible(504)</visible>
				<onclick condition="Control.IsVisible(503)">Skin.ToggleSetting(view_503_focusable_cast)</onclick>
				<onclick condition="Control.IsVisible(504)">Skin.ToggleSetting(view_504_focusable_cast)</onclick>
				<selected>[Control.IsVisible(503) + Skin.HasSetting(view_503_focusable_cast)] | [Control.IsVisible(504) + Skin.HasSetting(view_504_focusable_cast)]</selected>
			</control>
			<control type="radiobutton" id="4037">
				<visible>false</visible>
				<include>Menucontrol_RadioButton</include>
				<label>Never Show Cast</label>
				<visible>Control.IsVisible(503) | Control.IsVisible(504)</visible>
				
				<onclick condition="Control.IsVisible(503) + Skin.HasSetting(view_503_focusable_cast)">Skin.ToggleSetting(view_503_focusable_cast)</onclick>
				<onclick condition="Control.IsVisible(503)">Skin.ToggleSetting(view_503_hide_cast)</onclick>
				
				<onclick condition="Control.IsVisible(504) + Skin.HasSetting(view_504_focusable_cast)">Skin.ToggleSetting(view_504_focusable_cast)</onclick>
				<onclick condition="Control.IsVisible(504)">Skin.ToggleSetting(view_504_hide_cast)</onclick>
				
				<selected>[Control.IsVisible(503) + Skin.HasSetting(view_503_hide_cast)] | [Control.IsVisible(504) + Skin.HasSetting(view_504_hide_cast)]</selected>
			</control>
		
		
			<control type="radiobutton" id="4041">
				<include>Menucontrol_RadioButton</include>
				<label>Show Plot right</label>
				<visible>Control.IsVisible(58)</visible>
				<onclick>Skin.ToggleSetting(view_58_EpisodeInfoRight)</onclick>
				<selected>Skin.HasSetting(view_58_EpisodeInfoRight)</selected>
			</control>
			<control type="radiobutton" id="40042">
				<include>Menucontrol_RadioButton</include>
				<label>EnebleFanart Background</label>
				<visible>Control.IsVisible(58)</visible>
				<onclick>Skin.ToggleSetting(view_58_EnableFanartBG)</onclick>
				<selected>Skin.HasSetting(view_58_EnableFanartBG)</selected>
			</control>
			<control type="radiobutton" id="4043">
				<include>Menucontrol_RadioButton</include>
				<label>Show Bottom Panel</label>
				<visible>Control.IsVisible(58)</visible>
				<onclick>Skin.ToggleSetting(view_58_EnableBottomPanel)</onclick>
				<selected>Skin.HasSetting(view_58_EnableBottomPanel)</selected>
			</control>
			<control type="radiobutton" id="4044">
				<include>Menucontrol_RadioButton</include>
				<label>Show Fanart right</label>
				<visible>Control.IsVisible(58)</visible>
				<onclick>Skin.ToggleSetting(view_58_FanartLeftAlignment)</onclick>
				<selected>Skin.HasSetting(view_58_FanartLeftAlignment)</selected>
			</control>
		</include>
	<include name="Menucontrol_Content_Navigation">
		
		<control type="label" id="7000">
			<textoffset>20</textoffset>
			<label>    [B]Navigate to..[/B]</label>
			<font>font12</font>
			<textcolor>$VAR[color_lib_menu_item_fo]</textcolor>
			<wrapmultiline>true</wrapmultiline>
			<height>40</height>
			<align>left</align>
		</control>
		<!-- radiobutton using icon and label ?,missing props onfocus, using include button -->
			
			<nested />
			
			<control type="button" id="7001">
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>$LOCALIZE[10004]</label2>
				<onclick>ActivateWindow(settings)</onclick>
				<visible>!Skin.HasSetting(menu_hide_navigationsettings)</visible>
			</control>
			<control type="button" id="7002">
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>do  a</label>
				<label2>$LOCALIZE[137]</label2>
				<include>Action_LibrarySearch</include>
				<visible>!Skin.HasSetting(menu_hide_navigationsearch)</visible>
			</control>
			<control type="button" id="7003">
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>$LOCALIZE[31050]</label2>
				<onclick>ActivateWindow(1110)</onclick>
				<visible>!Skin.HasSetting(menu_hide_navigationhubmusic)</visible>
			</control>
			<control type="button" id="7004">
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>$LOCALIZE[15016]</label2>
				<onclick>ActivateWindow(games)</onclick>
				<visible>!Skin.HasSetting(menu_hide_navigationhubmusic) + !Window.IsActive(games)</visible>
			</control>
			
			<control type="button" id="7005">
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>$LOCALIZE[10000]</label2>
				<onclick>ActivateWindow(home)</onclick>
				<visible>!Window.IsVisible(home)</visible>
				<visible>!Skin.HasSetting(menu_hide_navigationhome)</visible>
			</control>
			
			<control type="button" id="7010">
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>$LOCALIZE[3]</label2>
				<onclick>ReplaceWindow(videos,library://video/)</onclick>
				<visible>!Window.Is(videos) + Library.HasContent(videos)</visible>
				<visible>!Skin.HasSetting(menu_hide_navigationvideos)</visible>
			</control>
			<control type="button" id="7011">
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>20342</label2>
				<onclick>ReplaceWindow(videos,videodb://movies/)</onclick>
				<visible>!string.contains(container.folderpath,movies)</visible>
				<visible>!Skin.HasSetting(menu_hide_navigationmovies)</visible>
			</control>
			<control type="button" id="7012">
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>20343</label2>
				<onclick>ReplaceWindow(videos,videodb://tvshows/)</onclick>
				<visible>!string.contains(container.folderpath,tvshows)</visible>
				<visible>!Skin.HasSetting(menu_hide_navigationtvshows)</visible>
			</control>
			<control type="button" id="7013">
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>$LOCALIZE[20012]</label2>
				<onclick>ReplaceWindow(videos,special://videoplaylists/)</onclick>
				<visible>!Skin.HasSetting(menu_hide_navigationvideoplaylists)</visible>
			</control>
		
			
			<control type="button" id="7015">
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>$LOCALIZE[2]</label2>
				<onclick>ReplaceWindow(music,musicdb:/)</onclick>
				<visible>!Window.Is(music) + Library.HasContent(Music)</visible>
				<visible>!Skin.HasSetting(menu_hide_navigationmusic)</visible>
			</control>
			<control type="button" id="7016">
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>20389</label2>
				<onclick>ReplaceWindow(videos,videodb://musicvideos/)</onclick>
				<visible>!string.contains(container.folderpath,musicvideos) + Library.HasContent(musicvideos)</visible>
				<visible>!Skin.HasSetting(menu_hide_navigationmusicvideos)</visible>
			</control>
			<control type="button" id="7017">
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>$LOCALIZE[20011]</label2>
				<onclick>ReplaceWindow(music,special://musicplaylists/)</onclick>
				<visible>!Skin.HasSetting(menu_hide_navigationmusicplaylists)</visible>
			</control>
			
			<control type="button" id="7018">
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>$LOCALIZE[14204]</label2>
				<onclick>ReplaceWindow(tvguide)</onclick>
				 <!-- r ReplaceWindow(pvr,pvr://channels/tv/) -->
				<visible>!Skin.HasSetting(menu_hide_navigationtvguide)</visible>
				<visible>!Window.Is(tvguide)</visible>
			</control>
			<control type="button" id="7019">
				<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
				<label>Gehe zu</label>
				<label2>$LOCALIZE[1]</label2>
				<onclick>ReplaceWindow(pictures)</onclick>
				<visible>!Window.Is(pictures)</visible>
				<visible>!Skin.HasSetting(menu_hide_navigationpictures)</visible>
			</control>
			
			
		
		
		<include content="spacer_h">
			<param name="id" value="4003" />
			<param name="gap" value="10" />
		</include>
		
		<control type="button" id="45558">
			<include condition="Window.Is(home)" content="Menucontrol_Button">
					<param name="section" value="home" />
				</include>
				<include condition="!Window.Is(home)" content="Menucontrol_Button"/>
			<label>reloadskin</label>
			<onclick>ReloadSkin()</onclick>
			<onfocus condition="!String.IsEqual(Window(Home).Property(menucontrol_active),common)">SetProperty(menucontrol_active,common,Home)</onfocus>
		</control>
	</include>
	
	<!-- Home.xml -->
	
	<include name="menucontrol_home_iconpanel_left">
		<control type="group">
			<description>info panel right</description>
			<animation effect="slide" start="0" end="-400" easing="in" tween="quadratic" time="300" condition="String.IsEqual(Window(Home).Property(menucontrol_active),home)">conditional</animation>
			<right>-400</right>
			<width>400</width>
			<height>100%</height>	
			<orientation>horizontal</orientation>
			<itemgap>10</itemgap>
			<usecontrolcoords>true</usecontrolcoords>
			<align>left</align>
			<visible>![Skin.HasSetting(HideTimeDate_Header) + Skin.HasSetting(HideWeather_Header)]</visible>
			
			<control type="image">
				<animation effect="fade" start="100" end="80" time="250" condition="String.IsEmpty(Window(Home).Property(menucontrol_active))">conditional</animation>
				<bordersize>2,0,0,0</bordersize>
				<texture colordiffuse="$VAR[color_home_menu_backgroundpanel]">colors/white80.png</texture>
				<bordertexture border="0,0,1,0" diffuse="colors/white80.png" colordiffuse="$VAR[color_home_menu_accent]">diffuse/gradientvertical.png</bordertexture>
			</control>
			
			<control type="group">
				<description>time and date</description>
				<visible>!Skin.HasSetting(HideTimeDate_Header)</visible>
				<top>20</top>
				<width>380</width>
				<height>110</height>
				<control type="label">
					<width>100%</width>
					<height>50</height>
					<align>right</align>
					<info>System.Time</info>
					<font>font_clock</font>
					<textcolor>$VAR[color_header_text_accent]</textcolor>
				</control>
				<control type="label">
					<right>2</right>
					<top>60</top>
					<width>100%</width>
					<height>20</height>
					<align>right</align>
					<info>System.Date</info>
					<textcolor>$VAR[color_header_text_main]</textcolor>
				</control>
			</control>
				
			<control type="grouplist">
				<usecontrolcoords>true</usecontrolcoords>
				<orientation>vertical</orientation>
				<itemgap>10</itemgap>
				<description>weather</description>
				<visible>!Skin.HasSetting(HideWeather_Header) + [!String.Contains(Weather.Temperature,$LOCALIZE[503]) | [!String.IsEqual(Weather.fanartcode,na) + Weather.IsFetched]]</visible>
				<top>200</top>
				<width>400</width>
				<height>600</height>
				
				<control type="image">
					<height>260</height>
					<width>400</width>
					<texture colordiffuse="$VAR[color_header_text_main]">$INFO[Weather.FanartCode,resource://resource.images.weathericons.outline-hd/,.png]</texture>
					<aspectratio aligny="bottom" align="center">keep</aspectratio>
				</control>
				<control type="label">
					<width>400</width>
					<height>auto</height>
					<align>center</align>
					<label>$INFO[Weather.Temperature]</label>
					<font>font52_title</font>
					<textcolor>$VAR[color_header_text_main]</textcolor>
				</control>
			</control>
		</control>
		
		
		<control type="group">
			<description>menu panel left</description>
			<animation effect="slide" start="0" end="455" easing="in" tween="quadratic" time="300" condition="String.IsEqual(Window(Home).Property(menucontrol_active),home)">conditional</animation>
			<left>-455</left>
			<width>540</width>
			<height>100%</height>
			
			<control type="image">
				<description>backgroundpanel</description>
				<animation effect="fade" start="100" end="80" time="250" condition="String.IsEmpty(Window(Home).Property(menucontrol_active))">conditional</animation>
				<bordersize>0,0,3,0</bordersize>
				<texture colordiffuse="$VAR[color_home_menu_backgroundpanel]">colors/white.png</texture>
				<bordertexture border="0,0,1,0" colordiffuse="$VAR[color_home_menu_accent]">diffuse/gradientvertical.png</bordertexture>
			</control>
			
			<include condition="Skin.HasSetting(menucontrol_home_showprofiles)" content="menucontrol_profiles" />
			
			
			<control type="panel" id="9000">
				<top>300</top>
				<bottom>300</bottom>
				<aligny>center</aligny>
				<orientation>vertical</orientation>
				
				<onup condition="String.IsEqual(Window(Home).Property(menucontrol_active),home) + [Control.IsVisible(7777)]">7777</onup>
				<onup condition="[String.IsEqual(Window(Home).Property(menucontrol_active),home) + !Control.IsVisible(7777)] | !String.IsEqual(Window(Home).Property(menucontrol_active),home)">9000</onup>
				
				<ondown condition="String.IsEqual(Window(Home).Property(menucontrol_active),home) + Control.IsVisible(8888)">8888</ondown>
				<ondown condition="[String.IsEqual(Window(Home).Property(menucontrol_active),home) + !Control.IsVisible(8888)] | !String.IsEqual(Window(Home).Property(menucontrol_active),home)">9000</ondown> 
				
				<onright condition="String.IsEqual(Window(Home).Property(menucontrol_active),home)">ClearProperty(menucontrol_active,home)</onright>
				<onright>5555</onright>
				
				<onleft condition="!String.IsEqual(Window(Home).Property(menucontrol_active),home)">SetProperty(menucontrol_active,home,home)</onleft>		
				<onleft condition="String.IsEqual(Window(Home).Property(menucontrol_active),home)">8888</onleft>		
				
				<onback condition="!String.IsEqual(Window(Home).Property(menucontrol_active),home)">SetProperty(menucontrol_active,home,home)</onback>
				<onback condition="String.IsEqual(Window(Home).Property(menucontrol_active),home)">ClearProperty(menucontrol_active,home)</onback>
				
				<itemlayout height="80">
					<include content="home_mainmenu_layout_verticalpanel">
						<param name="itemcolor" value="$VAR[color_home_menu_item_nf]" />
						<param name="itempanelcolor" value="$VAR[color_home_menu_itempanel_nf]" />
					</include>
				</itemlayout>
				
				<focusedlayout height="80">
					<include content="home_mainmenu_layout_verticalpanel">
						<param name="itemcolor" value="$VAR[color_home_menu_item_fo]" />
						<param name="itempanelcolor" value="$VAR[color_home_menu_itempanel_fo]" />
					</include>
					<control type="image">
						<animation effect="zoom" start="0,100" end="100,100" time="200" center="auto" tween="quadratic" easing="out" reversible="false">Focus</animation>
						<width>57</width>
						<right>15</right>
						<bottom>4</bottom>
						<height>4</height>
						<texture colordiffuse="color_home_menu_accent">colors/white.png</texture>
					</control>
				</focusedlayout>
				<include content="home_mainmenu_content" />
			</control>
			
			<control type="panel" id="8888">
				<height>120</height>
				<bottom>100</bottom>
				<left>50</left>
				<orientation>vertical</orientation>
				<onup>9000</onup>
				<ondown>9000</ondown>
				<onright condition="String.IsEqual(Window(Home).Property(menucontrol_active),home)">ClearProperty(menucontrol_active,home)</onright>
				<onright>5555</onright>
				<onleft>9000</onleft>		
				
				<itemlayout height="30">
					<control type="label">
						<left>10</left>
						<label>$INFO[Listitem.label]</label>
						<height>20</height>
						<font>font_labelshutdown</font>
						<textcolor>$VAR[color_home_menu_item_nf]</textcolor>
					</control>
				</itemlayout>
				
				<focusedlayout height="30">
					<control type="label">
						<label>$INFO[Listitem.label]</label>
						<height>20</height>
						<left>20</left>
						<font>font_labelshutdown</font>
						<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
					</control>
					<control type="image">
						<include>Animation_Item_Focus</include>
						<width>11</width>
						<height>11</height>
						<left>0</left>
						<top>5</top>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="color_home_menu_accent">artworkdiffuse/circle.png</texture>
					</control>
				</focusedlayout>
				<include content="shutdownmenu_content" />
			</control>
		</control>
	</include>
	
	
	<!-- custom build ins could be interesting _executebuiltin-->
	<include name="mainmenu_item">
		<item id="900$PARAM[id]">
			<visible>!String.IsEmpty(Skin.String(mainmenuitem$PARAM[nr]_target)) | !String.IsEmpty(Skin.String(mainmenuitem$PARAM[nr]_path)) | !String.IsEmpty(Skin.String(mainmenuitem$PARAM[nr]_executebuiltin))</visible>
			<label>$INFO[Skin.String(mainmenuitem$PARAM[nr]_name)]</label>
			<label2 />
			<thumb>$INFO[Skin.String(mainmenuitem$PARAM[nr]_thumb)]</thumb>
			<icon>$INFO[Skin.String(mainmenuitem$PARAM[nr]_thumb)]</icon>
			<property name="fanart">$INFO[Skin.String(mainmenuitem$PARAM[nr]_fanart)]</property>
			<property name="containerpath">$INFO[Skin.String(mainmenuitem$PARAM[nr]_path)]</property>
			<onclick condition="String.IsEqual(Skin.String(mainmenuitem$PARAM[nr]_path),1120)">Skin.SetString(SearchTerm)</onclick>   
			<onclick condition="!String.IsEmpty(Skin.String(mainmenuitem$PARAM[nr]_executebuiltin))">$INFO[Skin.String(mainmenuitem$PARAM[nr]_executebuiltin)]</onclick>
			<onclick condition="String.IsEmpty(Skin.String(mainmenuitem$PARAM[nr]_path))">ActivateWindow($INFO[Skin.String(mainmenuitem$PARAM[nr]_target)],return)</onclick>
			<onclick condition="!String.IsEmpty(Skin.String(mainmenuitem$PARAM[nr]_path))">ActivateWindow($INFO[Skin.String(mainmenuitem$PARAM[nr]_target),,$COMMA]$INFO[Skin.String(mainmenuitem$PARAM[nr]_path)],return)</onclick>
			<onclick condition="String.IsEqual(Window(Home).Property(menucontrol_active),home)">ClearProperty(menucontrol_active,home)</onclick>
		</item>
	</include>
	
	
	<include name="Menucontrol_Home_MenuTiles">
			
		<control type="multiimage">
			<depth>DepthBackground</depth>
			<fadetime>3000</fadetime>
			<imagepath>special://skin/extras/backgroundimages/</imagepath>
		</control>
			
		<control type="group">
		<animation effect="fade" start="100" end="0" time="350" condition="Window.IsActive(shutdownmenu)">conditional</animation>
	
			--- copy from ? - make include -->
			<control type="group">
				<description>time and date weather</description>
				<centerleft>50%</centerleft>
				<top>50</top>
				<height>150</height>
				
				<control type="label">
					<width>100%</width>
					<height>25</height>
					<align>center</align>
					<info>System.Time</info>
					<font>debug</font>
					<textcolor>ff131313</textcolor>
				</control>
				<control type="group">
					<visible>[!String.Contains(Weather.Temperature,$LOCALIZE[503]) + [!String.IsEqual(Weather.fanartcode,na) + Weather.IsFetched]]</visible>
					<control type="image">
						<top>25</top>
						<height>50</height>
						<width>100%</width>
						<texture colordiffuse="ff131313">$INFO[Weather.FanartCode,resource://resource.images.weathericons.outline-hd/,.png]</texture>
						<aspectratio align="center">keep</aspectratio>
					</control>
					<control type="label">
						<top>75</top>
						<width>100%</width>
						<height>10</height>
						<align>center</align>
						<label>$INFO[Weather.Temperature]</label>
						<font>font20_title</font>
						<textcolor>ff131313</textcolor>
					</control>
				</control>
				
				<control type="label">
					<top>100</top>
					<width>100%</width>
					<height>20</height>
					<align>center</align>
					<info>System.Date</info>
					<font>debugtiny</font>
					<textcolor>ff131313</textcolor>
				</control>
				
				
			
			</control>
			
			
			----copy from loginscreen.xml - make include --
			<control type="radiobutton" id="9000">
				<include content="Animation_Item_Focus" />
				<top>86%</top>
				<width>120</width>
				<height>120</height>
				<centerleft>50%</centerleft>
				<textureradioonfocus colordiffuse="$VAR[color_profilelogin_text_main]">icons/shutdown.png</textureradioonfocus> 
				<textureradioonnofocus colordiffuse="ff131313">icons/shutdown.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="$VAR[color_profilelogin_text_main]">icons/shutdown.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="ff131313">icons/shutdown.png</textureradiooffnofocus>
				
				<!-- 
				<textureradioonfocus colordiffuse="$VAR[color_home_menu_itempanel_fo]">icons/shutdown.png</textureradioonfocus>
				<textureradioonnofocus colordiffuse="$VAR[color_home_menu_itempanel_nf]">icons/shutdown.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="$VAR[color_home_menu_itempanel_fo]">icons/shutdown.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="$VAR[color_home_menu_itempanel_nf]">icons/shutdown.png</textureradiooffnofocus>
				-->
				<textoffsetx />
				<radiowidth>120</radiowidth>
				<radioheight>120</radioheight>
				<textureradioondisabled />
				<textureradiooffdisabled  />
				<texturefocus />
				<texturenofocus />
				<focusedcolor />
				<textcolor />
				<label />
				<selected />
				<onup>5555</onup>
				<ondown>5555</ondown>
				<onleft>5555</onleft>
				<onright>5555</onright>
				<onclick>ActivateWindow(shutdownmenu)</onclick>
			</control>
			-----
			
			
			<control type="panel" id="5555">
				<orientation>vertical</orientation>
				<preloaditems>4</preloaditems>
				<scrolltime tween="quadratic">400</scrolltime>
				<centertop>55%</centertop>
				<centerleft>50%</centerleft>
				<width>840</width>
				<height>710</height>
			get content as container on focus ?
			suggested movies,shows etc ? big tile fade vis?
				
				<ondown>9000</ondown>
				<itemlayout height="340" width="210">
					
					<control type="group">
						<width>200</width>
						<height>200</height>
						<control type="image">
							<texture colordiffuse="ff131313">colors/white80.png</texture>
							<top>0</top>
							<aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
						</control>
						<control type="image">
							<bordersize>30</bordersize>
							<left>10</left>
							<width>190</width>
							<height>190</height>
							<texture background="true" colordiffuse="white">$INFO[ListItem.Art(thumb)]</texture>
							<aspectratio scalediffuse="true" align="left" aligny="top">scale</aspectratio>
						</control>
						<control type="image">
							<texture colordiffuse="ff252525">colors/white80.png</texture>
							<top>205</top>
							<height>90</height>
							<aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
						</control>
						<control type="textbox">
							<top>205</top>
							<align>center</align>
							<aligny>center</aligny>
							<height>90</height>
							<label>$INFO[ListItem.Label]</label>
							<textcolor>white</textcolor>
						</control>
						
					</control>
					
				</itemlayout>
			
				<focusedlayout height="340" width="210">
					<control type="group">
						<!-- <include>Animation_Item_Focus</include> -->
						
						 <!-- 
						 <animation type="focus" loop="false" reversible="false">
							<effect type="fade" time="500"/>
							<effect type="rotatey" end="360" center="0" tween="back" easing="out" time="1000"/>
						</animation>
						-->
						
						<!-- on select -->
						<animation type="focus" loop="false" reversible="false">
							<effect type="rotatey" end="360" center="100" time="500"/>
						</animation>
						
						<width>200</width>
						<height>200</height>
						<control type="image">
							<texture colordiffuse="white">colors/white80.png</texture>
							<top>0</top>
							<aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
						</control>
						<control type="image">
							<bordersize>30</bordersize>
							<left>10</left>
							<width>190</width>
							<height>190</height>
							<texture background="true" colordiffuse="ff131313" diffuse="colors/white.png">$INFO[ListItem.Art(thumb)]</texture>
							<aspectratio scalediffuse="true" align="left" aligny="top">scale</aspectratio>
						</control>
						<control type="image">
							<texture colordiffuse="white">colors/white.png</texture>
							<top>205</top>
							<height>90</height>
							<aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
						</control>
						<control type="textbox">
							<top>205</top>
							<align>center</align>
							<aligny>center</aligny>
							<height>90</height>
							<label>$INFO[ListItem.Label]</label>
							<textcolor>ff252525</textcolor>
						</control>
					</control>
				</focusedlayout>
				<include content="home_mainmenu_content" />
			</control>
			
			<!-- 
			<control type="panel" id="5556">
				<orientation>vertical</orientation>
				<preloaditems>4</preloaditems>
				<scrolltime tween="quadratic">400</scrolltime>
				<bottom>150</bottom>
				<centertop>85%</centertop>
				<right>500</right>
				<left>500</left>
				<centerleft>50%</centerleft>
				<height>720</height>
			get content as container on focus ?
			suggested movies,shows etc ? big tile fade vis?
				
				<ondown>9000</ondown>
				<itemlayout height="340" width="210">
					
					<control type="group">
						
						<control type="textbox">
							<top>190</top>
							<align>center</align>
							<aligny>center</aligny>
							<height>90</height>
							<label>$INFO[ListItem.Label]</label>
							<textcolor>ff252525</textcolor>
						</control>
					</control>
					
				</itemlayout>
			
				<focusedlayout height="340" width="210">
					<control type="group">
						
						<control type="textbox">
							<top>190</top>
							<align>center</align>
							<aligny>center</aligny>
							<height>90</height>
							<label>$INFO[ListItem.Label]</label>
							<textcolor>ff252525</textcolor>
						</control>
					</control>
				</focusedlayout>
				<content>$INFO[Container(5555).ListItem.Property(containerpath)]</content>
			</control>
			 -->
		</control>		
				
			
	</include>
	
	<include name="home_mainmenu_content">
		<content>
			<nested />
			<include content="mainmenu_item">
				<param name="id" value="01" />
				<param name="nr" value="1" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="02" />
				<param name="nr" value="2" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="03" />
				<param name="nr" value="3" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="04" />
				<param name="nr" value="4" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="05" />
				<param name="nr" value="5" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="06" />
				<param name="nr" value="6" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="07" />
				<param name="nr" value="7" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="08" />
				<param name="nr" value="8" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="09" />
				<param name="nr" value="9" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="10" />
				<param name="nr" value="10" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="11" />
				<param name="nr" value="11" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="12" />
				<param name="nr" value="12" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="13" />
				<param name="nr" value="13" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="14" />
				<param name="nr" value="14" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="15" />
				<param name="nr" value="15" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="16" />
				<param name="nr" value="16" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="17" />
				<param name="nr" value="17" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="18" />
				<param name="nr" value="18" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="19" />
				<param name="nr" value="19" />
			</include>
			<include content="mainmenu_item">
				<param name="id" value="20" />
				<param name="nr" value="20" />
			</include>
		</content>
	</include>
	
	<include name="home_mainmenu_layout_verticalpanel">
		<control type="group">
			<control type="image">
				<description>vis if prop slide true</description>
				<visible>String.IsEqual(Window(Home).Property(menucontrol_active),home)</visible>
				<height>100%</height>
				<width>100%</width>
				<texture colordiffuse="$PARAM[itempanelcolor]">colors/white.png</texture>
			</control>
			<control type="image">
				<description>skinstring homemenu_item_[nr].icon</description>
				<height>80</height>
				<width>40</width>
				<right>25</right>
				<texture colordiffuse="$PARAM[itemcolor]">$INFO[ListItem.Icon]</texture>
				<aspectratio aligny="center">keep</aspectratio>
			</control>
			<control type="label">
				<left>20</left>
				<height>80</height>
				<right>100</right>
				<aligny>center</aligny>
				<align>right</align>
				<textcolor>$PARAM[itemcolor]</textcolor>
				<font>font12</font>
				<wrapmultiline>true</wrapmultiline>
				<label>$INFO[ListItem.Label]</label>
			</control>
			
			
		</control>
	
	</include>

	<include name="Menucontrol_Home_test1">
		<animation effect="slide" start="-450,0" end="0,0" time="300" tween="cubic" easing="inout">VisibleHidden</animation>
		<visible>ControlGroup(9000).HasFocus()</visible>
		<control type="image">
			<animation effect="slide" start="0,0" end="450,0" time="300" tween="cubic" easing="inout" condition="ControlGroup(9000).HasFocus()">conditional</animation>
			<animation effect="fade" start="100" end="0" time="150" condition="!ControlGroup(9000).HasFocus()">conditional</animation>
			
			<top>0</top>
			<bottom>0</bottom>
			<width>530</width>
			<left>-450</left>
			<texture colordiffuse="$VAR[color_home_menu_backgroundpanel]">colors/white.png</texture>
			<aspectratio>stretch</aspectratio>
		</control>
		
		<!--
		<control type="group">
			<left>20</left>
			<control type="image">
				<top>0</top>
				<height>90</height>
				<width>150</width>
				<bottom>0</bottom>
				<texture colordiffuse="red">colors/white20.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="label">
				<top>0</top>
				<height>90</height>
				<width>530</width>
				<label>$VAR[color_home_menu_backgroundpanel]</label>
				<aspectratio>stretch</aspectratio>
			</control>
		</control>
		-->
		
		<control type="grouplist" id="9000">
			<description>need get cond vis content</description>
			<top>120</top>
			<bottom>1%</bottom>
			<width>465</width>
			<left>20</left>
			<itemgap>0</itemgap>
			<onup>9000</onup>
			<ondown>9000</ondown>
			
			<onright>SetFocus(5555)</onright>
			<onleft>SetFocus(5555)</onleft>
			<!-- diif colors global vs home ? params -->
			<include content="Menucontrol_Content_Navigation">
				
				
				<!-- <control type="button" id="902">
					<label>Gehe zu</label>
					<label2>sandbox window</label2>
					<include content="Menucontrol_Button">
						<param name="section" value="home" />
					</include>
					<onclick>ActivateWindow(1123)</onclick>
				</control> -->
				<control type="button" id="902">
					<label>Gehe zu</label>
					<label2>Music Hub</label2>
					<include content="Menucontrol_Button">
						<param name="section" value="home" />
					</include>
					<onclick>ActivateWindow(1110)</onclick>
				</control>
				
				
			</include>
			
			
				<control type="textbox" id="900">
					<textoffset>20</textoffset>
					<label>This is Just a Placeholder and not a final layout nor solution [CR],just  for easy Navigation by work on the skin</label>
					<font>font10</font>
					<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
					<wrapmultiline>true</wrapmultiline>
					<height>200</height>
				</control>
			
<!-- 
TVChannels 	pvr://channels/tv/<GROUPNAME> 	Replace <GROUPNAME> with the name of the specific tv channel group 	Kodi 19
TVGuide 	pvr://channels/tv/<GROUPNAME> 	Replace <GROUPNAME> with the name of the specific tv channel group 	Kodi 19
TVRecordings 	pvr://recordings/tv/active/<DIRECTORY>/ 	Replace <DIRECTORY> with the name of the recording directory to display
TVTimers 			
TVTimerRules 			
TVSearch 			
RadioChannels 	pvr://channels/radio/<GROUPNAME> 	Replace <GROUPNAME> with the name of the specific radio channel group 	Kodi 19
RadioGuide 	pvr://channels/radio/<GROUPNAME> 	Replace <GROUPNAME> with the name of the specific radio channel group 	Kodi 19
RadioRecordings 	pvr://recordings/radio/active/<DIRECTORY>/ 	Replace <DIRECTORY> with the name of the recording directory to display
RadioTimers 			
RadioTimerRules 			
RadioSearch
 
-->	
				
				<control type="textbox" id="910">
					<textoffset>20</textoffset>
					<label>video lib</label>
					<font>font10</font>
					<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
					<wrapmultiline>true</wrapmultiline>
					<height>100</height>
				</control>
				<include content="Universal_Container">
					<param name="type" value="panel" />
					<param name="id" value="911" />
					<param name="type_height" value="150" />
					<param name="layout_height" value="100" />
					<param name="layout_width" value="120" />
					<param name="itemheight" value="80" />
					<param name="itemwidth" value="80" />
					<param name="tags_visible" value="true" />
					<param name="tagbgpanel_visible" value="false" />
					<param name="layout" value="circle" />
					<param name="visible" value="Integer.IsGreater(Container(911).NumItems,0) | Container(911).IsUpdating" />
					<animation effect="fade" start="100" end="0" condition="!Integer.IsGreater(Container(911).NumItems,0) | Container(911).IsUpdating">Conditional</animation>
					<content target="videos">library://video</content>
				</include>
				
				<control type="textbox" id="912">
					<textoffset>20</textoffset>
					<label>music lib</label>
					<font>font10</font>
					<wrapmultiline>true</wrapmultiline>
					<height>100</height>
					<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
				</control>
				<include content="Universal_Container">
					<param name="type" value="panel" />
					<param name="id" value="913" />
					<param name="type_height" value="150" />
					<param name="layout_height" value="100" />
					<param name="layout_width" value="120" />
					<param name="itemheight" value="80" />
					<param name="itemwidth" value="80" />
					<param name="tags_visible" value="true" />
					<param name="tagbgpanel_visible" value="false" />
					<param name="layout" value="circle" />
					<param name="visible" value="Integer.IsGreater(Container(913).NumItems,0) | Container(913).IsUpdating" />
					<animation effect="fade" start="100" end="0" condition="!Integer.IsGreater(Container(913).NumItems,0) | Container(913).IsUpdating">Conditional</animation>
					<content target="music">library://music/</content>
				</include>
				
				<control type="textbox" id="914">
					<textoffset>20</textoffset>
					<label>musicvideos lib</label>
					<font>font10</font>
					<wrapmultiline>true</wrapmultiline>
					<height>100</height>
					<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
				</control>
				<include content="Universal_Container">
					<param name="type" value="panel" />
					<param name="id" value="915" />
					<param name="type_height" value="150" />
					<param name="layout_height" value="100" />
					<param name="layout_width" value="120" />
					<param name="itemheight" value="80" />
					<param name="itemwidth" value="80" />
					<param name="tags_visible" value="true" />
					<param name="tagbgpanel_visible" value="false" />
					<param name="layout" value="circle" />
					<param name="visible" value="Integer.IsGreater(Container(915).NumItems,0) | Container(915).IsUpdating" />
					<animation effect="fade" start="100" end="0" condition="!Integer.IsGreater(Container(915).NumItems,0) | Container(915).IsUpdating">Conditional</animation>
					<content target="videos">videodb://musicvideos/</content>
				</include>
				<control type="textbox" id="916">
					<textoffset>20</textoffset>
					<label>playlists ,video first</label>
					<font>font10</font>
					<wrapmultiline>true</wrapmultiline>
					<height>100</height>
					<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
				</control>
				<include content="Universal_Container">
					<param name="type" value="panel" />
					<param name="id" value="917" />
					<param name="type_height" value="150" />
					<param name="layout_height" value="100" />
					<param name="layout_width" value="120" />
					<param name="itemheight" value="80" />
					<param name="itemwidth" value="80" />
					<param name="tags_visible" value="true" />
					<param name="tagbgpanel_visible" value="false" />
					<param name="layout" value="circle" />
					<param name="visible" value="Integer.IsGreater(Container(917).NumItems,0) | Container(917).IsUpdating" />
					<animation effect="fade" start="100" end="0" condition="!Integer.IsGreater(Container(917).NumItems,0) | Container(917).IsUpdating">Conditional</animation>
					<content target="videos">special://videoplaylists/</content>
					<content target="music">special://musicplaylists/ </content>
				</include>
				<control type="textbox" id="918">
					<textoffset>20</textoffset>
					<label>video addons</label>
					<font>font10</font>
					<wrapmultiline>true</wrapmultiline>
					<height>100</height>
					<textcolor>$VAR[color_home_menu_item_fo]</textcolor>
				</control>
				<include content="Universal_Container">
					<param name="type" value="panel" />
					<param name="id" value="919" />
					<param name="tagbottom" value="false" />
					<param name="type_height" value="200" />
					<param name="layout_height" value="150" />
					<param name="layout_width" value="450" />
					<param name="itemheight" value="140" />
					<param name="itemwidth" value="440" />
					<param name="banner_overlay_visible" value="false" />
					<param name="tags_visible" value="true" />
					<param name="tagbgpanel_visible" value="false" />
					<param name="layout" value="landscape" />
					<param name="visible" value="Integer.IsGreater(Container(919).NumItems,0) | Container(919).IsUpdating" />
					<animation effect="fade" start="100" end="0" condition="!Integer.IsGreater(Container(919).NumItems,0) | Container(919).IsUpdating">Conditional</animation>
					<content target="videos">addons://sources/video/</content>
				</include>
				
		</control>
			
			
	
	</include>
	
	<!-- params
		id
		actionid = visible = imagename
		left - just if not in grouplist
		onright
		onleft
		! att - playpause alt l+i -->
		
	<include name="Menucontrol_PlaybackCtrlButton">
		<control type="button" id="6049$PARAM[id]">
			<top>425</top>
			<width>45</width>
			<height>45</height>
			<onup>19</onup>
			<ondown>911</ondown>
			<onfocus condition="!String.IsEqual(Window(Home).Property(menucontrol_active),common)">SetProperty(menucontrol_active,common,Home)</onfocus>
			<left>$PARAM[left]</left>
			<onright>$PARAM[onright]</onright>
			<onleft>$PARAM[onleft]</onleft>
			<texturefocus colordiffuse="$VAR[color_lib_menu_accent]">buttons/osd/$PARAM[actionid]_fo.png</texturefocus>
			<texturenofocus colordiffuse="$VAR[color_lib_menu_item_nf]">buttons/osd/$PARAM[actionid].png</texturenofocus>
			<onclick>PlayerControl($PARAM[actionid])</onclick>
			<onclick>PlayerControl($PARAM[action2])</onclick>
			<visible>$PARAM[visible]</visible>
		</control>
	</include>
	<variable name="MenucontrolPlayerDuration">
		<value condition="Player.HasVideo">$INFO[Player.FinishTime,[B]Ends at : ,[/B]]</value>
		<value>$INFO[Player.Title,[B],[/B]] $INFO[Player.Time(mm:ss),  ( , / ]$INFO[Player.Duration(mm:ss),, )]</value>
	</variable>	
	<!-- $INFO[MusicPlayer.TrackNumber, - ,  ] -->
	<variable name="Menucontrol_LogoFallback">
		<value condition="Player.HasAudio">$INFO[MusicPlayer.Artist]</value>
		<value>$INFO[Player.Title]</value>
	</variable>
	
	<include name="PreferArt_Button">
		<control type="radiobutton" id="$PARAM[button_id]">
			<include>Menucontrol_RadioButton</include>
			<label>Prefer : $PARAM[artwork_localized_id]</label>
			<visible>$PARAM[visible]</visible>
			<onclick condition="Control.IsVisible(50)">Skin.ToggleSetting(View_50_Prefer_$PARAM[artwork])</onclick>
			<onclick condition="Control.IsVisible(56)">Skin.ToggleSetting(View_56_Prefer_$PARAM[artwork])</onclick>
			<selected>
			[Control.IsVisible(50) + Skin.HasSetting(View_50_Prefer_$PARAM[artwork]) | 
			Control.IsVisible(56) + Skin.HasSetting(View_56_Prefer_$PARAM[artwork])]
			</selected>
			<nested />
		</control>
	</include>
	
	<include name="Menucontrol_Button">
		<param name="section" default="lib" />
		<definition>
			<font>font10</font>
			<height>40</height>
			<onfocus condition="!String.IsEqual(Window(Home).Property(menucontrol_active),common)">SetProperty(menucontrol_active,common,Home)</onfocus>
			<texturefocus colordiffuse="$VAR[color_$PARAM[section]_menu_itempanel_fo]">colors/white.png</texturefocus>
			<texturenofocus colordiffuse="$VAR[color_$PARAM[section]_menu_itempanel_nf]">colors/white.png</texturenofocus>
			<focusedcolor>$VAR[color_$PARAM[section]_menu_item_fo]</focusedcolor>
			<textcolor>$VAR[color_$PARAM[section]_menu_item_nf]</textcolor>
		</definition>
	</include>
	<!-- Menucontrol_RadioButton -> Menucontrol_ViewSettingsRadioButton -->
	<include name="Menucontrol_RadioButton">
		<param name="section" default="lib" />
		<definition>
			<font>font10</font>
			<height>40</height>
			<onfocus condition="!String.IsEqual(Window(Home).Property(menucontrol_active),common)">SetProperty(menucontrol_active,common,Home)</onfocus>
			<texturefocus colordiffuse="$VAR[color_$PARAM[section]_menu_itempanel_fo]">colors/white.png</texturefocus>
			<texturenofocus colordiffuse="$VAR[color_$PARAM[section]_menu_itempanel_nf]">colors/white.png</texturenofocus>
			<focusedcolor>$VAR[color_$PARAM[section]_menu_item_fo]</focusedcolor>
			<textcolor>$VAR[color_$PARAM[section]_menu_item_nf]</textcolor>
			<textureradioonfocus colordiffuse="$VAR[color_$PARAM[section]_menu_item_fo]">buttons/radioonfo.png</textureradioonfocus>
			<textureradioonnofocus colordiffuse="$VAR[color_$PARAM[section]_menu_item_fo]">buttons/radioonfo.png</textureradioonnofocus>
			<textureradioofffocus colordiffuse="$VAR[color_$PARAM[section]_menu_item_fo]">buttons/radioofffo.png</textureradioofffocus>
			<textureradiooffnofocus colordiffuse="$VAR[color_$PARAM[section]_menu_item_nf]">buttons/radioofffo.png</textureradiooffnofocus>
			<textureradioondisabled colordiffuse="disabled">buttons/radioon.png</textureradioondisabled>
			<textureradiooffdisabled colordiffuse="disabled">buttons/radiooff.png</textureradiooffdisabled>
		</definition>
	</include>
	
	<variable name="ContainerSortOrderUnicodeArrow">
		<value condition="String.IsEqual(Container.SortOrder,$LOCALIZE[21430])">[B]↓[/B]</value>
		<value condition="!String.IsEqual(Container.SortOrder,$LOCALIZE[21430])">[B]↑[/B]</value>
	</variable>
	
	<variable name="ContainerToggleWatchedUnwatchedFilter">
		<value condition="String.IsEqual(Control.GetLabel(10),$LOCALIZE[16100])">$LOCALIZE[20367]</value>
		<value condition="String.IsEqual(Control.GetLabel(10),$LOCALIZE[16101])">$LOCALIZE[593]</value>
		<value condition="String.IsEqual(Control.GetLabel(10),$LOCALIZE[16102])"></value>
	</variable>
	
	<!-- later on use custom -->
	<include name="shutdownmenu_content">
	<content>
		<item>
			<label>$LOCALIZE[10000]</label>
			<icon>icons/home.png</icon>
			<onclick>Dialog.Close(all,true)</onclick>
			<onclick>ActivateWindow(home)</onclick>
			<visible>!Window.IsVisible(loginscreen) + !Window.IsVisible(home)</visible>
		</item>
		<item>
			<label>$LOCALIZE[5]</label>
			<icon>icons/settingsslider.png</icon>
			<onclick>Dialog.Close(all,true)</onclick>
			<onclick>ActivateWindow(settings)</onclick>
			<visible>!Window.IsVisible(loginscreen) + !Window.IsVisible(settings) + !Skin.HasSetting(DialogButton_HidePowerSettings)</visible>
		</item>
		<item>
			<label>$LOCALIZE[13012]</label>
			<icon>icons/arrowleft.png</icon>
			<onclick>Quit()</onclick>
			<visible>System.Platform.Android | [System.ShowExitButton + [!Skin.HasSetting(DialogButton_HidePowerExit) | Window.IsVisible(loginscreen)]]</visible>
		</item>
		<item>
			<label>$LOCALIZE[13016]</label>
			<icon>icons/shutdown.png</icon>
			<onclick>Powerdown()</onclick>
			<visible>System.CanPowerDown + [!Skin.HasSetting(DialogButton_HidePowerOff) | Window.IsVisible(loginscreen)]</visible>
		</item>
		<item>
			<label>$LOCALIZE[13013]</label>
			<icon>icons/shittyrebbot.png</icon>
			<onclick>Reboot()</onclick>
			<visible>System.CanReboot + [!Skin.HasSetting(DialogButton_HideReboot) | Window.IsVisible(loginscreen)]</visible>
		</item>
		<item>
			<label>$LOCALIZE[20150]</label>
			<icon>icons/alarmadd.png</icon>
			<onclick>AlarmClock(shutdowntimer,Shutdown())</onclick>
			<visible>!System.HasAlarm(shutdowntimer) + !Skin.HasSetting(DialogButton_HidePowerTimer) + [System.CanPowerDown | System.CanSuspend | System.CanHibernate]</visible>
		</item>
		<item>
			<label>$LOCALIZE[20151] $INFO[System.AlarmPos,(,)]</label>
			<icon>icons/alarmcancel.png</icon>
			<onclick>CancelAlarm(shutdowntimer)</onclick>
			<visible>System.HasAlarm(shutdowntimer) + !Skin.HasSetting(DialogButton_HidePowerTimer)</visible>
		</item>
		<item>
			<label>$LOCALIZE[13011]</label>
			<onclick>Suspend()</onclick>
			<visible>System.CanSuspend + [!Skin.HasSetting(DialogButton_HidePowerSuspend) | Window.IsVisible(loginscreen)]</visible>
		</item>
		<item>
			<label>$LOCALIZE[13010]</label>
			<icon>icons/hibernate.png</icon>
			<label2></label2>
			<onclick>Hibernate()</onclick>
			<visible>System.CanHibernate + [!Skin.HasSetting(DialogButton_HidePowerHibernate) | Window.IsVisible(loginscreen)]</visible>
		</item>
		<item>
			<label>$LOCALIZE[13017]</label>
			<label2></label2>
			<onclick>InhibitIdleShutdown(true)</onclick>
			<visible>System.HasShutdown + !System.IsInhibit + !Skin.HasSetting(DialogButton_HidePowerIdleShutdown)</visible>
		</item>
		<item>
			<label>$LOCALIZE[13018]</label>
			<label2></label2>
			<onclick>InhibitIdleShutdown(false)</onclick>
			<visible>System.HasShutdown + System.IsInhibit + !Skin.HasSetting(DialogButton_HidePowerIdleShutdown)</visible>
		</item>
		<item>
			<label>$LOCALIZE[20126][CR]$INFO[system.profilename]</label>
			<label2></label2>
			<icon>icons/profilelogoff.png</icon>
			<onclick>Dialog.Close(all,true)</onclick>
			<onclick>System.LogOff</onclick>
			<visible>[System.HasLoginScreen | Integer.IsGreater(System.ProfileCount,1)] + System.Loggedon</visible>
		</item>
		<item>
			<label>$LOCALIZE[20046]</label>
			<label2></label2>
			<onclick>mastermode</onclick>
			<visible>!Window.IsVisible(loginscreen) + System.HasLocks + System.IsMaster + !Window.IsVisible(loginscreen)</visible>
		</item>
		<item>
			<label>$LOCALIZE[20045]</label>
			<label2></label2>
			<onclick>mastermode</onclick>
			<visible>!Window.IsVisible(loginscreen) + System.HasLocks + !System.IsMaster</visible>
		</item>
		</content>
	</include>
</includes>
