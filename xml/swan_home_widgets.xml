<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<!-- SkinSettings.xml widget script.skinshortcuts - set path-->
	<!-- 1103 -->
	<!-- WidgetAttributes	 -->
		
	
	<include name="1103_Content_MainmenuAttributes">
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),1)">
			<param name="nr" value="1"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),2)">
			<param name="nr" value="2"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),3)">
			<param name="nr" value="3"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),4)">
			<param name="nr" value="4"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),5)">
			<param name="nr" value="5"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),6)">
			<param name="nr" value="6"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),7)">
			<param name="nr" value="7"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),8)">
			<param name="nr" value="8"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),9)">
			<param name="nr" value="9"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),10)">
			<param name="nr" value="10"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),11)">
			<param name="nr" value="11"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),12)">
			<param name="nr" value="12"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),13)">
			<param name="nr" value="13"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),14)">
			<param name="nr" value="14"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),15)">
			<param name="nr" value="15"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),16)">
			<param name="nr" value="16"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),17)">
			<param name="nr" value="17"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),18)">
			<param name="nr" value="18"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),19)">
			<param name="nr" value="19"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),20)">
			<param name="nr" value="20"/>
		</include>
	</include>
	
	<include name="1103_Content_WidgetAttributes">
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),1)">
			<param name="nr" value="1"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),2)">
			<param name="nr" value="2"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),3)">
			<param name="nr" value="3"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),4)">
			<param name="nr" value="4"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),5)">
			<param name="nr" value="5"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),6)">
			<param name="nr" value="6"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),7)">
			<param name="nr" value="7"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),8)">
			<param name="nr" value="8"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),9)">
			<param name="nr" value="9"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),10)">
			<param name="nr" value="10"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),11)">
			<param name="nr" value="11"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),12)">
			<param name="nr" value="12"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),13)">
			<param name="nr" value="13"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),14)">
			<param name="nr" value="14"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),15)">
			<param name="nr" value="15"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),16)">
			<param name="nr" value="16"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),17)">
			<param name="nr" value="17"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),18)">
			<param name="nr" value="18"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),19)">
			<param name="nr" value="19"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),20)">
			<param name="nr" value="20"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),21)">
			<param name="nr" value="21"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),22)">
			<param name="nr" value="22"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),23)">
			<param name="nr" value="23"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),24)">
			<param name="nr" value="24"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),25)">
			<param name="nr" value="25"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),26)">
			<param name="nr" value="26"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),27)">
			<param name="nr" value="27"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),28)">
			<param name="nr" value="28"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),29)">
			<param name="nr" value="29"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),30)">
			<param name="nr" value="30"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),31)">
			<param name="nr" value="31"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),32)">
			<param name="nr" value="32"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),33)">
			<param name="nr" value="33"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),34)">
			<param name="nr" value="34"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),35)">
			<param name="nr" value="35"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),36)">
			<param name="nr" value="36"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),37)">
			<param name="nr" value="37"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),38)">
			<param name="nr" value="38"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),39)">
			<param name="nr" value="39"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),40)">
			<param name="nr" value="40"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),41)">
			<param name="nr" value="41"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),42)">
			<param name="nr" value="42"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),43)">
			<param name="nr" value="43"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),44)">
			<param name="nr" value="44"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),45)">
			<param name="nr" value="45"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),46)">
			<param name="nr" value="46"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),47)">
			<param name="nr" value="47"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),48)">
			<param name="nr" value="48"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),49)">
			<param name="nr" value="49"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),50)">
			<param name="nr" value="50"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),51)">
			<param name="nr" value="51"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),52)">
			<param name="nr" value="52"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),53)">
			<param name="nr" value="53"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),54)">
			<param name="nr" value="54"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),55)">
			<param name="nr" value="55"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),56)">
			<param name="nr" value="56"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),57)">
			<param name="nr" value="57"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),58)">
			<param name="nr" value="58"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),59)">
			<param name="nr" value="59"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),60)">
			<param name="nr" value="60"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),61)">
			<param name="nr" value="61"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),62)">
			<param name="nr" value="62"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),63)">
			<param name="nr" value="63"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),64)">
			<param name="nr" value="64"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),65)">
			<param name="nr" value="65"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),66)">
			<param name="nr" value="66"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),67)">
			<param name="nr" value="67"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),68)">
			<param name="nr" value="68"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),69)">
			<param name="nr" value="69"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),70)">
			<param name="nr" value="70"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),71)">
			<param name="nr" value="71"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),72)">
			<param name="nr" value="72"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),73)">
			<param name="nr" value="73"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),74)">
			<param name="nr" value="74"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),75)">
			<param name="nr" value="75"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),76)">
			<param name="nr" value="76"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),77)">
			<param name="nr" value="77"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),78)">
			<param name="nr" value="78"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),79)">
			<param name="nr" value="79"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),80)">
			<param name="nr" value="80"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),81)">
			<param name="nr" value="81"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),82)">
			<param name="nr" value="82"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),83)">
			<param name="nr" value="83"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),84)">
			<param name="nr" value="84"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),85)">
			<param name="nr" value="85"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),86)">
			<param name="nr" value="86"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),87)">
			<param name="nr" value="87"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),88)">
			<param name="nr" value="88"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),89)">
			<param name="nr" value="89"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),90)">
			<param name="nr" value="90"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),91)">
			<param name="nr" value="91"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),92)">
			<param name="nr" value="92"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),93)">
			<param name="nr" value="93"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),94)">
			<param name="nr" value="94"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),95)">
			<param name="nr" value="95"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),96)">
			<param name="nr" value="96"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),97)">
			<param name="nr" value="97"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),98)">
			<param name="nr" value="98"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),99)">
			<param name="nr" value="99"/>
		</include>
		
	</include>
	
	
	
	<include name="Widget_SetPath_ButtonTemplate">
		
		<include content="SectionHeadline">
			<param name="id" value="$PARAM[id]0"/>
			<param name="height" value="60"/>
			<param name="align" value="left" />
			<param name="label" value="WIDGET $PARAM[nr]$INFO[Skin.String(userwidget$PARAM[nr]_name), : [B],[/B]]"/>
		</include>
		
		<control type="radiobutton" id="$PARAM[id]1">
			
			<radioposx>200</radioposx>
			<radioposxy>5</radioposxy>
			<radiowidth>42</radiowidth>
			<radioheight>20</radioheight>
			<textureradioonfocus colordiffuse="$VAR[color_global_button_text_fo]">icons/settings1.png</textureradioonfocus>
			<textureradioonnofocus colordiffuse="$VAR[color_global_button_text_nf]">icons/settings1.png</textureradioonnofocus>
			<textureradioofffocus colordiffuse="$VAR[color_global_button_text_fo]">icons/settings1.png</textureradioofffocus>
			<textureradiooffnofocus colordiffuse="$VAR[color_global_button_text_nf]">icons/settings1.png</textureradiooffnofocus>
			<textureradioondisabled colordiffuse="disabled">icons/settings1.png</textureradioondisabled>
			<textureradiooffdisabled colordiffuse="disabled">icons/settings1.png</textureradiooffdisabled>
			
			<onclick>SetProperty(shortcutitem_nr,$PARAM[nr],home)</onclick>
			<onclick>SetProperty(SettingSection,SwanWidgetShortcuts,home)</onclick>
			<onclick>SetProperty(SetShortcutInProgress,widget,home)</onclick>
			
			<onclick>ActivateWindow(1103,return)</onclick>
			<label>                             Set Widget Path</label>
			<label2>$INFO[Skin.String(userwidget$PARAM[nr]_path)]</label2>
		</control>
		
		<control type="radiobutton" id="$PARAM[id]2">
			<height>80</height>
			<radioposx>200</radioposx>
			<radioposxy>5</radioposxy>
			<radiowidth>42</radiowidth>
			<radioheight>20</radioheight>
			<textureradioonfocus colordiffuse="$VAR[color_global_button_text_fo]">icons/settings1.png</textureradioonfocus>
			<textureradioonnofocus colordiffuse="$VAR[color_global_button_text_nf]">icons/settings1.png</textureradioonnofocus>
			<textureradioofffocus colordiffuse="$VAR[color_global_button_text_fo]">icons/settings1.png</textureradioofffocus>
			<textureradiooffnofocus colordiffuse="$VAR[color_global_button_text_nf]">icons/settings1.png</textureradiooffnofocus>
			<textureradioondisabled colordiffuse="disabled">icons/settings1.png</textureradioondisabled>
			<textureradiooffdisabled colordiffuse="disabled">icons/settings1.png</textureradiooffdisabled>
			
			
			<description>$INFO[Window(home).Property(shortcutitem_nr)]</description>
			<visible>!String.IsEmpty(Skin.String(userwidget$PARAM[nr]_path))</visible>
			<onclick>SetProperty(shortcutitem_nr,$PARAM[nr],home)</onclick>
			<onclick>SetProperty(SettingSection,WidgetAttributes,home)</onclick>
			<onclick>ActivateWindow(1103)</onclick>
			<label>                             Change Attributes</label>
			<label2>$INFO[Skin.String(userwidget$PARAM[nr]_layout.label),[B]$LOCALIZE[21858][/B]: ,]$INFO[Skin.String(userwidget$PARAM[nr]_target),  [B]$LOCALIZE[467][/B]: ,]$INFO[Skin.String(userwidget$PARAM[nr]_sortby.label),   [B]$LOCALIZE[581][/B]: ',']$INFO[Skin.String(userwidget$PARAM[nr]_sortorder.label),   [B]$LOCALIZE[21429][/B]: ',']$INFO[Skin.String(userwidget$PARAM[nr]_limit),   [B]$LOCALIZE[21427][/B]: (,)]</label2>
		</control>
		<control type="button" id="$PARAM[id]4">
			<description>RESET</description>
			<visible>!String.IsEmpty(Skin.String(userwidget$PARAM[nr]_path))</visible>
			<height>25</height>
			<onclick>Skin.Reset(userwidget$PARAM[nr]_name)</onclick>
			<onclick>Skin.Reset(userwidget$PARAM[nr]_target)</onclick>
			<onclick>Skin.Reset(userwidget$PARAM[nr]_path)</onclick>
			<onclick>Skin.Reset(userwidget$PARAM[nr]_limit)</onclick>
			<onclick>Skin.Reset(userwidget$PARAM[nr]_sortby)</onclick>
			<onclick>Skin.Reset(userwidget$PARAM[nr]_sortby.label)</onclick>
			<onclick>Skin.Reset(userwidget$PARAM[nr]_sortorder)</onclick>
			<onclick>Skin.Reset(userwidget$PARAM[nr]_sortorder.label)</onclick>
			<onclick>Skin.Reset(userwidget$PARAM[nr]_layout)</onclick>
			<onclick>Skin.Reset(userwidget$PARAM[nr]_layout.label)</onclick>
			<label>                        Remove/Reset</label>
			<label2 />
		</control>
		<control type="group" id="$PARAM[id]3">
			<description>DONT remove group control</description>
			<control type="image">
				<visible>!String.IsEmpty(Skin.String(userwidget$PARAM[nr]_path))</visible>
				<description>Image extras WidgetLayout</description>
				<top>-160</top>
				<left>4</left>
				<height>155</height>
				<width>180</width>
				<bordersize>2</bordersize>
				<texture fallback="special://skin/extras/selectdialog/widgetlayout_nolayout.png">$INFO[Skin.String(userwidget$PARAM[nr]_layout),special://skin/extras/selectdialog/widgetlayout_,.jpg]</texture>
				<aspectratio>keep</aspectratio>
			</control>
		</control>
		
	</include>
	<include name="ShortCut_mainmenu_SetPath_ButtonTemplate">
		
		<include content="SectionHeadline">
			<param name="id" value="$PARAM[id]0"/>
			<param name="height" value="60"/>
			<param name="align" value="left" />
			<param name="label" value="MAIN MENU ENTRY  $PARAM[nr]$INFO[Skin.String(mainmenuitem$PARAM[nr]_name), : [B],[/B]]"/>
		</include>
		
		<control type="radiobutton" id="$PARAM[id]1">
			<radioposx>200</radioposx>
			<radioposxy>5</radioposxy>
			<radiowidth>42</radiowidth>
			<radioheight>20</radioheight>
			<textureradioonfocus colordiffuse="$VAR[color_global_button_text_fo]">icons/settings1.png</textureradioonfocus>
			<textureradioonnofocus colordiffuse="$VAR[color_global_button_text_nf]">icons/settings1.png</textureradioonnofocus>
			<textureradioofffocus colordiffuse="$VAR[color_global_button_text_fo]">icons/settings1.png</textureradioofffocus>
			<textureradiooffnofocus colordiffuse="$VAR[color_global_button_text_nf]">icons/settings1.png</textureradiooffnofocus>
			<textureradioondisabled colordiffuse="disabled">icons/settings1.png</textureradioondisabled>
			<textureradiooffdisabled colordiffuse="disabled">icons/settings1.png</textureradiooffdisabled>
			
			<onclick>SetProperty(shortcutitem_nr,$PARAM[nr],home)</onclick>
			
			<onclick>SetProperty(SettingSection,SwanWidgetShortcuts,home)</onclick>
			<onclick>SetProperty(SetShortcutInProgress,mainmenu,home)</onclick>
			
			<onclick>ActivateWindow(1103,return)</onclick>
			<label>                             Set Entry</label>
			<label2>ActivateWindow($INFO[Skin.String(mainmenuitem$PARAM[nr]_target),,$COMMA]$INFO[Skin.String(mainmenuitem$PARAM[nr]_path),,$COMMAreturn)]</label2>
		</control>
		<control type="radiobutton" id="$PARAM[id]2">
			<height>80</height>
			<radioposx>200</radioposx>
			<radioposxy>5</radioposxy>
			<radiowidth>42</radiowidth>
			<radioheight>20</radioheight>
			<textureradioonfocus colordiffuse="$VAR[color_global_button_text_fo]">icons/settings1.png</textureradioonfocus>
			<textureradioonnofocus colordiffuse="$VAR[color_global_button_text_nf]">icons/settings1.png</textureradioonnofocus>
			<textureradioofffocus colordiffuse="$VAR[color_global_button_text_fo]">icons/settings1.png</textureradioofffocus>
			<textureradiooffnofocus colordiffuse="$VAR[color_global_button_text_nf]">icons/settings1.png</textureradiooffnofocus>
			<textureradioondisabled colordiffuse="disabled">icons/settings1.png</textureradioondisabled>
			<textureradiooffdisabled colordiffuse="disabled">icons/settings1.png</textureradiooffdisabled>
			<description>$INFO[Window(home).Property(shortcutitem_nr)]</description>
			<visible>!String.IsEmpty(Skin.String(mainmenuitem$PARAM[nr]_path))</visible>
			<onclick>SetProperty(shortcutitem_nr,$PARAM[nr],home)</onclick>
			<onclick>SetProperty(SettingSection,MainmenuAttributes,home)</onclick>
			<onclick>ActivateWindow(1103)</onclick>
			<label>                             Change Attributes</label>
			<label2 />
		</control>
		
		<control type="button" id="$PARAM[id]4">
			<description>RESET</description>
			<visible>!String.IsEmpty(Skin.String(mainmenuitem$PARAM[nr]_path))</visible>
			<height>25</height>
			<onclick>Skin.Reset(mainmenuitem$PARAM[nr]_name)</onclick>
			<onclick>Skin.Reset(mainmenuitem$PARAM[nr]_target)</onclick>
			<onclick>Skin.Reset(mainmenuitem$PARAM[nr]_path)</onclick>
			<onclick>Skin.Reset(mainmenuitem$PARAM[nr]_thumb)</onclick>
			<onclick>Skin.Reset(mainmenuitem$PARAM[nr]_fanart)</onclick>
			
			<label>                        Remove/Reset</label>
			<label2 />
		</control>
		<control type="group" id="$PARAM[id]6">
			<description>DONT remove group control</description>
			<control type="image">
				<visible>!String.IsEmpty(Skin.String(mainmenuitem$PARAM[nr]_thumb))</visible>
				<description>Image extras WidgetLayout</description>
				<top>-111</top>
				<left>30</left>
				<height>80</height>
				<width>70</width>
				<bordersize>2</bordersize>
				<texture fallback="">$INFO[Skin.String(mainmenuitem$PARAM[nr]_thumb)]</texture>
				<aspectratio aligny="center" align="center">keep</aspectratio>
			</control>
			
			<control type="image">
				<visible>!String.IsEmpty(Skin.String(mainmenuitem$PARAM[nr]_fanart))</visible>
				<description>Image extras WidgetLayout</description>
				<top>-111</top>
				<right>30</right>
				<height>80</height>
				<width>200</width>
				<bordersize>2</bordersize>
				<texture fallback="">$INFO[Skin.String(mainmenuitem$PARAM[nr]_fanart)]</texture>
				<aspectratio>keep</aspectratio>
			</control>
		</control>
		
	</include>
	
	<include name="Mainmenu_SetAttributes_ButtonTemplate">
		<control type="button" id="11031">
			<onclick>SetProperty(DialogHeader,Set Name for Main Menu Entry $PARAM[nr],home)</onclick>
			<onclick>Skin.SetString(mainmenuitem$PARAM[nr]_name)</onclick>
			<label>Main Menu Entry Name</label>
			<label2>$INFO[Skin.String(mainmenuitem$PARAM[nr]_name)]</label2>
		</control>
		
		<!--
		<control type="radiobutton" id="11032">
			<description>toggle linked color</description>
			<onclick>Skin.ToggleSetting(userwidget$PARAM[nr]_OverrideColor)</onclick>
			<label>Use override color for the menu tile</label>
			<label2>      </label2>
			<selected>Skin.HasSetting(userwidget$PARAM[nr]_OverrideColor)</selected>
		</control>
		set color button 

		-->
		<control type="button" id="11035">
			<description>set thumb</description>
			<height>50</height>
			<label>                        [I]Set[/I]    [B]ICON / THUMB[/B]</label>
			<label2 />
			<onclick condition="String.IsEmpty(Skin.String(texturepath_userdefined))">Skin.SetImage(mainmenuitem$PARAM[nr]_thumb,special://skin/extras/tempfoldersqaurethumbs)</onclick>
			<onclick condition="!String.IsEmpty(Skin.String(texturepath_userdefined))">Skin.SetImage(mainmenuitem$PARAM[nr]_thumb,$INFO[Skin.String(texturepath_userdefined)])</onclick>
		</control>
		<control type="button" id="11036">
			<description>set fanart</description>
			<height>50</height>
			<label>                        [I]Set[/I]    [B]FANART[/B]</label>
			<label2 />
			<onclick condition="String.IsEmpty(Skin.String(texturepath_userdefined))">Skin.SetImage(mainmenuitem$PARAM[nr]_fanart,special://skin/extras/backgroundimages)</onclick>
			<onclick condition="!String.IsEmpty(Skin.String(texturepath_userdefined))">Skin.SetImage(mainmenuitem$PARAM[nr]_fanart,$INFO[Skin.String(texturepath_userdefined)])</onclick>
		</control>
		
	</include>
		<!-- <texture fallback="special://skin/extras/selectdialog/widgetlayout_nolayout.png">$INFO[Skin.String(userwidget$PARAM[nr]_layout),artworkdiffuse/,.png]</texture> -->
	<!-- SkinSettings.xml widget script.embuary helper - set attributes - call custom window 1103 -->
	<include name="Widget_SetAttributes_ButtonTemplate">
		
		<control type="button" id="11031">
			<onclick>SetProperty(DialogHeader,Set Name for Widget $PARAM[nr],home)</onclick>
			<onclick>Skin.SetString(userwidget$PARAM[nr]_name)</onclick>
			<label>Widget Name</label>
			<label2>$INFO[Skin.String(userwidget$PARAM[nr]_name)]</label2>
		</control>
		<control type="radiobutton" id="11032">
			<description>Toggle as Category Widget</description>
			<onclick>Skin.ToggleSetting(userwidget$PARAM[nr]_IsSection)</onclick>
			<label>Use As Category / Section Menu</label>
			<label2>      </label2>
			<selected>Skin.HasSetting(userwidget$PARAM[nr]_IsSection)</selected>
		</control>
		<control type="button" id="11033">
			<description>Set Layout</description>
			<onclick>SetProperty(Dialog.1.Label,P O S T E R)</onclick>
			<onclick>SetProperty(Dialog.1.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_layout,poster)||Skin.SetString(userwidget$PARAM[nr]_layout.label,poster))</onclick>
			
			<onclick>SetProperty(Dialog.2.Label,L A N D S C A P E)</onclick>
			<onclick>SetProperty(Dialog.2.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_layout,landscape)||Skin.SetString(userwidget$PARAM[nr]_layout.label,landscape))</onclick>
			
			<onclick>SetProperty(Dialog.3.Label,S Q U A R E)</onclick>
			<onclick>SetProperty(Dialog.3.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_layout,square)||Skin.SetString(userwidget$PARAM[nr]_layout.label,Square))</onclick>
			
			<onclick>SetProperty(Dialog.4.Label,C I R C L E )</onclick>
			<onclick>SetProperty(Dialog.4.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_layout,circle)||Skin.SetString(userwidget$PARAM[nr]_layout.label,circle))</onclick>
			
			<onclick>SetProperty(Dialog.5.Label,B A N N E R)</onclick>
			<onclick>SetProperty(Dialog.5.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_layout,banner)||Skin.SetString(userwidget$PARAM[nr]_layout.label,banner))</onclick>
			
			<onclick>RunScript(script.embuary.helper,action=createselect,header=$LOCALIZE[21858])</onclick>
			<label>Layout</label>
			<label2>$INFO[Skin.String(userwidget$PARAM[nr]_layout.label)]</label2>
		</control>
		<control type="radiobutton" id="11034">
			<description>Set fixed</description>
			<label>Use Fixed Layout</label>
			<description>Toggle Tags</description>
			<onclick>Skin.ToggleSetting(userwidget$PARAM[nr]_forceFixedlist)</onclick>
			<label>Force_Tags</label>
			<selected>Skin.HasSetting(userwidget$PARAM[nr]_forceFixedlist)</selected>
		</control>
		<control type="radiobutton" id="11035">
			<description>Toggle Tags</description>
			<onclick>Skin.ToggleSetting(userwidget$PARAM[nr]_forceTag)</onclick>
			<label>Force_Tags</label>
			<selected>Skin.HasSetting(userwidget$PARAM[nr]_forceTag)</selected>
		</control>
		<control type="radiobutton" id="11036">
			<description>Widget Info panel</description>
			<onclick condition="!Skin.HasSetting(userwidget$PARAM[nr]_forceFixedlist)">Skin.ToggleSetting(userwidget$PARAM[nr]_forceFixedlist)</onclick>
			<onclick condition="Skin.HasSetting(userwidget$PARAM[nr]_forceTag)">Skin.ToggleSetting(userwidget$PARAM[nr]_forceTag)</onclick>
			<onclick>Skin.ToggleSetting(userwidget$PARAM[nr]_bottominfo)</onclick>
			<label>Show Widget Info at bottom (tags will be diasabled)</label>
			<selected>Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)</selected>
		</control>
		<control type="button" id="11037">
			<label>$LOCALIZE[581]</label>
			<onclick>SetProperty(Dialog.1.Label,$LOCALIZE[571])</onclick>
			<onclick>SetProperty(Dialog.1.BuiltIn,Skin.Reset(userwidget$PARAM[nr]_sortby)||Skin.Reset(userwidget$PARAM[nr]_sortby.label))</onclick>
			
			<onclick>SetProperty(Dialog.2.Label,$LOCALIZE[21899])</onclick>
			<onclick>SetProperty(Dialog.2.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,label)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[21899]))</onclick>
			
			<onclick>SetProperty(Dialog.3.Label,$LOCALIZE[556])</onclick>
			<onclick>SetProperty(Dialog.3.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,title)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[556]))</onclick>
			
			<onclick>SetProperty(Dialog.4.Label,$LOCALIZE[36902]-$LOCALIZE[551])</onclick>
			<onclick>SetProperty(Dialog.4.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,tvshowtitle)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[36902]-$LOCALIZE[551]))</onclick>
			
			<onclick>SetProperty(Dialog.5.Label,$LOCALIZE[171])</onclick>
			<onclick>SetProperty(Dialog.5.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,sorttitle)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[171]))</onclick>
			
			<onclick>SetProperty(Dialog.6.Label,$LOCALIZE[557])</onclick>
			<onclick>SetProperty(Dialog.6.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,artist)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[557]))</onclick>
			
			<onclick>SetProperty(Dialog.7.Label,$LOCALIZE[558])</onclick>
			<onclick>SetProperty(Dialog.7.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,album)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[558]))</onclick>
			
			<onclick>SetProperty(Dialog.8.Label,$LOCALIZE[563])</onclick>
			<onclick>SetProperty(Dialog.8.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,rating)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[563]))</onclick>
			
			<onclick>SetProperty(Dialog.9.Label,$LOCALIZE[38018])</onclick>
			<onclick>SetProperty(Dialog.9.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,userrating)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[38018]))</onclick>
			
			<onclick>SetProperty(Dialog.10.Label,$LOCALIZE[13409])</onclick>
			<onclick>SetProperty(Dialog.10.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,top250)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[13409]))</onclick>
			
			<onclick>SetProperty(Dialog.11.Label,$LOCALIZE[590])</onclick>
			<onclick>SetProperty(Dialog.11.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,random)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[590]))</onclick>
			<!-- 20 - top250  .xsp only no corresponding media type-->
			<onclick>SetProperty(Dialog.12.Label,$LOCALIZE[562])</onclick>
			<onclick>SetProperty(Dialog.12.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,year)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[562]))</onclick>
			
			<onclick>SetProperty(Dialog.13.Label,$LOCALIZE[570])</onclick>
			<onclick>SetProperty(Dialog.14.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,dateadded)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[570]))</onclick>
			
			<onclick>SetProperty(Dialog.14.Label,$LOCALIZE[568])</onclick>
			<onclick>SetProperty(Dialog.15.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,lastplayed)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[568]))</onclick>
			
			<onclick>SetProperty(Dialog.15.Label,$LOCALIZE[567])</onclick>
			<onclick>SetProperty(Dialog.15.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,playcount)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[567]))</onclick>
			
			<onclick>SetProperty(Dialog.16.Label,$LOCALIZE[36904])</onclick>
			<onclick>SetProperty(Dialog.16.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,season)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[36904]))</onclick>
			
			<onclick>SetProperty(Dialog.17.Label,$LOCALIZE[36906])</onclick>
			<onclick>SetProperty(Dialog.17.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,episode)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[36906]))</onclick>
			
			<onclick>SetProperty(Dialog.18.Label,$LOCALIZE[554])</onclick>
			<onclick>SetProperty(Dialog.18.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,tracknumber)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[554]))</onclick>
			
			<onclick>RunScript(script.embuary.helper,action=createselect,header=$LOCALIZE[581])</onclick>
			<label2>$INFO[Skin.String(userwidget$PARAM[nr]_sortby),',']</label2>
		</control>
		<control type="button" id="11038">
			<description>Set Sortorder</description>
			<label>$LOCALIZE[580]</label>
			<onclick>SetProperty(Dialog.1.Label,$LOCALIZE[571])</onclick>
			<onclick>SetProperty(Dialog.1.BuiltIn,Skin.Reset(userwidget$PARAM[nr]_sortorder))</onclick>
			<onclick>SetProperty(Dialog.2.Label,$LOCALIZE[584])</onclick>
			<onclick>SetProperty(Dialog.2.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortorder,ascending)||Skin.SetString(userwidget$PARAM[nr]_sortorder.label,$LOCALIZE[584]))</onclick>
			<onclick>SetProperty(Dialog.3.Label,$LOCALIZE[585])</onclick>
			<onclick>SetProperty(Dialog.3.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortorder,descending)||Skin.SetString(userwidget$PARAM[nr]_sortorder.label,$LOCALIZE[585]))</onclick>
			<onclick>RunScript(script.embuary.helper,action=createselect,header=$LOCALIZE[580])</onclick>
			<label2>$INFO[Skin.String(userwidget$PARAM[nr]_sortorder),',']</label2>
		</control>
		<control type="button" id="11039">
			<description>Set Limit</description>
			<label>$LOCALIZE[21427]</label>
			<onclick>Skin.SetNumeric(userwidget$PARAM[nr]_limit)</onclick>
			<label2>$INFO[Skin.String(userwidget$PARAM[nr]_limit)]</label2>
		</control>
	</include>
	
	<!-- widget container -->
	<!-- <include>RespectBool_selectaction</include> -->
	<include name="Widget_Container_Template">
		<param name="height" default="350" />
		
		<definition>
	
		<control type="$PARAM[type]" id="$PARAM[id]">
			<nested />
			<scrolltime tween="quadratic">400</scrolltime>
			<top>50</top>
			<preloaditems>2</preloaditems>
			<focusposition>0</focusposition>
			<orientation>horizontal</orientation>
			<height>$PARAM[height]</height>
			<visible>$PARAM[visible]</visible>
			
			<include content="WidgetHome_landscape" condition="String.IsEqual(Skin.String(userwidget$PARAM[nr]_layout),landscape)">
				<param name="nr" value="$PARAM[nr]" />
				<param name="id" value="$PARAM[id]" />
			</include>
			<include content="WidgetHome_poster" condition="String.IsEqual(Skin.String(userwidget$PARAM[nr]_layout),poster)">
				<param name="nr" value="$PARAM[nr]" />
				<param name="id" value="$PARAM[id]" />
			</include>
			<include content="WidgetHome_square" condition="String.IsEqual(Skin.String(userwidget$PARAM[nr]_layout),square)">
				<param name="nr" value="$PARAM[nr]" />
				<param name="id" value="$PARAM[id]" />
			</include>
			<include content="WidgetHome_circle" condition="String.IsEqual(Skin.String(userwidget$PARAM[nr]_layout),circle)">
				<param name="nr" value="$PARAM[nr]" />
				<param name="id" value="$PARAM[id]" />
			</include>
			<include content="WidgetHome_banner" condition="String.IsEqual(Skin.String(userwidget$PARAM[nr]_layout),banner)">
				<param name="nr" value="$PARAM[nr]" />
				<param name="id" value="$PARAM[id]" />
			</include>
			<content target="$INFO[Skin.String(userwidget$PARAM[nr]_target)]" limit="$INFO[Skin.String(userwidget$PARAM[nr]_limit)]" sortorder="$INFO[Skin.String(userwidget$PARAM[nr]_sortorder)]" sortby="$INFO[Skin.String(userwidget$PARAM[nr]_sortby)]">$INFO[Skin.String(userwidget$PARAM[nr]_path)]</content>
			</control>
		</definition>
	</include>
	
	<!-- 
	using xsp as path ignores sortby and sortorder from xsp in home window
	
	<include content="content_xsp" condition="String.EndsWith(Skin.String(userwidget$PARAM[nr]_path),xsp)">
		<param name="nr" value="$PARAM[nr]" />
	</include>
	<include content="content_default" condition="!String.EndsWith(Skin.String(userwidget$PARAM[nr]_path),xsp)">
		<param name="nr" value="$PARAM[nr]" />
	</include>
	
	
	<include name="content_xsp">
		<content target="$INFO[Skin.String(userwidget$PARAM[nr]_target)]" limit="$INFO[Skin.String(userwidget$PARAM[nr]_limit)]" sortorder="$INFO[Skin.String(userwidget$PARAM[nr]_sortorder)]" sortby="$INFO[Skin.String(userwidget$PARAM[nr]_sortby)]">$INFO[Skin.String(userwidget$PARAM[nr]_path)]</content>
	</include>
	
	<include name="content_default">
		<content target="$INFO[Skin.String(userwidget$PARAM[nr]_target)]" limit="$INFO[Skin.String(userwidget$PARAM[nr]_limit)]" sortorder="$INFO[Skin.String(userwidget$PARAM[nr]_sortorder)]" sortby="$INFO[Skin.String(userwidget$PARAM[nr]_sortby)]">$INFO[Skin.String(userwidget$PARAM[nr]_path)]</content>	
	</include>
	 -->
	<!--
unhappy substitution

a) use include conditions
b) auto set string in settings
c) use custom window - worst

sortby , sortorder ignored using xsp file, xsp json

test if just no corresponding SORT_METHOD_*
e.g.
sortutils.cpp

//clang format off
const sort_map table[] = {
  { SortByLabel,                    SORT_METHOD_LABEL,                        SortAttributeNone,          551 },
  { SortByLabel,                    SORT_METHOD_LABEL_IGNORE_THE,             SortAttributeIgnoreArticle, 551 },
  { SortByLabel,                    SORT_METHOD_LABEL_IGNORE_FOLDERS,         SortAttributeIgnoreFolders, 551 },
  { SortByDate,                     SORT_METHOD_DATE,                         SortAttributeNone,          552 },
  { SortBySize,                     SORT_METHOD_SIZE,                         SortAttributeNone,          553 },
  { SortByBitrate,                  SORT_METHOD_BITRATE,                      SortAttributeNone,          623 },
  { SortByDriveType,                SORT_METHOD_DRIVE_TYPE,                   SortAttributeNone,          564 },
  { SortByTrackNumber,              SORT_METHOD_TRACKNUM,                     SortAttributeNone,          554 },
  { SortByEpisodeNumber,            SORT_METHOD_EPISODE,                      SortAttributeNone,          20359 },// 20360 "Episodes" used for SORT_METHOD_EPISODE for sorting tvshows by episode count
  { SortByTime,                     SORT_METHOD_DURATION,                     SortAttributeNone,          180 },
  { SortByTime,                     SORT_METHOD_VIDEO_RUNTIME,                SortAttributeNone,          180 },
  { SortByTitle,                    SORT_METHOD_TITLE,                        SortAttributeNone,          556 },
  { SortByTitle,                    SORT_METHOD_TITLE_IGNORE_THE,             SortAttributeIgnoreArticle, 556 },
  { SortByTitle,                    SORT_METHOD_VIDEO_TITLE,                  SortAttributeNone,          556 },
  { SortByArtist,                   SORT_METHOD_ARTIST,                       SortAttributeNone,          557 },
  { SortByArtistThenYear,           SORT_METHOD_ARTIST_AND_YEAR,              SortAttributeNone,          578 },
  { SortByArtist,                   SORT_METHOD_ARTIST_IGNORE_THE,            SortAttributeIgnoreArticle, 557 },
  { SortByAlbum,                    SORT_METHOD_ALBUM,                        SortAttributeNone,          558 },
  { SortByAlbum,                    SORT_METHOD_ALBUM_IGNORE_THE,             SortAttributeIgnoreArticle, 558 },
  { SortByGenre,                    SORT_METHOD_GENRE,                        SortAttributeNone,          515 },
  { SortByCountry,                  SORT_METHOD_COUNTRY,                      SortAttributeNone,          574 },
  { SortByDateAdded,                SORT_METHOD_DATEADDED,                    SortAttributeIgnoreFolders, 570 },
  { SortByFile,                     SORT_METHOD_FILE,                         SortAttributeIgnoreFolders, 561 },
  { SortByRating,                   SORT_METHOD_SONG_RATING,                  SortAttributeNone,          563 },
  { SortByRating,                   SORT_METHOD_VIDEO_RATING,                 SortAttributeIgnoreFolders, 563 },
  { SortByUserRating,               SORT_METHOD_SONG_USER_RATING,             SortAttributeIgnoreFolders, 38018 },
  { SortByUserRating,               SORT_METHOD_VIDEO_USER_RATING,            SortAttributeIgnoreFolders, 38018 },
  { SortBySortTitle,                SORT_METHOD_VIDEO_SORT_TITLE,             SortAttributeIgnoreFolders, 171 },
  { SortBySortTitle,                SORT_METHOD_VIDEO_SORT_TITLE_IGNORE_THE,  (SortAttribute)(SortAttributeIgnoreFolders | SortAttributeIgnoreArticle), 171 },
  { SortByYear,                     SORT_METHOD_YEAR,                         SortAttributeIgnoreFolders, 562 },
  { SortByProductionCode,           SORT_METHOD_PRODUCTIONCODE,               SortAttributeNone,          20368 },
  { SortByProgramCount,             SORT_METHOD_PROGRAM_COUNT,                SortAttributeNone,          567 }, // label is "play count"
  { SortByPlaylistOrder,            SORT_METHOD_PLAYLIST_ORDER,               SortAttributeIgnoreFolders, 559 },
  { SortByMPAA,                     SORT_METHOD_MPAA_RATING,                  SortAttributeNone,          20074 },
  { SortByStudio,                   SORT_METHOD_STUDIO,                       SortAttributeNone,          572 },
  { SortByStudio,                   SORT_METHOD_STUDIO_IGNORE_THE,            SortAttributeIgnoreArticle, 572 },
  { SortByPath,                     SORT_METHOD_FULLPATH,                     SortAttributeNone,          573 },
  { SortByLastPlayed,               SORT_METHOD_LASTPLAYED,                   SortAttributeIgnoreFolders, 568 },
  { SortByPlaycount,                SORT_METHOD_PLAYCOUNT,                    SortAttributeIgnoreFolders, 567 },
  { SortByListeners,                SORT_METHOD_LISTENERS,                    SortAttributeNone,          20455 },
  { SortByChannel,                  SORT_METHOD_CHANNEL,                      SortAttributeNone,          19029 },
  { SortByChannel,                  SORT_METHOD_CHANNEL_NUMBER,               SortAttributeNone,          549 },
  { SortByChannel,                  SORT_METHOD_CLIENT_CHANNEL_ORDER,         SortAttributeNone,          19315 },
  { SortByDateTaken,                SORT_METHOD_DATE_TAKEN,                   SortAttributeIgnoreFolders, 577 },
  { SortByNone,                     SORT_METHOD_NONE,                         SortAttributeNone,          16018 },
  { SortByTotalDiscs,               SORT_METHOD_TOTAL_DISCS,                  SortAttributeNone,          38077 },
  { SortByOrigDate,                 SORT_METHOD_ORIG_DATE,                    SortAttributeNone,          38079 },
  { SortByBPM,                      SORT_METHOD_BPM,                          SortAttributeNone,          38080 },

  // the following have no corresponding SORT_METHOD_*
  { SortByAlbumType,                SORT_METHOD_NONE,                         SortAttributeNone,          564 },
  { SortByVotes,                    SORT_METHOD_NONE,                         SortAttributeNone,          205 },
  { SortByTop250,                   SORT_METHOD_NONE,                         SortAttributeNone,          13409 },
  { SortByMPAA,                     SORT_METHOD_NONE,                         SortAttributeNone,          20074 },
  { SortByDateAdded,                SORT_METHOD_NONE,                         SortAttributeNone,          570 },
  { SortByTvShowTitle,              SORT_METHOD_NONE,                         SortAttributeNone,          20364 },
  { SortByTvShowStatus,             SORT_METHOD_NONE,                         SortAttributeNone,          126 },
  { SortBySeason,                   SORT_METHOD_NONE,                         SortAttributeNone,          20373 },
  { SortByNumberOfEpisodes,         SORT_METHOD_NONE,                         SortAttributeNone,          20360 },
  { SortByNumberOfWatchedEpisodes,  SORT_METHOD_NONE,                         SortAttributeNone,          21441 },
  { SortByVideoResolution,          SORT_METHOD_NONE,                         SortAttributeNone,          21443 },
  { SortByVideoCodec,               SORT_METHOD_NONE,                         SortAttributeNone,          21445 },
  { SortByVideoAspectRatio,         SORT_METHOD_NONE,                         SortAttributeNone,          21374 },
  { SortByAudioChannels,            SORT_METHOD_NONE,                         SortAttributeNone,          21444 },
  { SortByAudioCodec,               SORT_METHOD_NONE,                         SortAttributeNone,          21446 },
  { SortByAudioLanguage,            SORT_METHOD_NONE,                         SortAttributeNone,          21447 },
  { SortBySubtitleLanguage,         SORT_METHOD_NONE,                         SortAttributeNone,          21448 },
  { SortByRandom,                   SORT_METHOD_NONE,                         SortAttributeNone,          590 }
};

e.g. top250 unrelated to media type , fail as method in =xsp? , if not used as method in .xsp file

			<content target="$INFO[Skin.String(userwidget$PARAM[nr]_target)]" limit="$INFO[Skin.String(userwidget$PARAM[nr]_limit)]" sortorder="$INFO[Skin.String(userwidget$PARAM[nr]_sortorder)]" sortby="top250">$INFO[Skin.String(userwidget$PARAM[nr]_path)]</content>	

			<content target="$INFO[Skin.String(userwidget$PARAM[nr]_target)]" limit="$INFO[Skin.String(userwidget$PARAM[nr]_limit)]" sortorder="$INFO[Skin.String(userwidget$PARAM[nr]_sortorder)]" sortby="$INFO[Skin.String(userwidget$PARAM[nr]_sortby)]">$INFO[Skin.String(userwidget$PARAM[nr]_path)]</content>	

-->
	
	<!-- widget Layouts WIP -->
	<include name="WidgetHome_sectionslayout1">
		<control type="group">
				<height>100</height>
				<width>$PARAM[width]</width>
				<control type="image">
					<description>later on custom skinstring(image)</description>
					<bordersize>2</bordersize>
					<texture background="true" fallback="bgpanel001.png">$INFO[Skin.String(texture_categorywidget)]</texture>
					<bordertexture colordiffuse="$PARAM[bg_color]">colors/white.png</bordertexture>
					<aspectratio scalediffuse="false" align="center" aligny="center">stretch</aspectratio>
				</control>
				<control type="image">
					<visible>false</visible>
					<height>110</height>
					<width>$PARAM[width]</width>
					<description>later on custom skinstring(image), or default gradientfoo.png</description>
					<colordiffuse>$PARAM[bg_color]</colordiffuse>
					<texture background="true">colors/white50.png</texture>
				</control>
				<control type="image">
					<visible>Skin.HasSetting(userwidget$PARAM[nr]_forceTag)</visible>
					<description>fallback="special://skin/extras/backgroundimages/gradienta-bKESVqfxass-unsplash.jpg</description>
					<bordersize>2</bordersize>
					<texture diffuse="colors/white30.png" background="true" colordiffuse="$PARAM[bg_color]">$INFO[ListItem.Icon]</texture>
					<aspectratio scalediffuse="false" align="center" aligny="center">keep</aspectratio>
				</control>
				<control type="image">
					<visible>!Skin.HasSetting(userwidget$PARAM[nr]_forceTag)</visible>
					<description>fallback="special://skin/extras/backgroundimages/gradienta-bKESVqfxass-unsplash.jpg</description>
					<bordersize>2</bordersize>
					<texture diffuse="colors/white90.png" background="true" colordiffuse="$PARAM[bg_color]">$INFO[ListItem.Icon]</texture>
					<aspectratio scalediffuse="false" align="center" aligny="center">keep</aspectratio>
				</control>
				<control type="label">
					<left>5%</left>
					<width>90%</width>
					<align>center</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Label]</label>
					<font>$PARAM[font]</font>
					<textcolor>$PARAM[text_color]</textcolor>
					<shadowcolor>black</shadowcolor>
					<visible>Skin.HasSetting(userwidget$PARAM[nr]_forceTag)</visible>
				</control>
				
			</control>
		
	</include>
	
	
	<include name="WidgetHome_poster">
		<itemlayout height="350" width="215" condition="!Skin.HasSetting(userwidget$PARAM[nr]_IsSection) + Skin.HasSetting(userwidget$PARAM[nr]_forceTag)">
			<control type="group">
				<width>205</width>
				<height>285</height>
				<include content="UniversalLayout">
					<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_nf]" />
					<param name="artwork" value="poster" />
					<param name="get_circle" value="false" />
					<param name="get_tags" value="true" />
					<param name="get_landscapelogo" value="false" />
					<param name="get_bannerlogo" value="false" />
					<param name="autoscroll" value="false" />
					<param name="bordersize_bg" value="6" />
					<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_nf]" />
					<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_nf]" />
					<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_nf]" />
				</include>
			</control>
		</itemlayout>
		<focusedlayout height="350" width="215" condition="!Skin.HasSetting(userwidget$PARAM[nr]_IsSection) + Skin.HasSetting(userwidget$PARAM[nr]_forceTag)">
			<include>SetPropOnFocus_HiddenButton</include>
			<control type="group">
				<width>205</width>
				<height>285</height>
				<control type="group">
					<visible>!Control.HasFocus($PARAM[id])</visible>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_nf]" />
						<param name="artwork" value="poster" />
						<param name="get_circle" value="false" />
						<param name="get_tags" value="true" />
						<param name="get_landscapelogo" value="false" />
						<param name="get_bannerlogo" value="false" />
						<param name="autoscroll" value="false" />
						<param name="bordersize_bg" value="6" />
						<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_nf]" />
						<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_nf]" />
						<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_nf]" />
					</include>
				</control>
				<control type="group">
					<visible>Control.HasFocus($PARAM[id])</visible>
					<include>Animation_Item_Focus</include>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_fo]" />
						<param name="artwork" value="poster" />
						<param name="get_circle" value="false" />
						<param name="get_tags" value="Skin.HasSetting(userwidget$PARAM[nr]_forceTag)" />
						<param name="get_landscapelogo" value="false" />
						<param name="get_bannerlogo" value="false" />
						<param name="autoscroll" value="true" />
						<param name="bordersize_bg" value="4" />
						<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_fo]" />
						<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_fo]" />
						<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_fo]" />
					</include>
					<include condition="Skin.HasTheme(Roundedge) + !$EXP[HiddentagPanel]" content="FocusOverlay">
						<param name="diffusedimtext" value="artworkdiffuse/usebganel/poster.png" />
						<param name="forced_color" value="home" />
					</include>
					<include condition="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + $EXP[HiddentagPanel]]" content="FocusOverlay">
						<param name="diffusedimtext" value="artworkdiffuse/poster.png" />
						<param name="forced_color" value="home" />
					</include>
				</control>
			</control>
		</focusedlayout>
		<itemlayout height="350" width="245" condition="!Skin.HasSetting(userwidget$PARAM[nr]_IsSection) + !Skin.HasSetting(userwidget$PARAM[nr]_forceTag)">
			<control type="group">
				<width>234</width>
				<height>350</height>
				<include content="UniversalLayout">
					<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_nf]" />
					<param name="artwork" value="poster" />
					<param name="get_circle" value="false" />
					<param name="get_tags" value="Skin.HasSetting(userwidget$PARAM[nr]_forceTag)" />
					<param name="get_landscapelogo" value="false" />
					<param name="get_bannerlogo" value="false" />
					<param name="autoscroll" value="false" />
					<param name="bordersize_bg" value="6" />
					<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_nf]" />
					<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_nf]" />
					<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_nf]" />
					<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + [$EXP[HiddentagPanel]  |  Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]]" />
					<param name="conditional_artworkdiffuse_override" value="[Skin.HasTheme(Roundedge) + !$EXP[HiddentagPanel] + !Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]" />
				</include>
			</control>
		</itemlayout>
		<focusedlayout height="350" width="245" condition="!Skin.HasSetting(userwidget$PARAM[nr]_IsSection) + !Skin.HasSetting(userwidget$PARAM[nr]_forceTag)">
			<include>SetPropOnFocus_HiddenButton</include>
			<control type="group">
				<width>234</width>
				<height>350</height>
				<control type="group">
					<visible>!Control.HasFocus($PARAM[id])</visible>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_nf]" />
						<param name="artwork" value="poster" />
						<param name="get_circle" value="false" />
						<param name="get_tags" value="false" />
						<param name="get_landscapelogo" value="false" />
						<param name="get_bannerlogo" value="false" />
						<param name="autoscroll" value="false" />
						<param name="bordersize_bg" value="6" />
						<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_nf]" />
						<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_nf]" />
						<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_nf]" />
						<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + [$EXP[HiddentagPanel]  |  Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]]" />
						<param name="conditional_artworkdiffuse_override" value="[Skin.HasTheme(Roundedge) + !$EXP[HiddentagPanel] + !Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]" />
					</include>
				</control>
				<control type="group">
					<visible>Control.HasFocus($PARAM[id])</visible>
					<include>Animation_Item_Focus</include>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_fo]" />
						<param name="artwork" value="poster" />
						<param name="get_circle" value="false" />
						<param name="get_tags" value="false" />
						<param name="get_landscapelogo" value="false" />
						<param name="get_bannerlogo" value="false" />
						<param name="autoscroll" value="true" />
						<param name="bordersize_bg" value="4" />
						<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_fo]" />
						<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_fo]" />
						<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_fo]" />
						<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + [$EXP[HiddentagPanel]  |  Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]]" />
						<param name="conditional_artworkdiffuse_override" value="[Skin.HasTheme(Roundedge) + !$EXP[HiddentagPanel] + !Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]" />
					</include>
					<include condition="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + [$EXP[HiddentagPanel]  |  Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]]" content="FocusOverlay">
						<param name="diffusedimtext" value="artworkdiffuse/poster.png" />
						<param name="forced_color" value="home" />
					</include>
					<include condition="[Skin.HasTheme(Roundedge) + !$EXP[HiddentagPanel] + !Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]" content="FocusOverlay">
						<param name="diffusedimtext" value="artworkdiffuse/usebganel/poster.png" />
						<param name="forced_color" value="home" />
					</include>
				</control>
			</control>
		</focusedlayout>
		
		<itemlayout height="110" width="80" condition="Skin.HasSetting(userwidget$PARAM[nr]_IsSection)">
			<include content="WidgetHome_sectionslayout1">
				<param name="width" value="73" />
				<param name="bg_color" value="$VAR[color_home_widgetitem_frame_nf]" />
				<param name="font" value="debugtiny2" />
				<param name="text_color" value="$VAR[color_home_widgetitem_frame_nf]" />
				<param name="nr" value="$PARAM[nr]" />
			</include>
		</itemlayout>
		<focusedlayout height="110" width="80" condition="Skin.HasSetting(userwidget$PARAM[nr]_IsSection)">
			<include content="WidgetHome_sectionslayout1">
				<param name="width" value="73" />
				<param name="bg_color" value="$VAR[color_home_widgetitem_frame_fo]" />
				<param name="font" value="font20_title" />
				<param name="text_color" value="$VAR[color_home_widgetitem_frame_fo]" />
				<param name="nr" value="$PARAM[nr]" />
			</include>
		
		</focusedlayout>
		
	</include>
		
	<include name="WidgetHome_landscape">
		<itemlayout height="350" width="500" condition="!Skin.HasSetting(userwidget$PARAM[nr]_IsSection) + Skin.HasSetting(userwidget$PARAM[nr]_forceTag)">
			<control type="group">
				<height>270</height>
				<width>480</width>
				<include content="UniversalLayout">
					<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_nf]" />
					<param name="artwork" value="landscape" />
					<param name="get_circle" value="false" />
					<param name="get_tags" value="Skin.HasSetting(userwidget$PARAM[nr]_forceTag)" />
					<param name="get_landscapelogo" value="true" />
					<param name="get_bannerlogo" value="false" />
					<param name="autoscroll" value="false" />
					<param name="bordersize_bg" value="6" />
					<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_nf]" />
					<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_nf]" />
					<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_nf]" />
				</include>
			</control>
		</itemlayout>
		<focusedlayout height="350" width="500" condition="!Skin.HasSetting(userwidget$PARAM[nr]_IsSection) + Skin.HasSetting(userwidget$PARAM[nr]_forceTag)">
			<include>SetPropOnFocus_HiddenButton</include>
			<control type="group">
				<width>480</width>
				<height>270</height>
				<control type="group">
					<visible>!Control.HasFocus($PARAM[id])</visible>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_nf]" />
						<param name="artwork" value="landscape" />
						<param name="get_circle" value="false" />
						<param name="get_tags" value="Skin.HasSetting(userwidget$PARAM[nr]_forceTag)" />
						<param name="get_landscapelogo" value="true" />
						<param name="get_bannerlogo" value="false" />
						<param name="autoscroll" value="false" />
						<param name="bordersize_bg" value="6" />
						<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_nf]" />
						<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_nf]" />
						<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_nf]" />
				</include>
				</control>
				<control type="group">
					<visible>Control.HasFocus($PARAM[id])</visible>
					<include>Animation_Item_Focus</include>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_fo]" />
						<param name="artwork" value="landscape" />
						<param name="get_circle" value="false" />
						<param name="get_tags" value="Skin.HasSetting(userwidget$PARAM[nr]_forceTag)" />
						<param name="get_landscapelogo" value="true" />
						<param name="get_bannerlogo" value="false" />
						<param name="autoscroll" value="true" />
						<param name="bordersize_bg" value="4" />
						<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_fo]" />
						<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_fo]" />
						<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_fo]" />
					</include>
					<include condition="Skin.HasTheme(Roundedge) + !$EXP[HiddentagPanel]" content="FocusOverlay">
						<param name="diffusedimtext" value="artworkdiffuse/usebganel/landscape.png" />
						<param name="forced_color" value="home" />
					</include>
					<include condition="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + $EXP[HiddentagPanel]]" content="FocusOverlay">
						<param name="diffusedimtext" value="artworkdiffuse/landscape.png" />
						<param name="forced_color" value="home" />
					</include>
				</control>
			</control>
		</focusedlayout>
		<itemlayout height="350" width="610" condition="!Skin.HasSetting(userwidget$PARAM[nr]_IsSection) + !Skin.HasSetting(userwidget$PARAM[nr]_forceTag)">
			<control type="group">
				<height>350</height>
				<width>595</width>
				<include content="UniversalLayout">
					<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_nf]" />
					<param name="artwork" value="landscape" />
					<param name="get_circle" value="false" />
					<param name="get_tags" value="Skin.HasSetting(userwidget$PARAM[nr]_forceTag)" />
					<param name="get_landscapelogo" value="true" />
					<param name="get_bannerlogo" value="false" />
					<param name="autoscroll" value="false" />
					<param name="bordersize_bg" value="6" />
					<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_nf]" />
					<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_nf]" />
					<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_nf]" />
					<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + [$EXP[HiddentagPanel]  |  Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]]" />
					<param name="conditional_artworkdiffuse_override" value="[Skin.HasTheme(Roundedge) + !$EXP[HiddentagPanel] + !Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]" />
				</include>
			</control>
		</itemlayout>
		<focusedlayout height="350" width="610" condition="!Skin.HasSetting(userwidget$PARAM[nr]_IsSection) + !Skin.HasSetting(userwidget$PARAM[nr]_forceTag)">
			<include>SetPropOnFocus_HiddenButton</include>
			<control type="group">
				<height>350</height>
				<width>595</width>
				<control type="group">
					<visible>!Control.HasFocus($PARAM[id])</visible>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_nf]" />
						<param name="artwork" value="landscape" />
						<param name="get_circle" value="false" />
						<param name="get_tags" value="Skin.HasSetting(userwidget$PARAM[nr]_forceTag)" />
						<param name="get_landscapelogo" value="true" />
						<param name="get_bannerlogo" value="false" />
						<param name="autoscroll" value="false" />
						<param name="bordersize_bg" value="6" />
						<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_nf]" />
						<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_nf]" />
						<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_nf]" /><param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + [$EXP[HiddentagPanel]  |  Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]]" />
						<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + [$EXP[HiddentagPanel]  |  Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]]" />
						<param name="conditional_artworkdiffuse_override" value="[Skin.HasTheme(Roundedge) + !$EXP[HiddentagPanel] + !Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]" />
					</include>
				</control>
				<control type="group">
					<visible>Control.HasFocus($PARAM[id])</visible>
					<include>Animation_Item_Focus</include>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_fo]" />
						<param name="artwork" value="landscape" />
						<param name="get_circle" value="false" />
						<param name="get_tags" value="Skin.HasSetting(userwidget$PARAM[nr]_forceTag)" />
						<param name="get_landscapelogo" value="true" />
						<param name="get_bannerlogo" value="false" />
						<param name="autoscroll" value="true" />
						<param name="bordersize_bg" value="4" />
						<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_fo]" />
						<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_fo]" />
						<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_fo]" /><param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + [$EXP[HiddentagPanel]  |  Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]]" />
						<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + [$EXP[HiddentagPanel]  |  Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]]" />
						<param name="conditional_artworkdiffuse_override" value="[Skin.HasTheme(Roundedge) + !$EXP[HiddentagPanel] + !Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]" />
					</include>
					<include condition="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + [$EXP[HiddentagPanel]  |  Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]]" content="FocusOverlay">
						<param name="diffusedimtext" value="artworkdiffuse/landscape.png" />
						<param name="forced_color" value="home" />
					</include>
					<include condition="[Skin.HasTheme(Roundedge) + !$EXP[HiddentagPanel] + !Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]" content="FocusOverlay">
						<param name="diffusedimtext" value="artworkdiffuse/usebganel/landscape.png" />
						<param name="forced_color" value="home" />
					</include>
				</control>
			</control>
		</focusedlayout>
		<itemlayout height="110" width="180" condition="Skin.HasSetting(userwidget$PARAM[nr]_IsSection)">
			<include content="WidgetHome_sectionslayout1">
				<param name="width" value="170" />
				<param name="bg_color" value="$VAR[color_home_widgetitem_frame_nf]" />
				<param name="font" value="debugtiny2" />
				<param name="text_color" value="$VAR[color_home_widgetitem_frame_nf]" />
				<param name="nr" value="$PARAM[nr]" />
			</include>
		</itemlayout>
		<focusedlayout height="110" width="180" condition="Skin.HasSetting(userwidget$PARAM[nr]_IsSection)">
			<include content="WidgetHome_sectionslayout1">
				<param name="width" value="170" />
				<param name="bg_color" value="$VAR[color_home_widgetitem_frame_fo]" />
				<param name="font" value="font20_title" />
				<param name="text_color" value="$VAR[color_home_widgetitem_frame_fo]" />
				<param name="nr" value="$PARAM[nr]" />
			</include>
		</focusedlayout>
	</include>
	
	<include name="WidgetHome_circle">
		<itemlayout height="350" width="340" condition="!Skin.HasSetting(userwidget$PARAM[nr]_IsSection)">
			<control type="group">
				<height>300</height>
				<width>300</width>
				<include content="UniversalLayout">
					<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_nf]" />
					<param name="artwork" value="circle" />
					<param name="get_circle" value="true" />
					<param name="get_tags" value="false" />
					<param name="get_landscapelogo" value="false" />
					<param name="get_bannerlogo" value="false" />
					<param name="autoscroll" value="false" />
					<param name="bordersize_bg" value="6" />
				</include>
			</control>
		</itemlayout>
		<focusedlayout height="350" width="340" condition="!Skin.HasSetting(userwidget$PARAM[nr]_IsSection)">
			<include>SetPropOnFocus_HiddenButton</include>
			<control type="group">
				<height>300</height>
				<width>300</width>
				<control type="group">
					<visible>!Control.HasFocus($PARAM[id])</visible>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_nf]" />
						<param name="artwork" value="circle" />
						<param name="get_circle" value="true" />
						<param name="get_tags" value="false" />
						<param name="get_landscapelogo" value="false" />
						<param name="get_bannerlogo" value="false" />
						<param name="autoscroll" value="false" />
						<param name="bordersize_bg" value="6" />
					</include>
				</control>
				<control type="group">
					<visible>Control.HasFocus($PARAM[id])</visible>
					<include>Animation_Item_Focus</include>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_fo]" />
						<param name="artwork" value="circle" />
						<param name="get_circle" value="true" />
						<param name="get_tags" value="false" />
						<param name="get_landscapelogo" value="false" />
						<param name="get_bannerlogo" value="false" />
						<param name="autoscroll" value="true" />
						<param name="bordersize_bg" value="4" />
					</include>
				</control>
			</control>
		</focusedlayout>
		<itemlayout height="110" width="110" condition="Skin.HasSetting(userwidget$PARAM[nr]_IsSection)">
			<control type="group">
				<height>100</height>
				<width>100</width>
				<include content="UniversalLayout">
					<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_fo]" />
					<param name="artwork" value="circle" />
					<param name="get_circle" value="false" />
					<param name="get_tags" value="false" />
					<param name="get_landscapelogo" value="false" />
					<param name="get_bannerlogo" value="false" />
					<param name="autoscroll" value="false" />
					<param name="bordersize_bg" value="4" />
				</include>
			</control>
		</itemlayout>
		<focusedlayout height="110" width="110" condition="Skin.HasSetting(userwidget$PARAM[nr]_IsSection)">
			<control type="group">
				<height>100</height>
				<width>100</width>
				<control type="group">
					<visible>!Control.HasFocus($PARAM[id])</visible>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_nf]" />
						<param name="artwork" value="circle" />
						<param name="get_circle" value="false" />
						<param name="get_tags" value="false" />
						<param name="get_landscapelogo" value="false" />
						<param name="get_bannerlogo" value="false" />
						<param name="autoscroll" value="false" />
						<param name="bordersize_bg" value="6" />
					</include>
				</control>
				<control type="group">
					<visible>Control.HasFocus($PARAM[id])</visible>
					<include>Animation_Item_Focus</include>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_fo]" />
						<param name="artwork" value="circle" />
						<param name="get_circle" value="false" />
						<param name="get_tags" value="false" />
						<param name="get_landscapelogo" value="false" />
						<param name="get_bannerlogo" value="false" />
						<param name="autoscroll" value="true" />
						<param name="bordersize_bg" value="4" />
					</include>
				</control>
			</control>
		</focusedlayout>
	</include>
	
	<include name="WidgetHome_square">
		<itemlayout height="350" width="290" condition="!Skin.HasSetting(userwidget$PARAM[nr]_IsSection) + Skin.HasSetting(userwidget$PARAM[nr]_forceTag)">
			<control type="group">
				<height>280</height>
				<width>280</width>
				<include content="UniversalLayout">
					<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_nf]" />
					<param name="artwork" value="square" />
					<param name="get_circle" value="false" />
					<param name="get_tags" value="Skin.HasSetting(userwidget$PARAM[nr]_forceTag)" />
					<param name="get_landscapelogo" value="false" />
					<param name="get_bannerlogo" value="false" />
					<param name="autoscroll" value="false" />
					<param name="bordersize_bg" value="6" />
					<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_nf]" />
					<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_nf]" />
					<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_nf]" />
				</include>
			</control>
		</itemlayout>
		<focusedlayout height="350" width="290" condition="!Skin.HasSetting(userwidget$PARAM[nr]_IsSection) + Skin.HasSetting(userwidget$PARAM[nr]_forceTag)">
			<include>SetPropOnFocus_HiddenButton</include>
			<control type="group">
				<height>280</height>
				<width>280</width>
				<control type="group">
					<visible>!Control.HasFocus($PARAM[id])</visible>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_nf]" />
						<param name="artwork" value="square" />
						<param name="get_circle" value="false" />
						<param name="get_tags" value="Skin.HasSetting(userwidget$PARAM[nr]_forceTag)" />
						<param name="get_landscapelogo" value="false" />
						<param name="get_bannerlogo" value="false" />
						<param name="autoscroll" value="false" />
						<param name="bordersize_bg" value="6" />
						<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_nf]" />
						<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_nf]" />
						<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_nf]" />
					</include>
				</control>
				<control type="group">
					<visible>Control.HasFocus($PARAM[id])</visible>
					<include>Animation_Item_Focus</include>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_fo]" />
						<param name="artwork" value="thumb" />
						<param name="get_circle" value="false" />
						<param name="get_tags" value="Skin.HasSetting(userwidget$PARAM[nr]_forceTag)" />
						<param name="get_landscapelogo" value="false" />
						<param name="get_bannerlogo" value="false" />
						<param name="autoscroll" value="true" />
						<param name="bordersize_bg" value="4" />
						<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_fo]" />
						<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_fo]" />
						<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_fo]" />
					</include>
					<include condition="Skin.HasTheme(Roundedge) + !$EXP[HiddentagPanel]" content="FocusOverlay">
						<param name="diffusedimtext" value="artworkdiffuse/usebganel/thumb.png" />
						<param name="forced_color" value="home" />
					</include>
					<include condition="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + $EXP[HiddentagPanel]]" content="FocusOverlay">
						<param name="diffusedimtext" value="artworkdiffuse/thumb.png" />
						<param name="forced_color" value="home" />
					</include>
				</control>
			</control>
		</focusedlayout>
		<itemlayout height="350" width="370" condition="!Skin.HasSetting(userwidget$PARAM[nr]_IsSection) + !Skin.HasSetting(userwidget$PARAM[nr]_forceTag)">
			<control type="group">
				<height>350</height>
				<width>350</width>
				<include content="UniversalLayout">
					<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_nf]" />
					<param name="artwork" value="square" />
					<param name="get_circle" value="false" />
					<param name="get_tags" value="Skin.HasSetting(userwidget$PARAM[nr]_forceTag)" />
					<param name="get_landscapelogo" value="false" />
					<param name="get_bannerlogo" value="false" />
					<param name="autoscroll" value="false" />
					<param name="bordersize_bg" value="6" />
					<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_nf]" />
					<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_nf]" />
					<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_nf]" />
					<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + [$EXP[HiddentagPanel]  |  Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]]" />
					<param name="conditional_artworkdiffuse_override" value="[Skin.HasTheme(Roundedge) + !$EXP[HiddentagPanel] + !Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]" />
				</include>
			</control>
		</itemlayout>
		<focusedlayout height="350" width="370" condition="!Skin.HasSetting(userwidget$PARAM[nr]_IsSection) + !Skin.HasSetting(userwidget$PARAM[nr]_forceTag)">
			<include>SetPropOnFocus_HiddenButton</include>
			<control type="group">
				<height>350</height>
				<width>350</width>
				<control type="group">
					<visible>!Control.HasFocus($PARAM[id])</visible>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_nf]" />
						<param name="artwork" value="square" />
						<param name="get_circle" value="false" />
						<param name="get_tags" value="Skin.HasSetting(userwidget$PARAM[nr]_forceTag)" />
						<param name="get_landscapelogo" value="false" />
						<param name="get_bannerlogo" value="false" />
						<param name="autoscroll" value="false" />
						<param name="bordersize_bg" value="6" />
						<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_nf]" />
						<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_nf]" />
						<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_nf]" />
						<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + [$EXP[HiddentagPanel]  |  Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]]" />
						<param name="conditional_artworkdiffuse_override" value="[Skin.HasTheme(Roundedge) + !$EXP[HiddentagPanel] + !Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]" />
					</include>
				</control>
				<control type="group">
					<visible>Control.HasFocus($PARAM[id])</visible>
					<include>Animation_Item_Focus</include>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_fo]" />
						<param name="artwork" value="square" />
						<param name="get_circle" value="false" />
						<param name="get_tags" value="Skin.HasSetting(userwidget$PARAM[nr]_forceTag)" />
						<param name="get_landscapelogo" value="false" />
						<param name="get_bannerlogo" value="false" />
						<param name="autoscroll" value="true" />
						<param name="bordersize_bg" value="4" />
						<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_fo]" />
						<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_nf]" />
						<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_nf]" />
						<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + [$EXP[HiddentagPanel]  |  Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]]" />
						<param name="conditional_artworkdiffuse_override" value="[Skin.HasTheme(Roundedge) + !$EXP[HiddentagPanel] + !Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]" />
					</include>
					<include condition="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + [$EXP[HiddentagPanel]  |  Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]]" content="FocusOverlay">
						<param name="diffusedimtext" value="artworkdiffuse/square.png" />
						<param name="forced_color" value="home" />
					</include>
					<include condition="[Skin.HasTheme(Roundedge) + !$EXP[HiddentagPanel] + !Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]" content="FocusOverlay">
						<param name="diffusedimtext" value="artworkdiffuse/usebganel/square.png" />
						<param name="forced_color" value="home" />
					</include>
				</control>
			</control>
		</focusedlayout>
		<itemlayout height="110" width="110" condition="Skin.HasSetting(userwidget$PARAM[nr]_IsSection)">
			<include content="WidgetHome_sectionslayout1">
				<param name="width" value="100" />
				<param name="bg_color" value="$VAR[color_home_widgetitem_frame_nf]" />
				<param name="font" value="debugtiny2" />
				<param name="text_color" value="$VAR[color_home_widgetitem_frame_nf]" />
				<param name="nr" value="$PARAM[nr]" />
			</include>
		</itemlayout>
		<focusedlayout height="110" width="110" condition="Skin.HasSetting(userwidget$PARAM[nr]_IsSection)">
			<include content="WidgetHome_sectionslayout1">
				<param name="width" value="100" />
				<param name="bg_color" value="$VAR[color_home_widgetitem_frame_fo]" />
				<param name="font" value="font20_title" />
				<param name="text_color" value="$VAR[color_home_widgetitem_frame_fo]" />
				<param name="nr" value="$PARAM[nr]" />
			</include>
		</focusedlayout>
	</include>
	
	<!--  	1000w x 185h, 5,4  500,92=5,3-->
	
	<!-- wtf -->
	
	<include name="WidgetHome_banner">
		<itemlayout height="175" width="610" condition="[!Skin.HasSetting(userwidget$PARAM[nr]_IsSection) + !Skin.HasSetting(userwidget$PARAM[nr]_forceFixedlist) + Skin.HasSetting(userwidget$PARAM[nr]_forceTag)]">
			<control type="group">
				<height>110</height>
				<width>590</width>
				<include content="UniversalLayout">
					<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_nf]" />
					<param name="artwork" value="banner" />
					<param name="get_circle" value="false" />
					<param name="get_tags" value="true" />
					<param name="get_landscapelogo" value="false" />
					<param name="get_bannerlogo" value="true" />
					<param name="autoscroll" value="false" />
					<param name="bordersize_bg" value="6" />
					<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_nf]" />
					<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_nf]" />
					<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_nf]" />
				</include>
			</control>
		</itemlayout>
		<focusedlayout height="175" width="610"  condition="[!Skin.HasSetting(userwidget$PARAM[nr]_IsSection) + !Skin.HasSetting(userwidget$PARAM[nr]_forceFixedlist) + Skin.HasSetting(userwidget$PARAM[nr]_forceTag)]">
			<include>SetPropOnFocus_HiddenButton</include>
			<control type="group">
				<height>110</height>
				<width>590</width>
				<control type="group">
					<include>Animation_Item_Focus</include>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_fo]" />
						<param name="artwork" value="banner" />
						<param name="get_circle" value="false" />
						<param name="get_tags" value="true" />
						<param name="get_landscapelogo" value="false" />
						<param name="get_bannerlogo" value="true" />
						<param name="autoscroll" value="true" />
						<param name="bordersize_bg" value="4" />
						<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_fo]" />
						<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_fo]" />
						<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_fo]" />
					</include>
					
					<include condition="Skin.HasTheme(Roundedge) + !$EXP[HiddentagPanel]" content="FocusOverlay">
						<param name="diffusedimtext" value="artworkdiffuse/usebganel/banner.png" />
						<param name="forced_color" value="home" />
					</include>
					<include condition="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + $EXP[HiddentagPanel]]" content="FocusOverlay">
						<param name="diffusedimtext" value="artworkdiffuse/banner.png" />
						<param name="forced_color" value="home" />
					</include>
				</control>
			</control>
		</focusedlayout>
		<itemlayout height="175" width="820" condition="[!Skin.HasSetting(userwidget$PARAM[nr]_IsSection) + !Skin.HasSetting(userwidget$PARAM[nr]_forceFixedlist) + !Skin.HasSetting(userwidget$PARAM[nr]_forceTag)]">
			<control type="group">
				<height>150</height>
				<width>811</width>
				<include content="UniversalLayout">
					<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_nf]" />
					<param name="artwork" value="banner" />
					<param name="get_circle" value="false" />
					<param name="get_tags" value="false" />
					<param name="get_landscapelogo" value="false" />
					<param name="get_bannerlogo" value="true" />
					<param name="autoscroll" value="false" />
					<param name="bordersize_bg" value="6" />
					<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_nf]" />
					<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_nf]" />
					<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_nf]" />
				</include>
			</control>
		</itemlayout>
		<focusedlayout height="175" width="820"  condition="[!Skin.HasSetting(userwidget$PARAM[nr]_IsSection) + !Skin.HasSetting(userwidget$PARAM[nr]_forceFixedlist) + !Skin.HasSetting(userwidget$PARAM[nr]_forceTag)]">
			<include>SetPropOnFocus_HiddenButton</include>
			<control type="group">
				<height>150</height>
				<width>811</width>
				<control type="group">
					<include>Animation_Item_Focus</include>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_fo]" />
						<param name="artwork" value="banner" />
						<param name="get_circle" value="false" />
						<param name="get_tags" value="false" />
						<param name="get_landscapelogo" value="false" />
						<param name="get_bannerlogo" value="true" />
						<param name="autoscroll" value="true" />
						<param name="bordersize_bg" value="4" />
						<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_fo]" />
						<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_fo]" />
						<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_fo]" />
					</include>
					
					<include condition="Skin.HasTheme(Roundedge) + !$EXP[HiddentagPanel]" content="FocusOverlay">
						<param name="diffusedimtext" value="artworkdiffuse/usebganel/banner.png" />
						<param name="forced_color" value="home" />
					</include>
					<include condition="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + $EXP[HiddentagPanel]]" content="FocusOverlay">
						<param name="diffusedimtext" value="artworkdiffuse/banner.png" />
						<param name="forced_color" value="home" />
					</include>
				</control>
			</control>
		</focusedlayout>
		
		
		<itemlayout height="250" width="960" condition="[!Skin.HasSetting(userwidget$PARAM[nr]_IsSection) + Skin.HasSetting(userwidget$PARAM[nr]_forceFixedlist) + !Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]">
			<control type="group">
				<height>200</height>
				<width>925</width>
				<include content="UniversalLayout">
					<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_nf]" />
					<param name="artwork" value="banner" />
					<param name="get_circle" value="false" />
					<param name="get_tags" value="Skin.HasSetting(userwidget$PARAM[nr]_forceTag)" />
					<param name="get_landscapelogo" value="false" />
					<param name="get_bannerlogo" value="true" />
					<param name="autoscroll" value="false" />
					<param name="bordersize_bg" value="6" />
					<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_nf]" />
					<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_nf]" />
					<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_nf]" />
				</include>
			</control>
		</itemlayout>
		<focusedlayout height="250" width="960" condition="[!Skin.HasSetting(userwidget$PARAM[nr]_IsSection) + Skin.HasSetting(userwidget$PARAM[nr]_forceFixedlist) + !Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]">
			<include>SetPropOnFocus_HiddenButton</include>
			<control type="group">
				<height>200</height>
				<width>925</width>
				<control type="group">
					<visible>!Control.HasFocus($PARAM[id])</visible>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_nf]" />
						<param name="artwork" value="banner" />
						<param name="get_circle" value="false" />
						<param name="get_tags" value="Skin.HasSetting(userwidget$PARAM[nr]_forceTag)" />
						<param name="get_landscapelogo" value="false" />
						<param name="get_bannerlogo" value="true" />
						<param name="autoscroll" value="false" />
						<param name="bordersize_bg" value="6" />
						<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_nf]" />
						<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_nf]" />
						<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_nf]" />
					</include>
				</control>
				<control type="group">
					<visible>Control.HasFocus($PARAM[id])</visible>
					<include>Animation_Item_Focus</include>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_fo]" />
						<param name="artwork" value="banner" />
						<param name="get_circle" value="false" />
						<param name="get_tags" value="true" />
						<param name="get_landscapelogo" value="false" />
						<param name="get_bannerlogo" value="true" />
						<param name="autoscroll" value="true" />
						<param name="bordersize_bg" value="4" />
						<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_fo]" />
						<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_fo]" />
						<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_fo]" />
					</include>
					
					<include condition="Skin.HasTheme(Roundedge) + !$EXP[HiddentagPanel]" content="FocusOverlay">
						<param name="diffusedimtext" value="artworkdiffuse/usebganel/banner.png" />
						<param name="forced_color" value="home" />
					</include>
					<include condition="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + $EXP[HiddentagPanel]]" content="FocusOverlay">
						<param name="diffusedimtext" value="artworkdiffuse/banner.png" />
						<param name="forced_color" value="home" />
					</include>
				</control>
			</control>
		</focusedlayout>
		<itemlayout height="350" width="1750" condition="!Skin.HasSetting(userwidget$PARAM[nr]_IsSection) + Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)">
			<control type="group">
				<height>350</height>
				<width>1700</width>
				<include content="UniversalLayout">
					<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_nf]" />
					<param name="artwork" value="banner" />
					<param name="get_circle" value="false" />
					<param name="get_tags" value="false" />
					<param name="get_landscapelogo" value="false" />
					<param name="get_bannerlogo" value="true" />
					<param name="autoscroll" value="false" />
					<param name="bordersize_bg" value="6" />
					<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_nf]" />
					<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_nf]" />
					<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_nf]" />
					<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + [$EXP[HiddentagPanel]  |  Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]]" />
					<param name="conditional_artworkdiffuse_override" value="[Skin.HasTheme(Roundedge) + !$EXP[HiddentagPanel] + !Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]" />
				</include>
			</control>
		</itemlayout>
		<focusedlayout height="350" width="1750" condition="!Skin.HasSetting(userwidget$PARAM[nr]_IsSection) + Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)">
			<include>SetPropOnFocus_HiddenButton</include>
			<control type="group">
				<height>350</height>
				<width>1700</width>
				<control type="group">
					<visible>!Control.HasFocus($PARAM[id])</visible>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_nf]" />
						<param name="artwork" value="banner" />
						<param name="get_circle" value="false" />
						<param name="get_tags" value="false" />
						<param name="get_landscapelogo" value="false" />
						<param name="get_bannerlogo" value="true" />
						<param name="autoscroll" value="false" />
						<param name="bordersize_bg" value="6" />
						<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_nf]" />
						<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_nf]" />
						<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_nf]" />
						<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + [$EXP[HiddentagPanel]  |  Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]]" />
						<param name="conditional_artworkdiffuse_override" value="[Skin.HasTheme(Roundedge) + !$EXP[HiddentagPanel] + !Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]" />
					</include>
				</control>
				<control type="group">
					<visible>Control.HasFocus($PARAM[id])</visible>
					<!-- <include>Animation_Item_Focus</include> -->
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_home_widgetitem_frame_fo]" />
						<param name="artwork" value="banner" />
						<param name="get_circle" value="false" />
						<param name="get_tags" value="false" />
						<param name="get_landscapelogo" value="false" />
						<param name="get_bannerlogo" value="true" />
						<param name="autoscroll" value="true" />
						<param name="bordersize_bg" value="4" />
						<param name="bottompanelcolor" value="$VAR[color_home_widgetitem_itemtag_bgpanel_fo]" />
						<param name="bottomtaglabelcolor" value="$VAR[color_home_widgetitem_itemtag_label1_fo]" />
						<param name="bottomtaglabel2color" value="$VAR[color_home_widgetitem_itemtag_label2_fo]" />
						<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + [$EXP[HiddentagPanel]  |  Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]]" />
						<param name="conditional_artworkdiffuse_override" value="[Skin.HasTheme(Roundedge) + !$EXP[HiddentagPanel] + !Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]" />
					</include>
					
					<include condition="!Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + [$EXP[HiddentagPanel]  |  Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]]" content="FocusOverlay">
						<param name="diffusedimtext" value="artworkdiffuse/banner.png" />
						<param name="forced_color" value="home" />
					</include>
					<include condition="[Skin.HasTheme(Roundedge) + !$EXP[HiddentagPanel] + !Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)]" content="FocusOverlay">
						<param name="diffusedimtext" value="artworkdiffuse/usebganel/banner.png" />
						<param name="forced_color" value="home" />
					</include>
				</control>
			</control>
		</focusedlayout>
		
		<itemlayout height="110" width="450" condition="Skin.HasSetting(userwidget$PARAM[nr]_IsSection)">
			<include content="WidgetHome_sectionslayout1">
				<param name="width" value="440" />
				<param name="bg_color" value="$VAR[color_home_widgetitem_frame_nf]" />
				<param name="font" value="debugtiny2" />
				<param name="text_color" value="$VAR[color_home_widgetitem_frame_nf]" />
				<param name="nr" value="$PARAM[nr]" />
			</include>
		</itemlayout>
		<focusedlayout height="110" width="450" condition="Skin.HasSetting(userwidget$PARAM[nr]_IsSection)">
			<include content="WidgetHome_sectionslayout1">
				<param name="width" value="440" />
				<param name="bg_color" value="$VAR[color_home_widgetitem_frame_fo]" />
				<param name="font" value="font20_title" />
				<param name="text_color" value="$VAR[color_home_widgetitem_frame_fo]" />
				<param name="nr" value="$PARAM[nr]" />
			</include>
		</focusedlayout>
	</include>
	
	
	<include name="Widget_Container_BottomInfo">
		<control type="grouplist" id="51$PARAM[id]">
			
			<animation type="conditional" condition="![Container(50$PARAM[id]).OnNext | Container(50$PARAM[id]).OnPrevious]" reversible="false">
				<effect type="zoom" start="80" end="100" center="50%,50%" delay="60" tween="back" time="250" />
				<effect type="fade" delay="60" end="100" time="250" />
			</animation>
			<animation type="conditional" condition="[Container(50$PARAM[id]).OnNext | Container(50$PARAM[id]).OnPrevious]" reversible="false">
				<effect type="zoom" start="100" end="80" center="50%,50%" easing="in" tween="back" time="250" />
				<effect type="fade" start="100" end="0" time="250" />
			</animation>
		
			<animation type="Visible" reversible="false">
				<effect type="fade" delay="160" end="100" time="240" />
			</animation>
			<animation type="Hidden" reversible="false">
				<effect type="fade" start="100" end="0" time="240" />
			</animation>
		
			<visible>Control.HasFocus(50$PARAM[id])</visible>
			<orientation>vertical</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<height>196</height>
			<itemgap>5</itemgap>
			<align>left</align>
			<posx>10</posx>
			<posy>70</posy>
			<control type="label">
				<width>auto</width>
				<label>$INFO[ListItem.Label,[B],[/B]]</label>
				<height>25</height>
				<aligny>center</aligny>
				<textcolor>$VAR[color_home_text_main]</textcolor>
				<font>WidgetHeading</font>
			</control>
		
			<control type="grouplist" id="71$PARAM[id]">
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<height>50</height>
				<itemgap>15</itemgap>
				
				<align>left</align>
				
				<include content="framedflag">
					<top>8</top>
					<param name="textcolor" value="$VAR[color_home_text_main]" />
					<param name="color" value="$VAR[color_home_text_main]" />
					<visible>!String.IsEmpty(ListItem.Genre)</visible>
					<width min="32">auto</width>
					<height>30</height>
					<font>font20_title</font>
					<label>$INFO[ListItem.Genre]</label>
				</include>
				
				<control type="label">
					<visible>!String.IsEmpty(ListItem.Year) | !String.IsEmpty(ListItem.Premiered)</visible>	
					<top>5</top>
					<height>35</height>
					<width>auto</width>
					<aligny>center</aligny>
					<font>font20_title</font>
					<label>$VAR[ListItemPremieredOrYear]</label>
					<textcolor>$VAR[color_home_text_main]</textcolor>
				</control>
				
				<include content="StarsRating_Image">
					<top>8</top>
					<param name="width" value="130" />
					<param name="height" value="30" />
					<param name="alignx" value="center" />
					<param name="colordiffuse" value="$VAR[color_home_text_main]" />
				</include>
				
				<include content="framedflag">
					<top>8</top>
					<param name="textcolor" value="$VAR[color_home_text_main]" />
					<param name="color" value="$VAR[color_home_text_main]" />
					<visible>!String.IsEmpty(ListItem.Mpaa)</visible>
					<width min="32">auto</width>
					<height>30</height>
					<font>font20_title</font>
					<label>$INFO[ListItem.Mpaa]</label>
				</include>
				<control type="label">
					<posy>5</posy>
					<width>auto</width>
					<label>$VAR[Meta_Top_Details]</label>
					<height>35</height>
					<aligny>center</aligny>
					<textcolor>$VAR[color_home_text_main]</textcolor>
					<font>font20_title</font>
				</control>
				
				<include content="circleframedflag">
					<param name="color" value="$VAR[color_home_text_main]" />
					<param name="id" value="611114" />
					<param name="label" value="$VAR[Simple_Resolution,[B],[/B]]" />
				</include>
				<include content="circleframedflag">
					<param name="color" value="$VAR[color_home_text_main]" />
					<param name="id" value="611115" />
					<param name="label" value="$VAR[Simple_AudioChannel,[B],[/B]]" />
				</include>
				<control type="image">
					<width>120</width>
					<aspectratio align="left" aligny="center">keep</aspectratio>
					<texture colordiffuse="$VAR[color_home_text_main]">$INFO[ListItem.AudioCodec,flags/flagsmedia/audio/,.png]</texture>
				</control>
				
			</control>
			<control type="textbox">
				<width>800</width>
				<label>$VAR[plot]</label>
				<height>120</height>
				<aligny>center</aligny>
				<textcolor>$VAR[color_home_text_secondary]</textcolor>
				<font>font20_title</font>
			</control>
		</control>
		
	</include>
	
	<!-- widget grouplist calls -->
	<include name="Home_Widgets">
		<control type="grouplist" id="5555">
		
			<animation effect="fade" start="100" end="0" time="250" condition="[Window.IsActive(shutdownmenu) + String.IsEqual(Skin.String(HomeLayout),Spotlight)]">conditional</animation>
				
			<include condition="String.IsEqual(Skin.String(HomeLayout),Spotlight)" content="Home_WidgetPositioning">
				<param name="height" value="430" />
				<param name="bottom" value="10" />
			</include>
			<include condition="String.IsEqual(Skin.String(HomeLayout),InfoPanelTop)" content="Home_WidgetPositioning">
				<param name="height" value="700" />
				<param name="bottom" value="10" />
			</include>
			<include condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)]" content="Home_WidgetPositioning" />
			
			<left>100</left>
			<right>0</right>
			<orientation>vertical</orientation>
			
			<usecontrolcoords>true</usecontrolcoords>
			<scrolltime tween="cubic" easing="in">300</scrolltime>
			<itemgap>-40</itemgap>
			
			<onup>5555</onup>
			<onback>SetProperty(ForceMenucontrolHomeActive,true,home)</onback>
			<onback>SetFocus(9000)</onback>
			
			<onfocus>ClearProperty(ForceMenucontrolHomeActive,home)</onfocus>
			<!-- gets ignored - <onback condition="Player.HasVideo">SetProperty(HomeHasForcedBack,true,home)</onback> -->
			<ondown>5555</ondown>
					
			<control type="group" id="5556">
				<description>1st row alignment correction</description>
				<height>-20</height>
			</control>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6001" />
				<param name="id" value="5001" />
				<param name="label" value="$INFO[Skin.String(userwidget1_name)]" />
				<visible>Control.IsVisible(5001)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget1_IsSection) + !Skin.HasSetting(userwidget1_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="1" />
				<param name="id" value="5001" />
				<param name="visible" value="Integer.IsGreater(Container(5001).NumItems,0) | Container(5001).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget1_IsSection) + Skin.HasSetting(userwidget1_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="1" />
				<param name="id" value="5001" />
				<param name="visible" value="Integer.IsGreater(Container(5001).NumItems,0) | Container(5001).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget1_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="1" />
				<param name="id" value="5001" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5001).NumItems,0) | Container(5001).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget1_bottominfo)">
				<param name="id" value="01" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6002" />
				<param name="id" value="5002" />
				<param name="label" value="$INFO[Skin.String(userwidget2_name)]" />
				<visible>Control.IsVisible(5002)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget2_IsSection) + !Skin.HasSetting(userwidget2_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="2" />
				<param name="id" value="5002" />
				<param name="visible" value="Integer.IsGreater(Container(5002).NumItems,0) | Container(5002).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget2_IsSection) + Skin.HasSetting(userwidget2_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="2" />
				<param name="id" value="5002" />
				<param name="visible" value="Integer.IsGreater(Container(5002).NumItems,0) | Container(5002).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget2_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="2" />
				<param name="id" value="5002" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5002).NumItems,0) | Container(5002).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget2_bottominfo)">
				<param name="id" value="02" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6003" />
				<param name="id" value="5003" />
				<param name="label" value="$INFO[Skin.String(userwidget3_name)]" />
				<visible>Control.IsVisible(5003)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget3_IsSection) + !Skin.HasSetting(userwidget3_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="3" />
				<param name="id" value="5003" />
				<param name="visible" value="Integer.IsGreater(Container(5003).NumItems,0) | Container(5003).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget3_IsSection) + Skin.HasSetting(userwidget3_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="3" />
				<param name="id" value="5003" />
				<param name="visible" value="Integer.IsGreater(Container(5003).NumItems,0) | Container(5003).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget3_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="3" />
				<param name="id" value="5003" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5003).NumItems,0) | Container(5003).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget3_bottominfo)">
				<param name="id" value="03" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6004" />
				<param name="id" value="5004" />
				<param name="label" value="$INFO[Skin.String(userwidget4_name)]" />
				<visible>Control.IsVisible(5004)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget4_IsSection) + !Skin.HasSetting(userwidget4_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="4" />
				<param name="id" value="5004" />
				<param name="visible" value="Integer.IsGreater(Container(5004).NumItems,0) | Container(5004).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget4_IsSection) + Skin.HasSetting(userwidget4_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="4" />
				<param name="id" value="5004" />
				<param name="visible" value="Integer.IsGreater(Container(5004).NumItems,0) | Container(5004).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget4_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="4" />
				<param name="id" value="5004" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5004).NumItems,0) | Container(5004).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget4_bottominfo)">
				<param name="id" value="04" />
			</include>
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6005" />
				<param name="id" value="5005" />
				<param name="label" value="$INFO[Skin.String(userwidget5_name)]" />
				<visible>Control.IsVisible(5005)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget5_IsSection) + !Skin.HasSetting(userwidget5_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="5" />
				<param name="id" value="5005" />
				<param name="visible" value="Integer.IsGreater(Container(5005).NumItems,0) | Container(5005).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget5_IsSection) + Skin.HasSetting(userwidget5_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="5" />
				<param name="id" value="5005" />
				<param name="visible" value="Integer.IsGreater(Container(5005).NumItems,0) | Container(5005).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget5_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="5" />
				<param name="id" value="5005" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5005).NumItems,0) | Container(5005).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget5_bottominfo)">
				<param name="id" value="05" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6006" />
				<param name="id" value="5006" />
				<param name="label" value="$INFO[Skin.String(userwidget6_name)]" />
				<visible>Control.IsVisible(5006)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget6_IsSection) + !Skin.HasSetting(userwidget6_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="6" />
				<param name="id" value="5006" />
				<param name="visible" value="Integer.IsGreater(Container(5006).NumItems,0) | Container(5006).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget6_IsSection) + Skin.HasSetting(userwidget6_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="6" />
				<param name="id" value="5006" />
				<param name="visible" value="Integer.IsGreater(Container(5006).NumItems,0) | Container(5006).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget6_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="6" />
				<param name="id" value="5006" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5006).NumItems,0) | Container(5006).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget6_bottominfo)">
				<param name="id" value="06" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6007" />
				<param name="id" value="5007" />
				<param name="label" value="$INFO[Skin.String(userwidget7_name)]" />
				<visible>Control.IsVisible(5007)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget7_IsSection) + !Skin.HasSetting(userwidget7_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="7" />
				<param name="id" value="5007" />
				<param name="visible" value="Integer.IsGreater(Container(5007).NumItems,0) | Container(5007).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget7_IsSection) + Skin.HasSetting(userwidget7_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="7" />
				<param name="id" value="5007" />
				<param name="visible" value="Integer.IsGreater(Container(5007).NumItems,0) | Container(5007).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget7_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="7" />
				<param name="id" value="5007" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5007).NumItems,0) | Container(5007).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget7_bottominfo)">
				<param name="id" value="07" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6008" />
				<param name="id" value="5008" />
				<param name="label" value="$INFO[Skin.String(userwidget8_name)]" />
				<visible>Control.IsVisible(5008)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget8_IsSection) + !Skin.HasSetting(userwidget8_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="8" />
				<param name="id" value="5008" />
				<param name="visible" value="Integer.IsGreater(Container(5008).NumItems,0) | Container(5008).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget8_IsSection) + Skin.HasSetting(userwidget8_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="8" />
				<param name="id" value="5008" />
				<param name="visible" value="Integer.IsGreater(Container(5008).NumItems,0) | Container(5008).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget8_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="8" />
				<param name="id" value="5008" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5008).NumItems,0) | Container(5008).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget8_bottominfo)">
				<param name="id" value="08" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6009" />
				<param name="id" value="5009" />
				<param name="label" value="$INFO[Skin.String(userwidget9_name)]" />
				<visible>Control.IsVisible(5009)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget9_IsSection) + !Skin.HasSetting(userwidget9_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="9" />
				<param name="id" value="5009" />
				<param name="visible" value="Integer.IsGreater(Container(5009).NumItems,0) | Container(5009).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget9_IsSection) + Skin.HasSetting(userwidget9_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="9" />
				<param name="id" value="5009" />
				<param name="visible" value="Integer.IsGreater(Container(5009).NumItems,0) | Container(5009).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget9_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="9" />
				<param name="id" value="5009" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5009).NumItems,0) | Container(5009).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget9_bottominfo)">
				<param name="id" value="09" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6010" />
				<param name="id" value="5010" />
				<param name="label" value="$INFO[Skin.String(userwidget10_name)]" />
				<visible>Control.IsVisible(5010)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget10_IsSection) + !Skin.HasSetting(userwidget10_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="10" />
				<param name="id" value="5010" />
				<param name="visible" value="Integer.IsGreater(Container(5010).NumItems,0) | Container(5010).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget10_IsSection) + Skin.HasSetting(userwidget10_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="10" />
				<param name="id" value="5010" />
				<param name="visible" value="Integer.IsGreater(Container(5010).NumItems,0) | Container(5010).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget10_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="10" />
				<param name="id" value="5010" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5010).NumItems,0) | Container(5010).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget10_bottominfo)">
				<param name="id" value="10" />
			</include>
	
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6011" />
				<param name="id" value="5011" />
				<param name="label" value="$INFO[Skin.String(userwidget11_name)]" />
				<visible>Control.IsVisible(5011)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget11_IsSection) + !Skin.HasSetting(userwidget11_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="11" />
				<param name="id" value="5011" />
				<param name="visible" value="Integer.IsGreater(Container(5011).NumItems,0) | Container(5011).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget11_IsSection) + Skin.HasSetting(userwidget11_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="11" />
				<param name="id" value="5011" />
				<param name="visible" value="Integer.IsGreater(Container(5011).NumItems,0) | Container(5011).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget11_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="11" />
				<param name="id" value="5011" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5011).NumItems,0) | Container(5011).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget11_bottominfo)">
				<param name="id" value="11" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6012" />
				<param name="id" value="5012" />
				<param name="label" value="$INFO[Skin.String(userwidget12_name)]" />
				<visible>Control.IsVisible(5012)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget12_IsSection) + !Skin.HasSetting(userwidget12_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="12" />
				<param name="id" value="5012" />
				<param name="visible" value="Integer.IsGreater(Container(5012).NumItems,0) | Container(5012).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget12_IsSection) + Skin.HasSetting(userwidget12_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="12" />
				<param name="id" value="5012" />
				<param name="visible" value="Integer.IsGreater(Container(5012).NumItems,0) | Container(5012).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget12_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="12" />
				<param name="id" value="5012" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5012).NumItems,0) | Container(5012).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget12_bottominfo)">
				<param name="id" value="12" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6013" />
				<param name="id" value="5013" />
				<param name="label" value="$INFO[Skin.String(userwidget13_name)]" />
				<visible>Control.IsVisible(5013)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget13_IsSection) + !Skin.HasSetting(userwidget13_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="13" />
				<param name="id" value="5013" />
				<param name="visible" value="Integer.IsGreater(Container(5013).NumItems,0) | Container(5013).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget13_IsSection) + Skin.HasSetting(userwidget13_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="13" />
				<param name="id" value="5013" />
				<param name="visible" value="Integer.IsGreater(Container(5013).NumItems,0) | Container(5013).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget13_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="13" />
				<param name="id" value="5013" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5013).NumItems,0) | Container(5013).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget13_bottominfo)">
				<param name="id" value="13" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6014" />
				<param name="id" value="5014" />
				<param name="label" value="$INFO[Skin.String(userwidget14_name)]" />
				<visible>Control.IsVisible(5014)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget14_IsSection) + !Skin.HasSetting(userwidget14_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="14" />
				<param name="id" value="5014" />
				<param name="visible" value="Integer.IsGreater(Container(5014).NumItems,0) | Container(5014).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget14_IsSection) + Skin.HasSetting(userwidget14_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="14" />
				<param name="id" value="5014" />
				<param name="visible" value="Integer.IsGreater(Container(5014).NumItems,0) | Container(5014).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget14_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="14" />
				<param name="id" value="5014" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5014).NumItems,0) | Container(5014).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget14_bottominfo)">
				<param name="id" value="14" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6015" />
				<param name="id" value="5015" />
				<param name="label" value="$INFO[Skin.String(userwidget15_name)]" />
				<visible>Control.IsVisible(5015)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget15_IsSection) + !Skin.HasSetting(userwidget15_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="15" />
				<param name="id" value="5015" />
				<param name="visible" value="Integer.IsGreater(Container(5015).NumItems,0) | Container(5015).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget15_IsSection) + Skin.HasSetting(userwidget15_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="15" />
				<param name="id" value="5015" />
				<param name="visible" value="Integer.IsGreater(Container(5015).NumItems,0) | Container(5015).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget15_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="15" />
				<param name="id" value="5015" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5015).NumItems,0) | Container(5015).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget15_bottominfo)">
				<param name="id" value="15" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6016" />
				<param name="id" value="5016" />
				<param name="label" value="$INFO[Skin.String(userwidget16_name)]" />
				<visible>Control.IsVisible(5016)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget16_IsSection) + !Skin.HasSetting(userwidget16_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="16" />
				<param name="id" value="5016" />
				<param name="visible" value="Integer.IsGreater(Container(5016).NumItems,0) | Container(5016).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget16_IsSection) + Skin.HasSetting(userwidget16_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="16" />
				<param name="id" value="5016" />
				<param name="visible" value="Integer.IsGreater(Container(5016).NumItems,0) | Container(5016).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget16_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="16" />
				<param name="id" value="5016" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5016).NumItems,0) | Container(5016).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget16_bottominfo)">
				<param name="id" value="16" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6017" />
				<param name="id" value="5017" />
				<param name="label" value="$INFO[Skin.String(userwidget17_name)]" />
				<visible>Control.IsVisible(5017)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget17_IsSection) + !Skin.HasSetting(userwidget17_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="17" />
				<param name="id" value="5017" />
				<param name="visible" value="Integer.IsGreater(Container(5017).NumItems,0) | Container(5017).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget17_IsSection) + Skin.HasSetting(userwidget17_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="17" />
				<param name="id" value="5017" />
				<param name="visible" value="Integer.IsGreater(Container(5017).NumItems,0) | Container(5017).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget17_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="17" />
				<param name="id" value="5017" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5017).NumItems,0) | Container(5017).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget17_bottominfo)">
				<param name="id" value="17" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6018" />
				<param name="id" value="5018" />
				<param name="label" value="$INFO[Skin.String(userwidget18_name)]" />
				<visible>Control.IsVisible(5018)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget18_IsSection) + !Skin.HasSetting(userwidget18_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="18" />
				<param name="id" value="5018" />
				<param name="visible" value="Integer.IsGreater(Container(5018).NumItems,0) | Container(5018).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget18_IsSection) + Skin.HasSetting(userwidget18_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="18" />
				<param name="id" value="5018" />
				<param name="visible" value="Integer.IsGreater(Container(5018).NumItems,0) | Container(5018).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget18_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="18" />
				<param name="id" value="5018" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5018).NumItems,0) | Container(5018).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget18_bottominfo)">
				<param name="id" value="18" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6019" />
				<param name="id" value="5019" />
				<param name="label" value="$INFO[Skin.String(userwidget19_name)]" />
				<visible>Control.IsVisible(5019)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget19_IsSection) + !Skin.HasSetting(userwidget19_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="19" />
				<param name="id" value="5019" />
				<param name="visible" value="Integer.IsGreater(Container(5019).NumItems,0) | Container(5019).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget19_IsSection) + Skin.HasSetting(userwidget19_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="19" />
				<param name="id" value="5019" />
				<param name="visible" value="Integer.IsGreater(Container(5019).NumItems,0) | Container(5019).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget19_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="19" />
				<param name="id" value="5019" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5019).NumItems,0) | Container(5019).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget19_bottominfo)">
				<param name="id" value="19" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6020" />
				<param name="id" value="5020" />
				<param name="label" value="$INFO[Skin.String(userwidget20_name)]" />
				<visible>Control.IsVisible(5020)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget20_IsSection) + !Skin.HasSetting(userwidget20_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="20" />
				<param name="id" value="5020" />
				<param name="visible" value="Integer.IsGreater(Container(5020).NumItems,0) | Container(5020).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget20_IsSection) + Skin.HasSetting(userwidget20_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="20" />
				<param name="id" value="5020" />
				<param name="visible" value="Integer.IsGreater(Container(5020).NumItems,0) | Container(5020).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget20_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="20" />
				<param name="id" value="5020" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5020).NumItems,0) | Container(5020).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget20_bottominfo)">
				<param name="id" value="20" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6021" />
				<param name="id" value="5021" />
				<param name="label" value="$INFO[Skin.String(userwidget21_name)]" />
				<visible>Control.IsVisible(5021)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget21_IsSection) + !Skin.HasSetting(userwidget21_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="21" />
				<param name="id" value="5021" />
				<param name="visible" value="Integer.IsGreater(Container(5021).NumItems,0) | Container(5021).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget21_IsSection) + Skin.HasSetting(userwidget21_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="21" />
				<param name="id" value="5021" />
				<param name="visible" value="Integer.IsGreater(Container(5021).NumItems,0) | Container(5021).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget21_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="21" />
				<param name="id" value="5021" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5021).NumItems,0) | Container(5021).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget21_bottominfo)">
				<param name="id" value="21" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6022" />
				<param name="id" value="5022" />
				<param name="label" value="$INFO[Skin.String(userwidget22_name)]" />
				<visible>Control.IsVisible(5022)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget22_IsSection) + !Skin.HasSetting(userwidget22_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="22" />
				<param name="id" value="5022" />
				<param name="visible" value="Integer.IsGreater(Container(5022).NumItems,0) | Container(5022).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget22_IsSection) + Skin.HasSetting(userwidget22_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="22" />
				<param name="id" value="5022" />
				<param name="visible" value="Integer.IsGreater(Container(5022).NumItems,0) | Container(5022).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget22_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="22" />
				<param name="id" value="5022" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5022).NumItems,0) | Container(5022).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget22_bottominfo)">
				<param name="id" value="22" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6023" />
				<param name="id" value="5023" />
				<param name="label" value="$INFO[Skin.String(userwidget23_name)]" />
				<visible>Control.IsVisible(5023)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget23_IsSection) + !Skin.HasSetting(userwidget23_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="23" />
				<param name="id" value="5023" />
				<param name="visible" value="Integer.IsGreater(Container(5023).NumItems,0) | Container(5023).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget23_IsSection) + Skin.HasSetting(userwidget23_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="23" />
				<param name="id" value="5023" />
				<param name="visible" value="Integer.IsGreater(Container(5023).NumItems,0) | Container(5023).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget23_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="23" />
				<param name="id" value="5023" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5023).NumItems,0) | Container(5023).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget23_bottominfo)">
				<param name="id" value="23" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6024" />
				<param name="id" value="5024" />
				<param name="label" value="$INFO[Skin.String(userwidget24_name)]" />
				<visible>Control.IsVisible(5024)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget24_IsSection) + !Skin.HasSetting(userwidget24_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="24" />
				<param name="id" value="5024" />
				<param name="visible" value="Integer.IsGreater(Container(5024).NumItems,0) | Container(5024).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget24_IsSection) + Skin.HasSetting(userwidget24_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="24" />
				<param name="id" value="5024" />
				<param name="visible" value="Integer.IsGreater(Container(5024).NumItems,0) | Container(5024).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget24_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="24" />
				<param name="id" value="5024" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5024).NumItems,0) | Container(5024).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget24_bottominfo)">
				<param name="id" value="24" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6025" />
				<param name="id" value="5025" />
				<param name="label" value="$INFO[Skin.String(userwidget25_name)]" />
				<visible>Control.IsVisible(5025)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget25_IsSection) + !Skin.HasSetting(userwidget25_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="25" />
				<param name="id" value="5025" />
				<param name="visible" value="Integer.IsGreater(Container(5025).NumItems,0) | Container(5025).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget25_IsSection) + Skin.HasSetting(userwidget25_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="25" />
				<param name="id" value="5025" />
				<param name="visible" value="Integer.IsGreater(Container(5025).NumItems,0) | Container(5005).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget25_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="25" />
				<param name="id" value="5025" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5025).NumItems,0) | Container(5025).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget25_bottominfo)">
				<param name="id" value="25" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6026" />
				<param name="id" value="5026" />
				<param name="label" value="$INFO[Skin.String(userwidget26_name)]" />
				<visible>Control.IsVisible(5026)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget26_IsSection) + !Skin.HasSetting(userwidget26_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="26" />
				<param name="id" value="5026" />
				<param name="visible" value="Integer.IsGreater(Container(5026).NumItems,0) | Container(5026).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget26_IsSection) + Skin.HasSetting(userwidget26_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="26" />
				<param name="id" value="5026" />
				<param name="visible" value="Integer.IsGreater(Container(5026).NumItems,0) | Container(5026).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget26_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="26" />
				<param name="id" value="5026" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5026).NumItems,0) | Container(5026).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget26_bottominfo)">
				<param name="id" value="26" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6027" />
				<param name="id" value="5027" />
				<param name="label" value="$INFO[Skin.String(userwidget27_name)]" />
				<visible>Control.IsVisible(5027)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget27_IsSection) + !Skin.HasSetting(userwidget27_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="27" />
				<param name="id" value="5027" />
				<param name="visible" value="Integer.IsGreater(Container(5027).NumItems,0) | Container(5027).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget27_IsSection) + Skin.HasSetting(userwidget27_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="27" />
				<param name="id" value="5027" />
				<param name="visible" value="Integer.IsGreater(Container(5027).NumItems,0) | Container(5027).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget27_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="27" />
				<param name="id" value="5027" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5027).NumItems,0) | Container(5027).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget27_bottominfo)">
				<param name="id" value="27" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6028" />
				<param name="id" value="5028" />
				<param name="label" value="$INFO[Skin.String(userwidget28_name)]" />
				<visible>Control.IsVisible(5028)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget28_IsSection) + !Skin.HasSetting(userwidget28_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="28" />
				<param name="id" value="5028" />
				<param name="visible" value="Integer.IsGreater(Container(5028).NumItems,0) | Container(5028).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget28_IsSection) + Skin.HasSetting(userwidget28_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="28" />
				<param name="id" value="5028" />
				<param name="visible" value="Integer.IsGreater(Container(5028).NumItems,0) | Container(5028).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget28_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="28" />
				<param name="id" value="5028" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5028).NumItems,0) | Container(5028).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget29_bottominfo)">
				<param name="id" value="28" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6029" />
				<param name="id" value="5029" />
				<param name="label" value="$INFO[Skin.String(userwidget29_name)]" />
				<visible>Control.IsVisible(5029)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget29_IsSection) + !Skin.HasSetting(userwidget29_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="29" />
				<param name="id" value="5029" />
				<param name="visible" value="Integer.IsGreater(Container(5029).NumItems,0) | Container(5029).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget29_IsSection) + Skin.HasSetting(userwidget29_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="29" />
				<param name="id" value="5029" />
				<param name="visible" value="Integer.IsGreater(Container(5029).NumItems,0) | Container(5029).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget29_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="29" />
				<param name="id" value="5029" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5029).NumItems,0) | Container(5029).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget29_bottominfo)">
				<param name="id" value="29" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6030" />
				<param name="id" value="5030" />
				<param name="label" value="$INFO[Skin.String(userwidget30_name)]" />
				<visible>Control.IsVisible(5030)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget30_IsSection) + !Skin.HasSetting(userwidget30_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="30" />
				<param name="id" value="5030" />
				<param name="visible" value="Integer.IsGreater(Container(5030).NumItems,0) | Container(5030).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget30_IsSection) + Skin.HasSetting(userwidget30_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="30" />
				<param name="id" value="5030" />
				<param name="visible" value="Integer.IsGreater(Container(5030).NumItems,0) | Container(5030).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget30_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="30" />
				<param name="id" value="5030" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5030).NumItems,0) | Container(5030).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget30_bottominfo)">
				<param name="id" value="30" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6031" />
				<param name="id" value="5031" />
				<param name="label" value="$INFO[Skin.String(userwidget31_name)]" />
				<visible>Control.IsVisible(5031)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget31_IsSection) + !Skin.HasSetting(userwidget31_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="31" />
				<param name="id" value="5031" />
				<param name="visible" value="Integer.IsGreater(Container(5031).NumItems,0) | Container(5031).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget31_IsSection) + Skin.HasSetting(userwidget31_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="31" />
				<param name="id" value="5031" />
				<param name="visible" value="Integer.IsGreater(Container(5031).NumItems,0) | Container(5031).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget31_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="31" />
				<param name="id" value="5031" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5031).NumItems,0) | Container(5031).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget31_bottominfo)">
				<param name="id" value="31" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6032" />
				<param name="id" value="5032" />
				<param name="label" value="$INFO[Skin.String(userwidget32_name)]" />
				<visible>Control.IsVisible(5032)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget32_IsSection) + !Skin.HasSetting(userwidget32_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="32" />
				<param name="id" value="5032" />
				<param name="visible" value="Integer.IsGreater(Container(5032).NumItems,0) | Container(5032).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget32_IsSection) + Skin.HasSetting(userwidget32_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="32" />
				<param name="id" value="5032" />
				<param name="visible" value="Integer.IsGreater(Container(5032).NumItems,0) | Container(5032).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget32_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="32" />
				<param name="id" value="5032" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5032).NumItems,0) | Container(5032).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget32_bottominfo)">
				<param name="id" value="32" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6033" />
				<param name="id" value="5033" />
				<param name="label" value="$INFO[Skin.String(userwidget33_name)]" />
				<visible>Control.IsVisible(5033)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget33_IsSection) + !Skin.HasSetting(userwidget33_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="33" />
				<param name="id" value="5033" />
				<param name="visible" value="Integer.IsGreater(Container(5033).NumItems,0) | Container(5033).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget33_IsSection) + Skin.HasSetting(userwidget33_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="33" />
				<param name="id" value="5033" />
				<param name="visible" value="Integer.IsGreater(Container(5033).NumItems,0) | Container(5033).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget33_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="3" />
				<param name="id" value="5033" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5033).NumItems,0) | Container(5033).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget33_bottominfo)">
				<param name="id" value="33" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6034" />
				<param name="id" value="5034" />
				<param name="label" value="$INFO[Skin.String(userwidget34_name)]" />
				<visible>Control.IsVisible(5034)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget34_IsSection) + !Skin.HasSetting(userwidget34_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="34" />
				<param name="id" value="5034" />
				<param name="visible" value="Integer.IsGreater(Container(5034).NumItems,0) | Container(5034).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget34_IsSection) + Skin.HasSetting(userwidget34_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="34" />
				<param name="id" value="5034" />
				<param name="visible" value="Integer.IsGreater(Container(5034).NumItems,0) | Container(5034).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget34_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="34" />
				<param name="id" value="5034" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5034).NumItems,0) | Container(5034).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget34_bottominfo)">
				<param name="id" value="34" />
			</include>
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6035" />
				<param name="id" value="5035" />
				<param name="label" value="$INFO[Skin.String(userwidget35_name)]" />
				<visible>Control.IsVisible(5035)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget35_IsSection) + !Skin.HasSetting(userwidget35_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="35" />
				<param name="id" value="5035" />
				<param name="visible" value="Integer.IsGreater(Container(5035).NumItems,0) | Container(5035).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget35_IsSection) + Skin.HasSetting(userwidget35_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="35" />
				<param name="id" value="5035" />
				<param name="visible" value="Integer.IsGreater(Container(5035).NumItems,0) | Container(5035).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget35_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="35" />
				<param name="id" value="5035" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5035).NumItems,0) | Container(5035).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget35_bottominfo)">
				<param name="id" value="35" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6036" />
				<param name="id" value="5036" />
				<param name="label" value="$INFO[Skin.String(userwidget36_name)]" />
				<visible>Control.IsVisible(5036)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget36_IsSection) + !Skin.HasSetting(userwidget36_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="36" />
				<param name="id" value="5036" />
				<param name="visible" value="Integer.IsGreater(Container(5036).NumItems,0) | Container(5036).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget36_IsSection) + Skin.HasSetting(userwidget36_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="36" />
				<param name="id" value="5036" />
				<param name="visible" value="Integer.IsGreater(Container(5036).NumItems,0) | Container(5036).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget36_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="36" />
				<param name="id" value="5036" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5036).NumItems,0) | Container(5036).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget36_bottominfo)">
				<param name="id" value="36" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6037" />
				<param name="id" value="5037" />
				<param name="label" value="$INFO[Skin.String(userwidget37_name)]" />
				<visible>Control.IsVisible(5037)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget37_IsSection) + !Skin.HasSetting(userwidget37_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="7" />
				<param name="id" value="5037" />
				<param name="visible" value="Integer.IsGreater(Container(5037).NumItems,0) | Container(5037).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget37_IsSection) + Skin.HasSetting(userwidget37_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="37" />
				<param name="id" value="5037" />
				<param name="visible" value="Integer.IsGreater(Container(5037).NumItems,0) | Container(5037).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget37_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="37" />
				<param name="id" value="5037" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5037).NumItems,0) | Container(5037).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget37_bottominfo)">
				<param name="id" value="37" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6038" />
				<param name="id" value="5038" />
				<param name="label" value="$INFO[Skin.String(userwidget38_name)]" />
				<visible>Control.IsVisible(5038)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget38_IsSection) + !Skin.HasSetting(userwidget38_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="38" />
				<param name="id" value="5038" />
				<param name="visible" value="Integer.IsGreater(Container(5038).NumItems,0) | Container(5038).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget38_IsSection) + Skin.HasSetting(userwidget38_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="38" />
				<param name="id" value="5038" />
				<param name="visible" value="Integer.IsGreater(Container(5038).NumItems,0) | Container(5038).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget38_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="38" />
				<param name="id" value="5038" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5038).NumItems,0) | Container(5038).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget38_bottominfo)">
				<param name="id" value="38" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6039" />
				<param name="id" value="5039" />
				<param name="label" value="$INFO[Skin.String(userwidget39_name)]" />
				<visible>Control.IsVisible(5039)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget39_IsSection) + !Skin.HasSetting(userwidget39_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="39" />
				<param name="id" value="5039" />
				<param name="visible" value="Integer.IsGreater(Container(5039).NumItems,0) | Container(5039).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget39_IsSection) + Skin.HasSetting(userwidget39_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="39" />
				<param name="id" value="5039" />
				<param name="visible" value="Integer.IsGreater(Container(5039).NumItems,0) | Container(5039).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget39_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="39" />
				<param name="id" value="5039" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5039).NumItems,0) | Container(5039).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget39_bottominfo)">
				<param name="id" value="39" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6040" />
				<param name="id" value="5040" />
				<param name="label" value="$INFO[Skin.String(userwidget40_name)]" />
				<visible>Control.IsVisible(5040)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget40_IsSection) + !Skin.HasSetting(userwidget40_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="40" />
				<param name="id" value="5040" />
				<param name="visible" value="Integer.IsGreater(Container(5040).NumItems,0) | Container(5040).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget40_IsSection) + Skin.HasSetting(userwidget40_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="40" />
				<param name="id" value="5040" />
				<param name="visible" value="Integer.IsGreater(Container(5040).NumItems,0) | Container(5040).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget40_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="40" />
				<param name="id" value="5040" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5040).NumItems,0) | Container(5040).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget40_bottominfo)">
				<param name="id" value="40" />
			</include>
	
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6041" />
				<param name="id" value="5041" />
				<param name="label" value="$INFO[Skin.String(userwidget41_name)]" />
				<visible>Control.IsVisible(5041)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget41_IsSection) + !Skin.HasSetting(userwidget41_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="41" />
				<param name="id" value="5041" />
				<param name="visible" value="Integer.IsGreater(Container(5041).NumItems,0) | Container(5041).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget41_IsSection) + Skin.HasSetting(userwidget41_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="41" />
				<param name="id" value="5041" />
				<param name="visible" value="Integer.IsGreater(Container(5041).NumItems,0) | Container(5041).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget41_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="41" />
				<param name="id" value="5041" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5041).NumItems,0) | Container(5041).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget41_bottominfo)">
				<param name="id" value="41" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6042" />
				<param name="id" value="5042" />
				<param name="label" value="$INFO[Skin.String(userwidget42_name)]" />
				<visible>Control.IsVisible(5042)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget42_IsSection) + !Skin.HasSetting(userwidget42_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="42" />
				<param name="id" value="5042" />
				<param name="visible" value="Integer.IsGreater(Container(5042).NumItems,0) | Container(5042).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget42_IsSection) + Skin.HasSetting(userwidget42_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="42" />
				<param name="id" value="5042" />
				<param name="visible" value="Integer.IsGreater(Container(5042).NumItems,0) | Container(5042).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget42_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="42" />
				<param name="id" value="5042" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5042).NumItems,0) | Container(5042).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget42_bottominfo)">
				<param name="id" value="42" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6043" />
				<param name="id" value="5043" />
				<param name="label" value="$INFO[Skin.String(userwidget43_name)]" />
				<visible>Control.IsVisible(5043)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget43_IsSection) + !Skin.HasSetting(userwidget43_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="43" />
				<param name="id" value="5043" />
				<param name="visible" value="Integer.IsGreater(Container(5043).NumItems,0) | Container(5043).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget43_IsSection) + Skin.HasSetting(userwidget43_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="43" />
				<param name="id" value="5043" />
				<param name="visible" value="Integer.IsGreater(Container(5043).NumItems,0) | Container(5043).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget43_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="43" />
				<param name="id" value="5043" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5043).NumItems,0) | Container(5043).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget43_bottominfo)">
				<param name="id" value="43" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6044" />
				<param name="id" value="5044" />
				<param name="label" value="$INFO[Skin.String(userwidget44_name)]" />
				<visible>Control.IsVisible(5044)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget44_IsSection) + !Skin.HasSetting(userwidget44_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="44" />
				<param name="id" value="5044" />
				<param name="visible" value="Integer.IsGreater(Container(5044).NumItems,0) | Container(5044).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget44_IsSection) + Skin.HasSetting(userwidget44_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="44" />
				<param name="id" value="5044" />
				<param name="visible" value="Integer.IsGreater(Container(5044).NumItems,0) | Container(5044).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget44_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="44" />
				<param name="id" value="5044" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5044).NumItems,0) | Container(5044).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget44_bottominfo)">
				<param name="id" value="44" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6045" />
				<param name="id" value="5045" />
				<param name="label" value="$INFO[Skin.String(userwidget45_name)]" />
				<visible>Control.IsVisible(5045)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget45_IsSection) + !Skin.HasSetting(userwidget45_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="45" />
				<param name="id" value="5045" />
				<param name="visible" value="Integer.IsGreater(Container(5045).NumItems,0) | Container(5045).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget45_IsSection) + Skin.HasSetting(userwidget45_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="45" />
				<param name="id" value="5045" />
				<param name="visible" value="Integer.IsGreater(Container(5045).NumItems,0) | Container(5045).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget45_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="45" />
				<param name="id" value="5045" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5045).NumItems,0) | Container(5045).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget45_bottominfo)">
				<param name="id" value="45" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6046" />
				<param name="id" value="5046" />
				<param name="label" value="$INFO[Skin.String(userwidget46_name)]" />
				<visible>Control.IsVisible(5046)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget46_IsSection) + !Skin.HasSetting(userwidget46_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="46" />
				<param name="id" value="5046" />
				<param name="visible" value="Integer.IsGreater(Container(5046).NumItems,0) | Container(5046).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget46_IsSection) + Skin.HasSetting(userwidget46_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="46" />
				<param name="id" value="5046" />
				<param name="visible" value="Integer.IsGreater(Container(5046).NumItems,0) | Container(5046).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget46_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="46" />
				<param name="id" value="5046" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5046).NumItems,0) | Container(5046).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget46_bottominfo)">
				<param name="id" value="46" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6047" />
				<param name="id" value="5047" />
				<param name="label" value="$INFO[Skin.String(userwidget47_name)]" />
				<visible>Control.IsVisible(5047)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget47_IsSection) + !Skin.HasSetting(userwidget47_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="47" />
				<param name="id" value="5047" />
				<param name="visible" value="Integer.IsGreater(Container(5047).NumItems,0) | Container(5047).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget47_IsSection) + Skin.HasSetting(userwidget47_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="47" />
				<param name="id" value="5047" />
				<param name="visible" value="Integer.IsGreater(Container(5047).NumItems,0) | Container(5047).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget47_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="47" />
				<param name="id" value="5047" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5047).NumItems,0) | Container(5047).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget47_bottominfo)">
				<param name="id" value="47" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6048" />
				<param name="id" value="5048" />
				<param name="label" value="$INFO[Skin.String(userwidget48_name)]" />
				<visible>Control.IsVisible(5048)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget48_IsSection) + !Skin.HasSetting(userwidget48_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="48" />
				<param name="id" value="5048" />
				<param name="visible" value="Integer.IsGreater(Container(5048).NumItems,0) | Container(5048).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget48_IsSection) + Skin.HasSetting(userwidget48_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="48" />
				<param name="id" value="5048" />
				<param name="visible" value="Integer.IsGreater(Container(5048).NumItems,0) | Container(5048).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget48_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="48" />
				<param name="id" value="5048" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5048).NumItems,0) | Container(5048).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget48_bottominfo)">
				<param name="id" value="48" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6049" />
				<param name="id" value="5049" />
				<param name="label" value="$INFO[Skin.String(userwidget49_name)]" />
				<visible>Control.IsVisible(5049)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget49_IsSection) + !Skin.HasSetting(userwidget49_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="49" />
				<param name="id" value="5049" />
				<param name="visible" value="Integer.IsGreater(Container(5049).NumItems,0) | Container(5049).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget49_IsSection) + Skin.HasSetting(userwidget49_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="49" />
				<param name="id" value="5049" />
				<param name="visible" value="Integer.IsGreater(Container(5049).NumItems,0) | Container(5049).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget49_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="49" />
				<param name="id" value="5049" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5049).NumItems,0) | Container(5049).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget49_bottominfo)">
				<param name="id" value="49" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6050" />
				<param name="id" value="5050" />
				<param name="label" value="$INFO[Skin.String(userwidget50_name)]" />
				<visible>Control.IsVisible(5050)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget50_IsSection) + !Skin.HasSetting(userwidget50_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="50" />
				<param name="id" value="5050" />
				<param name="visible" value="Integer.IsGreater(Container(5050).NumItems,0) | Container(5050).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget50_IsSection) + Skin.HasSetting(userwidget50_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="50" />
				<param name="id" value="5050" />
				<param name="visible" value="Integer.IsGreater(Container(5050).NumItems,0) | Container(5050).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget50_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="50" />
				<param name="id" value="5050" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5050).NumItems,0) | Container(5050).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget50_bottominfo)">
				<param name="id" value="50" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6051" />
				<param name="id" value="5051" />
				<param name="label" value="$INFO[Skin.String(userwidget51_name)]" />
				<visible>Control.IsVisible(5051)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget51_IsSection) + !Skin.HasSetting(userwidget51_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="51" />
				<param name="id" value="5051" />
				<param name="visible" value="Integer.IsGreater(Container(5051).NumItems,0) | Container(5051).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget51_IsSection) + Skin.HasSetting(userwidget51_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="51" />
				<param name="id" value="5051" />
				<param name="visible" value="Integer.IsGreater(Container(5051).NumItems,0) | Container(5051).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget51_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="51" />
				<param name="id" value="5051" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5051).NumItems,0) | Container(5051).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget51_bottominfo)">
				<param name="id" value="51" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6052" />
				<param name="id" value="5052" />
				<param name="label" value="$INFO[Skin.String(userwidget52_name)]" />
				<visible>Control.IsVisible(5052)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget52_IsSection) + !Skin.HasSetting(userwidget52_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="52" />
				<param name="id" value="5052" />
				<param name="visible" value="Integer.IsGreater(Container(5052).NumItems,0) | Container(5052).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget52_IsSection) + Skin.HasSetting(userwidget52_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="52" />
				<param name="id" value="5052" />
				<param name="visible" value="Integer.IsGreater(Container(5052).NumItems,0) | Container(5052).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget52_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="52" />
				<param name="id" value="5052" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5052).NumItems,0) | Container(5052).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget52_bottominfo)">
				<param name="id" value="52" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6053" />
				<param name="id" value="5053" />
				<param name="label" value="$INFO[Skin.String(userwidget53_name)]" />
				<visible>Control.IsVisible(5053)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget53_IsSection) + !Skin.HasSetting(userwidget53_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="53" />
				<param name="id" value="5053" />
				<param name="visible" value="Integer.IsGreater(Container(5053).NumItems,0) | Container(5053).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget53_IsSection) + Skin.HasSetting(userwidget53_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="53" />
				<param name="id" value="5053" />
				<param name="visible" value="Integer.IsGreater(Container(5053).NumItems,0) | Container(5053).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget53_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="53" />
				<param name="id" value="5053" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5053).NumItems,0) | Container(5053).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget53_bottominfo)">
				<param name="id" value="53" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6054" />
				<param name="id" value="5054" />
				<param name="label" value="$INFO[Skin.String(userwidget54_name)]" />
				<visible>Control.IsVisible(5054)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget54_IsSection) + !Skin.HasSetting(userwidget54_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="54" />
				<param name="id" value="5054" />
				<param name="visible" value="Integer.IsGreater(Container(5054).NumItems,0) | Container(5054).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget54_IsSection) + Skin.HasSetting(userwidget54_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="54" />
				<param name="id" value="5054" />
				<param name="visible" value="Integer.IsGreater(Container(5054).NumItems,0) | Container(5054).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget54_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="54" />
				<param name="id" value="5054" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5054).NumItems,0) | Container(5054).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget54_bottominfo)">
				<param name="id" value="54" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6055" />
				<param name="id" value="5055" />
				<param name="label" value="$INFO[Skin.String(userwidget55_name)]" />
				<visible>Control.IsVisible(5055)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget55_IsSection) + !Skin.HasSetting(userwidget55_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="55" />
				<param name="id" value="5055" />
				<param name="visible" value="Integer.IsGreater(Container(5055).NumItems,0) | Container(5055).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget55_IsSection) + Skin.HasSetting(userwidget55_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="55" />
				<param name="id" value="5055" />
				<param name="visible" value="Integer.IsGreater(Container(5055).NumItems,0) | Container(5035).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget55_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="55" />
				<param name="id" value="5055" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5055).NumItems,0) | Container(5055).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget55_bottominfo)">
				<param name="id" value="55" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6056" />
				<param name="id" value="5056" />
				<param name="label" value="$INFO[Skin.String(userwidget56_name)]" />
				<visible>Control.IsVisible(5056)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget56_IsSection) + !Skin.HasSetting(userwidget56_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="56" />
				<param name="id" value="5056" />
				<param name="visible" value="Integer.IsGreater(Container(5056).NumItems,0) | Container(5056).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget56_IsSection) + Skin.HasSetting(userwidget56_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="56" />
				<param name="id" value="5056" />
				<param name="visible" value="Integer.IsGreater(Container(5056).NumItems,0) | Container(5056).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget56_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="56" />
				<param name="id" value="5056" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5056).NumItems,0) | Container(5056).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget56_bottominfo)">
				<param name="id" value="56" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6057" />
				<param name="id" value="5057" />
				<param name="label" value="$INFO[Skin.String(userwidget57_name)]" />
				<visible>Control.IsVisible(5057)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget57_IsSection) + !Skin.HasSetting(userwidget57_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="57" />
				<param name="id" value="5057" />
				<param name="visible" value="Integer.IsGreater(Container(5057).NumItems,0) | Container(5057).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget57_IsSection) + Skin.HasSetting(userwidget57_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="57" />
				<param name="id" value="5057" />
				<param name="visible" value="Integer.IsGreater(Container(5057).NumItems,0) | Container(5057).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget57_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="57" />
				<param name="id" value="5057" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5057).NumItems,0) | Container(5057).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget57_bottominfo)">
				<param name="id" value="57" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6058" />
				<param name="id" value="5058" />
				<param name="label" value="$INFO[Skin.String(userwidget58_name)]" />
				<visible>Control.IsVisible(5058)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget58_IsSection) + !Skin.HasSetting(userwidget58_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="58" />
				<param name="id" value="5058" />
				<param name="visible" value="Integer.IsGreater(Container(5058).NumItems,0) | Container(5058).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget58_IsSection) + Skin.HasSetting(userwidget58_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="58" />
				<param name="id" value="5058" />
				<param name="visible" value="Integer.IsGreater(Container(5058).NumItems,0) | Container(5058).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget58_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="58" />
				<param name="id" value="5058" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5058).NumItems,0) | Container(5058).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget59_bottominfo)">
				<param name="id" value="58" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6059" />
				<param name="id" value="5059" />
				<param name="label" value="$INFO[Skin.String(userwidget59_name)]" />
				<visible>Control.IsVisible(5059)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget59_IsSection) + !Skin.HasSetting(userwidget59_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="59" />
				<param name="id" value="5059" />
				<param name="visible" value="Integer.IsGreater(Container(5059).NumItems,0) | Container(5059).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget59_IsSection) + Skin.HasSetting(userwidget59_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="59" />
				<param name="id" value="5059" />
				<param name="visible" value="Integer.IsGreater(Container(5059).NumItems,0) | Container(5059).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget59_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="59" />
				<param name="id" value="5059" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5059).NumItems,0) | Container(5059).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget59_bottominfo)">
				<param name="id" value="59" />
			</include>
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6060" />
				<param name="id" value="5060" />
				<param name="label" value="$INFO[Skin.String(userwidget60_name)]" />
				<visible>Control.IsVisible(5060)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget60_IsSection) + !Skin.HasSetting(userwidget60_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="60" />
				<param name="id" value="5060" />
				<param name="visible" value="Integer.IsGreater(Container(5060).NumItems,0) | Container(5060).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget60_IsSection) + Skin.HasSetting(userwidget60_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="60" />
				<param name="id" value="5060" />
				<param name="visible" value="Integer.IsGreater(Container(5060).NumItems,0) | Container(5060).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget60_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="60" />
				<param name="id" value="5060" />
				<param name="height" value="100" />
				<param name="visible" value="Integer.IsGreater(Container(5060).NumItems,0) | Container(5060).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget60_bottominfo)">
				<param name="id" value="60" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6061" />
				<param name="id" value="5061" />
				<param name="label" value="$INFO[Skin.String(userwidget61_name)]" />
				<visible>Control.IsVisible(5061)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget61_IsSection) + !Skin.HasSetting(userwidget61_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="61" />
				<param name="id" value="5061" />
				<param name="visible" value="Integer.IsGreater(Container(5061).NumItems,0) | Container(5061).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget61_IsSection) + Skin.HasSetting(userwidget61_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="61" />
				<param name="id" value="5061" />
				<param name="visible" value="Integer.IsGreater(Container(5061).NumItems,0) | Container(5061).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget61_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="61" />
				<param name="id" value="5061" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5061).NumItems,0) | Container(5061).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget61_bottominfo)">
				<param name="id" value="61" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6062" />
				<param name="id" value="5062" />
				<param name="label" value="$INFO[Skin.String(userwidget62_name)]" />
				<visible>Control.IsVisible(5062)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget62_IsSection) + !Skin.HasSetting(userwidget62_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="62" />
				<param name="id" value="5062" />
				<param name="visible" value="Integer.IsGreater(Container(5062).NumItems,0) | Container(5062).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget62_IsSection) + Skin.HasSetting(userwidget62_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="62" />
				<param name="id" value="5062" />
				<param name="visible" value="Integer.IsGreater(Container(5062).NumItems,0) | Container(5062).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget62_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="62" />
				<param name="id" value="5062" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5062).NumItems,0) | Container(5062).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget62_bottominfo)">
				<param name="id" value="62" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6063" />
				<param name="id" value="5063" />
				<param name="label" value="$INFO[Skin.String(userwidget63_name)]" />
				<visible>Control.IsVisible(5063)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget63_IsSection) + !Skin.HasSetting(userwidget63_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="63" />
				<param name="id" value="5063" />
				<param name="visible" value="Integer.IsGreater(Container(5063).NumItems,0) | Container(5063).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget63_IsSection) + Skin.HasSetting(userwidget63_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="63" />
				<param name="id" value="5063" />
				<param name="visible" value="Integer.IsGreater(Container(5063).NumItems,0) | Container(5063).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget63_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="6" />
				<param name="id" value="5063" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5063).NumItems,0) | Container(5063).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget63_bottominfo)">
				<param name="id" value="63" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6064" />
				<param name="id" value="5064" />
				<param name="label" value="$INFO[Skin.String(userwidget64_name)]" />
				<visible>Control.IsVisible(5064)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget64_IsSection) + !Skin.HasSetting(userwidget64_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="64" />
				<param name="id" value="5064" />
				<param name="visible" value="Integer.IsGreater(Container(5064).NumItems,0) | Container(5064).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget64_IsSection) + Skin.HasSetting(userwidget64_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="64" />
				<param name="id" value="5064" />
				<param name="visible" value="Integer.IsGreater(Container(5064).NumItems,0) | Container(5064).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget64_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="64" />
				<param name="id" value="5064" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5064).NumItems,0) | Container(5064).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget64_bottominfo)">
				<param name="id" value="64" />
			</include>
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6065" />
				<param name="id" value="5065" />
				<param name="label" value="$INFO[Skin.String(userwidget65_name)]" />
				<visible>Control.IsVisible(5065)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget65_IsSection) + !Skin.HasSetting(userwidget65_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="65" />
				<param name="id" value="5065" />
				<param name="visible" value="Integer.IsGreater(Container(5065).NumItems,0) | Container(5065).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget65_IsSection) + Skin.HasSetting(userwidget65_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="65" />
				<param name="id" value="5065" />
				<param name="visible" value="Integer.IsGreater(Container(5065).NumItems,0) | Container(5065).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget65_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="65" />
				<param name="id" value="5065" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5065).NumItems,0) | Container(5065).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget65_bottominfo)">
				<param name="id" value="65" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6066" />
				<param name="id" value="5066" />
				<param name="label" value="$INFO[Skin.String(userwidget66_name)]" />
				<visible>Control.IsVisible(5066)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget66_IsSection) + !Skin.HasSetting(userwidget66_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="66" />
				<param name="id" value="5066" />
				<param name="visible" value="Integer.IsGreater(Container(5066).NumItems,0) | Container(5066).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget66_IsSection) + Skin.HasSetting(userwidget66_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="66" />
				<param name="id" value="5066" />
				<param name="visible" value="Integer.IsGreater(Container(5066).NumItems,0) | Container(5066).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget66_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="66" />
				<param name="id" value="5066" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5066).NumItems,0) | Container(5066).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget66_bottominfo)">
				<param name="id" value="66" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6067" />
				<param name="id" value="5067" />
				<param name="label" value="$INFO[Skin.String(userwidget67_name)]" />
				<visible>Control.IsVisible(5067)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget67_IsSection) + !Skin.HasSetting(userwidget67_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="7" />
				<param name="id" value="5067" />
				<param name="visible" value="Integer.IsGreater(Container(5067).NumItems,0) | Container(5067).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget67_IsSection) + Skin.HasSetting(userwidget67_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="67" />
				<param name="id" value="5067" />
				<param name="visible" value="Integer.IsGreater(Container(5067).NumItems,0) | Container(5067).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget67_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="67" />
				<param name="id" value="5067" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5067).NumItems,0) | Container(5067).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget67_bottominfo)">
				<param name="id" value="67" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6068" />
				<param name="id" value="5068" />
				<param name="label" value="$INFO[Skin.String(userwidget68_name)]" />
				<visible>Control.IsVisible(5068)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget68_IsSection) + !Skin.HasSetting(userwidget68_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="68" />
				<param name="id" value="5068" />
				<param name="visible" value="Integer.IsGreater(Container(5068).NumItems,0) | Container(5068).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget68_IsSection) + Skin.HasSetting(userwidget68_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="68" />
				<param name="id" value="5068" />
				<param name="visible" value="Integer.IsGreater(Container(5068).NumItems,0) | Container(5068).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget68_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="68" />
				<param name="id" value="5068" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5068).NumItems,0) | Container(5068).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget68_bottominfo)">
				<param name="id" value="68" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6069" />
				<param name="id" value="5069" />
				<param name="label" value="$INFO[Skin.String(userwidget69_name)]" />
				<visible>Control.IsVisible(5069)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget69_IsSection) + !Skin.HasSetting(userwidget69_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="69" />
				<param name="id" value="5069" />
				<param name="visible" value="Integer.IsGreater(Container(5069).NumItems,0) | Container(5069).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget69_IsSection) + Skin.HasSetting(userwidget69_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="69" />
				<param name="id" value="5069" />
				<param name="visible" value="Integer.IsGreater(Container(5069).NumItems,0) | Container(5069).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget69_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="69" />
				<param name="id" value="5069" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5069).NumItems,0) | Container(5069).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget69_bottominfo)">
				<param name="id" value="69" />
			</include>
			
						
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6070" />
				<param name="id" value="5070" />
				<param name="label" value="$INFO[Skin.String(userwidget70_name)]" />
				<visible>Control.IsVisible(5070)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget70_IsSection) + !Skin.HasSetting(userwidget70_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="70" />
				<param name="id" value="5070" />
				<param name="visible" value="Integer.IsGreater(Container(5070).NumItems,0) | Container(5070).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget70_IsSection) + Skin.HasSetting(userwidget70_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="70" />
				<param name="id" value="5070" />
				<param name="visible" value="Integer.IsGreater(Container(5070).NumItems,0) | Container(5070).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget70_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="70" />
				<param name="id" value="5070" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5070).NumItems,0) | Container(5070).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget70_bottominfo)">
				<param name="id" value="70" />
			</include>
	
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6071" />
				<param name="id" value="5071" />
				<param name="label" value="$INFO[Skin.String(userwidget71_name)]" />
				<visible>Control.IsVisible(5071)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget71_IsSection) + !Skin.HasSetting(userwidget71_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="71" />
				<param name="id" value="5071" />
				<param name="visible" value="Integer.IsGreater(Container(5071).NumItems,0) | Container(5071).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget71_IsSection) + Skin.HasSetting(userwidget71_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="71" />
				<param name="id" value="5071" />
				<param name="visible" value="Integer.IsGreater(Container(5071).NumItems,0) | Container(5071).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget71_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="71" />
				<param name="id" value="5071" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5071).NumItems,0) | Container(5071).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget71_bottominfo)">
				<param name="id" value="71" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6072" />
				<param name="id" value="5072" />
				<param name="label" value="$INFO[Skin.String(userwidget72_name)]" />
				<visible>Control.IsVisible(5072)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget72_IsSection) + !Skin.HasSetting(userwidget72_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="72" />
				<param name="id" value="5072" />
				<param name="visible" value="Integer.IsGreater(Container(5072).NumItems,0) | Container(5072).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget72_IsSection) + Skin.HasSetting(userwidget72_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="72" />
				<param name="id" value="5072" />
				<param name="visible" value="Integer.IsGreater(Container(5072).NumItems,0) | Container(5072).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget72_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="72" />
				<param name="id" value="5072" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5072).NumItems,0) | Container(5072).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget72_bottominfo)">
				<param name="id" value="72" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6073" />
				<param name="id" value="5073" />
				<param name="label" value="$INFO[Skin.String(userwidget73_name)]" />
				<visible>Control.IsVisible(5073)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget73_IsSection) + !Skin.HasSetting(userwidget73_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="73" />
				<param name="id" value="5073" />
				<param name="visible" value="Integer.IsGreater(Container(5073).NumItems,0) | Container(5073).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget73_IsSection) + Skin.HasSetting(userwidget73_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="73" />
				<param name="id" value="5073" />
				<param name="visible" value="Integer.IsGreater(Container(5073).NumItems,0) | Container(5073).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget73_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="73" />
				<param name="id" value="5073" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5073).NumItems,0) | Container(5073).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget73_bottominfo)">
				<param name="id" value="73" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6074" />
				<param name="id" value="5074" />
				<param name="label" value="$INFO[Skin.String(userwidget74_name)]" />
				<visible>Control.IsVisible(5074)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget74_IsSection) + !Skin.HasSetting(userwidget74_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="74" />
				<param name="id" value="5074" />
				<param name="visible" value="Integer.IsGreater(Container(5074).NumItems,0) | Container(5074).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget74_IsSection) + Skin.HasSetting(userwidget74_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="74" />
				<param name="id" value="5074" />
				<param name="visible" value="Integer.IsGreater(Container(5074).NumItems,0) | Container(5074).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget74_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="74" />
				<param name="id" value="5074" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5074).NumItems,0) | Container(5074).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget74_bottominfo)">
				<param name="id" value="74" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6075" />
				<param name="id" value="5075" />
				<param name="label" value="$INFO[Skin.String(userwidget75_name)]" />
				<visible>Control.IsVisible(5075)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget75_IsSection) + !Skin.HasSetting(userwidget75_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="75" />
				<param name="id" value="5075" />
				<param name="visible" value="Integer.IsGreater(Container(5075).NumItems,0) | Container(5075).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget75_IsSection) + Skin.HasSetting(userwidget75_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="75" />
				<param name="id" value="5075" />
				<param name="visible" value="Integer.IsGreater(Container(5075).NumItems,0) | Container(5075).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget75_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="75" />
				<param name="id" value="5075" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5075).NumItems,0) | Container(5075).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget75_bottominfo)">
				<param name="id" value="75" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6076" />
				<param name="id" value="5076" />
				<param name="label" value="$INFO[Skin.String(userwidget76_name)]" />
				<visible>Control.IsVisible(5076)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget76_IsSection) + !Skin.HasSetting(userwidget76_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="76" />
				<param name="id" value="5076" />
				<param name="visible" value="Integer.IsGreater(Container(5076).NumItems,0) | Container(5076).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget76_IsSection) + Skin.HasSetting(userwidget76_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="76" />
				<param name="id" value="5076" />
				<param name="visible" value="Integer.IsGreater(Container(5076).NumItems,0) | Container(5076).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget76_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="76" />
				<param name="id" value="5076" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5076).NumItems,0) | Container(5076).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget76_bottominfo)">
				<param name="id" value="76" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6077" />
				<param name="id" value="5077" />
				<param name="label" value="$INFO[Skin.String(userwidget77_name)]" />
				<visible>Control.IsVisible(5077)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget77_IsSection) + !Skin.HasSetting(userwidget77_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="77" />
				<param name="id" value="5077" />
				<param name="visible" value="Integer.IsGreater(Container(5077).NumItems,0) | Container(5077).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget77_IsSection) + Skin.HasSetting(userwidget77_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="77" />
				<param name="id" value="5077" />
				<param name="visible" value="Integer.IsGreater(Container(5077).NumItems,0) | Container(5077).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget77_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="77" />
				<param name="id" value="5077" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5077).NumItems,0) | Container(5077).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget77_bottominfo)">
				<param name="id" value="77" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6078" />
				<param name="id" value="5078" />
				<param name="label" value="$INFO[Skin.String(userwidget78_name)]" />
				<visible>Control.IsVisible(5078)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget78_IsSection) + !Skin.HasSetting(userwidget78_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="78" />
				<param name="id" value="5078" />
				<param name="visible" value="Integer.IsGreater(Container(5078).NumItems,0) | Container(5078).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget78_IsSection) + Skin.HasSetting(userwidget78_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="78" />
				<param name="id" value="5078" />
				<param name="visible" value="Integer.IsGreater(Container(5078).NumItems,0) | Container(5078).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget78_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="78" />
				<param name="id" value="5078" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5078).NumItems,0) | Container(5078).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget78_bottominfo)">
				<param name="id" value="78" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6079" />
				<param name="id" value="5079" />
				<param name="label" value="$INFO[Skin.String(userwidget79_name)]" />
				<visible>Control.IsVisible(5079)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget79_IsSection) + !Skin.HasSetting(userwidget79_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="79" />
				<param name="id" value="5079" />
				<param name="visible" value="Integer.IsGreater(Container(5079).NumItems,0) | Container(5079).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget79_IsSection) + Skin.HasSetting(userwidget79_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="79" />
				<param name="id" value="5079" />
				<param name="visible" value="Integer.IsGreater(Container(5079).NumItems,0) | Container(5079).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget79_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="79" />
				<param name="id" value="5079" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5079).NumItems,0) | Container(5079).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget79_bottominfo)">
				<param name="id" value="79" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6080" />
				<param name="id" value="5080" />
				<param name="label" value="$INFO[Skin.String(userwidget80_name)]" />
				<visible>Control.IsVisible(5080)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget80_IsSection) + !Skin.HasSetting(userwidget80_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="80" />
				<param name="id" value="5080" />
				<param name="visible" value="Integer.IsGreater(Container(5080).NumItems,0) | Container(5080).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget80_IsSection) + Skin.HasSetting(userwidget80_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="80" />
				<param name="id" value="5080" />
				<param name="visible" value="Integer.IsGreater(Container(5080).NumItems,0) | Container(5080).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget80_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="80" />
				<param name="id" value="5080" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5080).NumItems,0) | Container(5080).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget80_bottominfo)">
				<param name="id" value="80" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6081" />
				<param name="id" value="5081" />
				<param name="label" value="$INFO[Skin.String(userwidget81_name)]" />
				<visible>Control.IsVisible(5081)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget81_IsSection) + !Skin.HasSetting(userwidget81_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="81" />
				<param name="id" value="5081" />
				<param name="visible" value="Integer.IsGreater(Container(5081).NumItems,0) | Container(5081).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget81_IsSection) + Skin.HasSetting(userwidget81_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="81" />
				<param name="id" value="5081" />
				<param name="visible" value="Integer.IsGreater(Container(5081).NumItems,0) | Container(5081).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget81_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="81" />
				<param name="id" value="5081" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5081).NumItems,0) | Container(5081).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget81_bottominfo)">
				<param name="id" value="81" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6082" />
				<param name="id" value="5082" />
				<param name="label" value="$INFO[Skin.String(userwidget82_name)]" />
				<visible>Control.IsVisible(5082)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget82_IsSection) + !Skin.HasSetting(userwidget82_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="82" />
				<param name="id" value="5082" />
				<param name="visible" value="Integer.IsGreater(Container(5082).NumItems,0) | Container(5082).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget82_IsSection) + Skin.HasSetting(userwidget82_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="82" />
				<param name="id" value="5082" />
				<param name="visible" value="Integer.IsGreater(Container(5082).NumItems,0) | Container(5082).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget82_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="82" />
				<param name="id" value="5082" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5082).NumItems,0) | Container(5082).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget82_bottominfo)">
				<param name="id" value="82" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6083" />
				<param name="id" value="5083" />
				<param name="label" value="$INFO[Skin.String(userwidget83_name)]" />
				<visible>Control.IsVisible(5083)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget83_IsSection) + !Skin.HasSetting(userwidget83_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="83" />
				<param name="id" value="5083" />
				<param name="visible" value="Integer.IsGreater(Container(5083).NumItems,0) | Container(5083).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget83_IsSection) + Skin.HasSetting(userwidget83_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="83" />
				<param name="id" value="5083" />
				<param name="visible" value="Integer.IsGreater(Container(5083).NumItems,0) | Container(5083).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget83_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="83" />
				<param name="id" value="5083" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5083).NumItems,0) | Container(5083).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget83_bottominfo)">
				<param name="id" value="83" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6084" />
				<param name="id" value="5084" />
				<param name="label" value="$INFO[Skin.String(userwidget84_name)]" />
				<visible>Control.IsVisible(5084)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget84_IsSection) + !Skin.HasSetting(userwidget84_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="84" />
				<param name="id" value="5084" />
				<param name="visible" value="Integer.IsGreater(Container(5084).NumItems,0) | Container(5084).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget84_IsSection) + Skin.HasSetting(userwidget84_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="84" />
				<param name="id" value="5084" />
				<param name="visible" value="Integer.IsGreater(Container(5084).NumItems,0) | Container(5084).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget84_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="84" />
				<param name="id" value="5084" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5084).NumItems,0) | Container(5084).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget84_bottominfo)">
				<param name="id" value="84" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6085" />
				<param name="id" value="5085" />
				<param name="label" value="$INFO[Skin.String(userwidget85_name)]" />
				<visible>Control.IsVisible(5085)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget85_IsSection) + !Skin.HasSetting(userwidget85_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="85" />
				<param name="id" value="5085" />
				<param name="visible" value="Integer.IsGreater(Container(5085).NumItems,0) | Container(5085).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget85_IsSection) + Skin.HasSetting(userwidget85_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="85" />
				<param name="id" value="5085" />
				<param name="visible" value="Integer.IsGreater(Container(5085).NumItems,0) | Container(5065).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget85_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="85" />
				<param name="id" value="5085" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5085).NumItems,0) | Container(5085).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget85_bottominfo)">
				<param name="id" value="85" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6086" />
				<param name="id" value="5086" />
				<param name="label" value="$INFO[Skin.String(userwidget86_name)]" />
				<visible>Control.IsVisible(5086)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget86_IsSection) + !Skin.HasSetting(userwidget86_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="86" />
				<param name="id" value="5086" />
				<param name="visible" value="Integer.IsGreater(Container(5086).NumItems,0) | Container(5086).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget86_IsSection) + Skin.HasSetting(userwidget86_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="86" />
				<param name="id" value="5086" />
				<param name="visible" value="Integer.IsGreater(Container(5086).NumItems,0) | Container(5086).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget86_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="86" />
				<param name="id" value="5086" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5086).NumItems,0) | Container(5086).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget86_bottominfo)">
				<param name="id" value="86" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6087" />
				<param name="id" value="5087" />
				<param name="label" value="$INFO[Skin.String(userwidget87_name)]" />
				<visible>Control.IsVisible(5087)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget87_IsSection) + !Skin.HasSetting(userwidget87_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="87" />
				<param name="id" value="5087" />
				<param name="visible" value="Integer.IsGreater(Container(5087).NumItems,0) | Container(5087).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget87_IsSection) + Skin.HasSetting(userwidget87_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="87" />
				<param name="id" value="5087" />
				<param name="visible" value="Integer.IsGreater(Container(5087).NumItems,0) | Container(5087).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget87_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="87" />
				<param name="id" value="5087" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5087).NumItems,0) | Container(5087).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget87_bottominfo)">
				<param name="id" value="87" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6088" />
				<param name="id" value="5088" />
				<param name="label" value="$INFO[Skin.String(userwidget88_name)]" />
				<visible>Control.IsVisible(5088)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget88_IsSection) + !Skin.HasSetting(userwidget88_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="88" />
				<param name="id" value="5088" />
				<param name="visible" value="Integer.IsGreater(Container(5088).NumItems,0) | Container(5088).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget88_IsSection) + Skin.HasSetting(userwidget88_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="88" />
				<param name="id" value="5088" />
				<param name="visible" value="Integer.IsGreater(Container(5088).NumItems,0) | Container(5088).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget88_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="88" />
				<param name="id" value="5088" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5088).NumItems,0) | Container(5088).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget89_bottominfo)">
				<param name="id" value="88" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6089" />
				<param name="id" value="5089" />
				<param name="label" value="$INFO[Skin.String(userwidget89_name)]" />
				<visible>Control.IsVisible(5089)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget89_IsSection) + !Skin.HasSetting(userwidget89_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="89" />
				<param name="id" value="5089" />
				<param name="visible" value="Integer.IsGreater(Container(5089).NumItems,0) | Container(5089).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget89_IsSection) + Skin.HasSetting(userwidget89_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="89" />
				<param name="id" value="5089" />
				<param name="visible" value="Integer.IsGreater(Container(5089).NumItems,0) | Container(5089).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget89_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="89" />
				<param name="id" value="5089" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5089).NumItems,0) | Container(5089).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget89_bottominfo)">
				<param name="id" value="89" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6090" />
				<param name="id" value="5090" />
				<param name="label" value="$INFO[Skin.String(userwidget90_name)]" />
				<visible>Control.IsVisible(5090)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget90_IsSection) + !Skin.HasSetting(userwidget90_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="90" />
				<param name="id" value="5090" />
				<param name="visible" value="Integer.IsGreater(Container(5090).NumItems,0) | Container(5090).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget90_IsSection) + Skin.HasSetting(userwidget90_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="90" />
				<param name="id" value="5090" />
				<param name="visible" value="Integer.IsGreater(Container(5090).NumItems,0) | Container(5090).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget90_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="90" />
				<param name="id" value="5090" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5090).NumItems,0) | Container(5090).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget90_bottominfo)">
				<param name="id" value="90" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6091" />
				<param name="id" value="5091" />
				<param name="label" value="$INFO[Skin.String(userwidget91_name)]" />
				<visible>Control.IsVisible(5091)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget91_IsSection) + !Skin.HasSetting(userwidget91_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="91" />
				<param name="id" value="5091" />
				<param name="visible" value="Integer.IsGreater(Container(5091).NumItems,0) | Container(5091).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget91_IsSection) + Skin.HasSetting(userwidget91_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="91" />
				<param name="id" value="5091" />
				<param name="visible" value="Integer.IsGreater(Container(5091).NumItems,0) | Container(5091).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget91_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="91" />
				<param name="id" value="5091" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5091).NumItems,0) | Container(5091).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget91_bottominfo)">
				<param name="id" value="91" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6092" />
				<param name="id" value="5092" />
				<param name="label" value="$INFO[Skin.String(userwidget92_name)]" />
				<visible>Control.IsVisible(5092)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget92_IsSection) + !Skin.HasSetting(userwidget92_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="92" />
				<param name="id" value="5092" />
				<param name="visible" value="Integer.IsGreater(Container(5092).NumItems,0) | Container(5092).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget92_IsSection) + Skin.HasSetting(userwidget92_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="92" />
				<param name="id" value="5092" />
				<param name="visible" value="Integer.IsGreater(Container(5092).NumItems,0) | Container(5092).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget92_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="92" />
				<param name="id" value="5092" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5092).NumItems,0) | Container(5092).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget92_bottominfo)">
				<param name="id" value="92" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6093" />
				<param name="id" value="5093" />
				<param name="label" value="$INFO[Skin.String(userwidget93_name)]" />
				<visible>Control.IsVisible(5093)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget93_IsSection) + !Skin.HasSetting(userwidget93_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="93" />
				<param name="id" value="5093" />
				<param name="visible" value="Integer.IsGreater(Container(5093).NumItems,0) | Container(5093).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget93_IsSection) + Skin.HasSetting(userwidget93_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="93" />
				<param name="id" value="5093" />
				<param name="visible" value="Integer.IsGreater(Container(5093).NumItems,0) | Container(5093).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget93_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="93" />
				<param name="id" value="5093" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5093).NumItems,0) | Container(5093).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget93_bottominfo)">
				<param name="id" value="93" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6094" />
				<param name="id" value="5094" />
				<param name="label" value="$INFO[Skin.String(userwidget94_name)]" />
				<visible>Control.IsVisible(5094)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget94_IsSection) + !Skin.HasSetting(userwidget94_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="94" />
				<param name="id" value="5094" />
				<param name="visible" value="Integer.IsGreater(Container(5094).NumItems,0) | Container(5094).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget94_IsSection) + Skin.HasSetting(userwidget94_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="94" />
				<param name="id" value="5094" />
				<param name="visible" value="Integer.IsGreater(Container(5094).NumItems,0) | Container(5094).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget94_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="94" />
				<param name="id" value="5094" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5094).NumItems,0) | Container(5094).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget94_bottominfo)">
				<param name="id" value="94" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6095" />
				<param name="id" value="5095" />
				<param name="label" value="$INFO[Skin.String(userwidget95_name)]" />
				<visible>Control.IsVisible(5095)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget95_IsSection) + !Skin.HasSetting(userwidget95_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="95" />
				<param name="id" value="5095" />
				<param name="visible" value="Integer.IsGreater(Container(5095).NumItems,0) | Container(5095).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget95_IsSection) + Skin.HasSetting(userwidget95_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="95" />
				<param name="id" value="5095" />
				<param name="visible" value="Integer.IsGreater(Container(5095).NumItems,0) | Container(5065).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget95_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="95" />
				<param name="id" value="5095" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5095).NumItems,0) | Container(5095).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget95_bottominfo)">
				<param name="id" value="95" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6096" />
				<param name="id" value="5096" />
				<param name="label" value="$INFO[Skin.String(userwidget96_name)]" />
				<visible>Control.IsVisible(5096)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget96_IsSection) + !Skin.HasSetting(userwidget96_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="96" />
				<param name="id" value="5096" />
				<param name="visible" value="Integer.IsGreater(Container(5096).NumItems,0) | Container(5096).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget96_IsSection) + Skin.HasSetting(userwidget96_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="96" />
				<param name="id" value="5096" />
				<param name="visible" value="Integer.IsGreater(Container(5096).NumItems,0) | Container(5096).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget96_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="96" />
				<param name="id" value="5096" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5096).NumItems,0) | Container(5096).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget96_bottominfo)">
				<param name="id" value="96" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6097" />
				<param name="id" value="5097" />
				<param name="label" value="$INFO[Skin.String(userwidget97_name)]" />
				<visible>Control.IsVisible(5097)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget97_IsSection) + !Skin.HasSetting(userwidget97_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="97" />
				<param name="id" value="5097" />
				<param name="visible" value="Integer.IsGreater(Container(5097).NumItems,0) | Container(5097).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget97_IsSection) + Skin.HasSetting(userwidget97_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="97" />
				<param name="id" value="5097" />
				<param name="visible" value="Integer.IsGreater(Container(5097).NumItems,0) | Container(5097).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget97_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="97" />
				<param name="id" value="5097" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5097).NumItems,0) | Container(5097).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget97_bottominfo)">
				<param name="id" value="97" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6098" />
				<param name="id" value="5098" />
				<param name="label" value="$INFO[Skin.String(userwidget98_name)]" />
				<visible>Control.IsVisible(5098)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget98_IsSection) + !Skin.HasSetting(userwidget98_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="98" />
				<param name="id" value="5098" />
				<param name="visible" value="Integer.IsGreater(Container(5098).NumItems,0) | Container(5098).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget98_IsSection) + Skin.HasSetting(userwidget98_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="98" />
				<param name="id" value="5098" />
				<param name="visible" value="Integer.IsGreater(Container(5098).NumItems,0) | Container(5098).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget98_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="98" />
				<param name="id" value="5098" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5098).NumItems,0) | Container(5098).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget99_bottominfo)">
				<param name="id" value="98" />
			</include>
			
			<include content="Universal_ContainerHeader">
				<param name="groupid" value="6099" />
				<param name="id" value="5099" />
				<param name="label" value="$INFO[Skin.String(userwidget99_name)]" />
				<visible>Control.IsVisible(5099)</visible>
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget99_IsSection) + !Skin.HasSetting(userwidget99_forceFixedlist)">
				<param name="type" value="panel" />
				<param name="nr" value="99" />
				<param name="id" value="5099" />
				<param name="visible" value="Integer.IsGreater(Container(5099).NumItems,0) | Container(5099).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="!Skin.HasSetting(userwidget99_IsSection) + Skin.HasSetting(userwidget99_forceFixedlist)">
				<param name="type" value="fixedlist" />
				<param name="nr" value="99" />
				<param name="id" value="5099" />
				<param name="visible" value="Integer.IsGreater(Container(5099).NumItems,0) | Container(5099).IsUpdating" />
			</include>
			<include content="Widget_Container_Template" condition="Skin.HasSetting(userwidget99_IsSection)">
				<param name="type" value="panel" />
				<param name="nr" value="99" />
				<param name="id" value="5099" />
				<param name="height" value="103" />
				<param name="visible" value="Integer.IsGreater(Container(5099).NumItems,0) | Container(5099).IsUpdating" />
			</include>
			<include content="Widget_Container_BottomInfo" condition="[String.IsEmpty(Skin.String(HomeLayout)) | String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)] + Skin.HasSetting(userwidget99_bottominfo)">
				<param name="id" value="99" />
			</include>
		</control>
	</include>
</includes>
