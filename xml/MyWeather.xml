<?xml version="1.0" encoding="utf-8"?>
<window>
	<defaultcontrol always="true">200</defaultcontrol>
		<include content="media_menucontrol_9000" condition="!Skin.HasSetting(menucontrol_forcedfocus_premenu)" />
		<include content="media_menucontrol_8999" condition="Skin.HasSetting(menucontrol_forcedfocus_premenu)" />
	<controls>

		<control type="label" id="31">
			<description>Current day label</description>
			<include content="HiddenObject" />
		</control>
			<control type="label" id="32">
			<description>Todays high temperature value</description>
			<include content="HiddenObject" />
		</control>
		<control type="label" id="33">
			<description>Todays low temperature value</description>
			<include content="HiddenObject" />
		</control>
		<control type="label" id="34">
			<description>Todays weather condition</description>
			<include content="HiddenObject" />
		</control>
		<control type="image" id="35">
			<description>Todays weather icon</description>
			<include content="HiddenObject" />
		</control>
		<control type="label" id="223">
			<description>Localized “Temperature” string</description>
			<include content="HiddenObject" />
		</control>
		<control type="label" id="224">
			<description>Localized “Feels like” string</description>
			<include content="HiddenObject" />
		</control>
		<control type="label" id="225">
			<description>Localized “UV index” string</description>
			<include content="HiddenObject" />
		</control>
		<control type="label" id="226">
			<description>Localized “Wind” string</description>
			<include content="HiddenObject" />
		</control>
		<control type="label" id="227">
			<description>Localized “Dew point” string</description>
			<include content="HiddenObject" />
		</control>
		<control type="label" id="228">
			<description>Localized “Humidity” string</description>
			<include content="HiddenObject" />
		</control>
		<control type="button" id="2">
			<description>refresh weather</description>
			<include content="HiddenObject" />
		</control>
		
		
		<control type="multiimage">
			<visible>Skin.HasSetting(weather_background_multiimage)</visible>
			<depth>DepthBackground</depth>
			<fadetime>3000</fadetime>
			<timeperimage>10000</timeperimage>
			<imagepath>$INFO[Weather.FanartCode,resource://resource.images.weatherfanart.multi/,/]</imagepath>
		</control>
		<control type="group">
			<visible>!Skin.HasSetting(weather_background_disabled)</visible>
			<description>may fade it is there any animated fanart weather fanart code based image resource addon out there - check var formultiimage</description>
			<include>global_background</include>
		</control>
		
		<control type="grouplist" id="2000">
			<height>1080</height>
			<control type="group" id="2100">
				<description>PAGE 1</description>
				<height>1080</height>
				
				
				<control type="spincontrolex" id="3">
					<animation effect="fade" start="100" end="0" time="300" condition="Skin.HasSetting(weather_windowlayout_2)">conditional</animation>
					<animation effect="slide" start="0,0" end="80,540" time="300" condition="Skin.HasSetting(weather_windowlayout_3)">conditional</animation>
					
					<!-- no color if layout 3 
					<focusedcolor />
					<textcolor />
					<texturefocus />
					<texturenofocus />
					-->
					
					<description>avoid reload - which force refetch use anim anim for cond positioning ?</description>
					<top>170</top>
					<left>105</left>
					<width>420</width>
					<height>50</height>
					<spinposx>10</spinposx>
					<spinwidth>25</spinwidth>
					<spinheight>50</spinheight>
					<textoffsetx>10</textoffsetx>
					<font>montserrat_16_extrabold</font>
					<focusedcolor>$VAR[color_lib_text_main]</focusedcolor>
					<textcolor>$VAR[color_lib_text_secondary]</textcolor>
					<disabledcolor />
					<texturefocus colordiffuse="$VAR[color_lib_text_main]">colors/white10.png</texturefocus>
					<texturenofocus colordiffuse="$VAR[color_lib_text_main]">colors/white10.png</texturenofocus>
					<textureup colordiffuse="$VAR[color_lib_text_secondary]">buttons/spinctrlup.png</textureup>
					<texturedown colordiffuse="$VAR[color_lib_text_secondary]">buttons/spinctrldown.png</texturedown>
					<textureupfocus colordiffuse="$VAR[color_lib_text_main]">buttons/spinctrlup.png</textureupfocus>
					<texturedownfocus colordiffuse="$VAR[color_lib_text_main]">buttons/spinctrldown.png</texturedownfocus>
					<textureupdisabled />
					<texturedowndisabled />
				
					<onfocus condition="!String.IsEmpty(Window(Home).Property(menucontrol_active))">ClearProperty(menucontrol_active,home)</onfocus>
					<onup>51</onup>
					<onright>50</onright>
					<onleft>menu</onleft>
					<ondown>200</ondown>
				</control>
				
				<!-- skin has setting -->
				<control type="group">
					<visible>!Skin.HasSetting(weather_windowlayout_2) + !Skin.HasSetting(weather_windowlayout_3)</visible>
					<include condition="true" content="weather_window_layout_1" />
				</control>
				<control type="group">
					<visible>Skin.HasSetting(weather_windowlayout_2)</visible>
					<include condition="true" content="weather_window_layout_2" />
				</control>
				<control type="group">
					<visible>Skin.HasSetting(weather_windowlayout_3)</visible>
					<include condition="true" content="weather_window_layout_3" />
				</control>
			</control>
			
			<control type="grouplist" id="2200">
				<description>PAGE 2 - more extended infos </description>
				<visible>false</visible>
				<left>130</left>
				<top>120</top>
				<height>960</height>
				<right>50</right>
				<align>center</align>
				<orientation>horizontal</orientation>
				<control type="button" id="2201">
					<font>montserrat_50_extrabold</font>
					<height>960</height>
					<width>580</width>
					<label>GROUP 1</label>
					<texturefocus colordiffuse="cyan">colors/white50.png</texturefocus>
					<texturenofocus colordiffuse="red">colors/white50.png</texturenofocus>
					
					<ondown>2300</ondown>
				</control>
				
				<control type="grouplist" id="2400">
					<height>560</height>
					<!-- omit width currently intended -->
					<orientation>horizontal</orientation>
					<control type="button" id="2202">
						<font>montserrat_50_extrabold</font>
						<height>400</height>
						<width>580</width>
						<label>GROUP 2</label>
						<texturefocus colordiffuse="cyan">colors/white50.png</texturefocus>
						<texturenofocus colordiffuse="red">colors/white50.png</texturenofocus>
						
						<ondown>2300</ondown>
					</control>
					<control type="button" id="2203">
						<font>montserrat_50_extrabold</font>
						<top>400</top>
						<height>560</height>
						<width>580</width>
						<label>GROUP 3</label>
						<texturefocus colordiffuse="cyan">colors/white50.png</texturefocus>
						<texturenofocus colordiffuse="red">colors/white50.png</texturenofocus>
						
						<ondown>2300</ondown>
					</control>
				</control>
			</control>
			
			<control type="grouplist" id="2300">
				<description>PAGE 3 - maps </description>
				<visible>!String.IsEmpty(Window(weather).Property(Map.IsFetched))</visible>
				<left>130</left>
				<top>120</top>
				<height>960</height>
				<right>50</right>
				<align>center</align>
				<orientation>horizontal</orientation>
				
				<include content="MapItem">	
					<param name="label" value="$INFO[Window(weather).Property(Current.Condition][CR][CR]$INFO[Window(weather).Property(Daily.1.Precipitation),  $LOCALIZE[1448] :[CR]    ,][CR][CR]$INFO[Window(weather).Property(Daily.1.Snow),  Amount of snow :[CR]    ,][CR]$INFO[Window(weather).Property(Daily.1.SnowDepth),  Depth of snow on the ground :[CR]    ,]" />
					<param name="item_index" value="1" />
					<param name="item_index_prev" value="5" />
					<param name="item_index_next" value="2" />
				</include>
				<include content="MapItem">
					<param name="label" value="$INFO[Window(weather).Property(Daily.1.Cloudiness),Cloudiness   •   ,[CR][CR]]$INFO[Window(weather).Property(Daily.1.CloudsLow),Clouds Low 0-3 km hight  :[CR]      ,][CR]$INFO[Window(weather).Property(Daily.1.CloudsMid),Clouds Mid 3-5 km hight   :[CR]      ,][CR]$INFO[Window(weather).Property(Daily.1.CloudsHigh),Clouds High more than 5 km hight   :[CR]      ,]" />
					<param name="item_index" value="2" />
					<param name="item_index_prev" value="1" />
					<param name="item_index_next" value="3" />
				</include>
				<include content="MapItem">
					<param name="label" value="$INFO[Window(weather).Property(Current.Temperature)]$INFO[System.TemperatureUnits]               $INFO[Window(weather).Property(Daily.1.LowTemperature),[B]↓[/B] [COLOR cyan],[/COLOR] ][B] | [/B]$INFO[Window(weather).Property(Daily.1.HighTemperature),  [B]↑[/B] [COLOR orange],[/COLOR]][CR][CR]$INFO[Control.GetLabel(225)] : $INFO[Window.Property(Current.UVIndex)]" />
					<param name="item_index" value="3" />
					<param name="item_index_prev" value="2" />
					<param name="item_index_next" value="4" />
				</include>
				<include content="MapItem">
					<param name="label" value="$INFO[Control.GetLabel(226)] : $INFO[Window(weather).Property(Current.Wind)][CR]$INFO[Window(weather).Property(Current.WindDirection)]" />
					<param name="item_index" value="4" />
					<param name="item_index_prev" value="3" />
					<param name="item_index_next" value="5" />
				</include>
				<include content="MapItem">
					<param name="label" value="$INFO[Window(weather).Property(Current.Pressure),Air pressure : ,[CR]]$INFO[Window(weather).Property(Current.SeaLevel),SeaLevel pressure, :]" />
					<param name="item_index" value="5" />
					<param name="item_index_prev" value="4" />
					<param name="item_index_next" value="1" />
				</include>
			</control>
		</control>
		
		<include content="HeaderBar">
			<param name="HasBGPanel" value="Skin.HasSetting(MediaWindow_UseHeaderBG)" />
		</include>
		<control type="image">
			<top>0</top>
			<height>100</height>
			<width>300</width>
			<centerleft>50%</centerleft>
			<bordersize>10</bordersize>
			<aspectratio>keep</aspectratio>
			<texture>$INFO[Window.Property(WeatherProviderLogo)]</texture>
		</control>
		
			
		<include content="PreMenucontrol" />
			
		<control type="group">
			<animation effect="slide" start="-450,0" end="0,0" time="300" tween="cubic" easing="inout">VisibleHidden</animation>
			<visible>String.IsEqual(Window(Home).Property(menucontrol_active),common)</visible>
			<include content="menucontrol_global" condition="String.IsEmpty(Window(home).Property(shortcutaction_inprogress))" />
		</control>
		
		<include condition="Skin.HasSetting(window_frame)" content="window_frame" />
		<include condition="Skin.HasSetting(SwanDebug)" content="swan_debug_overlay">
			<param name="nested_debuginfo" value="
Map.1.Area   $INFO[Window(weather).Property(Map.1.Area)]
Map.2.Area   $INFO[Window(weather).Property(Map.2.Area)]
Map.3.Area   $INFO[Window(weather).Property(Map.3.Area)]
Map.4.Area   $INFO[Window(weather).Property(Map.4.Area)]
Map.5.Area   $INFO[Window(weather).Property(Map.5.Area)]
Map.1.Layer  $INFO[Window(weather).Property(Map.1.Layer)]
Map.2.Layer  $INFO[Window(weather).Property(Map.2.Layer)]
Map.3.Layer  $INFO[Window(weather).Property(Map.3.Layer)]
Map.4.Layer  $INFO[Window(weather).Property(Map.4.Layer)]
Map.5.Layer  $INFO[Window(weather).Property(Map.5.Layer)]
Map.1.Heading  $INFO[Window(weather).Property(Map.1.Heading)]
Map.2.Heading  $INFO[Window(weather).Property(Map.2.Heading)]
Map.3.Heading  $INFO[Window(weather).Property(Map.3.Heading)]
Map.4.Heading  $INFO[Window(weather).Property(Map.4.Heading)]
Map.5.Heading  $INFO[Window(weather).Property(Map.5.Heading)]
Map.1.Legend  $INFO[Window(weather).Property(Map.1.Legend)]
Map.2.Legend  $INFO[Window(weather).Property(Map.2.Legend)]
Map.3.Legend  $INFO[Window(weather).Property(Map.3.Legend)]
Map.4.Legend  $INFO[Window(weather).Property(Map.4.Legend)]
Map.5.Legend  $INFO[Window(weather).Property(Map.5.Legend)]"/>
		</include>
	</controls>


</window>
