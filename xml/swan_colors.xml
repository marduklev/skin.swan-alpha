<?xml version="1.0" encoding="UTF-8"?>
<includes>
	
	<!-- ################## -->
	<!--   COLOR VARIABLES  -->
	<!-- ################## -->
	
	<!-- Profile Login -->
	<variable name="color_profilelogin_text_main">
		<value condition="!String.IsEmpty(Skin.String(color_profilelogin_text_main))">$INFO[Skin.String(color_profilelogin_text_main)]</value>
		<value>color_profilelogin_text_main</value>
	</variable>
	<variable name="color_profilelogin_text_secondary">
		<value condition="!String.IsEmpty(Skin.String(color_profilelogin_text_secondary))">$INFO[Skin.String(color_profilelogin_text_secondary)]</value>
		<value>color_profilelogin_text_secondary</value>
	</variable>
	<variable name="color_profilelogin_accent">
		<value condition="!String.IsEmpty(Skin.String(color_profilelogin_accent))">$INFO[Skin.String(color_profilelogin_accent)]</value>
		<value>color_profilelogin_accent</value>
	</variable>
	
	<!-- dialogbutton , shutdownmenu -->
	<variable name="color_shutdown_dimmed_background">
		<value condition="!String.IsEmpty(Skin.String(color_shutdown_dimmed_background))">$INFO[Skin.String(color_shutdown_dimmed_background)]</value>
		<value>color_shutdown_dimmed_background</value>
	</variable>
	<variable name="color_shutdown_item_fo">
		<value condition="!String.IsEmpty(Skin.String(color_shutdown_item_fo))">$INFO[Skin.String(color_shutdown_item_fo)]</value>
		<value>color_shutdown_item_fo</value>
	</variable>
	<variable name="color_shutdown_item_nf">
		<value condition="!String.IsEmpty(Skin.String(color_shutdown_item_nf))">$INFO[Skin.String(color_shutdown_item_nf)]</value>
		<value>color_shutdown_item_nf</value>
	</variable>
		
		<!-- NEED REVISIT think about color management usage
		
		method 1 using var within tags inside container includes
			- need define var based on windows
		
		method 2 using [window_prefix] within includes 
			- saves variables as the prefix is used
		
		settings and shutdownmenu -->
	
		<variable name="color_global_item_fo">
			<value>$VAR[color_global_button_selected]</value>
		</variable>
		<variable name="color_global_item_nf">
			<value>$VAR[color_global_button_text_nf]</value>
		</variable>
	
	
	
	<!-- BG Common-->
	<variable name="color_global_background_layer1">
		<value condition="$EXP[IsSpotlight_View]">$VAR[color_spotlightlib_background_layer1]</value>
		<value condition="[!$EXP[IsSpotlight_View]] + !String.IsEmpty(Skin.String(color_global_background_layer1))">$INFO[Skin.String(color_global_background_layer1)]</value>
		<value>color_global_background_layer1</value>
	</variable>
	
		<variable name="color_spotlightlib_background_layer1">
			<value condition="!String.IsEmpty(Skin.String(color_spotlightlib_background_layer1))">$INFO[Skin.String(color_spotlightlib_background_layer1)]</value>
			<value>color_spotlightlib_background_layer1</value>
		</variable>
	
	<variable name="color_universal_background_layer2">
		<value condition="$EXP[IsHome]">$VAR[color_home_background_layer2]</value>
		<value>$VAR[color_global_background_layer2]</value>
	</variable>
	<variable name="color_home_background_layer2">
		<value condition="!String.IsEmpty(Skin.String(color_home_background_layer2))">$INFO[Skin.String(color_home_background_layer2)]</value>
		<value>color_home_background_layer2</value>
	</variable>
	<variable name="color_global_background_layer2">
		<value condition="!String.IsEmpty(Skin.String(color_global_background_layer2))">$INFO[Skin.String(color_global_background_layer2)]</value>
		<value>color_global_background_layer2</value>
	</variable>
	
	no spotlight overlay color nor image
	<variable name="color_global_background_layer3">
		<value condition="!String.IsEmpty(Skin.String(color_global_background_layer3))">$INFO[Skin.String(color_global_background_layer3)]</value>
		<value>color_global_background_layer3</value>
	</variable>
	
	<!-- BG HOME-->
	<variable name="color_home_background_layer1">
		<value condition="!String.IsEmpty(Skin.String(color_home_background_layer1))">$INFO[Skin.String(color_home_background_layer1)]</value>
		<value>color_home_background_layer1</value>
	</variable>
	<variable name="color_home_background_layer3">
		<value condition="!String.IsEmpty(Skin.String(color_home_background_layer3))">$INFO[Skin.String(color_home_background_layer3)]</value>
		<value>color_home_background_layer3</value>
	</variable>
	
	
	<variable name="color_home_menu_backgroundpanel">
		<value condition="!String.IsEmpty(Skin.String(color_home_menu_backgroundpanel))">$INFO[Skin.String(color_home_menu_backgroundpanel)]</value>
		<value>color_home_menu_backgroundpanel</value>
	</variable>
	<variable name="color_home_menu_accent">
		<value condition="!String.IsEmpty(Skin.String(color_home_menu_accent))">$INFO[Skin.String(color_home_menu_accent)]</value>
		<value>color_home_menu_accent</value>
	</variable>
	<variable name="color_home_menu_item_accent">
		<value condition="!String.IsEmpty(Skin.String(color_home_menu_item_accent))">$INFO[Skin.String(color_home_menu_item_accent)]</value>
		<value>color_home_menu_item_accent</value>
	</variable>
	<variable name="color_home_menu_itempanel_fo">
		<value condition="!String.IsEmpty(Skin.String(color_home_menu_itempanel_fo))">$INFO[Skin.String(color_home_menu_itempanel_fo)]</value>
		<value>color_home_menu_itempanel_fo</value>
	</variable>
	<variable name="color_home_menu_item_fo">
		<value condition="!String.IsEmpty(Skin.String(color_home_menu_item_fo))">$INFO[Skin.String(color_home_menu_item_fo)]</value>
		<value>color_home_menu_item_fo</value>
	</variable>
	
	<variable name="color_home_menu_itempanel_nf">
		<value condition="!String.IsEmpty(Skin.String(color_home_menu_itempanel_nf))">$INFO[Skin.String(color_home_menu_itempanel_nf)]</value>
		<value>color_home_menu_itempanel_nf</value>
	</variable>
	<variable name="color_home_menu_item_nf">
		<value condition="!String.IsEmpty(Skin.String(color_home_menu_item_nf))">$INFO[Skin.String(color_home_menu_item_nf)]</value>
		<value>color_home_menu_item_nf</value>
	</variable>
	
	<!-- BG Dialog Common-->
	<variable name="color_global_dialog_background">
		<value condition="!String.IsEmpty(Skin.String(color_global_dialog_background))">$INFO[Skin.String(color_global_dialog_background)]</value>
		<value>color_global_dialog_background</value>
	</variable>
	<variable name="color_global_dialog_accent">
		<value condition="!String.IsEmpty(Skin.String(color_global_dialog_accent))">$INFO[Skin.String(color_global_dialog_accent)]</value>
		<value>color_global_dialog_accent</value>
	</variable>
	
	
	<!-- HUB -->
	<variable name="color_hub_backgroundlayer1">
		<value condition="!String.IsEmpty(Skin.String(color_hub_backgroundlayer1))">$INFO[Skin.String(color_hub_backgroundlayer1)]</value>
		<value>color_hub_backgroundlayer1</value>
	</variable>
	<variable name="color_hub_menu_panel_gradienttop">
		<value condition="!String.IsEmpty(Skin.String(color_hub_menu_panel_gradienttop))">$INFO[Skin.String(color_hub_menu_panel_gradienttop)]</value>
		<value>color_hub_menu_panel_gradienttop</value>
	</variable>
	<variable name="color_hub_menu_panel_gradientcenter">
		<value condition="!String.IsEmpty(Skin.String(color_hub_menu_panel_gradientcenter))">$INFO[Skin.String(color_hub_menu_panel_gradientcenter)]</value>
		<value>color_hub_menu_panel_gradientcenter</value>
	</variable>
	<variable name="color_hub_menu_panel_gradientbottom">
		<value condition="!String.IsEmpty(Skin.String(color_hub_menu_panel_gradientbottom))">$INFO[Skin.String(color_hub_menu_panel_gradientbottom)]</value>
		<value>color_hub_menu_panel_gradientbottom</value>
	</variable>
	
	<variable name="color_hub_menu_text_fo">
		<value condition="!String.IsEmpty(Skin.String(color_hub_menu_text_fo))">$INFO[Skin.String(color_hub_menu_text_fo)]</value>
		<value>color_hub_menu_text_fo</value>
	</variable>
	<variable name="color_hub_menu_text_nf">
		<value condition="!String.IsEmpty(Skin.String(color_hub_menu_text_nf))">$INFO[Skin.String(color_hub_menu_text_nf)]</value>
		<value>color_hub_menu_text_nf</value>
	</variable>
	
	<variable name="color_hub_text_main">
		<value condition="!String.IsEmpty(Skin.String(color_hub_text_main))">$INFO[Skin.String(color_hub_text_main)]</value>
		<value>color_hub_text_main</value>
	</variable>
	<variable name="color_hub_text_secondary">
		<value condition="!String.IsEmpty(Skin.String(color_hub_text_secondary))">$INFO[Skin.String(color_hub_text_secondary)]</value>
		<value>color_hub_text_secondary</value>
	</variable>
	<variable name="color_hub_accent">
		<value condition="!String.IsEmpty(Skin.String(color_hub_accent))">$INFO[Skin.String(color_hub_accent)]</value>
		<value>color_hub_accent</value>
	</variable>
	<variable name="color_hub_widget_frame_nf">
		<value condition="!String.IsEmpty(Skin.String(color_hub_widget_frame_nf))">$INFO[Skin.String(color_hub_widget_frame_nf)]</value>
		<value>color_hub_widget_frame_nf</value>
	</variable>
	<variable name="color_hub_widget_frame_fo">
		<value condition="!String.IsEmpty(Skin.String(color_hub_widget_frame_fo))">$INFO[Skin.String(color_hub_widget_frame_fo)]</value>
		<value>color_hub_widget_frame_fo</value>
	</variable>
	
	<!-- HEADER BAR -->
	<variable name="color_header_backgroundpanel">
		<value condition="!String.IsEmpty(Skin.String(color_header_backgroundpanel))">$INFO[Skin.String(color_header_backgroundpanel)]</value>
		<value>color_header_backgroundpanel</value>
	</variable>
	<variable name="color_header_text_main">
		<value condition="!String.IsEmpty(Skin.String(color_header_text_main))">$INFO[Skin.String(color_header_text_main)]</value>
		<value>color_header_text_main</value>
	</variable>
	<variable name="color_header_text_accent">
		<value condition="!String.IsEmpty(Skin.String(color_header_text_accent))">$INFO[Skin.String(color_header_text_accent)]</value>
		<value>color_header_text_accent</value>
	</variable>
	
	<!-- Footer -->
	<variable name="color_footer_backgroundpanel">
		<value condition="!String.IsEmpty(Skin.String(color_footer_backgroundpanel))">$INFO[Skin.String(color_footer_backgroundpanel)]</value>
		<value>color_footer_backgroundpanel</value>
	</variable>
	<variable name="color_footer_items">
		<value condition="!String.IsEmpty(Skin.String(color_footer_items))">$INFO[Skin.String(color_footer_items)]</value>
		<value>color_footer_items</value>
	</variable>
	
	<variable name="color_home_text_main">
		<value condition="!String.IsEmpty(Skin.String(color_home_text_main))">$INFO[Skin.String(color_home_text_main)]</value>
		<value>color_home_text_main</value>
	</variable>
	<variable name="color_home_text_secondary">
		<value condition="!String.IsEmpty(Skin.String(color_home_text_secondary))">$INFO[Skin.String(color_home_text_secondary)]</value>
		<value>color_home_text_secondary</value>
	</variable>
	<variable name="color_home_accent">
		<value condition="!String.IsEmpty(Skin.String(color_home_accent))">$INFO[Skin.String(color_home_accent)]</value>
		<value>color_home_accent</value>
	</variable>
	<variable name="color_home_flags">
		<value condition="!String.IsEmpty(Skin.String(color_home_flags))">$INFO[Skin.String(color_home_flags)]</value>
		<value>color_home_flags</value>
	</variable>
	
		
		
		
						<variable name="color_global_spotlight_background">
							<value condition="Window.IsActive(home)">$VAR[color_home_background_layer1]</value>
							<value>$VAR[color_spotlightlib_background_layer1]</value>
						</variable>
						<variable name="color_global_spotlight_background_layer2">
							<value condition="Window.IsActive(home)">$VAR[color_home_background_layer3]</value>
							<value>$VAR[color_spotlightlib_background_layer2]</value>
						</variable>
						
						<variable name="color_global_spotlight_main">
							<value condition="Window.IsActive(home)">$VAR[color_home_text_main]</value>
							<value>$VAR[color_spotlightlib_main]</value>
						</variable>
						<variable name="color_global_spotlight_secondary">
							<value condition="Window.IsActive(home)">$VAR[color_home_text_secondary]</value>
							<value>$VAR[color_spotlightlib_secondary]</value>
						</variable>
						<variable name="color_global_spotlight_accent">
							<value condition="Window.IsActive(home)">$VAR[color_home_accent]</value>
							<value>$VAR[color_spotlightlib_accent]</value>
						</variable>
						<variable name="color_global_spotlight_flags">
							<value condition="Window.IsActive(home)">$VAR[color_home_flags]</value>
							<value>$VAR[color_spotlightlib_flags]</value>
						</variable>
						
	
	<variable name="color_spotlightlib_background_layer2">
		<value>$VAR[backgroundbuilding_layer3_color]</value>
		<!-- <value condition="!String.IsEmpty(Skin.String(color_spotlightlib_background_layer2))">$INFO[Skin.String(color_spotlightlib_background_layer2)]</value>
		<value>color_spotlightlib_background_layer2</value> -->
	</variable>
	
	<variable name="color_spotlightlib_main">
		<value condition="!String.IsEmpty(Skin.String(color_spotlightlib_main))">$INFO[Skin.String(color_spotlightlib_main)]</value>
		<value>color_spotlightlib_main</value>
	</variable>
	<variable name="color_spotlightlib_secondary">
		<value condition="!String.IsEmpty(Skin.String(color_spotlightlib_secondary))">$INFO[Skin.String(color_spotlightlib_secondary)]</value>
		<value>color_spotlightlib_secondary</value>
	</variable>
	<variable name="color_spotlightlib_accent">
		<value condition="!String.IsEmpty(Skin.String(color_spotlightlib_accent))">$INFO[Skin.String(color_spotlightlib_accent)]</value>
		<value>color_spotlightlib_accent</value>
	</variable>
	<variable name="color_spotlightlib_flags">
		<value condition="!String.IsEmpty(Skin.String(color_spotlightlib_flags))">$INFO[Skin.String(color_spotlightlib_flags)]</value>
		<value>color_spotlightlib_flags</value>
	</variable>
	<variable name="color_spotlightlib_itemframe_fo">
		<value condition="!String.IsEmpty(Skin.String(color_spotlightlib_itemframe_fo))">$INFO[Skin.String(color_spotlightlib_itemframe_fo)]</value>
		<value>color_spotlightlib_itemframe_fo</value>
	</variable>
	<variable name="color_spotlightlib_itemframe_nf">
		<value condition="!String.IsEmpty(Skin.String(color_spotlightlib_itemframe_nf))">$INFO[Skin.String(color_spotlightlib_itemframe_nf)]</value>
		<value>color_spotlightlib_itemframe_nf</value>
	</variable>
	
	
	<!-- need 2 new colors
		- color_spotlightlib_bottomtag_fo
		- color_spotlightlib_bottomtag_nf
		
		currently 
			- used in itemlayout
				<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_nf]" /> exist
				<param name="bottompanelcolor" value="$VAR[color_spotlightlib_itemframe_nf]" /> exist
				<param name="bottomtaglabelcolor" value="$VAR[color_spotlightlib_secondary]" /> not good if eqaul color_spotlightlib_itemframe_nf
				<param name="bottomtaglabel2color" value="$VAR[color_spotlightlib_secondary]" /> not good if eqaul color_spotlightlib_itemframe_nf
			- used in itemlayout
				<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_fo]" /> exist
				<param name="bottompanelcolor" value="$VAR[color_spotlightlib_itemframe_fo]" /> exist
				<param name="bottomtaglabelcolor" value="$VAR[color_spotlightlib_background_layer1]" /> shouldnt be issue, but inconsistent and irritating for users
				<param name="bottomtaglabel2color" value="$VAR[color_spotlightlib_background_layer1]" /> shouldnt be issue, but inconsistent and irritating for users
	

		 -->
		
	<!-- ############################### -->
	<!-- ######### SPECIAL USAGE ####### -->
	<!-- ############################### -->
		
	<!-- ![$EXP[Infodialog_IsActive]] + Window.IsActive(home) is equal Window.Is(home) -->
	<variable name="universalcontainer_headercolor">
		<value condition="Window.Is(home) + !String.IsEmpty(Skin.String(color_home_widget_header))">$INFO[Skin.String(color_home_widget_header)]</value>
		<value condition="Window.Is(home)">color_home_widget_header</value>
		<value condition="!String.IsEmpty(Skin.String(color_lib_widget_header))">$INFO[Skin.String(color_lib_widget_header)]</value>
		<value>color_lib_widget_header</value>
	</variable>
	<variable name="color_universalcontainer_itemframe_fo">
		<value condition="Window.Is(loginscreen)">$VAR[color_profilelogin_text_main]</value>
		<value condition="$EXP[IsHome]">$VAR[color_home_widgetitem_frame_fo]</value>
		<value>$VAR[color_lib_widgetitem_frame_fo]</value>
	</variable>
	
		
	
	
	<variable name="color_universalcontainer_itemframe_nf">
		<value condition="Window.Is(loginscreen)">$VAR[color_profilelogin_text_secondary]</value>
		<value condition="Window.Is(home) + !String.IsEmpty(Skin.String(color_home_widgetitem_frame_nf))">$INFO[Skin.String(color_home_widgetitem_frame_nf)]</value>
		<value condition="Window.Is(home)">color_home_widgetitem_frame_nf</value>
		<value condition="!String.IsEmpty(Skin.String(color_lib_widgetitem_frame_nf))">$INFO[Skin.String(color_lib_widgetitem_frame_nf)]</value>
		<value>color_lib_widgetitem_frame_nf</value>
	</variable>
	<variable name="color_universalcontainer_itemtag_bgpanel_fo">
		<value condition="Window.Is(home)">$VAR[color_home_widgetitem_itemtag_bgpanel_fo]</value>
		<value condition="!Window.Is(home)">$VAR[color_lib_widgetitem_itemtag_bgpanel_fo]</value>
	</variable>
	<variable name="color_universalcontainer_itemtag_label1_fo">
		<value condition="Window.Is(loginscreen)">$VAR[color_profilelogin_text_main]</value>
		<value condition="Window.Is(home)">$VAR[color_home_widgetitem_itemtag_label1_fo]</value>
		<value condition="!Window.Is(home)">$VAR[color_lib_widgetitem_itemtag_label1_fo]</value>
	</variable>
	<variable name="color_universalcontainer_itemtag_label2_fo">
		<value condition="Window.Is(loginscreen)">$VAR[color_profilelogin_text_secondary]</value>
		<value condition="Window.Is(home)">$VAR[color_home_widgetitem_itemtag_label2_fo]</value>
		<value condition="!Window.Is(home)">$VAR[color_lib_widgetitem_itemtag_label2_fo]</value>
	</variable>
	<variable name="color_universalcontainer_itemtag_label1_nf">
		<value condition="Window.Is(loginscreen)">$VAR[color_profilelogin_text_main]</value>
		<value condition="Window.Is(home)">$VAR[color_home_widgetitem_itemtag_label1_nf]</value>
		<value condition="!Window.Is(home)">$VAR[color_lib_widgetitem_itemtag_label1_nf]</value>
	</variable>
	<variable name="color_universalcontainer_itemtag_bgpanel_nf">
		<value condition="Window.Is(home)">$VAR[color_home_widgetitem_itemtag_bgpanel_nf]</value>
		<value condition="!Window.Is(home)">$VAR[color_lib_widgetitem_itemtag_bgpanel_nf]</value>
	</variable>
	<variable name="color_universalcontainer_itemtag_label2_nf">
		<value condition="Window.Is(loginscreen)">$VAR[color_profilelogin_text_secondary]</value>
		<value condition="Window.Is(home)">$VAR[color_home_widgetitem_itemtag_label2_nf]</value>
		<value condition="!Window.Is(home)">$VAR[color_lib_widgetitem_itemtag_label2_nf]</value>
	</variable>
	<variable name="color_universalcontainer_watchedoverlay_progressbar_progress">
		<value condition="Window.Is(home)">$VAR[color_home_watchedoverlay_progressbar_progress]</value>
		<value condition="!Window.Is(home)">$VAR[color_lib_watchedoverlay_progressbar_progress]</value>
	</variable>
	<variable name="color_universalcontainer_watchedoverlay_progressbar_remain">
		<value condition="Window.Is(home)">$VAR[color_home_watchedoverlay_progressbar_remain]</value>
		<value condition="!Window.Is(home)">$VAR[color_lib_watchedoverlay_progressbar_remain]</value>
	</variable>
	
	
	<variable name="color_home_widget_header">
		<value condition="!String.IsEmpty(Skin.String(color_home_widget_header))">$INFO[Skin.String(color_home_widget_header)]</value>
		<value>color_home_widget_header</value>
	</variable>
	<variable name="color_lib_widget_header">
		<value condition="!String.IsEmpty(Skin.String(color_lib_widget_header))">$INFO[Skin.String(color_lib_widget_header)]</value>
		<value>color_lib_widget_header</value>
	</variable>
	
	<variable name="color_home_watchedoverlay_progressbar_progress">
		<value condition="!String.IsEmpty(Skin.String(color_home_watchedoverlay_progressbar_progress))">$INFO[Skin.String(color_home_watchedoverlay_progressbar_progress)]</value>
		<value>color_home_watchedoverlay_progressbar_progress</value>
	</variable>
	<variable name="color_home_watchedoverlay_progressbar_remain">
		<value condition="!String.IsEmpty(Skin.String(color_home_watchedoverlay_progressbar_remain))">$INFO[Skin.String(color_home_watchedoverlay_progressbar_remain)]</value>
		<value>color_home_watchedoverlay_progressbar_remain</value>
	</variable>
	<variable name="color_lib_watchedoverlay_progressbar_progress">
		<value condition="!String.IsEmpty(Skin.String(color_lib_watchedoverlay_progressbar_progress))">$INFO[Skin.String(color_lib_watchedoverlay_progressbar_progress)]</value>
		<value>color_lib_watchedoverlay_progressbar_progress</value>
	</variable>
	<variable name="color_lib_watchedoverlay_progressbar_remain">
		<value condition="!String.IsEmpty(Skin.String(color_lib_watchedoverlay_progressbar_remain))">$INFO[Skin.String(color_lib_watchedoverlay_progressbar_remain)]</value>
		<value>color_lib_watchedoverlay_progressbar_remain</value>
	</variable>

	<variable name="color_home_widgetitem_frame_fo">
		<value condition="!String.IsEmpty(Skin.String(color_home_widgetitem_frame_fo))">$INFO[Skin.String(color_home_widgetitem_frame_fo)]</value>
		<value>color_home_widgetitem_frame_fo</value>
	</variable>
	<variable name="color_home_widgetitem_frame_nf">
		<value condition="!String.IsEmpty(Skin.String(color_home_widgetitem_frame_nf))">$INFO[Skin.String(color_home_widgetitem_frame_nf)]</value>
		<value>color_home_widgetitem_frame_nf</value>
	</variable>
	
	<variable name="color_lib_widgetitem_frame_fo">
		<value condition="!String.IsEmpty(Skin.String(color_lib_widgetitem_frame_fo))">$INFO[Skin.String(color_lib_widgetitem_frame_fo)]</value>
		<value>color_lib_widgetitem_frame_fo</value>
	</variable>
	<variable name="color_lib_widgetitem_frame_nf">
		<value condition="!String.IsEmpty(Skin.String(color_lib_widgetitem_frame_nf))">$INFO[Skin.String(color_lib_widgetitem_frame_nf)]</value>
		<value>color_lib_widgetitem_frame_nf</value>
	</variable>
	


	<variable name="color_home_widgetitem_itemtag_bgpanel_fo">
		<value condition="!String.IsEmpty(Skin.String(color_home_widgetitem_itemtag_bgpanel_fo))">$INFO[Skin.String(color_home_widgetitem_itemtag_bgpanel_fo)]</value>
		<value>color_home_widgetitem_itemtag_bgpanel_fo</value>
	</variable>
	<variable name="color_home_widgetitem_itemtag_bgpanel_nf">
		<value condition="!String.IsEmpty(Skin.String(color_home_widgetitem_itemtag_bgpanel_nf))">$INFO[Skin.String(color_home_widgetitem_itemtag_bgpanel_nf)]</value>
		<value>color_home_widgetitem_itemtag_bgpanel_nf</value>
	</variable>
	<variable name="color_lib_widgetitem_itemtag_bgpanel_fo">
		<value condition="!String.IsEmpty(Skin.String(color_lib_widgetitem_itemtag_bgpanel_fo))">$INFO[Skin.String(color_lib_widgetitem_itemtag_bgpanel_fo)]</value>
		<value>color_lib_widgetitem_itemtag_bgpanel_fo</value>
	</variable>
	<variable name="color_lib_widgetitem_itemtag_bgpanel_nf">
		<value condition="!String.IsEmpty(Skin.String(color_lib_widgetitem_itemtag_bgpanel_nf))">$INFO[Skin.String(color_lib_widgetitem_itemtag_bgpanel_nf)]</value>
		<value>color_lib_widgetitem_itemtag_bgpanel_nf</value>
	</variable>
	
	<variable name="color_home_widgetitem_itemtag_label1_fo">
		<value condition="!String.IsEmpty(Skin.String(color_home_widgetitem_itemtag_label1_fo))">$INFO[Skin.String(color_home_widgetitem_itemtag_label1_fo)]</value>
		<value>color_home_widgetitem_itemtag_label1_fo</value>
	</variable>
	<variable name="color_home_widgetitem_itemtag_label2_fo">
		<value condition="!String.IsEmpty(Skin.String(color_home_widgetitem_itemtag_label2_fo))">$INFO[Skin.String(color_home_widgetitem_itemtag_label2_fo)]</value>
		<value>color_home_widgetitem_itemtag_label2_fo</value>
	</variable>
	<variable name="color_home_widgetitem_itemtag_label1_nf">
		<value condition="!String.IsEmpty(Skin.String(color_home_widgetitem_itemtag_label1_nf))">$INFO[Skin.String(color_home_widgetitem_itemtag_label1_nf)]</value>
		<value>color_home_widgetitem_itemtag_label1_nf</value>
	</variable>
	<variable name="color_home_widgetitem_itemtag_label2_nf">
		<value condition="!String.IsEmpty(Skin.String(color_home_widgetitem_itemtag_label2_nf))">$INFO[Skin.String(color_home_widgetitem_itemtag_label2_nf)]</value>
		<value>color_home_widgetitem_itemtag_label2_nf</value>
	</variable>
	
	
	<variable name="color_lib_widgetitem_itemtag_label1_fo">
		<value condition="!String.IsEmpty(Skin.String(color_lib_widgetitem_itemtag_label1_fo))">$INFO[Skin.String(color_lib_widgetitem_itemtag_label1_fo)]</value>
		<value>color_lib_widgetitem_itemtag_label1_fo</value>
	</variable>
	<variable name="color_lib_widgetitem_itemtag_label2_fo">
		<value condition="!String.IsEmpty(Skin.String(color_lib_widgetitem_itemtag_label2_fo))">$INFO[Skin.String(color_lib_widgetitem_itemtag_label2_fo)]</value>
		<value>color_lib_widgetitem_itemtag_label2_fo</value>
	</variable>
	<variable name="color_lib_widgetitem_itemtag_label1_nf">
		<value condition="!String.IsEmpty(Skin.String(color_lib_widgetitem_itemtag_label1_nf))">$INFO[Skin.String(color_lib_widgetitem_itemtag_label1_nf)]</value>
		<value>color_lib_widgetitem_itemtag_label1_nf</value>
	</variable>
	<variable name="color_lib_widgetitem_itemtag_label2_nf">
		<value condition="!String.IsEmpty(Skin.String(color_lib_widgetitem_itemtag_label2_nf))">$INFO[Skin.String(color_lib_widgetitem_itemtag_label2_nf)]</value>
		<value>color_lib_widgetitem_itemtag_label2_nf</value>
	</variable>
	
	<variable name="color_home_widgetitem_overlayicon">
		<value condition="!String.IsEmpty(Skin.String(color_home_widgetitem_overlayicon))">$INFO[Skin.String(color_home_widgetitem_overlayicon)]</value>
		<value>color_home_widgetitem_overlayicon</value>
	</variable>
	<variable name="color_lib_widgetitem_overlayicon">
		<value condition="!String.IsEmpty(Skin.String(color_lib_widgetitem_overlayicon))">$INFO[Skin.String(color_lib_widgetitem_overlayicon)]</value>
		<value>color_lib_widgetitem_overlayicon</value>
	</variable>
	
	<!-- My-foo-Nav xml -->
	<variable name="color_lib_menu_backgroundpanel">
		<value condition="!String.IsEmpty(Skin.String(color_lib_menu_backgroundpanel))">$INFO[Skin.String(color_lib_menu_backgroundpanel)]</value>
		<value>color_lib_menu_backgroundpanel</value>
	</variable>
	<variable name="color_lib_menu_accent">
		<value condition="!String.IsEmpty(Skin.String(color_lib_menu_accent))">$INFO[Skin.String(color_lib_menu_accent)]</value>
		<value>color_lib_menu_accent</value>
	</variable>
	<variable name="color_lib_menu_itempanel_fo">
		<value condition="!String.IsEmpty(Skin.String(color_lib_menu_itempanel_fo))">$INFO[Skin.String(color_lib_menu_itempanel_fo)]</value>
		<value>color_lib_menu_itempanel_fo</value>
	</variable>
	<variable name="color_lib_menu_item_fo">
		<value condition="!String.IsEmpty(Skin.String(color_lib_menu_item_fo))">$INFO[Skin.String(color_lib_menu_item_fo)]</value>
		<value>color_lib_menu_item_fo</value>
	</variable>
	<variable name="color_lib_menu_itempanel_nf">
		<value condition="!String.IsEmpty(Skin.String(color_lib_menu_itempanel_nf))">$INFO[Skin.String(color_lib_menu_itempanel_nf)]</value>
		<value>color_lib_menu_itempanel_nf</value>
	</variable>
	<variable name="color_lib_menu_item_nf">
		<value condition="!String.IsEmpty(Skin.String(color_lib_menu_item_nf))">$INFO[Skin.String(color_lib_menu_item_nf)]</value>
		<value>color_lib_menu_item_nf</value>
	</variable>
	
	<variable name="color_lib_backgroundlayer4">
		<value condition="!String.IsEmpty(Skin.String(color_lib_backgroundlayer4))">$INFO[Skin.String(color_lib_backgroundlayer4)]</value>
		<value>color_lib_backgroundlayer4</value>
	</variable>
	<variable name="color_lib_text_main">
		<value condition="!String.IsEmpty(Skin.String(color_lib_text_main))">$INFO[Skin.String(color_lib_text_main)]</value>
		<value>color_lib_text_main</value>
	</variable>
	<variable name="color_lib_selected">
		<value condition="!String.IsEmpty(Skin.String(color_lib_selected))">$INFO[Skin.String(color_lib_selected)]</value>
		<value>color_lib_selected</value>
	</variable>
	<variable name="color_lib_text_secondary">
		<value condition="!String.IsEmpty(Skin.String(color_lib_text_secondary))">$INFO[Skin.String(color_lib_text_secondary)]</value>
		<value>color_lib_text_secondary</value>
	</variable>
	<variable name="color_lib_accent">
		<value condition="!String.IsEmpty(Skin.String(color_lib_accent))">$INFO[Skin.String(color_lib_accent)]</value>
		<value>color_lib_accent</value>
	</variable>
	
	<variable name="color_lib_watchedoverlay_frame">
		<value condition="!String.IsEmpty(Skin.String(color_lib_watchedoverlay_frame))">$INFO[Skin.String(color_lib_watchedoverlay_frame)]</value>
		<value>color_lib_watchedoverlay_frame</value>
	</variable>
	<variable name="color_lib_watchedoverlay_watched">
		<value condition="!String.IsEmpty(Skin.String(color_lib_watchedoverlay_watched))">$INFO[Skin.String(color_lib_watchedoverlay_watched)]</value>
		<value>color_lib_watchedoverlay_watched</value>
	</variable>
	<variable name="color_lib_watchedoverlay_resumeable">
		<value condition="!String.IsEmpty(Skin.String(color_lib_backgroundlayer4))">$INFO[Skin.String(color_lib_watchedoverlay_resumeable)]</value>
		<value>color_lib_watchedoverlay_resumeable</value>
	</variable>
	
	
	
	
	<!-- BUTTONS -->
	<variable name="color_global_button_text_fo">
		<value condition="!String.IsEmpty(Skin.String(color_global_button_text_fo))">$INFO[Skin.String(color_global_button_text_fo)]</value>
		<value>color_global_button_text_fo</value>
	</variable>
	<variable name="color_global_button_text_nf">
		<value condition="!String.IsEmpty(Skin.String(color_global_button_text_nf))">$INFO[Skin.String(color_global_button_text_nf)]</value>
		<value>color_global_button_text_nf</value>
	</variable>
	<variable name="color_global_button_panel_fo">
		<value condition="!String.IsEmpty(Skin.String(color_global_button_panel_fo))">$INFO[Skin.String(color_global_button_panel_fo)]</value>
		<value>color_global_button_panel_fo</value>
	</variable>
	<variable name="color_global_button_panel_nf">
		<value condition="!String.IsEmpty(Skin.String(color_global_button_panel_nf))">$INFO[Skin.String(color_global_button_panel_nf)]</value>
		<value>color_global_button_panel_nf</value>
	</variable>
	<variable name="color_global_button_selected">
		<value condition="!String.IsEmpty(Skin.String(color_global_button_selected))">$INFO[Skin.String(color_global_button_selected)]</value>
		<value>color_global_button_selected</value>
	</variable>
	
	<variable name="color_global_button_disabled">
		<value condition="!String.IsEmpty(Skin.String(color_global_button_disabled))">$INFO[Skin.String(color_global_button_disabled)]</value>
		<value>color_global_button_disabled</value>
	</variable>
	<variable name="color_global_button_invalid">
		<value condition="!String.IsEmpty(Skin.String(color_global_button_invalid))">$INFO[Skin.String(color_global_button_invalid)]</value>
		<value>color_global_button_invalid</value>
	</variable>
	
	<!-- OSD  Video-->
	<variable name="color_osdvideo_dimmedbg">
		<value condition="!String.IsEmpty(Skin.String(color_osdvideo_dimmedbg))">$INFO[Skin.String(color_osdvideo_dimmedbg)]</value>
		<value>color_osdvideo_dimmedbg</value>
	</variable>
	<variable name="color_osdvideo_busyspinner">
		<value condition="!String.IsEmpty(Skin.String(color_osdvideo_busyspinner))">$INFO[Skin.String(color_osdvideo_busyspinner)]</value>
		<value>color_osdvideo_busyspinner</value>
	</variable>
	<variable name="color_osdvideo_bgpanel">
		<value condition="!String.IsEmpty(Skin.String(color_osdvideo_bgpanel))">$INFO[Skin.String(color_osdvideo_bgpanel)]</value>
		<value>color_osdvideo_bgpanel</value>
	</variable>
	<variable name="color_osdvideo_main">
		<value condition="!String.IsEmpty(Skin.String(color_osdvideo_main))">$INFO[Skin.String(color_osdvideo_main)]</value>
		<value>color_osdvideo_main</value>
	</variable>
	<variable name="color_osdvideo_secondary">
		<value condition="!String.IsEmpty(Skin.String(color_osdvideo_secondary))">$INFO[Skin.String(color_osdvideo_secondary)]</value>
		<value>color_osdvideo_secondary</value>
	</variable>
	<variable name="color_osdvideo_button_fo">
		<value condition="!String.IsEmpty(Skin.String(color_osdvideo_button_fo))">$INFO[Skin.String(color_osdvideo_button_fo)]</value>
		<value>color_osdvideo_button_fo</value>
	</variable>
	<variable name="color_osdvideo_button_nf">
		<value condition="!String.IsEmpty(Skin.String(color_osdvideo_button_nf))">$INFO[Skin.String(color_osdvideo_button_nf)]</value>
		<value>color_osdvideo_button_nf</value>
	</variable>
	<variable name="color_osdvideo_progress">
		<value condition="!String.IsEmpty(Skin.String(color_osdvideo_progress))">$INFO[Skin.String(color_osdvideo_progress)]</value>
		<value>color_osdvideo_progress</value>
	</variable>
	<variable name="color_osdvideo_remain">
		<value condition="!String.IsEmpty(Skin.String(color_osdvideo_remain))">$INFO[Skin.String(color_osdvideo_remain)]</value>
		<value>color_osdvideo_remain</value>
	</variable>
	
	<!-- OSD  Music-->
	
	<variable name="color_osdmusic_bgpanel">
		<value condition="!String.IsEmpty(Skin.String(color_osdmusic_bgpanel))">$INFO[Skin.String(color_osdmusic_bgpanel)]</value>
		<value>color_osdmusic_bgpanel</value>
	</variable>
	<variable name="color_osdmusic_bgpanelseperator">
		<value condition="!String.IsEmpty(Skin.String(color_osdmusic_bgpanelseperator))">$INFO[Skin.String(color_osdmusic_bgpanelseperator)]</value>
		<value>color_osdmusic_bgpanelseperator</value>
	</variable>
	<variable name="color_osdmusic_main">
		<value condition="!String.IsEmpty(Skin.String(color_osdmusic_main))">$INFO[Skin.String(color_osdmusic_main)]</value>
		<value>color_osdmusic_main</value>
	</variable>
	<variable name="color_osdmusic_secondary">
		<value condition="!String.IsEmpty(Skin.String(color_osdmusic_secondary))">$INFO[Skin.String(color_osdmusic_secondary)]</value>
		<value>color_osdmusic_secondary</value>
	</variable>
	<variable name="color_osdmusic_accent">
		<value condition="!String.IsEmpty(Skin.String(color_osdmusic_accent))">$INFO[Skin.String(color_osdmusic_accent)]</value>
		<value>color_osdmusic_accent</value>
	</variable>
	
	<!-- SCROLLBAR -->
	<variable name="color_global_scrollbar_panel">
		<value condition="!String.IsEmpty(Skin.String(color_global_scrollbar_panel))">$INFO[Skin.String(color_global_scrollbar_panel)]</value>
		<value>color_global_scrollbar_panel</value>
	</variable>
	<variable name="color_global_scrollbar_slider_fo">
		<value condition="!String.IsEmpty(Skin.String(color_global_scrollbar_slider_fo))">$INFO[Skin.String(color_global_scrollbar_slider_fo)]</value>
		<value>color_global_scrollbar_slider_fo</value>
	</variable>
	<variable name="color_global_scrollbar_slider_nf">
		<value condition="!String.IsEmpty(Skin.String(color_global_scrollbar_slider_nf))">$INFO[Skin.String(color_global_scrollbar_slider_nf)]</value>
		<value>color_global_scrollbar_slider_nf</value>
	</variable>

<!-- ################ -->
<!-- SET RESET COLORS -->
<!-- ################ -->
	
	<include name="reset_color_profilelogin">
		<onclick>Skin.Reset(color_profilelogin_text_main)</onclick>
		<onclick>Skin.Reset(color_profilelogin_text_main.name)</onclick>
		<onclick>Skin.Reset(color_profilelogin_text_secondary)</onclick>
		<onclick>Skin.Reset(color_profilelogin_text_secondary.name)</onclick>
		<onclick>Skin.Reset(color_profilelogin_accent)</onclick>
		<onclick>Skin.Reset(color_profilelogin_accent.name)</onclick>
		<onclick>Notification([B]Profile-login Colors[/B],Colors are recessed Now)</onclick>
	</include>
	
	<include name="reset_color_shutdown">
		<onclick>Skin.Reset(color_shutdown_dimmed_background)</onclick>
		<onclick>Skin.Reset(color_shutdown_dimmed_background.name)</onclick>
		<onclick>Skin.Reset(color_shutdown_item_fo)</onclick>
		<onclick>Skin.Reset(color_shutdown_item_fo.name)</onclick>
		<onclick>Skin.Reset(color_shutdown_item_nf)</onclick>
		<onclick>Skin.Reset(color_shutdown_item_nf.name)</onclick>
		<onclick>Notification([B]Shutdown Menu Colors[/B],Colors are recessed Now)</onclick>
	</include>
	<include name="reset_color_header">
		<onclick>Skin.Reset(color_header_backgroundpanel)</onclick>
		<onclick>Skin.Reset(color_header_backgroundpanel.name)</onclick>
		<onclick>Skin.Reset(color_header_text_main)</onclick>
		<onclick>Skin.Reset(color_header_text_main.name)</onclick>
		<onclick>Skin.Reset(color_header_text_accent)</onclick>
		<onclick>Skin.Reset(color_header_text_accent.name)</onclick>
		<onclick>Notification([B]Header Colors[/B],Colors are recessed Now)</onclick>
	</include>
	<include name="reset_color_footer">
		<onclick>Skin.Reset(color_footer_backgroundpanel)</onclick>
		<onclick>Skin.Reset(color_footer_backgroundpanel.name)</onclick>
		<onclick>Skin.Reset(color_footer_items)</onclick>
		<onclick>Skin.Reset(color_footer_items.name)</onclick>
		<onclick>Notification([B]Footer Colors[/B],Colors are recessed Now)</onclick>
	</include>
	<include name="reset_color_global_dialog">
		<onclick>Skin.Reset(color_global_dialog_background)</onclick>
		<onclick>Skin.Reset(color_global_dialog_background.name)</onclick>
		<onclick>Skin.Reset(color_global_dialog_accent)</onclick>
		<onclick>Skin.Reset(color_global_dialog_accent.name)</onclick>
		<onclick>Notification([B]Global Dialog Colors[/B],Colors are recessed Now)</onclick>
	</include>
	<include name="reset_color_global_background">
		<onclick>Skin.Reset(color_global_background_layer1)</onclick>
		<onclick>Skin.Reset(color_global_background_layer1.name)</onclick>
		<onclick>Skin.Reset(color_global_background_layer2)</onclick>
		<onclick>Skin.Reset(color_global_background_layer2.name)</onclick>
		<onclick>Skin.Reset(color_global_background_layer3)</onclick>
		<onclick>Skin.Reset(color_global_background_layer3.name)</onclick>		
		<onclick>Notification([B]Global Background Colors[/B],Colors are recessed Now)</onclick>
	</include>
	
	<include name="reset_color_global_button">
		<onclick>Skin.Reset(color_global_button_panel_fo)</onclick>
		<onclick>Skin.Reset(color_global_button_panel_fo.name)</onclick>
		<onclick>Skin.Reset(color_global_button_text_fo)</onclick>
		<onclick>Skin.Reset(color_global_button_text_fo.name)</onclick>
		<onclick>Skin.Reset(color_global_button_panel_nf)</onclick>
		<onclick>Skin.Reset(color_global_button_panel_nf.name)</onclick>
		<onclick>Skin.Reset(color_global_button_text_nf)</onclick>
		<onclick>Skin.Reset(color_global_button_text_nf.name)</onclick>
		<onclick>Skin.Reset(color_global_button_selected)</onclick>
		<onclick>Skin.Reset(color_global_button_selected.name)</onclick>
		<onclick>Skin.Reset(color_global_button_disabled)</onclick>
		<onclick>Skin.Reset(color_global_button_disabled.name)</onclick>
		<onclick>Skin.Reset(color_global_button_invalid)</onclick>
		<onclick>Skin.Reset(color_global_button_invalid.name)</onclick>
		<onclick>Notification([B]Global Button Colors[/B],Colors are recessed Now)</onclick>
	</include>
	
	<include name="reset_color_global_scrollbar">
		<onclick>Skin.Reset(color_global_scrollbar_panel)</onclick>
		<onclick>Skin.Reset(color_global_scrollbar_panel.name)</onclick>
		<onclick>Skin.Reset(color_global_scrollbar_slider_fo)</onclick>
		<onclick>Skin.Reset(color_global_scrollbar_slider_fo.name)</onclick>
		<onclick>Skin.Reset(color_global_scrollbar_slider_nf)</onclick>
		<onclick>Skin.Reset(color_global_scrollbar_slider_nf.name)</onclick>
		<onclick>Notification([B]Global Scrollbar Colors[/B],Colors are recessed Now)</onclick>
	</include>
	
	
	<include name="reset_color_home_background">
		<onclick>Skin.Reset(color_home_background_layer1)</onclick>
		<onclick>Skin.Reset(color_home_background_layer1.name)</onclick>
		<onclick>Skin.Reset(color_home_background_layer2)</onclick>
		<onclick>Skin.Reset(color_home_background_layer2.name)</onclick>
		<onclick>Skin.Reset(color_home_background_layer3)</onclick>
		<onclick>Skin.Reset(color_home_background_layer3.name)</onclick>
		<onclick>Notification([B]Home Background Colors[/B],Colors are recessed Now)</onclick>
	</include>
	<include name="reset_color_home">
		<onclick>Skin.Reset(color_home_text_main)</onclick>
		<onclick>Skin.Reset(color_home_text_main.name)</onclick>
		<onclick>Skin.Reset(color_home_text_secondary)</onclick>
		<onclick>Skin.Reset(color_home_text_secondary.name)</onclick>
		<onclick>Skin.Reset(color_home_accent)</onclick>
		<onclick>Skin.Reset(color_home_accent.name)</onclick>
		<onclick>Skin.Reset(color_home_flags)</onclick>
		<onclick>Skin.Reset(color_home_flags.name)</onclick>
		<onclick>Notification([B]Home Colors[/B],Colors are recessed Now)</onclick>
	</include>
				
	<include name="reset_color_home_widgets">
		<onclick>Skin.Reset(color_home_widget_header)</onclick>
		<onclick>Skin.Reset(color_home_widget_header.name)</onclick>
		
		<onclick>Skin.Reset(color_home_widgetitem_frame_fo)</onclick>
		<onclick>Skin.Reset(color_home_widgetitem_frame_fo.name)</onclick>
		<onclick>Skin.Reset(color_home_widgetitem_itemtag_bgpanel_fo)</onclick>
		<onclick>Skin.Reset(color_home_widgetitem_itemtag_bgpanel_fo.name)</onclick>
		<onclick>Skin.Reset(color_home_widgetitem_itemtag_label1_fo)</onclick>
		<onclick>Skin.Reset(color_home_widgetitem_itemtag_label1_fo.name)</onclick>
		<onclick>Skin.Reset(color_home_widgetitem_itemtag_label2_fo)</onclick>
		<onclick>Skin.Reset(color_home_widgetitem_itemtag_label2_fo.name)</onclick>
		<onclick>Skin.Reset(color_home_widgetitem_frame_nf)</onclick>
		<onclick>Skin.Reset(color_home_widgetitem_frame_nf.name)</onclick>
		<onclick>Skin.Reset(color_home_widgetitem_itemtag_bgpanel_nf)</onclick>
		<onclick>Skin.Reset(color_home_widgetitem_itemtag_bgpanel_nf.name)</onclick>
		<onclick>Skin.Reset(color_home_widgetitem_itemtag_label1_nf)</onclick>
		<onclick>Skin.Reset(color_home_widgetitem_itemtag_label1_nf.name)</onclick>
		<onclick>Skin.Reset(color_home_widgetitem_itemtag_label2_nf)</onclick>
		<onclick>Skin.Reset(color_home_widgetitem_itemtag_label2_nf.name)</onclick>
		<onclick>Skin.Reset(color_home_widgetitem_overlayicon)</onclick>
		<onclick>Skin.Reset(color_home_widgetitem_overlayicon.name)</onclick>
		<onclick>Skin.Reset(color_home_watchedoverlay_progressbar_progress)</onclick>
		<onclick>Skin.Reset(color_home_watchedoverlay_progressbar_progress.name)</onclick>
		<onclick>Skin.Reset(color_home_watchedoverlay_progressbar_remain)</onclick>
		<onclick>Skin.Reset(color_home_watchedoverlay_progressbar_remain.name)</onclick>
		<onclick>Notification([B]Home Widget Colors[/B],Colors are recessed Now)</onclick>		
	</include>			
				
	
	
	<include name="reset_color_home_menu">
		<onclick>Skin.Reset(color_home_menu_backgroundpanel)</onclick>
		<onclick>Skin.Reset(color_home_menu_backgroundpanel.name)</onclick>
		<onclick>Skin.Reset(color_home_menu_accent)</onclick>
		<onclick>Skin.Reset(color_home_menu_accent.name)</onclick>
		<onclick>Skin.Reset(color_home_menu_itempanel_fo)</onclick>
		<onclick>Skin.Reset(color_home_menu_itempanel_fo.name)</onclick>
		<onclick>Skin.Reset(color_home_menu_item_fo)</onclick>
		<onclick>Skin.Reset(color_home_menu_item_fo.name)</onclick>
		<onclick>Skin.Reset(color_home_menu_itempanel_nf)</onclick>
		<onclick>Skin.Reset(color_home_menu_itempanel_nf.name)</onclick>
		<onclick>Skin.Reset(color_home_menu_item_nf)</onclick>
		<onclick>Skin.Reset(color_home_menu_item_nf.name)</onclick>
		<onclick>Notification([B]Home Main Menu Colors[/B],Colors are recessed Now)</onclick>
	</include>
	
	<include name="reset_color_hub">
		<onclick>Skin.Reset(color_hub_backgroundlayer1)</onclick>
		<onclick>Skin.Reset(color_hub_backgroundlayer1.name)</onclick>
		<onclick>Skin.Reset(color_hub_menu_panel_gradienttop)</onclick>
		<onclick>Skin.Reset(color_hub_menu_panel_gradienttop.name)</onclick>
		<onclick>Skin.Reset(color_hub_menu_panel_gradientcenter)</onclick>
		<onclick>Skin.Reset(color_hub_menu_panel_gradientcenter.name)</onclick>
		<onclick>Skin.Reset(color_hub_menu_panel_gradientbottom)</onclick>
		<onclick>Skin.Reset(color_hub_menu_panel_gradientbottom.name)</onclick>
		<onclick>Skin.Reset(color_hub_menu_text_fo)</onclick>
		<onclick>Skin.Reset(color_hub_menu_text_fo.name)</onclick>
		<onclick>Skin.Reset(color_hub_menu_text_nf)</onclick>
		<onclick>Skin.Reset(color_hub_menu_text_nf.name)</onclick>
		<onclick>Skin.Reset(color_hub_text_main)</onclick>
		<onclick>Skin.Reset(color_hub_text_main.name)</onclick>
		<onclick>Skin.Reset(color_hub_text_secondary)</onclick>
		<onclick>Skin.Reset(color_hub_text_secondary.name)</onclick>
		<onclick>Skin.Reset(color_hub_accent)</onclick>
		<onclick>Skin.Reset(color_hub_accent.name)</onclick>
		<onclick>Skin.Reset(color_hub_widget_frame_fo)</onclick>
		<onclick>Skin.Reset(color_hub_widget_frame_fo.name)</onclick>
		<onclick>Skin.Reset(color_hub_widget_frame_nf)</onclick>
		<onclick>Skin.Reset(color_hub_widget_frame_nf.name)</onclick>
		<onclick>Notification([B]HUB Colors[/B],Colors are recessed Now)</onclick>
	</include>
	
	<include name="reset_color_lib">
		<onclick>Skin.Reset(color_lib_menu_backgroundpanel)</onclick>
		<onclick>Skin.Reset(color_lib_menu_backgroundpanel.name)</onclick>
		<onclick>Skin.Reset(color_lib_text_main)</onclick>
		<onclick>Skin.Reset(color_lib_text_main.name)</onclick>
		<onclick>Skin.Reset(color_lib_text_secondary)</onclick>
		<onclick>Skin.Reset(color_lib_text_secondary.name)</onclick>
		<onclick>Skin.Reset(color_lib_accent)</onclick>
		<onclick>Skin.Reset(color_lib_accent.name)</onclick>
		<onclick>Skin.Reset(color_lib_selected)</onclick>
		<onclick>Skin.Reset(color_lib_selected.name)</onclick>
		<onclick>Skin.Reset(color_lib_backgroundlayer4)</onclick>
		<onclick>Skin.Reset(color_lib_backgroundlayer4)</onclick>
		
		
		<onclick>Skin.Reset(color_lib_menu_accent)</onclick>
		<onclick>Skin.Reset(color_lib_menu_accent.name)</onclick>
		<onclick>Skin.Reset(color_lib_menu_itempanel_fo)</onclick>
		<onclick>Skin.Reset(color_lib_menu_itempanel_fo.name)</onclick>
		<onclick>Skin.Reset(color_lib_menu_item_fo)</onclick>
		<onclick>Skin.Reset(color_lib_menu_item_fo.name)</onclick>
		<onclick>Skin.Reset(color_lib_menu_itempanel_nf)</onclick>
		<onclick>Skin.Reset(color_lib_menu_itempanel_nf.name)</onclick>
		<onclick>Skin.Reset(color_lib_menu_item_nf)</onclick>
		<onclick>Skin.Reset(color_lib_menu_item_nf.name)</onclick>
		
		<onclick>Skin.Reset(color_lib_widget_header)</onclick>
		<onclick>Skin.Reset(color_lib_widget_header.name)</onclick>
		
		<onclick>Skin.Reset(color_lib_widgetitem_frame_fo)</onclick>
		<onclick>Skin.Reset(color_lib_widgetitem_frame_fo.name)</onclick>
		<onclick>Skin.Reset(color_lib_widgetitem_itemtag_bgpanel_fo)</onclick>
		<onclick>Skin.Reset(color_lib_widgetitem_itemtag_bgpanel_fo.name)</onclick>
		<onclick>Skin.Reset(color_lib_widgetitem_itemtag_label1_fo)</onclick>
		<onclick>Skin.Reset(color_lib_widgetitem_itemtag_label1_fo.name)</onclick>
		<onclick>Skin.Reset(color_lib_widgetitem_itemtag_label2_fo)</onclick>
		<onclick>Skin.Reset(color_lib_widgetitem_itemtag_label2_fo.name)</onclick>
		<onclick>Skin.Reset(color_lib_widgetitem_itemtag_bgpanel_nf)</onclick>
		<onclick>Skin.Reset(color_lib_widgetitem_itemtag_bgpanel_nf.name)</onclick>
		<onclick>Skin.Reset(color_lib_widgetitem_frame_nf)</onclick>
		<onclick>Skin.Reset(color_lib_widgetitem_frame_nf.name)</onclick>
		<onclick>Skin.Reset(color_lib_widgetitem_itemtag_label1_nf)</onclick>
		<onclick>Skin.Reset(color_lib_widgetitem_itemtag_label1_nf.name)</onclick>
		<onclick>Skin.Reset(color_lib_widgetitem_itemtag_label2_nf)</onclick>
		<onclick>Skin.Reset(color_lib_widgetitem_itemtag_label2_nf.name)</onclick>
		<onclick>Skin.Reset(color_lib_widgetitem_overlayicon)</onclick>
		<onclick>Skin.Reset(color_lib_widgetitem_overlayicon.name)</onclick>
		<onclick>Skin.Reset(color_lib_watchedoverlay_progressbar_remain)</onclick>
		<onclick>Skin.Reset(color_lib_watchedoverlay_progressbar_remain.name)</onclick>
		<onclick>Skin.Reset(color_lib_watchedoverlay_progressbar_progress)</onclick>
		<onclick>Skin.Reset(color_lib_watchedoverlay_progressbar_progress.name)</onclick>
		<onclick>Skin.Reset(color_lib_watchedoverlay_frame)</onclick>
		<onclick>Skin.Reset(color_lib_watchedoverlay_frame.name)</onclick>
		<onclick>Skin.Reset(color_lib_watchedoverlay_watched)</onclick>
		<onclick>Skin.Reset(color_lib_watchedoverlay_watched.name)</onclick>
		<onclick>Skin.Reset(color_lib_watchedoverlay_resumeable)</onclick>
		<onclick>Skin.Reset(color_lib_watchedoverlay_resumeable.name)</onclick>
		<onclick>Notification([B]Library Colors[/B],Colors are recessed Now)</onclick>
	</include>
	
	<include name="reset_color_spotlightlib">
		<onclick>Skin.Reset(color_spotlightlib_background_layer1)</onclick>
		<onclick>Skin.Reset(color_spotlightlib_background_layer1.name)</onclick>
		<onclick>Skin.Reset(color_spotlightlib_main)</onclick>
		<onclick>Skin.Reset(color_spotlightlib_main.name)</onclick>
		<onclick>Skin.Reset(color_spotlightlib_secondary)</onclick>
		<onclick>Skin.Reset(color_spotlightlib_secondary.name)</onclick>
		<onclick>Skin.Reset(color_spotlightlib_accent)</onclick>
		<onclick>Skin.Reset(color_spotlightlib_accent.name)</onclick>
		<onclick>Skin.Reset(color_spotlightlib_itemframe_fo)</onclick>
		<onclick>Skin.Reset(color_spotlightlib_itemframe_fo.name)</onclick>
		<onclick>Skin.Reset(color_spotlightlib_itemframe_nf)</onclick>
		<onclick>Skin.Reset(color_spotlightlib_itemframe_nf.name)</onclick>
		<onclick>Skin.Reset(color_spotlightlib_flags)</onclick>
		<onclick>Skin.Reset(color_spotlightlib_flags.name)</onclick>
		<onclick>Notification([I]Library[/I] [B]Spotlight Layout Colors[/B],Colors are recessed Now)</onclick>
	</include>
	
	<include name="reset_color_osdvideo">
		<onclick>Skin.Reset(color_osdvideo_dimmedbg)</onclick>
		<onclick>Skin.Reset(color_osdvideo_dimmedbg.name)</onclick>
		<onclick>Skin.Reset(color_osdvideo_busyspinner)</onclick>
		<onclick>Skin.Reset(color_osdvideo_busyspinner.name)</onclick>
		<onclick>Skin.Reset(color_osdvideo_bgpanel)</onclick>
		<onclick>Skin.Reset(color_osdvideo_bgpanel.name)</onclick>
		<onclick>Skin.Reset(color_osdvideo_main)</onclick>
		<onclick>Skin.Reset(color_osdvideo_main.name)</onclick>
		<onclick>Skin.Reset(color_osdvideo_secondary)</onclick>
		<onclick>Skin.Reset(color_osdvideo_secondary.name)</onclick>
		<onclick>Skin.Reset(color_osdvideo_button_fo)</onclick>
		<onclick>Skin.Reset(color_osdvideo_button_fo.name)</onclick>
		<onclick>Skin.Reset(color_osdvideo_button_nf)</onclick>
		<onclick>Skin.Reset(color_osdvideo_button_nf.name)</onclick>
		<onclick>Skin.Reset(color_osdvideo_progress)</onclick>
		<onclick>Skin.Reset(color_osdvideo_progress.name)</onclick>
		<onclick>Skin.Reset(color_osdvideo_remain)</onclick>
		<onclick>Skin.Reset(color_osdvideo_remain.name)</onclick>
		<onclick>Notification([B]Video OSD Colors[/B],Colors are recessed Now)</onclick>
	</include>
	
	<include name="reset_color_osdmusic">
		<onclick>Skin.Reset(color_osdmusic_bgpanel)</onclick>
		<onclick>Skin.Reset(color_osdmusic_bgpanel.name)</onclick>
		<onclick>Skin.Reset(color_osdmusic_bgpanelseperator)</onclick>
		<onclick>Skin.Reset(color_osdmusic_bgpanelseperator.name)</onclick>
		<onclick>Skin.Reset(color_osdmusic_main)</onclick>
		<onclick>Skin.Reset(color_osdmusic_main.name)</onclick>
		<onclick>Skin.Reset(color_osdmusic_secondary)</onclick>
		<onclick>Skin.Reset(color_osdmusic_secondary.name)</onclick>
		<onclick>Skin.Reset(color_osdmusic_accent)</onclick>
		<onclick>Skin.Reset(color_osdmusic_accent.name)</onclick>
		<onclick>Notification([B]Music OSD Colors[/B],Colors are recessed Now)</onclick>
	</include>
</includes>
