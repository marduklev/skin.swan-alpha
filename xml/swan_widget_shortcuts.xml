<?xml version="1.0" encoding="UTF-8"?>
<includes>
	
	<include name="1103_Content_SwanWidgetShortcuts">
		
		<control type="label" id="10">
			<description>VIDEO</description>
			<visible>!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)</visible>
			<height>60</height>
			<label>1212</label>
			<font>notosans_30_bold</font>
		</control>
		<control type="button" id="11">
			<visible>Library.HasContent(video)</visible>
			<visible>!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)</visible>
			<onclick>Dialog.Close(1103)</onclick>
			<onclick>SetProperty(ShortcutPlaylistContent,video,home)</onclick>
			<onclick>ActivateWindow(selectdialog)</onclick>
			<label>$LOCALIZE[20012]</label>
		</control>
		<include content="SwanShortcuts_SetTargetAndPath_CommonButton" condition="!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">
			<param name="visible" value="Library.HasContent(movies)" />
			<param name="id" value="12" />
			<param name="label" value="$LOCALIZE[3]" />
			<param name="target" value="videos" />
			<param name="path" value="Videos,library://videos/" />
		</include>
		<include content="SwanShortcuts_SetTargetAndPath_CommonButton" condition="!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">
			<param name="visible" value="Library.HasContent(movies)" />
			<param name="id" value="13" />
			<param name="label" value="$LOCALIZE[342]" />
			<param name="target" value="videos" />
			<param name="path" value="Videos,videodb://movies/" />
		</include>
		<include content="SwanShortcuts_SetTargetAndPath_CommonButton" condition="!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">
			<param name="visible" value="Library.HasContent(tvshows)" />
			<param name="id" value="14" />
			<param name="label" value="$LOCALIZE[20343]" />
			<param name="target" value="videos" />
			<param name="path" value="Videos,videodb://tvshows/" />
		</include>
		<include content="SwanShortcuts_SetTargetAndPath_CommonButton" condition="!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">
			<param name="visible" value="Library.HasContent(musicvideos)" />
			<param name="id" value="15" />
			<param name="label" value="$LOCALIZE[20389]" />
			<param name="target" value="videos" />
			<param name="path" value="Videos,videodb://musicvideos/ " />
		</include>
		<include content="SwanShortcuts_SetTargetAndPath_CommonButton" condition="!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">
			<param name="id" value="16" />
			<param name="label" value="$LOCALIZE[1037]" />
			<param name="target" value="videos" />
			<param name="path" value="Videos,addons://sources/video/" />
		</include>
		<include content="SwanShortcuts_SetTargetAndPath_CommonButton" condition="!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">
			<param name="visible" value="Library.HasContent(movies)" />
			<param name="id" value="17" />
			<param name="label" value="$LOCALIZE[24005] ( $LOCALIZE[14215] )" />
			<param name="target" value="videos" />
			<param name="path" value="Videos,sources://video/" />
		</include>
		
		
		<control type="label" id="20">
			<description>MUSIC</description>
			<visible>!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)</visible>
			<height>60</height>
			<label>1211</label>
			<font>notosans_30_bold</font>
		</control>
		<control type="button" id="21">
			<visible>Library.HasContent(Music)</visible>
			<onclick>Dialog.Close(1103)</onclick>
			<visible>String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)</visible>
			<onclick>Skin.Reset(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_path)</onclick>
			<onclick>Skin.Reset(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_executebuiltin)</onclick>
			
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_target,1110)</onclick>
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_name,Music HUB)</onclick>
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_thumb,defaultaddonaudiodecoder.png)</onclick>
			
			<onclick condition="!String.IsEmpty(Window(home).Property(shortcutitem_nr))">ClearProperty(shortcutitem_nr,home)</onclick>
			<onclick condition="!String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">ClearProperty(shortcutaction_inprogress,home)</onclick>
			<label>Music HUB</label>
		</control>
		
		<control type="button" id="22">
			<description>Set target Template, action window and action set string direct e.g. plailist?xsp path</description>
			<visible>Library.HasContent(Music)</visible>
			<visible>!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)</visible>
			<onclick>Dialog.Close(1103)</onclick>
			<onclick>SetProperty(ShortcutPlaylistContent,music,home)</onclick>
			<onclick>ActivateWindow(selectdialog)</onclick>
			<label>$LOCALIZE[20011]</label>
		</control>
		<include content="SwanShortcuts_SetTargetAndPath_CommonButton" condition="!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">
			<param name="visible" value="Library.HasContent(Music)" />
			<param name="id" value="23" />
			<param name="label" value="$LOCALIZE[249]" />
			<param name="target" value="music" />
			<param name="path" value="Music,library://music/" />
		</include>
		<include content="SwanShortcuts_SetTargetAndPath_CommonButton" condition="!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">
			<param name="id" value="24" />
			<param name="label" value="$LOCALIZE[1038]" />
			<param name="target" value="music" />
			<param name="path" value="Music,addons://sources/audio/" />
		</include>
		<include content="SwanShortcuts_SetTargetAndPath_CommonButton" condition="!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">
			<param name="visible" value="Library.HasContent(Music)" />
			<param name="id" value="25" />
			<param name="label" value="$LOCALIZE[24005] ( $LOCALIZE[10502] )" />
			<param name="target" value="music" />
			<param name="path" value="Music,sources://music/" />
		</include>
		<include content="SwanShortcuts_SetTargetAndPath_CommonButton" condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">
			<param name="visible" value="Library.HasContent(Music)" />
			<param name="id" value="26" />
			<param name="label" value="$LOCALIZE[10503]" />
			<param name="target" value="musicplaylisteditor" />
			<param name="path" value="" />
		</include>
		
		
		<control type="label" id="30">
			<description>PVR</description>
			<height>60</height>	
			<visible>!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)</visible>
			<label>$LOCALIZE[14204]</label>
			<font>notosans_30_bold</font>
		</control>
		<include content="SwanShortcuts_SetTargetAndPath_CommonButton" condition="!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">
			<param name="id" value="31" />
			<param name="visible" value="System.HasPVRAddon" />
			<param name="label" value="$LOCALIZE[19180]" />
			<param name="target" value="tvchannels" />
			<param name="path" value="TVChannels,pvr://channels/tv/" />
		</include>
		<control type="button" id="32">
			<onclick>Dialog.Close(1103)</onclick>
			<visible>String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu) + System.HasPVRAddon</visible>
			<onclick>Skin.Reset(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_executebuiltin)</onclick>
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_target,tvguide)</onclick>
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_path,pvr://channels/tv/)</onclick>
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_name,$LOCALIZE[10702])</onclick>
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_thumb,buttons/osd/pvr.png)</onclick>
			<onclick condition="!String.IsEmpty(Window(home).Property(shortcutitem_nr))">ClearProperty(shortcutitem_nr,home)</onclick>
			<onclick condition="!String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">ClearProperty(shortcutaction_inprogress,home)</onclick>
			<label>$LOCALIZE[10702]</label>
		</control>
		<include content="SwanShortcuts_SetTargetAndPath_CommonButton" condition="!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)" description="TVRecordings,pvr://recordings/tv/active/$INFO[SkinString(NEEDSKINSTRINGSTOREDDIRECTORYBEFORE)]/">
			<param name="id" value="33" />
			<param name="visible" value="System.HasPVRAddon" />
			<param name="label" value="$LOCALIZE[10701]" />
			<param name="target" value="tvrecordings" />
			<param name="path" value="TVRecordings,pvr://recordings/tv/active?view=flat" />
		</include>
		<include content="SwanShortcuts_SetTargetAndPath_CommonButton" condition="!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">
			<param name="id" value="35" />
			<param name="visible" value="System.HasPVRAddon" />
			<param name="label" value="$LOCALIZE[19183]" />
			<param name="target" value="radiochannels" />
			<param name="path" value="RadioChannels,pvr://channels/radio/" />
		</include>
		<control type="button" id="36">
			<onclick>Dialog.Close(1103)</onclick>
			<visible>String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu) + System.HasPVRAddon</visible>
			<onclick>Skin.Reset(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_executebuiltin)</onclick>
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_target,radioguide)</onclick>
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_path,pvr://channels/radio/)</onclick>
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_name,$LOCALIZE[10707])</onclick>
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_thumb,buttons/osd/pvr.png)</onclick>
			<onclick condition="!String.IsEmpty(Window(home).Property(shortcutitem_nr))">ClearProperty(shortcutitem_nr,home)</onclick>
			<onclick condition="!String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">ClearProperty(shortcutaction_inprogress,home)</onclick>
			<label>$LOCALIZE[10707]</label>
		</control>
		<include content="SwanShortcuts_SetTargetAndPath_CommonButton" condition="!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">
			<param name="id" value="37" />
			<param name="visible" value="System.HasPVRAddon" />
			<param name="label" value="$LOCALIZE[10706]" />
			<param name="target" value="radiorecordings" />
			<param name="path" value="RadioRecordings,pvr://recordings/radio/active?view=flat" />
		</include>
		
		
		<control type="label" id="40">
			<description>PICTURES</description>
			<visible>!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)</visible>
			<height>60</height>
			<label>1</label>
			<font>notosans_30_bold</font>
		</control>
		<include content="SwanShortcuts_SetTargetAndPath_CommonButton" condition="!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">
			<param name="id" value="41" />
			<param name="label" value="$LOCALIZE[1]" />
			<param name="target" value="pictures" />
			<param name="path" value="pictures,pictures://" />
		</include>
		
		
		<control type="label" id="45">
			<description>GAMES</description>
			<visible>!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)</visible>
			<height>60</height>
			<label>10821</label>
			<font>notosans_30_bold</font>
		</control>
		<include content="SwanShortcuts_SetTargetAndPath_CommonButton" condition="!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">
			<param name="id" value="46" />
			<param name="label" value="$LOCALIZE[10821]" />
			<param name="target" value="games" />
			<param name="path" value="games" />
		</include>
		
		
		<control type="label" id="50">
			<description>  M I S C  </description>
			<visible>!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)</visible>
			<height>60</height>
			<label>21459</label>
			<font>notosans_30_bold</font>
		</control>
		<control type="button" id="51">
			<onclick>Dialog.Close(1103)</onclick>
			<visible>String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)</visible>
			<onclick>Skin.Reset(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_path)</onclick>
			<onclick>Skin.Reset(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_executebuiltin)</onclick>
			
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_target,settings)</onclick>
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_name,$LOCALIZE[10004])</onclick>
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_thumb,icons/swanwidgets.png)</onclick>
			<onclick condition="!String.IsEmpty(Window(home).Property(shortcutitem_nr))">ClearProperty(shortcutitem_nr,home)</onclick>
			<onclick condition="!String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">ClearProperty(shortcutaction_inprogress,home)</onclick>
			<label>$LOCALIZE[10004]</label>
		</control>
		<control type="button" id="52">
			<onclick>Dialog.Close(1103)</onclick>
			<visible>String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)</visible>
			<onclick>Skin.Reset(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_path)</onclick>
			<onclick>Skin.Reset(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_executebuiltin)</onclick>
			
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_target,skinsettings)</onclick>
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_name,$LOCALIZE[10035])</onclick>
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_thumb,icons/skinsettings)</onclick>
			
			<onclick condition="!String.IsEmpty(Window(home).Property(shortcutitem_nr))">ClearProperty(shortcutitem_nr,home)</onclick>
			<onclick condition="!String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">ClearProperty(shortcutaction_inprogress,home)</onclick>
			<label>$LOCALIZE[10035]</label>
		</control>
		
		<control type="button" id="53">
			<description>FAVOURITES</description>
			<visible>!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)</visible>
			
			<onclick>Dialog.Close(1103)</onclick>
			
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.Reset(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_executebuiltin)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.Reset(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_path)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.Reset(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_fanart)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_target,favourites)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_name,$LOCALIZE[1036])</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_thumb,resource://resource.images.skin.swan/tempfoldersqaurethumbs/favourites_1.png)</onclick>
			
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)">Skin.Reset(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_target)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)">Skin.Reset(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_limit)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)">Skin.Reset(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_sortorder)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)">Skin.Reset(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_sortorder.label)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)">Skin.Reset(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_sortby)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)">Skin.Reset(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_sortby.label)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_path,favourites://)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_name,$LOCALIZE[1036])</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_layout,landscape)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_layout.label,landscape)</onclick>
			
			<onclick condition="!String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">ClearProperty(shortcutaction_inprogress,home)</onclick>
			<label>$LOCALIZE[1036]</label>
		</control>
		
		<!-- weather  may need static items ??? for widgets - usi include content conditions for static later ?-->
		<control type="button" id="54">
			<description>WEATHER     for widgets use hidden list ? static item and use container folderpath? or static content with include conditions or fetch container via activate window -fetch path store to prop - close </description>
			<onclick>Dialog.Close(1103)</onclick>
			<visible>String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)</visible>
			
			<onclick>Skin.Reset(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_executebuiltin)</onclick>
			<onclick>Skin.Reset(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_path)</onclick>
			
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_target,weather)</onclick>
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_name,$LOCALIZE[12600])</onclick>
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_thumb,resource://resource.images.skin.swan/tempfoldersqaurethumbs/weather.png)</onclick>
			<onclick condition="!String.IsEmpty(Window(home).Property(shortcutitem_nr))">ClearProperty(shortcutitem_nr,home)</onclick>
			<onclick condition="!String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">ClearProperty(shortcutaction_inprogress,home)</onclick>
			<label>$LOCALIZE[12600]</label>
		</control>
		
		<!--
		<control type="button" id="55">
			<onclick>Dialog.Close(1103)</onclick>
			<visible>String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)</visible>
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_path,1125)</onclick>
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_name, X S P)</onclick>
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_thumb,icons/swanwidgets.png)</onclick>
			<onclick>Skin.Reset(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_target)</onclick>
			<onclick condition="!String.IsEmpty(Window(home).Property(shortcutitem_nr))">ClearProperty(shortcutitem_nr,home)</onclick>
			<onclick condition="!String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">ClearProperty(shortcutaction_inprogress,home)</onclick>
			<label>$LOCALIZE[10004]</label>
		</control>
		-->
		
		<control type="button" id="56">
			<description>SEARCH WINDOW</description>
			<onclick>Dialog.Close(1103)</onclick>
			<visible>String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)</visible>
			<onclick>Skin.Reset(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_executebuiltin)</onclick>
			<onclick>Skin.Reset(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_path)</onclick>
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_target,1120)</onclick>
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_name,$LOCALIZE[137])</onclick>
			<onclick>Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_thumb,resource://resource.images.skin.swan/tempfoldersqaurethumbs/search.png)</onclick>
			<onclick condition="!String.IsEmpty(Window(home).Property(shortcutitem_nr))">ClearProperty(shortcutitem_nr,home)</onclick>
			<onclick condition="!String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">ClearProperty(shortcutaction_inprogress,home)</onclick>
			<label>$LOCALIZE[137]</label>
		</control>
		
		
		<control type="label" id="61">
			<description>ADDONS</description>
			<visible>!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)</visible>
			<height>60</height>
			<label>24001</label>
			<font>notosans_30_bold</font>
		</control>
		<include content="SwanShortcuts_SetTargetAndPath_CommonButton" condition="!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">
			<param name="id" value="62" />
			<param name="label" value="$LOCALIZE[24998]" />
			<param name="target" value="addonBrowser" />
			<param name="path" value="AddonBrowser,addons://user/" />
		</include>
		<include content="SwanShortcuts_SetTargetAndPath_CommonButton" condition="!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">
			<param name="id" value="63" />
			<param name="visible" value="System.Platform.Android" />
			<param name="label" value="$LOCALIZE[20244]" />
			<param name="target" value="programs" />
			<param name="path" value="Programs,androidapp://sources/apps/" />
		</include>
		<include content="SwanShortcuts_SetTargetAndPath_CommonButton" condition="!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">
			<param name="id" value="64" />
			<param name="label" value="$LOCALIZE[1043]" />
			<param name="target" value="programs" />
			<param name="path" value="Programs,addons://sources/executable/" />
		</include>
		
		<control type="label" id="80">
			<description>SHUTDOWN MENU ITEMS</description>
			<visible>String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)</visible>
			<height>60</height>
			<label>DEFAULT SHUTDOWN-MENU ITEMS</label>
			<font>notosans_30_bold</font>
		</control>
		
		<include content="SwanShortcuts_SetShutdownmenuItem_CommonButton">
			<param name="button_id" value="81" />
			<param name="action" value="ActivateWindow(home)" />
			<param name="label" value="$LOCALIZE[10000]" />
			<param name="thumb" value="icons/home.png" />
		</include>
		<include content="SwanShortcuts_SetShutdownmenuItem_CommonButton">
			<param name="button_id" value="82" />
			<param name="action" value="ActivateWindow(settings)" />
			<param name="label" value="$LOCALIZE[5]" />
			<param name="thumb" value="icons/settingsslider.png" />
		</include>
		<include content="SwanShortcuts_SetShutdownmenuItem_CommonButton" condition="System.ShowExitButton">
			<param name="button_id" value="83" />
			<param name="action" value="quit()" />
			<param name="label" value="$LOCALIZE[13012]" />
			<param name="thumb" value="icons/arrowleft.png" />
		</include>
		<include content="SwanShortcuts_SetShutdownmenuItem_CommonButton" condition="System.CanPowerDown">
			<param name="button_id" value="84" />
			<param name="action" value="powerdown()" />
			<param name="label" value="$LOCALIZE[13016]" />
			<param name="thumb" value="icons/shutdown.png" />
		</include>
		<include content="SwanShortcuts_SetShutdownmenuItem_CommonButton" condition="System.CanReboot">
			<param name="button_id" value="85" />
			<param name="action" value="reboot()" />
			<param name="label" value="$LOCALIZE[13013]" />
			<param name="thumb" value="icons/shittyrebbot.png" />
		</include>
		<include content="SwanShortcuts_SetShutdownmenuItem_CommonButton" condition="System.CanPowerDown | System.CanSuspend | System.CanHibernate">
			<param name="button_id" value="86" />
			<param name="action" value="alarmclock(shutdowntimer,shutdown())" />
			<param name="label" value="$LOCALIZE[20150]" />
			<param name="thumb" value="icons/alarmadd.png" />
		</include>
		<include content="SwanShortcuts_SetShutdownmenuItem_CommonButton" condition="System.CanSuspend">
			<param name="button_id" value="87" />
			<param name="action" value="suspend()" />
			<param name="label" value="$LOCALIZE[13011]" />
			<param name="thumb" value="icons/suspend.png" />
		</include>
		<include content="SwanShortcuts_SetShutdownmenuItem_CommonButton" condition="System.CanHibernate">
			<param name="button_id" value="88" />
			<param name="action" value="hibernate()" />
			<param name="label" value="$LOCALIZE[13010]" />
			<param name="thumb" value="icons/hibernate.png" />
		</include>
		<include content="SwanShortcuts_SetShutdownmenuItem_CommonButton">
			<param name="button_id" value="89" />
			<param name="action" value="reloadskin()" />
			<param name="label" value="$LOCALIZE[20183]" />
			<param name="thumb" value="resource://resource.images.skin.swan/tempfoldersqaurethumbs/synchronize.png" />
		</include>
		<include content="SwanShortcuts_SetShutdownmenuItem_CommonButton" condition="System.HasMediadvd">
			<param name="button_id" value="90" />
			<param name="action" value="EjectTray()" />
			<param name="label" value="$LOCALIZE[13276] $LOCALIZE[427] • $LOCALIZE[13391]" />
			<param name="thumb" value="" />
		</include>
		<include content="SwanShortcuts_SetShutdownmenuItem_CommonButton" condition="System.HasMediadvd">
			<param name="button_id" value="91" />
			<param name="action" value="PlayDisc()" />
			<param name="label" value="Play Disc" />
			<param name="thumb" value="" />
		</include>
		<include content="SwanShortcuts_SetShutdownmenuItem_CommonButton" condition="false">
			<param name="button_id" value="95" />
			<param name="action" value="RunScript(special://skin/scripts/multiple_test.py)" />
			<param name="label" value="test" />
			<param name="thumb" value="icons/debug.png" />
		</include>	
		
		<control type="label" id="71">
			<description>set direct or use selectdialog ?</description>
			<height>60</height>
			<label>CUSTOM [I]( a d v a n c e d)[/I]</label>
			<font>notosans_30_bold</font>
		</control>
		<control type="button" id="72">
			<visible>!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)</visible>
			<label>set target   </label>
			<label2>https://kodi.wiki/view/Opening_Windows_and_Dialogs | https://kodi.wiki/view/Window_IDs</label2>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.Reset(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_executebuiltin)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.Reset(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_path)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_target)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_thumb,resource://resource.images.skin.swan/tempfoldersqaurethumbs/info.png)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_name,mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)])</onclick>
			
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_target)</onclick>
		</control>
		<control type="button" id="73">
			<visible>!String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)</visible>
			<label>set path   </label>
			<label2>https://kodi.wiki/view/Opening_Windows_and_Dialogs</label2>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.Reset(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_executebuiltin)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_path)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_path)</onclick>
		</control>
		<control type="button" id="74">
			<visible>String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu) | String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)</visible>
			<label>use executebuiltin</label>
			<label2>https://kodi.wiki/view/List_of_built-in_functions</label2>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.Reset(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_target)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.Reset(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_path)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_executebuiltin)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_thumb,resource://resource.images.skin.swan/tempfoldersqaurethumbs/info.png)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_name,Custom mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)])</onclick>
			
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">Skin.Reset(shutdownmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_action)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">Skin.Reset(shutdownmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_thumb)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">Skin.Reset(shutdownmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_name)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">Skin.SetString(shutdownmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_action)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">Skin.SetString(shutdownmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_thumb,resource://resource.images.skin.swan/tempfoldersqaurethumbs/info.png)</onclick>
			<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)">Skin.SetString(shutdownmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_name,Custom shutdownmenuitem$INFO[Window(home).Property(shortcutitem_nr)])</onclick>
			
		</control>
	</include>
	
	<include name="SwanShortcuts_SetTargetAndPath_CommonButton">
		<control type="button" id="$PARAM[id]">
			<onclick>Dialog.Close(1103)</onclick>
			<onclick>ActivateWindow($PARAM[path])</onclick>
			<label>$PARAM[label]</label>
			<visible>$PARAM[visible]</visible>
		</control>
	</include>
	
	
	
	<include name="SwanShortcuts_DialogSelect_Contents">
		<control type="group">
			<include content="Dialog_CommonInfo">
				<param name="Def_Icon" value="$VAR[image_dialogselect]" />
				<param name="Header_label" value="$INFO[Control.GetLabel(1),[B],[/B]]" />
				<param name="Item_Description" value="$INFO[ListItem.FilenameandPath]" />
			</include>
			<control type="group">
				<control type="panel" id="40">
					<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu) + String.IsEqual(Window(home).Property(ShortcutPlaylistContent),video)">Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_target,videos)</onclick>
					<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu) + String.IsEqual(Window(home).Property(ShortcutPlaylistContent),music)">Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_target,music)</onclick>
					<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_thumb,defaultplaylist.png)</onclick>
					<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_path,$INFO[ListItem.FilenameandPath])</onclick>
					<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_name,$INFO[ListItem.Label])</onclick>
					
					<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget) + String.IsEqual(Window(home).Property(ShortcutPlaylistContent),video)">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_target,videos)</onclick>
					<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget) + String.IsEqual(Window(home).Property(ShortcutPlaylistContent),music)">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_target,music)</onclick>
					<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget) + String.IsEqual(Window(home).Property(ShortcutPlaylistContent),video)">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_layout,poster)</onclick>
					<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget) + String.IsEqual(Window(home).Property(ShortcutPlaylistContent),video)">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_layout.label,poster)</onclick>
					<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget) + String.IsEqual(Window(home).Property(ShortcutPlaylistContent),music)">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_layout,square)</onclick>
					<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget) + String.IsEqual(Window(home).Property(ShortcutPlaylistContent),music)">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_layout.label,square)</onclick>
					<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_path,$INFO[ListItem.FilenameandPath])</onclick>
					<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_name,$INFO[ListItem.Label])</onclick>
					
					<onclick>Dialog.Close(all,true)</onclick>
					
					<include content="SwanShortcuts_PanelList" />
					<content>special://$INFO[Window(home).Property(ShortcutPlaylistContent)]playlists/</content>
					<content>special://skin/playlists/$INFO[Window(home).Property(ShortcutPlaylistContent)]/</content>
				</control>
			</control>
		</control>
	</include>
	<include name="SwanShortcuts_DialogSelect_LinkWidget">
		<control type="group">
			<include content="Dialog_CommonInfo">
				<param name="Def_Icon" value="icons/swanwidgets.png" />
				<param name="Header_label" value="[B]Choose the Main Menu Entry[CR]you like to link[/B]" />
				<param name="Item_Description" value="$INFO[Container(9000).ListItem.Property(itemnumber),    Menu Entry id:         [B],[/B]][CR]$INFO[Container(9000).ListItem.Label,    Menu Entry Label:   [B],[/B]]" />
			</include>
			<control type="group">
				<control type="panel" id="9000">
					<include content="SwanShortcuts_PanelList" />
					<include content="home_mainmenu_content" />
				</control>
			</control>
		</control>
	</include>
	
	
	<include name="SwanShortcuts_Container">
		<animation effect="slide" start="0,0" end="-700,0" time="250" tween="sine" condition="Window.IsActive(selectdialog)">Conditional</animation>
		<control type="group">
			<description>BG</description>
			<include content="DialogBackground_TriplePanel" />
		</control>

		<include content="Dialog_CommonInfo" condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)">
			<param name="Header_posy" value="50" />
			<param name="Header_label" value="Browse and Set your[CR][B]W I D G E T[/B]" />
			<param name="Item_Description" value="[CR]" />
		</include>
		<include content="Dialog_CommonInfo" condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">
			<param name="Header_posy" value="50" />
			<param name="Header_label" value="Browse and Set your[CR][B]M A I N M E N U     I T E M[/B]" />
			<param name="Item_Description" value="[CR]" />
		</include>
		
		<control type="image">
			<right>8%</right>
			<centertop>51%</centertop>
			<width>350</width>
			<height>350</height>
			<aspectratio>keep</aspectratio>
			<fadetime>150</fadetime>
			<texture>icons/swanwidgets.png</texture>
			<align>center</align>
			<animation effect="fade" start="100" end="5" time="250" tween="sine" condition="ControlGroup(200).HasFocus()">Conditional</animation>
		</control>
		
		<control type="group">
			<visible>Control.IsVisible(50)</visible>
			<control type="list" id="50">
				<viewtype label="$LOCALIZE[535]">list</viewtype>
				<include content="SwanShortcuts_PanelList" />
			</control>
		</control>
		
		<control type="group">
			<visible>Control.IsVisible(51)</visible>
			<control type="panel" id="51">
				<viewtype label="$LOCALIZE[31240]">poster panel</viewtype>
				<include content="SwanShortcuts_PanelList" />
			</control>
		</control>
		
		<control type="group">
			<visible>Control.IsVisible(52)</visible>
			<control type="panel" id="52">
				<viewtype label="$LOCALIZE[31241]">circle panel</viewtype>
				<include content="SwanShortcuts_PanelList" />
			</control>
		</control>
		
		<control type="group">
			<visible>Control.IsVisible(53)</visible>
			<control type="panel" id="53">
				<viewtype label="$LOCALIZE[31242]">landscape panel</viewtype>
				<include content="SwanShortcuts_PanelList" />
			</control>
		</control>
		
		<control type="group">
			<visible>Control.IsVisible(54)</visible>
			<control type="panel" id="54">
				<viewtype label="$LOCALIZE[31243]">square panel</viewtype>
				<include content="SwanShortcuts_PanelList" />
			</control>
		</control>
		
		<control type="group">
			<visible>Control.IsVisible(56)</visible>
			<control type="panel" id="56">
				<viewtype label="$LOCALIZE[31250]">vertical infolist</viewtype>
				<include content="SwanShortcuts_PanelList" />
			</control>
		</control>
		
		<control type="group">
			<visible>Control.IsVisible(58)</visible>
			<control type="panel" id="58">
				<viewtype label="$LOCALIZE[31260]">spotlight season info</viewtype>
				<include content="SwanShortcuts_PanelList" />
			</control>
		</control>
		<control type="group">
			<visible>Control.IsVisible(502)</visible>
			<control type="panel" id="502">
				<viewtype label="$LOCALIZE[31259]">spotlight infocards</viewtype>
				<include content="SwanShortcuts_PanelList" />
			</control>
		</control>
		<control type="group">
			<visible>Control.IsVisible(503)</visible>
			<control type="panel" id="503">
				<viewtype label="$LOCALIZE[31261]">spotlight poster</viewtype>
				<include content="SwanShortcuts_PanelList" />
			</control>
		</control>
		<control type="group">
			<visible>Control.IsVisible(504)</visible>
			<control type="panel" id="504">
				<viewtype label="$LOCALIZE[31262]">spotlight landscape</viewtype>
				<include content="SwanShortcuts_PanelList" />
			</control>
		</control>
		<control type="group">
			<visible>Control.IsVisible(510)</visible>
			<control type="panel" id="510">
				<viewtype label="$LOCALIZE[31244]">icon</viewtype>
				<include content="SwanShortcuts_PanelList" />
			</control>
		</control>
		<control type="group">
			<visible>Control.IsVisible(511)</visible>
			<control type="panel" id="511">
				<viewtype label="$LOCALIZE[31245]">icon</viewtype>
				<include content="SwanShortcuts_PanelList" />
			</control>
		</control>
		<control type="group">
			<visible>Control.IsVisible(512)</visible>
			<control type="panel" id="512">
				<viewtype label="$LOCALIZE[31246]">icon</viewtype>
				<include content="SwanShortcuts_PanelList" />
			</control>
		</control>
		<control type="group">
			<visible>Control.IsVisible(513)</visible>
			<control type="panel" id="513">
				<viewtype label="$LOCALIZE[31247]">icon</viewtype>
				<include content="SwanShortcuts_PanelList" />
			</control>
		</control>
		<control type="group">
			<visible>Control.IsVisible(520)</visible>
			<control type="panel" id="520">
				<viewtype label="$LOCALIZE[31263]">icon</viewtype>
				<include content="SwanShortcuts_PanelList" />
			</control>
		</control>
		<!-- include shortcut save button
				String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu) 
						mainmenuitem
								
				String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget) 
						userwidget
						
				Skin.SetString($INFO[Window(home).Property(shortcutaction_inprogress)]$INFO[Window(home).Property(shortcutitem_nr)]_name,$INFO[System.CurrentWindow,, • ]$INFO[Container.FolderName])
		-->
		
		<control type="grouplist" id="200">
			<description>Widget Settings/Attributes</description>
			<right>-440</right>
			<top>25%</top>
			<width>550</width>
			<height>80%</height>
			
			<onup>200</onup>
			<ondown>200</ondown>
			<onright>50</onright>
			<onleft>50</onleft>		
			
			<control type="radiobutton" id="8998">
				<include content="SwanWidgetShortcutAttributes_Button">
					<param name="label" value="SAVE ME" />
				</include>
				<textureradioonfocus colordiffuse="white">buttons/enter.png</textureradioonfocus>
				<textureradioonnofocus colordiffuse="5cC6C6C8">buttons/enter.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="white">buttons/enter.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="5cC6C6C8">buttons/enter.png</textureradiooffnofocus>
				<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_target,$VAR[systemcurrentwindow_internalname])</onclick>
				<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.Reset(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_executebuiltin)</onclick>
				<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_path,$INFO[Container.Folderpath])</onclick>
				<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu) + String.IsEmpty(Window(home).Property(shortcutitem_name))">Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_name,$INFO[System.CurrentWindow,, • ]$INFO[Container.FolderName])</onclick>
				
				<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_target,$VAR[systemcurrentwindow_internalname])</onclick>
				<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget) + [String.IsEmpty(Container.Folderpath) + !String.IsEmpty(ListItem.Path)]">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_path,$INFO[ListItem.Path])</onclick>
				<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget) + !String.IsEmpty(Container.Folderpath)">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_path,$INFO[Container.Folderpath])</onclick>
				<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget) + String.IsEmpty(Window(home).Property(shortcutitem_name))">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_name,$INFO[System.CurrentWindow,, • ]$INFO[Container.FolderName])</onclick>
				<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget) + String.IsEmpty(Window(home).Property(userwidgetLayout))">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_layout,$VAR[ContainerViewmode])</onclick>
				<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget) + String.IsEmpty(Window(home).Property(userwidgetLayout))">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_layout.label,$VAR[ContainerViewmode])</onclick>
				<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_sortby,$VAR[ContainerSortMethods])</onclick>
				<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_sortby.label,$INFO[Container.SortMethod])</onclick>
				<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_sortorder,$VAR[ContainerSortOrder])</onclick>
				<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_sortorder.label,$INFO[Container.SortOrder])</onclick>
				<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)">ClearProperty(userwidgetLayout,home)</onclick>
				
				<onclick condition="!String.IsEmpty(Window(home).Property(shortcutitem_name))">ClearProperty(shortcutitem_name,home)</onclick>
				<onclick>ClearProperty(shortcutaction_inprogress,home)</onclick>
				<onclick>ClearProperty(shortcutitem_nr,home)</onclick>
				<onclick>ReplaceWindow(skinsettings)</onclick>
			</control>
			
			<include content="spacer_h">
				<param name="id" value="11030" />
				<param name="gap" value="20" />
			</include>
		
			<control type="radiobutton" id="11031">
				<include content="SwanWidgetShortcutAttributes_Button">
					<param name="label" value="Set Name" />
				</include>
				<textureradioonfocus colordiffuse="white">buttons/setname.png</textureradioonfocus>
				<textureradioonnofocus colordiffuse="5cC6C6C8">buttons/setname.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="white">buttons/setname.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="5cC6C6C8">buttons/setname.png</textureradiooffnofocus>
				
				<onclick>SetProperty(DialogHeader,Set Name for Widget $INFO[Window(home).Property(shortcutitem_nr)],home)</onclick>
				<onclick>SetProperty(shortcutitem_name,true,home)</onclick>
				<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)">Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_name)</onclick>
				<onclick condition="String.IsEqual(Window(home).Property(shortcutaction_inprogress),mainmenu)">Skin.SetString(mainmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_name)</onclick>
			</control>
			<control type="radiobutton" id="11033">
				<visible>String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)</visible>
				<include content="SwanWidgetShortcutAttributes_Button">
					<param name="label" value="Layout" />
				</include>
				<textureradioonfocus colordiffuse="white">defaultpicture.png</textureradioonfocus>
				<textureradioonnofocus colordiffuse="5cC6C6C8">defaultpicture.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="white">defaultpicture.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="5cC6C6C8">defaultpicture.png</textureradiooffnofocus>
				
				<onclick>SetProperty(Dialog.1.Label,$LOCALIZE[31200])</onclick>
				<onclick>SetProperty(Dialog.1.BuiltIn,Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_layout,poster)||Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_layout.label,$LOCALIZE[20021]))</onclick>
				
				<onclick>SetProperty(Dialog.2.Label,$LOCALIZE[31201])</onclick>
				<onclick>SetProperty(Dialog.2.BuiltIn,Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_layout,landscape)||Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_layout.label,$LOCALIZE[31205]))</onclick>
				
				<onclick>SetProperty(Dialog.3.Label,$LOCALIZE[31202])</onclick>
				<onclick>SetProperty(Dialog.3.BuiltIn,Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_layout,square)||Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_layout.label,$LOCALIZE[31206]))</onclick>
				
				<onclick>SetProperty(Dialog.4.Label,$LOCALIZE[31203])</onclick>
				<onclick>SetProperty(Dialog.4.BuiltIn,Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_layout,circle)||Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_layout.label,$LOCALIZE[31207]))</onclick>
				
				<onclick>SetProperty(Dialog.5.Label,$LOCALIZE[31204])</onclick>
				<onclick>SetProperty(Dialog.5.BuiltIn,Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_layout,banner)||Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_layout.label,$LOCALIZE[20020]))</onclick>
				
				<onclick>SetProperty(Dialog.6.Label,$LOCALIZE[31200]   &amp;   $LOCALIZE[31201])</onclick>
				<onclick>SetProperty(Dialog.6.BuiltIn,Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_layout,poster_to_fanart)||Skin.SetString(userwidget$INFO[Window(home).Property(shortcutitem_nr)]_layout.label,$LOCALIZE[20021] &amp; $LOCALIZE[31205]))</onclick>
				
				<onclick>RunScript(script.embuary.helper,action=createselect,header=$LOCALIZE[21858])</onclick>
				<onclick>SetProperty(userwidgetLayout,true,home)</onclick>
			</control>
			
			<control type="radiobutton" id="113">
				<visible>String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)</visible>
				<visible>Control.IsEnabled(3)</visible>
				<description>Select sort method (sort by: name, date size, etc...)</description>
				<include content="SwanWidgetShortcutAttributes_Button">
					<param name="label" value="$LOCALIZE[21429] ..." />
				</include>
				
				<textureradioonfocus colordiffuse="white">defaultaddonservice.png</textureradioonfocus>
				<textureradioonnofocus colordiffuse="5cC6C6C8">defaultaddonservice.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="white">defaultaddonservice.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="5cC6C6C8">defaultaddonservice.png</textureradiooffnofocus>
				
				<onclick>SendClick(3)</onclick>
			</control>
			
			
			<control type="radiobutton" id="114">
				<visible>String.IsEqual(Window(home).Property(shortcutaction_inprogress),widget)</visible>
				<visible>Control.IsEnabled(4)</visible>
				<description>Select sortmode (ascending or descending)</description>
				<include content="SwanWidgetShortcutAttributes_Button">
					<param name="label" value="Sort Method" />
				</include>
				
				<textureradioonfocus colordiffuse="white">buttons/ascending.png</textureradioonfocus>
				<textureradioonnofocus colordiffuse="5cC6C6C8">buttons/ascending.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="white">buttons/descending.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="5cC6C6C8">buttons/descending.png</textureradiooffnofocus>
				
				<onclick>SendClick(4)</onclick>
			</control>
			
			<include content="spacer_h">
				<param name="id" value="11035" />
				<param name="gap" value="20" />
			</include>
			
			<control type="radiobutton" id="11036">
				<include content="SwanWidgetShortcutAttributes_Button">
					<param name="label" value="Cancel" />
				</include>
			
				<textureradioonfocus colordiffuse="white">buttons/cancel.png</textureradioonfocus>
				<textureradioonnofocus colordiffuse="5cC6C6C8">buttons/cancel.png</textureradioonnofocus>
				<textureradioofffocus colordiffuse="white">buttons/cancel.png</textureradioofffocus>
				<textureradiooffnofocus colordiffuse="5cC6C6C8">buttons/cancel.png</textureradiooffnofocus>
				
				<onclick>ClearProperty(shortcutaction_inprogress,home)</onclick>
				<onclick>ClearProperty(shortcutitem_nr,home)</onclick>
				<onclick>ReplaceWindow(skinsettings)</onclick>
			</control>
		</control>
	
		
	</include>
	
	<variable name="ContainerViewmode">
		<value condition="!String.IsEmpty(Container.Viewmode) + String.IsEqual(Container.Viewmode,$LOCALIZE[535])">poster</value>
		<value condition="!String.IsEmpty(Container.Viewmode) + String.IsEqual(Container.Viewmode,poster)">poster</value>
		<value condition="!String.IsEmpty(Container.Viewmode) + String.IsEqual(Container.Viewmode,landscape)">landscape</value>
		<value condition="!String.IsEmpty(Container.Viewmode) + String.IsEqual(Container.Viewmode,square)">square</value>
		<value condition="!String.IsEmpty(Container.Viewmode) + String.IsEqual(Container.Viewmode,banner)">banner</value>
		<value condition="!String.IsEmpty(Container.Viewmode) + String.IsEqual(Container.Viewmode,circle)">circle</value>
		<value>poster</value>
	</variable>
	<variable name="NextSortOrder">
		<value condition="String.IsEqual(Container.SortOrder,$LOCALIZE[584])">$LOCALIZE[585]</value>
		<value condition="String.IsEqual(Container.SortOrder,$LOCALIZE[585])">$LOCALIZE[584]</value>
	</variable>
	<variable name="ContainerSortOrder">
		<value condition="String.IsEqual(Container.SortOrder,$LOCALIZE[584])">ascending</value>
		<value condition="String.IsEqual(Container.SortOrder,$LOCALIZE[585])">descending</value>
	</variable>
	
	
	<include name="SwanWidgetShortcutAttributes_Button">
		<param name="radiowidth" default="90" />
		<param name="radioheight" default="90" />
		<definition>
				<include content="Animation_ButtonFocusSlide" />
				<textoffsetx>140</textoffsetx>
				<radiowidth>$PARAM[radiowidth]</radiowidth>
				<radioheight>$PARAM[radiowidth]</radioheight>
				<radioposx>10</radioposx>
				<textureradioondisabled />
				<textureradiooffdisabled />
				<texturefocus flipx="true" colordiffuse="$VAR[color_global_background_layer2]">diffuse/gradientborderleft.png</texturefocus>
				<texturenofocus flipx="true" colordiffuse="5cC6C6C8">diffuse/gradientborderleft.png</texturenofocus>
				<height>100</height>
				<focusedcolor>white</focusedcolor>
				<textcolor>5cC6C6C8</textcolor>
				<label>$PARAM[label]</label>
		</definition>
	</include>
	
	<!--
	sortby
	
	content : random ? , label ? , status ? , country ? , studio ? , inprogress ? , path ? , lastplayed(missed in movies) , rating(missed in tvshows)
	
	(video)files : name, size , date , file
	(video)addons : name , lastused
	movies: title , year , rating , userrating , mpaa , duration , dateadded , playcount
		
	actors/ directors: name , appearences
	sets : name
		
	tvshow : title , episode , lastplayed , dateadded , year , userrating
	episode: episode , rating , userrating , mpaa , production code=status?, date , playcount , name
	
	artist: artist , dateadded
	album : album , artist , artistyear / , year , dateadded , playcount , lastplayed , rating , userrating
	song : track , title , album , artist , artistyear , name , duration , rating , userrating , year , originalyear , dateadded , playcount , lastplayed
	
	
	Notification(header,message[,time,image])	Will display a notification dialog with the specified header and message, in addition you can set the length of time it displays in milliseconds and a icon image.
	
	https://kodi.wiki/view/List_of_built-in_functions#List_of_sort_methods
	https://github.com/xbmc/xbmc/blob/75b31098a8800da653b373cd99a025b483029cfc/xbmc/utils/SortUtils.h#L49-L164
	
	https://github.com/xbmc/xbmc/blob/master/xbmc/utils/SortUtils.cpp#L529-L577
	

container.setsortmethod()
1	Name
2	Date
3	Size
4	File
5	Path
6	DriveType
7	Title
8	TrackNumber
9	Time
10	Artist
11	ArtistThenYear
12	Album
13	AlbumType
14	Genre
15	Country
16	Year
17	Rating
18	UserRating
19	Votes
20	Top250
21	ProgramCount
22	PlaylistOrder
23	EpisodeNumber
24	Season
25	NumberOfEpisodes
26	NumberOfWatchedEpisodes
27	TvShowStatus
28	TvShowTitle
29	SortTitle
30	ProductionCode
31	MPAA
32	VideoResolution
33	VideoCodec
34	VideoAspectRatio
35	AudioChannels
36	AudioCodec
37	AudioLanguage
38	SubtitleLanguage
39	Studio
40	DateAdded
41	LastPlayed
42	Playcount
43	Listeners
44	Bitrate
45	Random
46	Channel
47	ChannelNumber
48	DateTaken
49	Relevance
50	InstallDate
51	LastUpdated
52	LastUsed
	-->


	<variable name="ContainerSortMethods">
		
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[551])">name</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[552])">date</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[553])">size</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[561])">file</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[573])">path</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[556])">title</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[554])">tracknumber</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[555])">time</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[557])">artist</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[578])">artistyear</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[558])">album</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[564])">albumtype</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[515])">genre</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[574])">country</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[562])">year</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[563])">rating</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[38018])">userrating</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[205])">votes</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[13409])">top250</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[568])">lastplayed</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[567])">playcount</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[572])">studio</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[570])">dateadded</value>
		<value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[12012])">lastused</value>
 	   <value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[590])">random</value>
		<value></value>
	</variable>
	<!-- value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[566])" albumartist -->
	<!-- value condition="String.IsEqual(Container.SortMethod,$LOCALIZE[575])" inprogress -->
		
	<include name="SwanShortcuts_PanelList">
			<top>250</top>
			<left>33.3%</left>
			<width>33.3%</width>
			<height>70%</height>
			
			<onright>200</onright>
			<onleft>200</onleft>
			
			<scrolltime tween="cubic" easing="out">300</scrolltime>
			
			<itemlayout height="110">
				<control type="image">
					<texture>frames/separator.png</texture>
				</control>
				<control type="image">
					<width>110</width>
					<height>110</height>
					<bordersize>7</bordersize>
					<aspectratio scalediffuse="false" aligny="center" align="center">scale</aspectratio>
					<texture diffuse="diffuse/circle.png" fallback="defaultaddon.png">$INFO[ListItem.Icon]</texture>
				</control>
				<control type="label">
					<left>150</left>
					<label>$INFO[ListItem.Label]</label>
					<textcolor>$VAR[color_global_button_text_nf]</textcolor>
					<scroll>true</scroll>
				</control>
			</itemlayout>
			<focusedlayout height="110">
				<control type="image">
					<texture>colors/white.png</texture>
					<colordiffuse>$VAR[color_global_button_panel_fo]</colordiffuse>
				</control>
				<control type="image">
					<width>110</width>
					<height>110</height>
					<bordersize>7</bordersize>
					<aspectratio scalediffuse="false" aligny="center" align="center">scale</aspectratio>
					<texture diffuse="diffuse/circle.png" fallback="defaultaddon.png">$INFO[ListItem.Icon]</texture>
				</control>
				<control type="label">
					<left>150</left>
					<label>$INFO[ListItem.Label,[B],[/B]]</label>
					<textcolor>$VAR[color_global_button_text_fo]</textcolor>
					<scroll>true</scroll>
				</control>
			</focusedlayout>
			
	</include>
	<!-- SkinSettings.xml widget script.skinshortcuts - set path-->
	<!-- 1103 -->
	<!-- WidgetAttributes	 -->
	<include name="1103_Content_MainmenuAttributes">
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),1)">
			<param name="nr" value="1"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),2)">
			<param name="nr" value="2"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),3)">
			<param name="nr" value="3"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),4)">
			<param name="nr" value="4"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),5)">
			<param name="nr" value="5"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),6)">
			<param name="nr" value="6"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),7)">
			<param name="nr" value="7"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),8)">
			<param name="nr" value="8"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),9)">
			<param name="nr" value="9"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),10)">
			<param name="nr" value="10"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),11)">
			<param name="nr" value="11"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),12)">
			<param name="nr" value="12"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),13)">
			<param name="nr" value="13"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),14)">
			<param name="nr" value="14"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),15)">
			<param name="nr" value="15"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),16)">
			<param name="nr" value="16"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),17)">
			<param name="nr" value="17"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),18)">
			<param name="nr" value="18"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),19)">
			<param name="nr" value="19"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),20)">
			<param name="nr" value="20"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),21)">
			<param name="nr" value="21"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),22)">
			<param name="nr" value="22"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),23)">
			<param name="nr" value="23"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),24)">
			<param name="nr" value="24"/>
		</include>
		<include content="Mainmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),25)">
			<param name="nr" value="25"/>
		</include>
	</include>
	
	<include name="1103_Content_ShutdownmenuAttributes">
		<include content="Shutdownmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),1)">
			<param name="nr" value="1"/>
		</include>
		<include content="Shutdownmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),2)">
			<param name="nr" value="2"/>
		</include>
		<include content="Shutdownmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),3)">
			<param name="nr" value="3"/>
		</include>
		<include content="Shutdownmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),4)">
			<param name="nr" value="4"/>
		</include>
		<include content="Shutdownmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),5)">
			<param name="nr" value="5"/>
		</include>
		<include content="Shutdownmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),6)">
			<param name="nr" value="6"/>
		</include>
		<include content="Shutdownmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),7)">
			<param name="nr" value="7"/>
		</include>
		<include content="Shutdownmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),8)">
			<param name="nr" value="8"/>
		</include>
		<include content="Shutdownmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),9)">
			<param name="nr" value="9"/>
		</include>
		<include content="Shutdownmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),10)">
			<param name="nr" value="10"/>
		</include>
		<include content="Shutdownmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),11)">
			<param name="nr" value="11"/>
		</include>
		<include content="Shutdownmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),12)">
			<param name="nr" value="12"/>
		</include>
		<include content="Shutdownmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),13)">
			<param name="nr" value="13"/>
		</include>
		<include content="Shutdownmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),14)">
			<param name="nr" value="14"/>
		</include>
		<include content="Shutdownmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),15)">
			<param name="nr" value="15"/>
		</include>
		<include content="Shutdownmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),16)">
			<param name="nr" value="16"/>
		</include>
		<include content="Shutdownmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),17)">
			<param name="nr" value="17"/>
		</include>
		<include content="Shutdownmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),18)">
			<param name="nr" value="18"/>
		</include>
		<include content="Shutdownmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),19)">
			<param name="nr" value="19"/>
		</include>
		<include content="Shutdownmenu_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),20)">
			<param name="nr" value="20"/>
		</include>
	</include>
	
	<include name="1103_Content_WidgetAttributes">
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),1)">
			<param name="nr" value="1"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),2)">
			<param name="nr" value="2"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),3)">
			<param name="nr" value="3"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),4)">
			<param name="nr" value="4"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),5)">
			<param name="nr" value="5"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),6)">
			<param name="nr" value="6"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),7)">
			<param name="nr" value="7"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),8)">
			<param name="nr" value="8"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),9)">
			<param name="nr" value="9"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),10)">
			<param name="nr" value="10"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),11)">
			<param name="nr" value="11"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),12)">
			<param name="nr" value="12"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),13)">
			<param name="nr" value="13"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),14)">
			<param name="nr" value="14"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),15)">
			<param name="nr" value="15"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),16)">
			<param name="nr" value="16"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),17)">
			<param name="nr" value="17"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),18)">
			<param name="nr" value="18"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),19)">
			<param name="nr" value="19"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),20)">
			<param name="nr" value="20"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),21)">
			<param name="nr" value="21"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),22)">
			<param name="nr" value="22"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),23)">
			<param name="nr" value="23"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),24)">
			<param name="nr" value="24"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),25)">
			<param name="nr" value="25"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),26)">
			<param name="nr" value="26"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),27)">
			<param name="nr" value="27"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),28)">
			<param name="nr" value="28"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),29)">
			<param name="nr" value="29"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),30)">
			<param name="nr" value="30"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),31)">
			<param name="nr" value="31"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),32)">
			<param name="nr" value="32"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),33)">
			<param name="nr" value="33"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),34)">
			<param name="nr" value="34"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),35)">
			<param name="nr" value="35"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),36)">
			<param name="nr" value="36"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),37)">
			<param name="nr" value="37"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),38)">
			<param name="nr" value="38"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),39)">
			<param name="nr" value="39"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),40)">
			<param name="nr" value="40"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),41)">
			<param name="nr" value="41"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),42)">
			<param name="nr" value="42"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),43)">
			<param name="nr" value="43"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),44)">
			<param name="nr" value="44"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),45)">
			<param name="nr" value="45"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),46)">
			<param name="nr" value="46"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),47)">
			<param name="nr" value="47"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),48)">
			<param name="nr" value="48"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),49)">
			<param name="nr" value="49"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),50)">
			<param name="nr" value="50"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),51)">
			<param name="nr" value="51"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),52)">
			<param name="nr" value="52"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),53)">
			<param name="nr" value="53"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),54)">
			<param name="nr" value="54"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),55)">
			<param name="nr" value="55"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),56)">
			<param name="nr" value="56"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),57)">
			<param name="nr" value="57"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),58)">
			<param name="nr" value="58"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),59)">
			<param name="nr" value="59"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),60)">
			<param name="nr" value="60"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),61)">
			<param name="nr" value="61"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),62)">
			<param name="nr" value="62"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),63)">
			<param name="nr" value="63"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),64)">
			<param name="nr" value="64"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),65)">
			<param name="nr" value="65"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),66)">
			<param name="nr" value="66"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),67)">
			<param name="nr" value="67"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),68)">
			<param name="nr" value="68"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),69)">
			<param name="nr" value="69"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),70)">
			<param name="nr" value="70"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),71)">
			<param name="nr" value="71"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),72)">
			<param name="nr" value="72"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),73)">
			<param name="nr" value="73"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),74)">
			<param name="nr" value="74"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),75)">
			<param name="nr" value="75"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),76)">
			<param name="nr" value="76"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),77)">
			<param name="nr" value="77"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),78)">
			<param name="nr" value="78"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),79)">
			<param name="nr" value="79"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),80)">
			<param name="nr" value="80"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),81)">
			<param name="nr" value="81"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),82)">
			<param name="nr" value="82"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),83)">
			<param name="nr" value="83"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),84)">
			<param name="nr" value="84"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),85)">
			<param name="nr" value="85"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),86)">
			<param name="nr" value="86"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),87)">
			<param name="nr" value="87"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),88)">
			<param name="nr" value="88"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),89)">
			<param name="nr" value="89"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),90)">
			<param name="nr" value="90"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),91)">
			<param name="nr" value="91"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),92)">
			<param name="nr" value="92"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),93)">
			<param name="nr" value="93"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),94)">
			<param name="nr" value="94"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),95)">
			<param name="nr" value="95"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),96)">
			<param name="nr" value="96"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),97)">
			<param name="nr" value="97"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),98)">
			<param name="nr" value="98"/>
		</include>
		<include content="Widget_SetAttributes_ButtonTemplate" condition="String.IsEqual(Window(home).Property(shortcutitem_nr),99)">
			<param name="nr" value="99"/>
		</include>
	</include>
	
	<include name="1103_Content_MainmenuLinkWidget">
		<itemgap>10</itemgap>
		
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="1"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="2"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="3"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="4"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="5"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="6"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="7"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="8"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="9"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="10"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="11"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="12"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="13"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="14"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="15"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="16"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="17"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="18"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="19"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="20"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="21"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="22"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="23"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="24"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="25"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="26"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="27"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="28"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="29"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="30"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="31"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="32"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="33"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="34"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="35"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="36"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="37"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="38"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="39"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="40"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="41"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="42"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="43"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="44"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="45"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="46"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="47"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="48"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="49"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="50"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="51"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="52"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="53"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="54"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="55"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="56"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="57"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="58"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="59"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="60"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="61"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="62"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="63"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="64"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="65"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="66"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="67"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="68"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="69"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="70"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="71"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="72"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="73"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="74"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="75"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="76"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="77"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="78"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="79"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="80"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="81"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="82"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="83"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="84"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="85"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="86"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="87"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="88"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="89"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="90"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="91"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="92"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="93"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="94"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="95"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="96"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="97"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="98"/>
		</include>
		<include content="mainmenu_link_widget_button">
			<param name="widgetnr" value="99"/>
		</include>
	
	</include>
	
	get mainmenu logo + label visible
	<include name="mainmenu_link_widget_button">
		<control type="radiobutton" id="1103$PARAM[widgetnr]">
			<description>template 1</description>
			<visible>skin.string(userwidget$PARAM[widgetnr]_path) | skin.string(userwidget$PARAM[widgetnr]_target)</visible>
			<radioposx>50</radioposx>
			<radioheight>50</radioheight>
			<height>80</height>
			<selected>String.IsEqual(skin.string(userwidget$PARAM[widgetnr]_linked),Window(home).Property(mainmenu_nr))</selected>
			 <label>                 $INFO[skin.string(userwidget$PARAM[widgetnr]_name),[B]Name : [/B],]$INFO[skin.string(userwidget$PARAM[widgetnr]_target),[CR]                 [B]Target : [/B],]</label>
			 <label2>$INFO[skin.string(userwidget$PARAM[widgetnr]_path)]</label2>
			 <onclick condition="!String.IsEqual(skin.string(userwidget$PARAM[widgetnr]_linked),Window(home).Property(mainmenu_nr))">Skin.SetString(userwidget$PARAM[widgetnr]_linked,$INFO[Window(home).Property(mainmenu_nr)])</onclick>
			 <onclick condition="String.IsEqual(skin.string(userwidget$PARAM[widgetnr]_linked),Window(home).Property(mainmenu_nr))">Skin.Reset(userwidget$PARAM[widgetnr]_linked)</onclick>
		</control>
	</include>
				<!--
					<textureradioonfocus colordiffuse="$VAR[color_global_button_text_fo]">buttons/checkbox_on.png</textureradioonfocus>
					<textureradioonnofocus colordiffuse="$VAR[color_global_button_text_nf]">buttons/checkbox_on.png</textureradioonnofocus>
					<textureradioofffocus colordiffuse="$VAR[color_global_button_text_fo]">buttons/checkbox_off.png</textureradioofffocus>
					<textureradiooffnofocus colordiffuse="$VAR[color_global_button_text_nf]">buttons/checkbox_off.png</textureradiooffnofocus>
					-->
	
	<include name="shortcut_setting_radiobutton">
		<radioposx>200</radioposx>
		<radioposxy>5</radioposxy>
		<radiowidth>42</radiowidth>
		<radioheight>20</radioheight>
		<textureradioonfocus colordiffuse="$VAR[color_global_button_text_fo]">icons/settings.png</textureradioonfocus>
		<textureradioonnofocus colordiffuse="$VAR[color_global_button_text_nf]">icons/settings.png</textureradioonnofocus>
		<textureradioofffocus colordiffuse="$VAR[color_global_button_text_fo]">icons/settings.png</textureradioofffocus>
		<textureradiooffnofocus colordiffuse="$VAR[color_global_button_text_nf]">icons/settings.png</textureradiooffnofocus>
		<textureradioondisabled colordiffuse="disabled">icons/settings.png</textureradioondisabled>
		<textureradiooffdisabled colordiffuse="disabled">icons/settings.png</textureradiooffdisabled>
	</include>
	<include name="shortcut_setting_move_button">
		<param name="label" />
		<param name="radio_posx" default="180"/>
		<param name="radioheight" default="55"/>
		<param name="width" default="410"/>
		<definition>
		<height>40</height>
		<width>$PARAM[width]</width>
		<radioposx>$PARAM[radio_posx]</radioposx>
		<radioheight>$PARAM[radioheight]</radioheight>
		<textureradioonfocus colordiffuse="$VAR[color_global_button_text_fo]">$PARAM[radio_icon]</textureradioonfocus>
		<textureradioonnofocus colordiffuse="$VAR[color_global_button_text_nf]">$PARAM[radio_icon]</textureradioonnofocus>
		<textureradioofffocus colordiffuse="$VAR[color_global_button_text_fo]">$PARAM[radio_icon]</textureradioofffocus>
		<textureradiooffnofocus colordiffuse="$VAR[color_global_button_text_nf]">$PARAM[radio_icon]</textureradiooffnofocus>
		<textureradioondisabled colordiffuse="disabled">$PARAM[radio_icon]</textureradioondisabled>
		<textureradiooffdisabled colordiffuse="disabled">$PARAM[radio_icon]</textureradiooffdisabled>
		<label>$PARAM[label]</label>
		<label2 />
		</definition>
	</include>
	
	<include name="SwanShortcuts_template_widget_settings">
		
		<include content="SectionHeadline">
			<param name="id" value="$PARAM[id]0"/>
			<param name="height" value="60"/>
			<param name="align" value="left" />
			<param name="label" value="WIDGET $PARAM[nr]$INFO[Skin.String(userwidget$PARAM[nr]_name), : [B],[/B]]"/>
		</include>
		
		<control type="radiobutton" id="$PARAM[id]1">
			<description>Set widget Shortcut</description>
			<include>shortcut_setting_radiobutton</include>
			<onclick>SetProperty(refocus_shortcut_id,$PARAM[id]1)</onclick>
			<onclick>SetProperty(shortcutitem_nr,$PARAM[nr],home)</onclick>
			<onclick>SetProperty(SettingSection,SwanWidgetShortcuts,home)</onclick>
			<onclick>SetProperty(shortcutaction_inprogress,widget,home)</onclick>
			<onclick>ActivateWindow(1103,return)</onclick>
			<label>                             Set Widget Path</label>
			<label2>$INFO[Skin.String(userwidget$PARAM[nr]_path)]</label2>
		</control>
		
		<control type="radiobutton" id="$PARAM[id]2">
			<description>ADJUST Attributes</description>
			<include>shortcut_setting_radiobutton</include>
			<height>80</height>
			<visible>Skin.String(userwidget$PARAM[nr]_path)</visible>
			<onclick>SetProperty(shortcutitem_nr,$PARAM[nr],home)</onclick>
			<onclick>SetProperty(SettingSection,WidgetAttributes,home)</onclick>
			<onclick>ActivateWindow(1103)</onclick>
			<label>                             Change Attributes</label>
			<label2>$INFO[Skin.String(userwidget$PARAM[nr]_layout.label),[B]$LOCALIZE[21858][/B]: ,]$INFO[Skin.String(userwidget$PARAM[nr]_target),  [B]$LOCALIZE[467][/B]: ,]$INFO[Skin.String(userwidget$PARAM[nr]_sortby.label),   [B]$LOCALIZE[581][/B]: ',']$INFO[Skin.String(userwidget$PARAM[nr]_sortorder.label),   [B]$LOCALIZE[21429][/B]: ',']$INFO[Skin.String(userwidget$PARAM[nr]_limit),   [B]$LOCALIZE[21427][/B]: (,)]</label2>
		</control>
		
		<control type="radiobutton" id="$PARAM[id]6">
			<include>shortcut_setting_radiobutton</include>
			<visible>Skin.String(userwidget$PARAM[nr]_target) | Skin.String(userwidget$PARAM[nr]_path)</visible>
			<description>link to mainmenu item - get item icon of liked if linked - get icon without use additional stings later on - not possible</description>
					<textureradioonfocus colordiffuse="white">defaulttags.png</textureradioonfocus>
					<textureradioonnofocus colordiffuse="5cC6C6C8">defaulttags.png</textureradioonnofocus>
					<textureradioofffocus colordiffuse="white">defaulttags.png</textureradioofffocus>
					<textureradiooffnofocus colordiffuse="5cC6C6C8">defaulttags.png</textureradiooffnofocus>
			<height>40</height>
			<onclick>SetProperty(SwanShortcut_LinkWidget,$PARAM[nr],home)</onclick>
			<onclick>ActivateWindow(selectdialog)</onclick>
			<label>                             Choose Main Menu Entry for this Widget</label>
			<label2></label2>
		</control>
		
		<control type="group" id="$PARAM[id]3">
			<visible>Skin.String(userwidget$PARAM[nr]_target) | Skin.String(userwidget$PARAM[nr]_path) | Skin.String(userwidget$PARAM[nr]_executebuiltin)</visible>
			<height>50</height>
			
			<control type="radiobutton" id="$PARAM[id]4">
				<description>RESET</description>
				<include content="shortcut_setting_move_button">
					<param name="label" value="                        Remove/Reset"/>
					<param name="width" value="515"/>
					<param name="radio_icon" value="buttons/delete.png"/>
					<param name="radio_posx" value="0"/>
					<param name="radioheight" value="35"/>
				</include>
				<left>0</left>
				<onup>$PARAM[id]6</onup>
				<onleft>SetFocus(200)</onleft>
				<onright>$PARAM[id]301</onright>
				<ondown>$PARAM[id]5</ondown>
				<onclick>SetFocus($PARAM[id]1)</onclick>
				
				<onclick condition="skin.string(userwidget$PARAM[nr]_name)">Skin.Reset(userwidget$PARAM[nr]_name)</onclick>
				<onclick condition="skin.string(userwidget$PARAM[nr]_target)">Skin.Reset(userwidget$PARAM[nr]_target)</onclick>
				<onclick condition="skin.string(userwidget$PARAM[nr]_path)">Skin.Reset(userwidget$PARAM[nr]_path)</onclick>
				<onclick condition="skin.string(userwidget$PARAM[nr]_limit)">Skin.Reset(userwidget$PARAM[nr]_limit)</onclick>
				<onclick condition="skin.string(userwidget$PARAM[nr]_sortby)">Skin.Reset(userwidget$PARAM[nr]_sortby)</onclick>
				<onclick condition="skin.string(userwidget$PARAM[nr]_sortby.label)">Skin.Reset(userwidget$PARAM[nr]_sortby.label)</onclick>
				<onclick condition="skin.string(userwidget$PARAM[nr]_sortorder)">Skin.Reset(userwidget$PARAM[nr]_sortorder)</onclick>
				<onclick condition="skin.string(userwidget$PARAM[nr]_sortorder.label)">Skin.Reset(userwidget$PARAM[nr]_sortorder.label)</onclick>
				<onclick condition="skin.string(userwidget$PARAM[nr]_layout)">Skin.Reset(userwidget$PARAM[nr]_layout)</onclick>
				<onclick condition="skin.string(userwidget$PARAM[nr]_layout.label)">Skin.Reset(userwidget$PARAM[nr]_layout.label)</onclick>
				<onclick condition="skin.string(userwidget$PARAM[nr]_linked)">Skin.Reset(userwidget$PARAM[nr]_linked)</onclick>
				
				<onclick condition="skin.hassetting(userwidget$PARAM[nr]_IsSection)">Skin.Reset(userwidget$PARAM[nr]_IsSection)</onclick>
				<onclick condition="skin.hassetting(userwidget$PARAM[nr]_forceFixedlist)">Skin.Reset(userwidget$PARAM[nr]_forceFixedlist)</onclick>
				<onclick condition="skin.hassetting(userwidget$PARAM[nr]_forceTag)">Skin.Reset(userwidget$PARAM[nr]_forceTag)</onclick>
				<onclick condition="skin.hassetting(userwidget$PARAM[nr]_bottominfo)">Skin.Reset(userwidget$PARAM[nr]_bottominfo)</onclick>
			</control>
			
			<control type="radiobutton" id="$PARAM[id]301">
				<description>hold prev</description>
				<include content="shortcut_setting_move_button">
					<param name="radio_icon" value="buttons/spinctrlup.png"/>
				</include>
				<left>520</left>
				
				<onup>$PARAM[id]6</onup>
				<ondown>$PARAM[id]5</ondown>
				<onleft>$PARAM[id]4</onleft>
				<onright>$PARAM[id]302</onright>
				
				<onclick condition="[
					!Skin.string(userwidget$PARAM[prev_nr]_name) + 
					!Skin.string(userwidget$PARAM[prev_nr]_path) + 
					!Skin.string(userwidget$PARAM[prev_nr]_target) + 
					!Skin.string(userwidget$PARAM[prev_nr]_limit) + 
					!skin.string(userwidget$PARAM[prev_nr]_sortby) + 
					!Skin.string(userwidget$PARAM[prev_nr]_sortby.label) + 
					!Skin.string(userwidget$PARAM[prev_nr]_sortorder) + 
					!Skin.string(userwidget$PARAM[prev_nr]_sortorder.label) + 
					!Skin.string(userwidget$PARAM[prev_nr]_layout) + 
					!Skin.string(userwidget$PARAM[prev_nr]_layout.label) +
					!skin.string(userwidget$PARAM[prev_nr]_linked)]">SetProperty(userwidget_no_switch,prev)</onclick>
					
				<onclick condition="Skin.string(userwidget$PARAM[prev_nr]_name)">SetProperty(hold_prev_userwidget_name,$INFO[Skin.String(userwidget$PARAM[prev_nr]_name)])</onclick>
				<onclick condition="Skin.string(userwidget$PARAM[prev_nr]_path)">SetProperty(hold_prev_userwidget_path,$INFO[Skin.String(userwidget$PARAM[prev_nr]_path)])</onclick>
				<onclick condition="Skin.string(userwidget$PARAM[prev_nr]_target)">SetProperty(hold_prev_userwidget_target,$INFO[Skin.String(userwidget$PARAM[prev_nr]_target)])</onclick>
				<onclick condition="Skin.string(userwidget$PARAM[prev_nr]_limit)">SetProperty(hold_prev_userwidget_limit,$INFO[Skin.String(userwidget$PARAM[prev_nr]_limit)])</onclick>
				<onclick condition="Skin.string(userwidget$PARAM[prev_nr]_sortby)">SetProperty(hold_prev_userwidget_sortby,$INFO[Skin.String(userwidget$PARAM[prev_nr]_sortby)])</onclick>
				<onclick condition="Skin.string(userwidget$PARAM[prev_nr]_sortby.label)">SetProperty(hold_prev_userwidget_sortby.label,$INFO[Skin.String(userwidget$PARAM[prev_nr]_sortby.label)])</onclick>
				<onclick condition="skin.string(userwidget$PARAM[prev_nr]_sortorder)">SetProperty(hold_prev_userwidget_sortorder,$INFO[Skin.String(userwidget$PARAM[prev_nr]_sortorder)])</onclick>
				<onclick condition="skin.string(userwidget$PARAM[prev_nr]_sortorder.label)">SetProperty(hold_prev_userwidget_sortorder.label,$INFO[Skin.String(userwidget$PARAM[prev_nr]_sortorder.label)])</onclick>
				<onclick condition="skin.string(userwidget$PARAM[prev_nr]_layout)">SetProperty(hold_prev_userwidget_layout,$INFO[Skin.String(userwidget$PARAM[prev_nr]_layout)])</onclick>
				<onclick condition="skin.string(userwidget$PARAM[prev_nr]_layout.label)">SetProperty(hold_prev_userwidget_layout.label,$INFO[Skin.String(userwidget$PARAM[prev_nr]_layout.label)])</onclick>
				<onclick condition="skin.string(userwidget$PARAM[prev_nr]_linked)">SetProperty(hold_prev_userwidget_linked,$INFO[Skin.String(userwidget$PARAM[prev_nr]_linked)])</onclick>
				
				<onclick condition="skin.hassetting(userwidget$PARAM[prev_nr]_IsSection)">SetProperty(hold_prev_userwidget_IsSection,true)</onclick>
				<onclick condition="skin.hassetting(userwidget$PARAM[prev_nr]_forceFixedlist)">SetProperty(hold_prev_userwidget_forceFixedlist,true)</onclick>
				<onclick condition="skin.hassetting(userwidget$PARAM[prev_nr]_forceTag)">SetProperty(hold_prev_userwidget_forceTag,true)</onclick>
				<onclick condition="skin.hassetting(userwidget$PARAM[prev_nr]_bottominfo)">SetProperty(hold_prev_userwidget_bottominfo,true)</onclick>
				
				<onclick condition="Skin.string(userwidget$PARAM[nr]_name)">SetProperty(hold_current_userwidget_name,$INFO[Skin.String(userwidget$PARAM[nr]_name)])</onclick>
				<onclick condition="Skin.string(userwidget$PARAM[nr]_path)">SetProperty(hold_current_userwidget_path,$INFO[Skin.String(userwidget$PARAM[nr]_path)])</onclick>
				<onclick condition="Skin.string(userwidget$PARAM[nr]_target)">SetProperty(hold_current_userwidget_target,$INFO[Skin.String(userwidget$PARAM[nr]_target)])</onclick>
				<onclick condition="Skin.string(userwidget$PARAM[nr]_limit)">SetProperty(hold_current_userwidget_limit,$INFO[Skin.String(userwidget$PARAM[nr]_limit)])</onclick>
				<onclick condition="Skin.string(userwidget$PARAM[nr]_sortby)">SetProperty(hold_current_userwidget_sortby,$INFO[Skin.String(userwidget$PARAM[nr]_sortby)])</onclick>
				<onclick condition="Skin.string(userwidget$PARAM[nr]_sortby.label)">SetProperty(hold_current_userwidget_sortby.label,$INFO[Skin.String(userwidget$PARAM[nr]_sortby.label)])</onclick>
				<onclick condition="skin.string(userwidget$PARAM[nr]_sortorder)">SetProperty(hold_current_userwidget_sortorder,$INFO[Skin.String(userwidget$PARAM[nr]_sortorder)])</onclick>
				<onclick condition="skin.string(userwidget$PARAM[nr]_sortorder.label)">SetProperty(hold_current_userwidget_sortorder.label,$INFO[Skin.String(userwidget$PARAM[nr]_sortorder.label)])</onclick>
				<onclick condition="skin.string(userwidget$PARAM[nr]_layout)">SetProperty(hold_current_userwidget_layout,$INFO[Skin.String(userwidget$PARAM[nr]_layout)])</onclick>
				<onclick condition="skin.string(userwidget$PARAM[nr]_layout.label)">SetProperty(hold_current_userwidget_layout.label,$INFO[Skin.String(userwidget$PARAM[nr]_layout.label)])</onclick>
				<onclick condition="skin.string(userwidget$PARAM[nr]_linked)">SetProperty(hold_prev_userwidget_linked,$INFO[Skin.String(userwidget$PARAM[nr]_linked)])</onclick>
				
				<onclick condition="skin.hassetting(userwidget$PARAM[nr]_IsSection)">SetProperty(hold_current_userwidget_IsSection,true)</onclick>
				<onclick condition="skin.hassetting(userwidget$PARAM[nr]_forceFixedlist)">SetProperty(hold_current_userwidget_forceFixedlist,true)</onclick>
				<onclick condition="skin.hassetting(userwidget$PARAM[nr]_forceTag)">SetProperty(hold_current_userwidget_forceTag,true)</onclick>
				<onclick condition="skin.hassetting(userwidget$PARAM[nr]_bottominfo)">SetProperty(hold_current_userwidget_bottominfo,true)</onclick>
				
				<onclick>setfocus($PARAM[id]396)</onclick>
			</control>
			
			<control type="radiobutton" id="$PARAM[id]302">
				<description>hold next</description>
				<include content="shortcut_setting_move_button">
					<param name="radio_icon" value="buttons/spinctrldown.png"/>
				</include>
				<right>0</right>
				
				<onup>$PARAM[id]6</onup>
				<ondown>$PARAM[id]5</ondown>
				<onleft>$PARAM[id]301</onleft>
				<onright>$PARAM[id]301</onright>
				
				<onclick condition="[
					!Skin.string(userwidget$PARAM[next_nr]_name) + 
					!Skin.string(userwidget$PARAM[next_nr]_path) + 
					!Skin.string(userwidget$PARAM[next_nr]_target) + 
					!Skin.string(userwidget$PARAM[next_nr]_limit) + 
					!skin.string(userwidget$PARAM[next_nr]_sortby) + 
					!Skin.string(userwidget$PARAM[next_nr]_sortby.label) + 
					!Skin.string(userwidget$PARAM[next_nr]_sortorder) + 
					!Skin.string(userwidget$PARAM[next_nr]_sortorder.label) + 
					!Skin.string(userwidget$PARAM[next_nr]_layout) + 
					!Skin.string(userwidget$PARAM[next_nr]_layout.label) +
					!skin.string(userwidget$PARAM[next_nr]_linked)]">SetProperty(userwidget_no_switch,next)</onclick>
						
				<onclick condition="Skin.string(userwidget$PARAM[next_nr]_name)">SetProperty(hold_next_userwidget_name,$INFO[Skin.String(userwidget$PARAM[next_nr]_name)])</onclick>
				<onclick condition="Skin.string(userwidget$PARAM[next_nr]_path)">SetProperty(hold_next_userwidget_path,$INFO[Skin.String(userwidget$PARAM[next_nr]_path)])</onclick>
				<onclick condition="Skin.string(userwidget$PARAM[next_nr]_target)">SetProperty(hold_next_userwidget_target,$INFO[Skin.String(userwidget$PARAM[next_nr]_target)])</onclick>
				<onclick condition="Skin.string(userwidget$PARAM[next_nr]_limit)">SetProperty(hold_next_userwidget_limit,$INFO[Skin.String(userwidget$PARAM[next_nr]_limit)])</onclick>
				<onclick condition="Skin.string(userwidget$PARAM[next_nr]_sortby)">SetProperty(hold_next_userwidget_sortby,$INFO[Skin.String(userwidget$PARAM[next_nr]_sortby)])</onclick>
				<onclick condition="Skin.string(userwidget$PARAM[next_nr]_sortby.label)">SetProperty(hold_next_userwidget_sortby.label,$INFO[Skin.String(userwidget$PARAM[next_nr]_sortby.label)])</onclick>
				<onclick condition="skin.string(userwidget$PARAM[next_nr]_sortorder)">SetProperty(hold_next_userwidget_sortorder,$INFO[Skin.String(userwidget$PARAM[next_nr]_sortorder)])</onclick>
				<onclick condition="skin.string(userwidget$PARAM[next_nr]_sortorder.label)">SetProperty(hold_next_userwidget_sortorder.label,$INFO[Skin.String(userwidget$PARAM[next_nr]_sortorder.label)])</onclick>
				<onclick condition="skin.string(userwidget$PARAM[next_nr]_layout)">SetProperty(hold_next_userwidget_layout,$INFO[Skin.String(userwidget$PARAM[next_nr]_layout)])</onclick>
				<onclick condition="skin.string(userwidget$PARAM[next_nr]_layout.label)">SetProperty(hold_next_userwidget_layout.label,$INFO[Skin.String(userwidget$PARAM[next_nr]_layout.label)])</onclick>
				<onclick condition="skin.string(userwidget$PARAM[next_nr]_linked)">SetProperty(hold_prev_userwidget_linked,$INFO[Skin.String(userwidget$PARAM[next_nr]_linked)])</onclick>
				
				<onclick condition="skin.hassetting(userwidget$PARAM[next_nr]_IsSection)">SetProperty(hold_next_userwidget_IsSection,true)</onclick>
				<onclick condition="skin.hassetting(userwidget$PARAM[next_nr]_forceFixedlist)">SetProperty(hold_next_userwidget_forceFixedlist,true)</onclick>
				<onclick condition="skin.hassetting(userwidget$PARAM[next_nr]_forceTag)">SetProperty(hold_next_userwidget_forceTag,true)</onclick>
				<onclick condition="skin.hassetting(userwidget$PARAM[next_nr]_bottominfo)">SetProperty(hold_next_userwidget_bottominfo,true)</onclick>
				
				<onclick condition="Skin.string(userwidget$PARAM[nr]_name)">SetProperty(hold_current_userwidget_name,$INFO[Skin.String(userwidget$PARAM[nr]_name)])</onclick>
				<onclick condition="Skin.string(userwidget$PARAM[nr]_path)">SetProperty(hold_current_userwidget_path,$INFO[Skin.String(userwidget$PARAM[nr]_path)])</onclick>
				<onclick condition="Skin.string(userwidget$PARAM[nr]_target)">SetProperty(hold_current_userwidget_target,$INFO[Skin.String(userwidget$PARAM[nr]_target)])</onclick>
				<onclick condition="Skin.string(userwidget$PARAM[nr]_limit)">SetProperty(hold_current_userwidget_limit,$INFO[Skin.String(userwidget$PARAM[nr]_limit)])</onclick>
				<onclick condition="Skin.string(userwidget$PARAM[nr]_sortby)">SetProperty(hold_current_userwidget_sortby,$INFO[Skin.String(userwidget$PARAM[nr]_sortby)])</onclick>
				<onclick condition="Skin.string(userwidget$PARAM[nr]_sortby.label)">SetProperty(hold_current_userwidget_sortby.label,$INFO[Skin.String(userwidget$PARAM[nr]_sortby.label)])</onclick>
				<onclick condition="skin.string(userwidget$PARAM[nr]_sortorder)">SetProperty(hold_current_userwidget_sortorder,$INFO[Skin.String(userwidget$PARAM[nr]_sortorder)])</onclick>
				<onclick condition="skin.string(userwidget$PARAM[nr]_sortorder.label)">SetProperty(hold_current_userwidget_sortorder.label,$INFO[Skin.String(userwidget$PARAM[nr]_sortorder.label)])</onclick>
				<onclick condition="skin.string(userwidget$PARAM[nr]_layout)">SetProperty(hold_current_userwidget_layout,$INFO[Skin.String(userwidget$PARAM[nr]_layout)])</onclick>
				<onclick condition="skin.string(userwidget$PARAM[nr]_layout.label)">SetProperty(hold_current_userwidget_layout.label,$INFO[Skin.String(userwidget$PARAM[nr]_layout.label)])</onclick>
				<onclick condition="skin.string(userwidget$PARAM[nr]_linked)">SetProperty(hold_prev_userwidget_linked,$INFO[Skin.String(userwidget$PARAM[nr]_linked)])</onclick>
				
				<onclick condition="skin.hassetting(userwidget$PARAM[nr]_IsSection)">SetProperty(hold_current_userwidget_IsSection,true)</onclick>
				<onclick condition="skin.hassetting(userwidget$PARAM[nr]_forceFixedlist)">SetProperty(hold_current_userwidget_forceFixedlist,true)</onclick>
				<onclick condition="skin.hassetting(userwidget$PARAM[nr]_forceTag)">SetProperty(hold_current_userwidget_forceTag,true)</onclick>
				<onclick condition="skin.hassetting(userwidget$PARAM[nr]_bottominfo)">SetProperty(hold_current_userwidget_bottominfo,true)</onclick>
				
				<onclick>setfocus($PARAM[id]397)</onclick>
			</control>
			
			<control type="button" id="$PARAM[id]396">
				<description>bump or switch</description>
				<include>HiddenObject</include>
				
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_name))">Skin.SetString(userwidget$PARAM[prev_nr]_name,$INFO[Window.Property(hold_current_userwidget_name)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_path))">Skin.SetString(userwidget$PARAM[prev_nr]_path,$INFO[Window.Property(hold_current_userwidget_path)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_target))">Skin.SetString(userwidget$PARAM[prev_nr]_target,$INFO[Window.Property(hold_current_userwidget_target)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_limit))">Skin.SetString(userwidget$PARAM[prev_nr]_limit,$INFO[Window.Property(hold_current_userwidget_limit)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_sortby))">Skin.SetString(userwidget$PARAM[prev_nr]_sortby,$INFO[Window.Property(hold_current_userwidget_sortby)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_sortby.label))">Skin.SetString(userwidget$PARAM[prev_nr]_sortby.label,$INFO[Window.Property(hold_current_userwidget_sortby.label)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_sortorder))">Skin.SetString(userwidget$PARAM[prev_nr]_sortorder,$INFO[Window.Property(hold_current_userwidget_sortorder)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_sortorder.label))">Skin.SetString(userwidget$PARAM[prev_nr]_sortorder.label,$INFO[Window.Property(hold_current_userwidget_sortorder.label)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_layout))">Skin.SetString(userwidget$PARAM[prev_nr]_layout,$INFO[Window.Property(hold_current_userwidget_layout)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_layout.label))">Skin.SetString(userwidget$PARAM[prev_nr]_layout.label,$INFO[Window.Property(hold_current_userwidget_layout.label)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_linked))">Skin.SetString(userwidget$PARAM[prev_nr]_linked,$INFO[Window.Property(hold_current_userwidget_linked)])</onfocus>
					
					<onfocus condition="String.IsEqual(Window.Property(hold_current_userwidget_IsSection),true) + !Skin.HasSetting(userwidget$PARAM[prev_nr]_IsSection)">Skin.ToggleSetting(userwidget$PARAM[prev_nr]_IsSection)</onfocus>
					<onfocus condition="String.IsEqual(Window.Property(hold_current_userwidget_forceFixedlist),true) + !Skin.HasSetting(userwidget$PARAM[prev_nr]_forceFixedlist)">Skin.ToggleSetting(userwidget$PARAM[prev_nr]_forceFixedlist)</onfocus>
					<onfocus condition="String.IsEqual(Window.Property(hold_current_userwidget_forceTag),true) + !Skin.HasSetting(userwidget$PARAM[prev_nr]_forceTag)">Skin.ToggleSetting(userwidget$PARAM[prev_nr]_forceTag)</onfocus>
					<onfocus condition="String.IsEqual(Window.Property(hold_current_userwidget_bottominfo),true) + !Skin.HasSetting(userwidget$PARAM[prev_nr]_bottominfo)">Skin.ToggleSetting(userwidget$PARAM[prev_nr]_bottominfo)</onfocus>
				
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + !String.IsEmpty(Window.Property(hold_current_userwidget_name))">Skin.Reset(userwidget$PARAM[nr]_name)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + !String.IsEmpty(Window.Property(hold_current_userwidget_path))">Skin.Reset(userwidget$PARAM[nr]_path)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + !String.IsEmpty(Window.Property(hold_current_userwidget_target))">Skin.Reset(userwidget$PARAM[nr]_target)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + !String.IsEmpty(Window.Property(hold_current_userwidget_limit))">Skin.Reset(userwidget$PARAM[nr]_limit)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + !String.IsEmpty(Window.Property(hold_current_userwidget_sortby))">Skin.Reset(userwidget$PARAM[nr]_sortby)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + !String.IsEmpty(Window.Property(hold_current_userwidget_sortby.label))">Skin.Reset(userwidget$PARAM[nr]_sortby.label)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + !String.IsEmpty(Window.Property(hold_current_userwidget_sortorder))">Skin.Reset(userwidget$PARAM[nr]_sortorder)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + !String.IsEmpty(Window.Property(hold_current_userwidget_sortorder.label))">Skin.Reset(userwidget$PARAM[nr]_sortorder.label)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + !String.IsEmpty(Window.Property(hold_current_userwidget_layout))">Skin.Reset(userwidget$PARAM[nr]_layout)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + !String.IsEmpty(Window.Property(hold_current_userwidget_layout.label))">Skin.Reset(userwidget$PARAM[nr]_layout.label)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + !String.IsEmpty(Window.Property(hold_current_userwidget_linked))">Skin.Reset(userwidget$PARAM[nr]_linked)</onfocus>
					
					<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + String.IsEqual(Window.Property(hold_current_userwidget_IsSection),true)">Skin.Reset(userwidget$PARAM[nr]_IsSection)</onfocus>
					<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + String.IsEqual(Window.Property(hold_current_userwidget_forceFixedlist),true)">Skin.Reset(userwidget$PARAM[nr]_forceFixedlist)</onfocus>
					<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + String.IsEqual(Window.Property(hold_current_userwidget_forceTag),true)">Skin.Reset(userwidget$PARAM[nr]_forceTag)</onfocus>
					<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + String.IsEqual(Window.Property(hold_current_userwidget_bottominfo),true)">Skin.Reset(userwidget$PARAM[nr]_bottominfo)</onfocus>
				
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_name))">Skin.SetString(userwidget$PARAM[nr]_name,$INFO[Window.Property(hold_prev_userwidget_name)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_path))">Skin.SetString(userwidget$PARAM[nr]_path,$INFO[Window.Property(hold_prev_userwidget_path)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_target))">Skin.SetString(userwidget$PARAM[nr]_target,$INFO[Window.Property(hold_prev_userwidget_target)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_limit))">Skin.SetString(userwidget$PARAM[nr]_limit,$INFO[Window.Property(hold_prev_userwidget_limit)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_sortby))">Skin.SetString(userwidget$PARAM[nr]_sortby,$INFO[Window.Property(hold_prev_userwidget_sortby)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_sortby.label))">Skin.SetString(userwidget$PARAM[nr]_sortby.label,$INFO[Window.Property(hold_prev_userwidget_sortby.label)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_sortorder))">Skin.SetString(userwidget$PARAM[nr]_sortorder,$INFO[Window.Property(hold_prev_userwidget_sortorder)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_sortorder.label))">Skin.SetString(userwidget$PARAM[nr]_sortorder.label,$INFO[Window.Property(hold_prev_userwidget_sortorder.label)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_layout))">Skin.SetString(userwidget$PARAM[nr]_layout,$INFO[Window.Property(hold_prev_userwidget_layout)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_layout.label))">Skin.SetString(userwidget$PARAM[nr]_layout.label,$INFO[Window.Property(hold_prev_userwidget_layout.label)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_linked))">Skin.SetString(userwidget$PARAM[nr]_linked,$INFO[Window.Property(hold_prev_userwidget_linked)])</onfocus>
				
					<onfocus condition="String.IsEqual(Window.Property(hold_prev_userwidget_IsSection),true) + !Skin.HasSetting(userwidget$PARAM[nr]_IsSection)">Skin.ToggleSetting(userwidget$PARAM[nr]_IsSection)</onfocus>
					<onfocus condition="String.IsEqual(Window.Property(hold_prev_userwidget_forceFixedlist),true) + !Skin.HasSetting(userwidget$PARAM[nr]_forceFixedlist)">Skin.ToggleSetting(userwidget$PARAM[nr]_forceFixedlist)</onfocus>
					<onfocus condition="String.IsEqual(Window.Property(hold_prev_userwidget_forceTag),true) + !Skin.HasSetting(userwidget$PARAM[nr]_forceTag)">Skin.ToggleSetting(userwidget$PARAM[nr]_forceTag)</onfocus>
					<onfocus condition="String.IsEqual(Window.Property(hold_prev_userwidget_bottominfo),true) + !Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)">Skin.ToggleSetting(userwidget$PARAM[nr]_bottominfo)</onfocus>
					
				<onfocus>setfocus($PARAM[id]398)</onfocus>
			</control>
			<control type="button" id="$PARAM[id]397">
				<description>bump or switch next</description>
				<include>HiddenObject</include>
				
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_name))">Skin.SetString(userwidget$PARAM[next_nr]_name,$INFO[Window.Property(hold_current_userwidget_name)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_path))">Skin.SetString(userwidget$PARAM[next_nr]_path,$INFO[Window.Property(hold_current_userwidget_path)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_target))">Skin.SetString(userwidget$PARAM[next_nr]_target,$INFO[Window.Property(hold_current_userwidget_target)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_limit))">Skin.SetString(userwidget$PARAM[next_nr]_limit,$INFO[Window.Property(hold_current_userwidget_limit)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_sortby))">Skin.SetString(userwidget$PARAM[next_nr]_sortby,$INFO[Window.Property(hold_current_userwidget_sortby)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_sortby.label))">Skin.SetString(userwidget$PARAM[next_nr]_sortby.label,$INFO[Window.Property(hold_current_userwidget_sortby.label)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_sortorder))">Skin.SetString(userwidget$PARAM[next_nr]_sortorder,$INFO[Window.Property(hold_current_userwidget_sortorder)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_sortorder.label))">Skin.SetString(userwidget$PARAM[next_nr]_sortorder.label,$INFO[Window.Property(hold_current_userwidget_sortorder.label)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_layout))">Skin.SetString(userwidget$PARAM[next_nr]_layout,$INFO[Window.Property(hold_current_userwidget_layout)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_layout.label))">Skin.SetString(userwidget$PARAM[next_nr]_layout.label,$INFO[Window.Property(hold_current_userwidget_layout.label)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_linked))">Skin.SetString(userwidget$PARAM[next_nr]_linked,$INFO[Window.Property(hold_current_userwidget_linked)])</onfocus>
					<onfocus condition="String.IsEqual(Window.Property(hold_current_userwidget_IsSection),true) + !Skin.HasSetting(userwidget$PARAM[next_nr]_IsSection)">Skin.ToggleSetting(userwidget$PARAM[next_nr]_IsSection)</onfocus>
					<onfocus condition="String.IsEqual(Window.Property(hold_current_userwidget_forceFixedlist),true) + !Skin.HasSetting(userwidget$PARAM[next_nr]_forceFixedlist)">Skin.ToggleSetting(userwidget$PARAM[next_nr]_forceFixedlist)</onfocus>
					<onfocus condition="String.IsEqual(Window.Property(hold_current_userwidget_forceTag),true) + !Skin.HasSetting(userwidget$PARAM[next_nr]_forceTag)">Skin.ToggleSetting(userwidget$PARAM[next_nr]_forceTag)</onfocus>
					<onfocus condition="String.IsEqual(Window.Property(hold_current_userwidget_bottominfo),true) + !Skin.HasSetting(userwidget$PARAM[next_nr]_bottominfo)">Skin.ToggleSetting(userwidget$PARAM[next_nr]_bottominfo)</onfocus>
				
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + !String.IsEmpty(Window.Property(hold_current_userwidget_name))">Skin.Reset(userwidget$PARAM[nr]_name)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + !String.IsEmpty(Window.Property(hold_current_userwidget_path))">Skin.Reset(userwidget$PARAM[nr]_path)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + !String.IsEmpty(Window.Property(hold_current_userwidget_target))">Skin.Reset(userwidget$PARAM[nr]_target)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + !String.IsEmpty(Window.Property(hold_current_userwidget_limit))">Skin.Reset(userwidget$PARAM[nr]_limit)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + !String.IsEmpty(Window.Property(hold_current_userwidget_sortby))">Skin.Reset(userwidget$PARAM[nr]_sortby)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + !String.IsEmpty(Window.Property(hold_current_userwidget_sortby.label))">Skin.Reset(userwidget$PARAM[nr]_sortby.label)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + !String.IsEmpty(Window.Property(hold_current_userwidget_sortorder))">Skin.Reset(userwidget$PARAM[nr]_sortorder)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + !String.IsEmpty(Window.Property(hold_current_userwidget_sortorder.label))">Skin.Reset(userwidget$PARAM[nr]_sortorder.label)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + !String.IsEmpty(Window.Property(hold_current_userwidget_layout))">Skin.Reset(userwidget$PARAM[nr]_layout)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + !String.IsEmpty(Window.Property(hold_current_userwidget_layout.label))">Skin.Reset(userwidget$PARAM[nr]_layout.label)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + !String.IsEmpty(Window.Property(hold_current_userwidget_linked))">Skin.Reset(userwidget$PARAM[nr]_linked)</onfocus>
					
					<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + String.IsEqual(Window.Property(hold_current_userwidget_IsSection),true)">Skin.Reset(userwidget$PARAM[nr]_IsSection)</onfocus>
					<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + String.IsEqual(Window.Property(hold_current_userwidget_forceFixedlist),true)">Skin.Reset(userwidget$PARAM[nr]_forceFixedlist)</onfocus>
					<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + String.IsEqual(Window.Property(hold_current_userwidget_forceTag),true)">Skin.Reset(userwidget$PARAM[nr]_forceTag)</onfocus>
					<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch)) + String.IsEqual(Window.Property(hold_current_userwidget_bottominfo),true)">Skin.Reset(userwidget$PARAM[nr]_bottominfo)</onfocus>
					
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_name))">Skin.SetString(userwidget$PARAM[nr]_name,$INFO[Window.Property(hold_next_userwidget_name)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_path))">Skin.SetString(userwidget$PARAM[nr]_path,$INFO[Window.Property(hold_next_userwidget_path)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_target))">Skin.SetString(userwidget$PARAM[nr]_target,$INFO[Window.Property(hold_next_userwidget_target)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_limit))">Skin.SetString(userwidget$PARAM[nr]_limit,$INFO[Window.Property(hold_next_userwidget_limit)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_sortby))">Skin.SetString(userwidget$PARAM[nr]_sortby,$INFO[Window.Property(hold_next_userwidget_sortby)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_sortby.label))">Skin.SetString(userwidget$PARAM[nr]_sortby.label,$INFO[Window.Property(hold_next_userwidget_sortby.label)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_sortorder))">Skin.SetString(userwidget$PARAM[nr]_sortorder,$INFO[Window.Property(hold_next_userwidget_sortorder)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_sortorder.label))">Skin.SetString(userwidget$PARAM[nr]_sortorder.label,$INFO[Window.Property(hold_next_userwidget_sortorder.label)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_layout))">Skin.SetString(userwidget$PARAM[nr]_layout,$INFO[Window.Property(hold_next_userwidget_layout)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_layout.label))">Skin.SetString(userwidget$PARAM[nr]_layout.label,$INFO[Window.Property(hold_next_userwidget_layout.label)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_linked))">Skin.SetString(userwidget$PARAM[nr]_linked,$INFO[Window.Property(hold_next_userwidget_linked)])</onfocus>
					<onfocus condition="String.IsEqual(Window.Property(hold_next_userwidget_IsSection),true) + !Skin.HasSetting(userwidget$PARAM[nr]_IsSection)">Skin.ToggleSetting(userwidget$PARAM[nr]_IsSection)</onfocus>
					<onfocus condition="String.IsEqual(Window.Property(hold_next_userwidget_forceFixedlist),true) + !Skin.HasSetting(userwidget$PARAM[nr]_forceFixedlist)">Skin.ToggleSetting(userwidget$PARAM[nr]_forceFixedlist)</onfocus>
					<onfocus condition="String.IsEqual(Window.Property(hold_next_userwidget_forceTag),true) + !Skin.HasSetting(userwidget$PARAM[nr]_forceTag)">Skin.ToggleSetting(userwidget$PARAM[nr]_forceTag)</onfocus>
					<onfocus condition="String.IsEqual(Window.Property(hold_next_userwidget_bottominfo),true) + !Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)">Skin.ToggleSetting(userwidget$PARAM[nr]_bottominfo)</onfocus>
				
				<onfocus>setfocus($PARAM[id]399)</onfocus>
			</control>
											
			<control type="button" id="$PARAM[id]398">
				<description>clear prev</description>
				<include>HiddenObject</include>
				
				<onfocus condition="!String.IsEmpty(Window.Property(userwidget_no_switch))">ClearProperty(userwidget_no_switch)</onfocus>
				
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_name))">ClearProperty(hold_current_userwidget_name)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_path))">ClearProperty(hold_current_userwidget_path)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_target))">ClearProperty(hold_current_userwidget_target)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_limit))">ClearProperty(hold_current_userwidget_limit)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_sortby))">ClearProperty(hold_current_userwidget_sortby)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_sortby.label))">ClearProperty(hold_current_userwidget_sortby.label)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_sortorder))">ClearProperty(hold_current_userwidget_sortorder)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_sortorder.label))">ClearProperty(hold_current_userwidget_sortorder.label)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_layout))">ClearProperty(hold_current_userwidget_layout)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_layout.label))">ClearProperty(hold_current_userwidget_layout.label)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_linked))">ClearProperty(hold_current_userwidget_linked)</onfocus>
				
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_IsSection))">ClearProperty(hold_current_userwidget_IsSection)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_forceFixedlist))">ClearProperty(hold_current_userwidget_forceFixedlist)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_forceTag))">ClearProperty(hold_current_userwidget_forceTag)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_bottominfo))">ClearProperty(hold_current_userwidget_bottominfo)</onfocus>
				
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_name))">ClearProperty(hold_prev_userwidget_name)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_path))">ClearProperty(hold_prev_userwidget_path)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_target))">ClearProperty(hold_prev_userwidget_target)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_limit))">ClearProperty(hold_prev_userwidget_limit)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_sortby))">ClearProperty(hold_prev_userwidget_sortby)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_sortby.label))">ClearProperty(hold_prev_userwidget_sortby.label)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_sortorder))">ClearProperty(hold_prev_userwidget_sortorder)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_sortorder.label))">ClearProperty(hold_prev_userwidget_sortorder.label)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_layout))">ClearProperty(hold_prev_userwidget_layout)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_layout.label))">ClearProperty(hold_prev_userwidget_layout.label)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_linked))">ClearProperty(hold_prev_userwidget_linked)</onfocus>
				
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_IsSection))">ClearProperty(hold_prev_userwidget_IsSection)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_forceFixedlist))">ClearProperty(hold_prev_userwidget_forceFixedlist)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_forceTag))">ClearProperty(hold_prev_userwidget_forceTag)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_userwidget_bottominfo))">ClearProperty(hold_prev_userwidget_bottominfo)</onfocus>
				
				<onfocus>SetFocus($PARAM[id]301)</onfocus>
				<onfocus>SetFocus($PARAM[prev_id])</onfocus>
				<onfocus>Action(up)</onfocus>
				<onfocus>Action(up)</onfocus>
				<onfocus>SetFocus($PARAM[prev_id])</onfocus>
			</control>
			<control type="button" id="$PARAM[id]399">
				<description>clear next</description>
				<include>HiddenObject</include>
			
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_name))">ClearProperty(hold_current_userwidget_name)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_path))">ClearProperty(hold_current_userwidget_path)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_target))">ClearProperty(hold_current_userwidget_target)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_limit))">ClearProperty(hold_current_userwidget_limit)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_sortby))">ClearProperty(hold_current_userwidget_sortby)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_sortby.label))">ClearProperty(hold_current_userwidget_sortby.label)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_sortorder))">ClearProperty(hold_current_userwidget_sortorder)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_sortorder.label))">ClearProperty(hold_current_userwidget_sortorder.label)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_layout))">ClearProperty(hold_current_userwidget_layout)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_layout.label))">ClearProperty(hold_current_userwidget_layout.label)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_linked))">ClearProperty(hold_current_userwidget_linked)</onfocus>
				
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_IsSection))">ClearProperty(hold_current_userwidget_IsSection)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_forceFixedlist))">ClearProperty(hold_current_userwidget_forceFixedlist)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_forceTag))">ClearProperty(hold_current_userwidget_forceTag)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_bottominfo))">ClearProperty(hold_current_userwidget_bottominfo)</onfocus>
				
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_name))">ClearProperty(hold_next_userwidget_name)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_path))">ClearProperty(hold_next_userwidget_path)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_target))">ClearProperty(hold_next_userwidget_target)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_limit))">ClearProperty(hold_next_userwidget_limit)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_sortby))">ClearProperty(hold_next_userwidget_sortby)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_sortby.label))">ClearProperty(hold_next_userwidget_sortby.label)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_sortorder))">ClearProperty(hold_next_userwidget_sortorder)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_sortorder.label))">ClearProperty(hold_next_userwidget_sortorder.label)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_layout))">ClearProperty(hold_next_userwidget_layout)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_layout.label))">ClearProperty(hold_next_userwidget_layout.label)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_linked))">ClearProperty(hold_next_userwidget_linked)</onfocus>
				
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_IsSection))">ClearProperty(hold_next_userwidget_IsSection)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_forceFixedlist))">ClearProperty(hold_next_userwidget_forceFixedlist)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_forceTag))">ClearProperty(hold_next_userwidget_forceTag)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_userwidget_bottominfo))">ClearProperty(hold_next_userwidget_bottominfo)</onfocus>
				
				<onfocus>SetFocus($PARAM[id]302)</onfocus>
				<onfocus>SetFocus($PARAM[next_id])</onfocus>
				<onfocus>Action(up)</onfocus>
				<onfocus>Action(up)</onfocus>
				<onfocus>SetFocus($PARAM[next_id])</onfocus>
			</control>
		</control>
		
		
		<control type="group" id="$PARAM[id]5">
			<control type="image">
				<visible>!String.IsEmpty(Skin.String(userwidget$PARAM[nr]_path))</visible>
				<description>Image extras WidgetLayout</description>
				<top>-180</top>
				<left>4</left>
				<height>155</height>
				<width>180</width>
				<bordersize>2</bordersize>
				<texture fallback="special://skin/extras/selectdialog/widgetlayout_nolayout.png">$INFO[Skin.String(userwidget$PARAM[nr]_layout),special://skin/extras/selectdialog/widgetlayout_,.jpg]</texture>
				<aspectratio>keep</aspectratio>
			</control>
			<control type="image">
				<visible>String.StartsWith(System.CurrentControlid,$PARAM[id]) + Control.IsVisible($PARAM[id]2)</visible>
				<top>-290</top>
				<height>290</height>
				<width>100%</width>
				<texture border="2">frames/frame.png</texture>
			</control>
		</control>
		
	</include>
	
	<include name="SwanShortcuts_template_mainmenu_settings">
		
		<include content="SectionHeadline">
			<param name="id" value="$PARAM[id]0"/>
			<param name="height" value="60"/>
			<param name="align" value="left" />
			<param name="label" value="MAIN MENU ENTRY  $PARAM[nr]$INFO[Skin.String(mainmenuitem$PARAM[nr]_name), : [B],[/B]]"/>
		</include>
		
		<control type="radiobutton" id="$PARAM[id]1">
			<description>Set mainmenu Shortcut</description>
			<include>shortcut_setting_radiobutton</include>
			<onclick>SetProperty(refocus_shortcut_id,$PARAM[id]1)</onclick>
			<onclick>SetProperty(shortcutitem_nr,$PARAM[nr],home)</onclick>
			<onclick>SetProperty(SettingSection,SwanWidgetShortcuts,home)</onclick>
			<onclick>SetProperty(shortcutaction_inprogress,mainmenu,home)</onclick>
			<onclick>ActivateWindow(1103,return)</onclick>
			<label>                             Set Entry</label>
			<label2>ActivateWindow($INFO[Skin.String(mainmenuitem$PARAM[nr]_target)]$INFO[Skin.String(mainmenuitem$PARAM[nr]_path)]$COMMAreturn)$INFO[Skin.String(mainmenuitem$PARAM[nr]_executebuiltin)]</label2>
		</control>
		<control type="radiobutton" id="$PARAM[id]2">
			<include>shortcut_setting_radiobutton</include>
			<height>80</height>
			<description>$INFO[Window(home).Property(shortcutitem_nr)]</description>
			<visible>Skin.String(mainmenuitem$PARAM[nr]_target) | Skin.String(mainmenuitem$PARAM[nr]_path) | Skin.String(mainmenuitem$PARAM[nr]_executebuiltin)</visible>
			<onclick>SetProperty(shortcutitem_nr,$PARAM[nr],home)</onclick>
			<onclick>SetProperty(SettingSection,MainmenuAttributes,home)</onclick>
			<onclick>ActivateWindow(1103)</onclick>
			<label>                             Change Attributes</label>
			<label2 />
		</control>
		
		<control type="radiobutton" id="$PARAM[id]6">
			<include>shortcut_setting_radiobutton</include>
			<height>40</height>
			<description>method 1</description>
			<visible>Skin.String(mainmenuitem$PARAM[nr]_target) | Skin.String(mainmenuitem$PARAM[nr]_path) | Skin.String(mainmenuitem$PARAM[nr]_executebuiltin)</visible>
			<onclick>SetProperty(mainmenu_nr,$PARAM[nr],home)</onclick>
			<onclick>SetProperty(SettingSection,MainmenuLinkWidget,home)</onclick>
			<onclick>ActivateWindow(1103)</onclick>
			<label>                             Link Widgets To This Menu Entry</label>
			<label2 />
		</control>
		
		<control type="group" id="$PARAM[id]3">
			<visible>Skin.String(mainmenuitem$PARAM[nr]_name) | Skin.String(mainmenuitem$PARAM[nr]_target) | Skin.String(mainmenuitem$PARAM[nr]_path) | Skin.String(mainmenuitem$PARAM[nr]_executebuiltin) | Skin.String(mainmenuitem$PARAM[nr]_thumb) | Skin.String(mainmenuitem$PARAM[nr]_fanart) | Skin.HasSetting(mainmenuitem$PARAM[nr]_disablesubmenu)</visible>
			<height>50</height>
			
			<control type="radiobutton" id="$PARAM[id]4">
				<description>RESET</description>
				<include content="shortcut_setting_move_button">
					<param name="label" value="                        Remove/Reset"/>
					<param name="width" value="515"/>
					<param name="radio_icon" value="buttons/delete.png"/>
					<param name="radio_posx" value="0"/>
					<param name="radioheight" value="35"/>
				</include>
				<left>0</left>
				<onup>$PARAM[id]6</onup>
				
				<onleft>SetFocus(200)</onleft>
				<onright>$PARAM[id]301</onright>
				<ondown>$PARAM[id]5</ondown>
				
				<onclick conditio="Skin.String(mainmenuitem$PARAM[nr]_name)">Skin.Reset(mainmenuitem$PARAM[nr]_name)</onclick>
				<onclick conditio="Skin.String(mainmenuitem$PARAM[nr]_target)">Skin.Reset(mainmenuitem$PARAM[nr]_target)</onclick>
				<onclick conditio="Skin.String(mainmenuitem$PARAM[nr]_path)">Skin.Reset(mainmenuitem$PARAM[nr]_path)</onclick>
				<onclick conditio="Skin.String(mainmenuitem$PARAM[nr]_executebuiltin)">Skin.Reset(mainmenuitem$PARAM[nr]_executebuiltin)</onclick>
				<onclick conditio="Skin.String(mainmenuitem$PARAM[nr]_thumb)">Skin.Reset(mainmenuitem$PARAM[nr]_thumb)</onclick>
				<onclick conditio="Skin.String(mainmenuitem$PARAM[nr]_fanart)">Skin.Reset(mainmenuitem$PARAM[nr]_fanart)</onclick>
				<onclick conditio="Skin.HasSetting(mainmenuitem$PARAM[nr]_disablesubmenu)">Skin.Reset(mainmenuitem$PARAM[nr]_disablesubmenu)</onclick>
				
				<onclick>SetFocus($PARAM[id]1)</onclick>
			</control>
			<control type="radiobutton" id="$PARAM[id]301">
				<description>hold prev</description>
				<include content="shortcut_setting_move_button">
					<param name="radio_icon" value="buttons/spinctrlup.png"/>
				</include>
				<left>520</left>
				
				<onup>$PARAM[id]6</onup>
				<ondown>$PARAM[id]5</ondown>
				<onleft>$PARAM[id]4</onleft>
				<onright>$PARAM[id]302</onright>
				
				<onclick condition="[
					!Skin.string(mainmenuitem$PARAM[prev_nr]_name) + 
					!Skin.string(mainmenuitem$PARAM[prev_nr]_path) + 
					!Skin.string(mainmenuitem$PARAM[prev_nr]_target) + 
					!Skin.string(mainmenuitem$PARAM[prev_nr]_executebuiltin) + 
					!Skin.string(mainmenuitem$PARAM[prev_nr]_thumb) + 
					!Skin.string(mainmenuitem$PARAM[prev_nr]_fanart) +
					!Skin.HasSetting(mainmenuitem$PARAM[prev_nr]_disablesubmenu]">SetProperty(mainmenuitem_no_switch,prev)</onclick>
				
				<onclick condition="Skin.string(mainmenuitem$PARAM[prev_nr]_name)">SetProperty(hold_prev_mainmenuitem_name,$INFO[Skin.String(mainmenuitem$PARAM[prev_nr]_name)])</onclick>
				<onclick condition="Skin.string(mainmenuitem$PARAM[prev_nr]_path)">SetProperty(hold_prev_mainmenuitem_path,$INFO[Skin.String(mainmenuitem$PARAM[prev_nr]_path)])</onclick>
				<onclick condition="Skin.string(mainmenuitem$PARAM[prev_nr]_target)">SetProperty(hold_prev_mainmenuitem_target,$INFO[Skin.String(mainmenuitem$PARAM[prev_nr]_target)])</onclick>
				<onclick condition="Skin.string(mainmenuitem$PARAM[prev_nr]_executebuiltin)">SetProperty(hold_prev_mainmenuitem_executebuiltin,$INFO[Skin.String(mainmenuitem$PARAM[prev_nr]_executebuiltin)])</onclick>
				<onclick condition="Skin.string(mainmenuitem$PARAM[prev_nr]_thumb)">SetProperty(hold_prev_mainmenuitem_thumb,$INFO[Skin.String(mainmenuitem$PARAM[prev_nr]_thumb)])</onclick>
				<onclick condition="Skin.string(mainmenuitem$PARAM[prev_nr]_fanart)">SetProperty(hold_prev_mainmenuitem_fanart,$INFO[Skin.String(mainmenuitem$PARAM[prev_nr]_fanart)])</onclick>
				<onclick condition="Skin.HasSetting(mainmenuitem$PARAM[prev_nr]_disablesubmenu)">SetProperty(hold_prev_mainmenuitem_disablesubmenu,true)</onclick>
				<onclick condition="Skin.string(mainmenuitem$PARAM[nr]_name)">SetProperty(hold_current_mainmenuitem_name,$INFO[Skin.String(mainmenuitem$PARAM[nr]_name)])</onclick>
				<onclick condition="Skin.string(mainmenuitem$PARAM[nr]_path)">SetProperty(hold_current_mainmenuitem_path,$INFO[Skin.String(mainmenuitem$PARAM[nr]_path)])</onclick>
				<onclick condition="Skin.string(mainmenuitem$PARAM[nr]_target)">SetProperty(hold_current_mainmenuitem_target,$INFO[Skin.String(mainmenuitem$PARAM[nr]_target)])</onclick>
				<onclick condition="Skin.string(mainmenuitem$PARAM[nr]_executebuiltin)">SetProperty(hold_current_mainmenuitem_executebuiltin,$INFO[Skin.String(mainmenuitem$PARAM[nr]_executebuiltin)])</onclick>
				<onclick condition="Skin.string(mainmenuitem$PARAM[nr]_thumb)">SetProperty(hold_current_mainmenuitem_thumb,$INFO[Skin.String(mainmenuitem$PARAM[nr]_thumb)])</onclick>
				<onclick condition="Skin.string(mainmenuitem$PARAM[nr]_fanart)">SetProperty(hold_current_mainmenuitem_fanart,$INFO[Skin.String(mainmenuitem$PARAM[nr]_fanart)])</onclick>
				<onclick condition="Skin.HasSetting(mainmenuitem$PARAM[nr]_disablesubmenu)">SetProperty(hold_current_mainmenuitem_disablesubmenu,true)</onclick>
					
				<onclick>setfocus($PARAM[id]396)</onclick>
			</control>
				
			<control type="radiobutton" id="$PARAM[id]302">
				<description>hold next</description>
				<include content="shortcut_setting_move_button">
					<param name="radio_icon" value="buttons/spinctrldown.png"/>
				</include>
				<right>0</right>
				
				<onup>$PARAM[id]6</onup>
				<ondown>$PARAM[id]5</ondown>
				<onleft>$PARAM[id]301</onleft>
				<onright>$PARAM[id]301</onright>
				
				<onclick condition="[
					!Skin.string(mainmenuitem$PARAM[next_nr]_name) + 
					!Skin.string(mainmenuitem$PARAM[next_nr]_path) + 
					!Skin.string(mainmenuitem$PARAM[next_nr]_target) + 
					!Skin.string(mainmenuitem$PARAM[next_nr]_executebuiltin) + 
					!Skin.string(mainmenuitem$PARAM[next_nr]_thumb) + 
					!Skin.string(mainmenuitem$PARAM[next_nr]_fanart) +
					!Skin.HasSetting(mainmenuitem$PARAM[next_nr]_disablesubmenu]">SetProperty(mainmenuitem_no_switch,next)</onclick>
					
				<onclick condition="Skin.string(mainmenuitem$PARAM[next_nr]_name)">SetProperty(hold_next_mainmenuitem_name,$INFO[Skin.String(mainmenuitem$PARAM[next_nr]_name)])</onclick>
				<onclick condition="Skin.string(mainmenuitem$PARAM[next_nr]_path)">SetProperty(hold_next_mainmenuitem_path,$INFO[Skin.String(mainmenuitem$PARAM[next_nr]_path)])</onclick>
				<onclick condition="Skin.string(mainmenuitem$PARAM[next_nr]_target)">SetProperty(hold_next_mainmenuitem_target,$INFO[Skin.String(mainmenuitem$PARAM[next_nr]_target)])</onclick>
				<onclick condition="Skin.string(mainmenuitem$PARAM[next_nr]_executebuiltin)">SetProperty(hold_next_mainmenuitem_executebuiltin,$INFO[Skin.String(mainmenuitem$PARAM[next_nr]_executebuiltin)])</onclick>
				<onclick condition="Skin.string(mainmenuitem$PARAM[next_nr]_thumb)">SetProperty(hold_next_mainmenuitem_thumb,$INFO[Skin.String(mainmenuitem$PARAM[next_nr]_thumb)])</onclick>
				<onclick condition="Skin.string(mainmenuitem$PARAM[next_nr]_fanart)">SetProperty(hold_next_mainmenuitem_fanart,$INFO[Skin.String(mainmenuitem$PARAM[next_nr]_fanart)])</onclick>
				<onclick condition="Skin.HasSetting(mainmenuitem$PARAM[next_nr]_disablesubmenu)">SetProperty(hold_next_mainmenuitem_disablesubmenu,true)</onclick>
				<onclick condition="Skin.string(mainmenuitem$PARAM[nr]_name)">SetProperty(hold_current_mainmenuitem_name,$INFO[Skin.String(mainmenuitem$PARAM[nr]_name)])</onclick>
				<onclick condition="Skin.string(mainmenuitem$PARAM[nr]_path)">SetProperty(hold_current_mainmenuitem_path,$INFO[Skin.String(mainmenuitem$PARAM[nr]_path)])</onclick>
				<onclick condition="Skin.string(mainmenuitem$PARAM[nr]_target)">SetProperty(hold_current_mainmenuitem_target,$INFO[Skin.String(mainmenuitem$PARAM[nr]_target)])</onclick>
				<onclick condition="Skin.string(mainmenuitem$PARAM[nr]_executebuiltin)">SetProperty(hold_current_mainmenuitem_executebuiltin,$INFO[Skin.String(mainmenuitem$PARAM[nr]_executebuiltin)])</onclick>
				<onclick condition="Skin.string(mainmenuitem$PARAM[nr]_thumb)">SetProperty(hold_current_mainmenuitem_thumb,$INFO[Skin.String(mainmenuitem$PARAM[nr]_thumb)])</onclick>
				<onclick condition="Skin.string(mainmenuitem$PARAM[nr]_fanart)">SetProperty(hold_current_mainmenuitem_fanart,$INFO[Skin.String(mainmenuitem$PARAM[nr]_fanart)])</onclick>
				<onclick condition="Skin.HasSetting(mainmenuitem$PARAM[nr]_disablesubmenu)">SetProperty(hold_current_mainmenuitem_disablesubmenu,true)</onclick>
				
				<onclick>setfocus($PARAM[id]397)</onclick>
			</control>
				
			<control type="button" id="$PARAM[id]396">
				<description>bump or switch prev</description>
				<include>HiddenObject</include>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_name))">Skin.SetString(mainmenuitem$PARAM[prev_nr]_name,$INFO[Window.Property(hold_current_mainmenuitem_name)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_path))">Skin.SetString(mainmenuitem$PARAM[prev_nr]_path,$INFO[Window.Property(hold_current_mainmenuitem_path)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_target))">Skin.SetString(mainmenuitem$PARAM[prev_nr]_target,$INFO[Window.Property(hold_current_mainmenuitem_target)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_executebuiltin))">Skin.SetString(mainmenuitem$PARAM[prev_nr]_executebuiltin,$INFO[Window.Property(hold_current_mainmenuitem_executebuiltin)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_thumb))">Skin.SetString(mainmenuitem$PARAM[prev_nr]_thumb,$INFO[Window.Property(hold_current_mainmenuitem_thumb)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_fanart))">Skin.SetString(mainmenuitem$PARAM[prev_nr]_fanart,$INFO[Window.Property(hold_current_mainmenuitem_fanart)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_userwidget_disablesubmenu))">Skin.SetString(mainmenuitem$PARAM[prev_nr]_fanart,$INFO[Window.Property(hold_current_mainmenuitem_fanart)])</onfocus>
					<onfocus condition="String.IsEqual(Window.Property(hold_current_userwidget_disablesubmenu),true) + !Skin.HasSetting(mainmenuitem$PARAM[prev_nr]_disablesubmenu)">Skin.ToggleSetting(mainmenuitem$PARAM[prev_nr]_disablesubmenu)</onfocus>
				
				<onfocus condition="!String.IsEmpty(Window.Property(mainmenuitem_no_switch)) + !String.IsEmpty(Window.Property(hold_current_mainmenuitem_name))">Skin.Reset(mainmenuitem$PARAM[nr]_name)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(mainmenuitem_no_switch)) + !String.IsEmpty(Window.Property(hold_current_mainmenuitem_path))">Skin.Reset(mainmenuitem$PARAM[nr]_path)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(mainmenuitem_no_switch)) + !String.IsEmpty(Window.Property(hold_current_mainmenuitem_target))">Skin.Reset(mainmenuitem$PARAM[nr]_target)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(mainmenuitem_no_switch)) + !String.IsEmpty(Window.Property(hold_current_mainmenuitem_executebuiltin))">Skin.Reset(mainmenuitem$PARAM[nr]_executebuiltin)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(mainmenuitem_no_switch)) + !String.IsEmpty(Window.Property(hold_current_mainmenuitem_thumb))">Skin.Reset(mainmenuitem$PARAM[nr]_thumb)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(mainmenuitem_no_switch)) + !String.IsEmpty(Window.Property(hold_current_mainmenuitem_fanart))">Skin.Reset(mainmenuitem$PARAM[nr]_fanart)</onfocus>
					<onfocus condition="!String.IsEmpty(Window.Property(mainmenuitem_no_switch)) + String.IsEqual(Window.Property(hold_current_mainmenuitem_disablesubmenu),true)">Skin.Reset(mainmenuitem$PARAM[nr]_disablesubmenu)</onfocus>
				
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_mainmenuitem_name))">Skin.SetString(mainmenuitem$PARAM[nr]_name,$INFO[Window.Property(hold_prev_mainmenuitem_name)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_mainmenuitem_path))">Skin.SetString(mainmenuitem$PARAM[nr]_path,$INFO[Window.Property(hold_prev_mainmenuitem_path)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_mainmenuitem_target))">Skin.SetString(mainmenuitem$PARAM[nr]_target,$INFO[Window.Property(hold_prev_mainmenuitem_target)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_mainmenuitem_executebuiltin))">Skin.SetString(mainmenuitem$PARAM[nr]_executebuiltin,$INFO[Window.Property(hold_prev_mainmenuitem_executebuiltin)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_mainmenuitem_thumb))">Skin.SetString(mainmenuitem$PARAM[nr]_thumb,$INFO[Window.Property(hold_prev_mainmenuitem_thumb)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_mainmenuitem_fanart))">Skin.SetString(mainmenuitem$PARAM[nr]_fanart,$INFO[Window.Property(hold_prev_mainmenuitem_fanart)])</onfocus>
					<onfocus condition="String.IsEqual(Window.Property(hold_prev_userwidget_disablesubmenu),true) + !Skin.HasSetting(mainmenuitem$PARAM[nr]_disablesubmenu)">Skin.ToggleSetting(mainmenuitem$PARAM[nr]_disablesubmenu)</onfocus>
				
				<onfocus>setfocus($PARAM[id]398)</onfocus>
			</control>
			<control type="button" id="$PARAM[id]397">
				<description>bump or switch +</description>
				<include>HiddenObject</include>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_name))">Skin.SetString(mainmenuitem$PARAM[next_nr]_name,$INFO[Window.Property(hold_current_mainmenuitem_name)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_path))">Skin.SetString(mainmenuitem$PARAM[next_nr]_path,$INFO[Window.Property(hold_current_mainmenuitem_path)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_target))">Skin.SetString(mainmenuitem$PARAM[next_nr]_target,$INFO[Window.Property(hold_current_mainmenuitem_target)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_executebuiltin))">Skin.SetString(mainmenuitem$PARAM[next_nr]_executebuiltin,$INFO[Window.Property(hold_current_mainmenuitem_executebuiltin)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_thumb))">Skin.SetString(mainmenuitem$PARAM[next_nr]_thumb,$INFO[Window.Property(hold_current_mainmenuitem_thumb)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_fanart))">Skin.SetString(mainmenuitem$PARAM[next_nr]_fanart,$INFO[Window.Property(hold_current_mainmenuitem_fanart)])</onfocus>
					<onfocus condition="String.IsEqual(Window.Property(hold_current_userwidget_disablesubmenu),true) + !Skin.HasSetting(mainmenuitem$PARAM[next_nr]_disablesubmenu)">Skin.ToggleSetting(mainmenuitem$PARAM[next_nr]_disablesubmenu)</onfocus>
				
				<onfocus condition="!String.IsEmpty(Window.Property(mainmenuitem_no_switch)) + !String.IsEmpty(Window.Property(hold_current_mainmenuitem_name))">Skin.Reset(mainmenuitem$PARAM[nr]_name)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(mainmenuitem_no_switch)) + !String.IsEmpty(Window.Property(hold_current_mainmenuitem_path))">Skin.Reset(mainmenuitem$PARAM[nr]_path)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(mainmenuitem_no_switch)) + !String.IsEmpty(Window.Property(hold_current_mainmenuitem_target))">Skin.Reset(mainmenuitem$PARAM[nr]_target)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(mainmenuitem_no_switch)) + !String.IsEmpty(Window.Property(hold_current_mainmenuitem_executebuiltin))">Skin.Reset(mainmenuitem$PARAM[nr]_executebuiltin)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(mainmenuitem_no_switch)) + !String.IsEmpty(Window.Property(hold_current_mainmenuitem_thumb))">Skin.Reset(mainmenuitem$PARAM[nr]_thumb)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(mainmenuitem_no_switch)) + !String.IsEmpty(Window.Property(hold_current_mainmenuitem_fanart))">Skin.Reset(mainmenuitem$PARAM[nr]_fanart)</onfocus>
					<onfocus condition="!String.IsEmpty(Window.Property(mainmenuitem_no_switch)) + String.IsEqual(Window.Property(hold_current_mainmenuitem_disablesubmenu),true)">Skin.Reset(mainmenuitem$PARAM[nr]_disablesubmenu)</onfocus>
				
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_mainmenuitem_name))">Skin.SetString(mainmenuitem$PARAM[nr]_name,$INFO[Window.Property(hold_next_mainmenuitem_name)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_mainmenuitem_path))">Skin.SetString(mainmenuitem$PARAM[nr]_path,$INFO[Window.Property(hold_next_mainmenuitem_path)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_mainmenuitem_target))">Skin.SetString(mainmenuitem$PARAM[nr]_target,$INFO[Window.Property(hold_next_mainmenuitem_target)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_mainmenuitem_executebuiltin))">Skin.SetString(mainmenuitem$PARAM[nr]_executebuiltin,$INFO[Window.Property(hold_next_mainmenuitem_executebuiltin)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_mainmenuitem_thumb))">Skin.SetString(mainmenuitem$PARAM[nr]_thumb,$INFO[Window.Property(hold_next_mainmenuitem_thumb)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_mainmenuitem_fanart))">Skin.SetString(mainmenuitem$PARAM[nr]_fanart,$INFO[Window.Property(hold_next_mainmenuitem_fanart)])</onfocus>
					<onfocus condition="String.IsEqual(Window.Property(hold_next_userwidget_disablesubmenu),true) + !Skin.HasSetting(mainmenuitem$PARAM[nr]_disablesubmenu)">Skin.ToggleSetting(mainmenuitem$PARAM[nr]_disablesubmenu)</onfocus>
				
				<onfocus>setfocus($PARAM[id]399)</onfocus>
			</control>
			<control type="button" id="$PARAM[id]398">
				<include>HiddenObject</include>
				<onfocus condition="!String.IsEmpty(Window.Property(mainmenuitem_no_switch))">ClearProperty(mainmenuitem_no_switch)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_name))">ClearProperty(hold_current_mainmenuitem_name)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_path))">ClearProperty(hold_current_mainmenuitem_path)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_target))">ClearProperty(hold_current_mainmenuitem_target)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_executebuiltin))">ClearProperty(hold_current_mainmenuitem_executebuiltin)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_thumb))">ClearProperty(hold_current_mainmenuitem_thumb)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_fanart))">ClearProperty(hold_current_mainmenuitem_fanart)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_disablesubmenu))">ClearProperty(hold_current_mainmenuitem_disablesubmenu)</onfocus>
				
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_mainmenuitem_name))">ClearProperty(hold_prev_mainmenuitem_name)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_mainmenuitem_path))">ClearProperty(hold_prev_mainmenuitem_path)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_mainmenuitem_target))">ClearProperty(hold_prev_mainmenuitem_target)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_mainmenuitem_executebuiltin))">ClearProperty(hold_prev_mainmenuitem_executebuiltin)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_mainmenuitem_thumb))">ClearProperty(hold_prev_mainmenuitem_thumb)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_mainmenuitem_fanart))">ClearProperty(hold_prev_mainmenuitem_fanart)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_mainmenuitem_fanart))">ClearProperty(hold_prev_mainmenuitem_fanart)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_mainmenuitem_disablesubmenu))">ClearProperty(hold_prev_mainmenuitem_disablesubmenu)</onfocus>
				
				<onfocus>SetFocus($PARAM[id]301)</onfocus>
				<onfocus>SetFocus($PARAM[prev_id])</onfocus>
				<onfocus>Action(up)</onfocus>
				<onfocus>Action(up)</onfocus>
				<onfocus>SetFocus($PARAM[prev_id])</onfocus>
			</control>
				
			<control type="button" id="$PARAM[id]399">
				<description>clear holds n focus</description>
				<include>HiddenObject</include>
				<onfocus condition="!String.IsEmpty(Window.Property(mainmenuitem_no_switch))">ClearProperty(mainmenuitem_no_switch)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_name))">ClearProperty(hold_current_mainmenuitem_name)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_path))">ClearProperty(hold_current_mainmenuitem_path)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_target))">ClearProperty(hold_current_mainmenuitem_target)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_executebuiltin))">ClearProperty(hold_current_mainmenuitem_executebuiltin)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_thumb))">ClearProperty(hold_current_mainmenuitem_thumb)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_fanart))">ClearProperty(hold_current_mainmenuitem_fanart)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_mainmenuitem_disablesubmenu))">ClearProperty(hold_current_mainmenuitem_disablesubmenu)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_mainmenuitem_name))">ClearProperty(hold_next_mainmenuitem_name)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_mainmenuitem_path))">ClearProperty(hold_next_mainmenuitem_path)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_mainmenuitem_target))">ClearProperty(hold_next_mainmenuitem_target)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_mainmenuitem_executebuiltin))">ClearProperty(hold_next_mainmenuitem_executebuiltin)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_mainmenuitem_thumb))">ClearProperty(hold_next_mainmenuitem_thumb)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_mainmenuitem_fanart))">ClearProperty(hold_next_mainmenuitem_fanart)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_mainmenuitem_disablesubmenu))">ClearProperty(hold_next_mainmenuitem_disablesubmenu)</onfocus>
				
				<onfocus>SetFocus($PARAM[id]302)</onfocus>
				<onfocus>SetFocus($PARAM[next_id])</onfocus>
				<onfocus>Action(up)</onfocus>
				<onfocus>Action(up)</onfocus>
				<onfocus>SetFocus($PARAM[next_id])</onfocus>
			</control>
		</control>
		
		<control type="group" id="$PARAM[id]5">
			<control type="image">
				<visible>!String.IsEmpty(Skin.String(mainmenuitem$PARAM[nr]_thumb))</visible>
				<top>-150</top>
				<left>30</left>
				<height>100</height>
				<width>100</width>
				<bordersize>2</bordersize>
				<texture fallback="">$INFO[Skin.String(mainmenuitem$PARAM[nr]_thumb)]</texture>
				<aspectratio aligny="center" align="center">keep</aspectratio>
			</control>
			<control type="image">
				<visible>!String.IsEmpty(Skin.String(mainmenuitem$PARAM[nr]_fanart))</visible>
				<top>-136</top>
				<right>30</right>
				<height>80</height>
				<width>200</width>
				<bordersize>2</bordersize>
				<texture fallback="">$INFO[Skin.String(mainmenuitem$PARAM[nr]_fanart)]</texture>
				<aspectratio>keep</aspectratio>
			</control>
			<control type="image">
				<visible>String.StartsWith(System.CurrentControlid,$PARAM[id]) + Control.IsVisible($PARAM[id]2)</visible>
				<top>-290</top>
				<height>290</height>
				<width>100%</width>
				<texture border="2">frames/frame.png</texture>
			</control>
		</control>
		
	</include>
	
	<include name="Mainmenu_SetAttributes_ButtonTemplate">
		<control type="button" id="11031">
			<onclick>SetProperty(DialogHeader,Set Name for Main Menu Entry $PARAM[nr],home)</onclick>
			<onclick>Skin.SetString(mainmenuitem$PARAM[nr]_name)</onclick>
			<label>Main Menu Entry Name</label>
			<label2>$INFO[Skin.String(mainmenuitem$PARAM[nr]_name)]</label2>
		</control>
		
		<!--
		<control type="radiobutton" id="11032">
			<description>toggle linked color</description>
			<onclick>Skin.ToggleSetting(userwidget$PARAM[nr]_OverrideColor)</onclick>
			<label>Use override color for the menu tile</label>
			<label2>      </label2>
			<selected>Skin.HasSetting(userwidget$PARAM[nr]_OverrideColor)</selected>
		</control>
		set color button 

		-->
		<control type="button" id="11035">
			<description>set thumb</description>
			<height>50</height>
			<label>                        [I]Set[/I]    [B]ICON / THUMB[/B]</label>
			<label2 />
			<onclick condition="String.IsEmpty(Skin.String(texturepath_userdefined))">Skin.SetImage(mainmenuitem$PARAM[nr]_thumb,resource://resource.images.skin.swan/tempfoldersqaurethumbs)</onclick>
			<onclick condition="!String.IsEmpty(Skin.String(texturepath_userdefined))">Skin.SetImage(mainmenuitem$PARAM[nr]_thumb,$INFO[Skin.String(texturepath_userdefined)])</onclick>
		</control>
		<control type="button" id="11036">
			<description>set fanart</description>
			<height>50</height>
			<label>                        [I]Set[/I]    [B]FANART[/B]</label>
			<label2 />
			<onclick condition="String.IsEmpty(Skin.String(texturepath_userdefined))">Skin.SetImage(mainmenuitem$PARAM[nr]_fanart,resource://resource.images.skin.swan/backgroundimages)</onclick>
			<onclick condition="!String.IsEmpty(Skin.String(texturepath_userdefined))">Skin.SetImage(mainmenuitem$PARAM[nr]_fanart,$INFO[Skin.String(texturepath_userdefined)])</onclick>
		</control>
		<control type="radiobutton" id="11037">
			<description>force_submenu</description>
			<visible>Skin.HasSetting(home_tile_focus_submenu) + Skin.String(mainmenuitem$PARAM[nr]_path)</visible>
			<height>50</height>
			<label>                        [I]Disable[/I]    [B]Submenu[/B]</label>
			<label2 />
			<onclick>Skin.ToggleSetting(mainmenuitem$PARAM[nr]_disablesubmenu)</onclick>
			<selected>Skin.HasSetting(mainmenuitem$PARAM[nr]_disablesubmenu)</selected>
		</control>
		
	</include>
		<!-- <texture fallback="special://skin/extras/selectdialog/widgetlayout_nolayout.png">$INFO[Skin.String(userwidget$PARAM[nr]_layout),artworkdiffuse/,.png]</texture> -->
		<!-- SkinSettings.xml widget script.embuary helper - set attributes - call custom window 1103 -->
	
	
	<!-- revisit ? - check where reload needed -->
	
	<include name="Widget_SetAttributes_ButtonTemplate">
		
		<control type="button" id="11031">
			<onclick>SetProperty(DialogHeader,Set Name for Widget $PARAM[nr],home)</onclick>
			<onclick>Skin.SetString(userwidget$PARAM[nr]_name)</onclick>
			<label>Widget Name</label>
			<label2>$INFO[Skin.String(userwidget$PARAM[nr]_name)]</label2>
		</control>
		<control type="radiobutton" id="11032">
			<description>Toggle as Category Widget</description>
			<onclick>Skin.ToggleSetting(userwidget$PARAM[nr]_IsSection)</onclick>
			<onclick condition="Skin.HasSetting(userwidget$PARAM[nr]_bottominfo) + !Skin.HasSetting(userwidget$PARAM[nr]_IsSection)">Skin.ToggleSetting(userwidget$PARAM[nr]_bottominfo)</onclick>
			<label>Use As Category / Section Menu</label>
			<label2>      </label2>
			<selected>Skin.HasSetting(userwidget$PARAM[nr]_IsSection)</selected>
		</control>
		<control type="button" id="11033">
			<description>Set Layout</description>
			<onclick>SetProperty(Dialog.1.Label,$LOCALIZE[31200])</onclick>
			<onclick>SetProperty(Dialog.1.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_layout,poster)||Skin.SetString(userwidget$PARAM[nr]_layout.label,$LOCALIZE[20021]))</onclick>
			
			<onclick>SetProperty(Dialog.2.Label,$LOCALIZE[31201])</onclick>
			<onclick>SetProperty(Dialog.2.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_layout,landscape)||Skin.SetString(userwidget$PARAM[nr]_layout.label,$LOCALIZE[31205]))</onclick>
			
			<onclick>SetProperty(Dialog.3.Label,$LOCALIZE[31202])</onclick>
			<onclick>SetProperty(Dialog.3.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_layout,square)||Skin.SetString(userwidget$PARAM[nr]_layout.label,$LOCALIZE[31206]))</onclick>
			
			<onclick>SetProperty(Dialog.4.Label,$LOCALIZE[31203])</onclick>
			<onclick>SetProperty(Dialog.4.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_layout,circle)||Skin.SetString(userwidget$PARAM[nr]_layout.label,$LOCALIZE[31207]))</onclick>
			
			<onclick>SetProperty(Dialog.5.Label,$LOCALIZE[31204])</onclick>
			<onclick>SetProperty(Dialog.5.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_layout,banner)||Skin.SetString(userwidget$PARAM[nr]_layout.label,$LOCALIZE[20020]))</onclick>
			
			<onclick>SetProperty(Dialog.6.Label,$LOCALIZE[31200]   &amp;   $LOCALIZE[31201])</onclick>
			<onclick>SetProperty(Dialog.6.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_layout,poster_to_fanart)||Skin.SetString(userwidget$PARAM[nr]_layout.label,$LOCALIZE[20021] &amp; $LOCALIZE[31205]))</onclick>
				
			<onclick>RunScript(script.embuary.helper,action=createselect,header=$LOCALIZE[21858])</onclick>
			<label>Layout</label>
			<label2>$INFO[Skin.String(userwidget$PARAM[nr]_layout.label)]</label2>
		</control>
		<control type="radiobutton" id="11034">
			<description>Set fixed</description>
			<label>Use Fixed Layout</label>
			<description>Toggle Tags</description>
			<onclick>Skin.ToggleSetting(userwidget$PARAM[nr]_forceFixedlist)</onclick>
			<label>Force_Tags</label>
			<selected>Skin.HasSetting(userwidget$PARAM[nr]_forceFixedlist)</selected>
		</control>
		<control type="radiobutton" id="11035">
			<description>Toggle Tags - need reload</description>
			<onclick>Skin.ToggleSetting(userwidget$PARAM[nr]_forceTag)</onclick>
			<onclick>SetProperty(RefreshWidgets,tags,home)</onclick>
			<label>Force_Tags</label>
			<selected>Skin.HasSetting(userwidget$PARAM[nr]_forceTag)</selected>
		</control>
		<control type="radiobutton" id="11036">
			<visible>!String.IsEqual(Skin.String(HomeLayout),Spotlight)</visible>
			<description>Widget Info panel</description>
			<onclick condition="!Skin.HasSetting(userwidget$PARAM[nr]_forceFixedlist)">Skin.ToggleSetting(userwidget$PARAM[nr]_forceFixedlist)</onclick>
			<onclick condition="Skin.HasSetting(userwidget$PARAM[nr]_forceTag)">Skin.ToggleSetting(userwidget$PARAM[nr]_forceTag)</onclick>
			<onclick>Skin.ToggleSetting(userwidget$PARAM[nr]_bottominfo)</onclick>
			<label>Show Widget Info at bottom (tags will be diasabled)</label>
			<selected>Skin.HasSetting(userwidget$PARAM[nr]_bottominfo)</selected>
		</control>
		<control type="button" id="11037">
			<label>$LOCALIZE[581]</label>
			<description>need overhaul in LOCALIZEd maybe include depending on type</description>
			<onclick>SetProperty(Dialog.1.Label,$LOCALIZE[571])</onclick>
			<onclick>SetProperty(Dialog.1.BuiltIn,Skin.Reset(userwidget$PARAM[nr]_sortby)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[13278]))</onclick>
			
			<onclick>SetProperty(Dialog.2.Label,$LOCALIZE[21899])</onclick>
			<onclick>SetProperty(Dialog.2.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,label)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[21899]))</onclick>
			
			<onclick>SetProperty(Dialog.3.Label,$LOCALIZE[556])</onclick>
			<onclick>SetProperty(Dialog.3.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,title)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[556]))</onclick>
			
			<onclick>SetProperty(Dialog.4.Label,$LOCALIZE[36902]-$LOCALIZE[551])</onclick>
			<onclick>SetProperty(Dialog.4.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,tvshowtitle)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[36902]-$LOCALIZE[551]))</onclick>
			
			<onclick>SetProperty(Dialog.5.Label,$LOCALIZE[171])</onclick>
			<onclick>SetProperty(Dialog.5.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,sorttitle)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[171]))</onclick>
			
			<onclick>SetProperty(Dialog.6.Label,$LOCALIZE[557])</onclick>
			<onclick>SetProperty(Dialog.6.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,artist)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[557]))</onclick>
			
			<onclick>SetProperty(Dialog.7.Label,$LOCALIZE[558])</onclick>
			<onclick>SetProperty(Dialog.7.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,album)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[558]))</onclick>
			
			<onclick>SetProperty(Dialog.8.Label,$LOCALIZE[563])</onclick>
			<onclick>SetProperty(Dialog.8.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,rating)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[563]))</onclick>
			
			<onclick>SetProperty(Dialog.9.Label,$LOCALIZE[38018])</onclick>
			<onclick>SetProperty(Dialog.9.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,userrating)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[38018]))</onclick>
			
			<onclick>SetProperty(Dialog.10.Label,$LOCALIZE[13409])</onclick>
			<onclick>SetProperty(Dialog.10.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,top250)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[13409]))</onclick>
			
			<onclick>SetProperty(Dialog.11.Label,$LOCALIZE[590])</onclick>
			<onclick>SetProperty(Dialog.11.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,random)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[590]))</onclick>
			<!-- 20 - top250  .xsp only no corresponding media type-->
			<onclick>SetProperty(Dialog.12.Label,$LOCALIZE[562])</onclick>
			<onclick>SetProperty(Dialog.12.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,year)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[562]))</onclick>
			
			<onclick>SetProperty(Dialog.13.Label,$LOCALIZE[570])</onclick>
			<onclick>SetProperty(Dialog.13.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,dateadded)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[570]))</onclick>
			
			<onclick>SetProperty(Dialog.14.Label,$LOCALIZE[568])</onclick>
			<onclick>SetProperty(Dialog.14.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,lastplayed)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[568]))</onclick>
			
			<onclick>SetProperty(Dialog.15.Label,$LOCALIZE[567])</onclick>
			<onclick>SetProperty(Dialog.15.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,playcount)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[567]))</onclick>
			
			<onclick>SetProperty(Dialog.16.Label,$LOCALIZE[36904])</onclick>
			<onclick>SetProperty(Dialog.16.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,season)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[36904]))</onclick>
			
			<onclick>SetProperty(Dialog.17.Label,$LOCALIZE[36906])</onclick>
			<onclick>SetProperty(Dialog.17.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,episode)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[36906]))</onclick>
			
			<onclick>SetProperty(Dialog.18.Label,$LOCALIZE[554])</onclick>
			<onclick>SetProperty(Dialog.18.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortby,tracknumber)||Skin.SetString(userwidget$PARAM[nr]_sortby.label,$LOCALIZE[554]))</onclick>
			
			<onclick>RunScript(script.embuary.helper,action=createselect,header=$LOCALIZE[581])</onclick>
			<label2>$INFO[Skin.String(userwidget$PARAM[nr]_sortby.label)]</label2>
		</control>
		<control type="button" id="11038">
			<description>Set Sortorder</description>
			<label>$LOCALIZE[580]</label>
			<onclick>SetProperty(Dialog.1.Label,$LOCALIZE[571])</onclick>
			<onclick>SetProperty(Dialog.1.BuiltIn,Skin.Reset(userwidget$PARAM[nr]_sortorder))||||Skin.SetString(userwidget$PARAM[nr]_sortorder.label,$LOCALIZE[571]))</onclick>
			<onclick>SetProperty(Dialog.2.Label,$LOCALIZE[584])</onclick>
			<onclick>SetProperty(Dialog.2.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortorder,ascending)||Skin.SetString(userwidget$PARAM[nr]_sortorder.label,$LOCALIZE[584]))</onclick>
			<onclick>SetProperty(Dialog.3.Label,$LOCALIZE[585])</onclick>
			<onclick>SetProperty(Dialog.3.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_sortorder,descending)||Skin.SetString(userwidget$PARAM[nr]_sortorder.label,$LOCALIZE[585]))</onclick>
			<onclick>RunScript(script.embuary.helper,action=createselect,header=$LOCALIZE[580])</onclick>
			<label2>$INFO[Skin.String(userwidget$PARAM[nr]_sortorder.label)]</label2>
		</control>
		<control type="button" id="11039">
			<description>Set Limit</description>
			<label>$LOCALIZE[21427]</label>
			<onclick>Skin.SetNumeric(userwidget$PARAM[nr]_limit)</onclick>
			<label2>$INFO[Skin.String(userwidget$PARAM[nr]_limit)]</label2>
		</control>
		<control type="button" id="11040">
			<description>Define Target - offer with care</description>
			<label>$LOCALIZE[467]</label>
			<onclick>SetProperty(Dialog.1.Label,$LOCALIZE[3])</onclick>
			<onclick>SetProperty(Dialog.1.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_target,videos))</onclick>
			<onclick>SetProperty(Dialog.2.Label,$LOCALIZE[2])</onclick>
			<onclick>SetProperty(Dialog.2.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_target,music))</onclick>
			<onclick>SetProperty(Dialog.3.Label,$LOCALIZE[1])</onclick>
			<onclick>SetProperty(Dialog.3.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_target,pictures))</onclick>
			<onclick>SetProperty(Dialog.4.Label,$LOCALIZE[0])</onclick>
			<onclick>SetProperty(Dialog.4.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_target,programs))</onclick>
			<onclick>SetProperty(Dialog.5.Label,$LOCALIZE[10821])</onclick>
			<onclick>SetProperty(Dialog.5.BuiltIn,Skin.SetString(userwidget$PARAM[nr]_target,games))</onclick>
			<onclick>SetProperty(Dialog.6.Label,  - $LOCALIZE[504] ($LOCALIZE[13007]))</onclick>
			<onclick>SetProperty(Dialog.6.BuiltIn,Skin.Reset(userwidget$PARAM[nr]_target))</onclick>
			<onclick>RunScript(script.embuary.helper,action=createselect,header=$LOCALIZE[467])</onclick>
			<label2>$INFO[Skin.String(userwidget$PARAM[nr]_target]</label2>
		</control>
	</include>
	
	
	
	<!-- S h u t d o w n m e n u -->
	<include name="Shutdownmenu_SetAttributes_ButtonTemplate">
		<control type="button" id="11031">
			<onclick>SetProperty(DialogHeader,Set Name for Shutdownmenu Entry $PARAM[nr],home)</onclick>
			<onclick>Skin.SetString(shutdownmenuitem$PARAM[nr]_name)</onclick>
			<label>Shutdown Menu Entry Name</label>
			<label2>$INFO[Skin.String(shutdownmenuitem$PARAM[nr]_name)]</label2>
		</control>
		<control type="button" id="11035">
			<description>set thumb</description>
			<height>50</height>
			<label>                        [I]Set[/I]    [B]ICON / THUMB[/B]</label>
			<label2 />
			<onclick condition="String.IsEmpty(Skin.String(texturepath_userdefined))">Skin.SetImage(shutdownmenuitem$PARAM[nr]_thumb,resource://resource.images.skin.swan/tempfoldersqaurethumbs)</onclick>
			<onclick condition="!String.IsEmpty(Skin.String(texturepath_userdefined))">Skin.SetImage(shutdownmenuitem$PARAM[nr]_thumb,$INFO[Skin.String(texturepath_userdefined)])</onclick>
		</control>
	</include>
	
	
	
	<include name="SwanShortcuts_SetShutdownmenuItem_CommonButton">
		<control type="button" id="$PARAM[button_id]">
			<visible>String.IsEqual(Window(home).Property(shortcutaction_inprogress),shutdownmenu)</visible>
			<onclick>Dialog.Close(1103)</onclick>
			<onclick>Skin.Reset(shutdownmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_action)</onclick>
			<onclick>Skin.Reset(shutdownmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_name)</onclick>
			<onclick>Skin.Reset(shutdownmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_thumb)</onclick>
			<onclick>Skin.SetString(shutdownmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_action,$PARAM[action])</onclick>
			<onclick>Skin.SetString(shutdownmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_name,$PARAM[label])</onclick>
			<onclick>Skin.SetString(shutdownmenuitem$INFO[Window(home).Property(shortcutitem_nr)]_thumb,$PARAM[thumb])</onclick>
			<onclick condition="!String.IsEmpty(Window(home).Property(shortcutitem_nr))">ClearProperty(shortcutitem_nr,home)</onclick>
			<onclick condition="!String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">ClearProperty(shortcutaction_inprogress,home)</onclick>
			<label>$PARAM[label]</label>
		</control>
	</include>
	
	<include name="SwanShortcuts_template_shutdownmenu_settings">
		
		<include content="SectionHeadline">
			<param name="id" value="$PARAM[id]0"/>
			<param name="height" value="60"/>
			<param name="align" value="left" />
			<param name="label" value="SHUTDOWN MENU ENTRY  $PARAM[nr]$INFO[Skin.String(shutdownmenuitem$PARAM[nr]_name), : [B],[/B]]"/>
		</include>
		
		<control type="radiobutton" id="$PARAM[id]1">
<description>Set shutdownmenu Shortcut - for multiple onclick user need write script - 
RunAddon(id)
RunAppleScript(script[,args]*)
RunPlugin(plugin)
RunScript(script[,args]*)
System.ExecWait(script.sh)
</description>
			<include>shortcut_setting_radiobutton</include>
			<onclick>SetProperty(refocus_shortcut_id,$PARAM[id]1)</onclick>
			<onclick>SetProperty(shortcutitem_nr,$PARAM[nr],home)</onclick>
			<onclick>SetProperty(SettingSection,SwanWidgetShortcuts,home)</onclick>
			<onclick>SetProperty(shortcutaction_inprogress,shutdownmenu,home)</onclick>
			<onclick>ActivateWindow(1103,return)</onclick>
			<label>                             Set Entry</label>
			<label2>$INFO[Skin.String(shutdownmenuitem$PARAM[nr]_action),&lt;onclick&gt;  [B],[/B]  &lt;/onclick&gt;]</label2>
		</control>
		<control type="radiobutton" id="$PARAM[id]2">
			<visible>Skin.String(shutdownmenuitem$PARAM[nr]_action)</visible>
			<include>shortcut_setting_radiobutton</include>
			<height>80</height>
			<onclick>SetProperty(shortcutitem_nr,$PARAM[nr],home)</onclick>
			<onclick>SetProperty(SettingSection,shutdownmenuAttributes,home)</onclick>
			<onclick>ActivateWindow(1103)</onclick>
			<label>                             Change Attributes</label>
			<label2 />
		</control>
		
		
		<control type="group" id="$PARAM[id]3">
			<visible>Skin.String(shutdownmenuitem$PARAM[nr]_action) | Skin.String(shutdownmenuitem$PARAM[nr]_name) | Skin.String(shutdownmenuitem$PARAM[nr]_thumb)</visible>
			<height>50</height>
			
			<control type="radiobutton" id="$PARAM[id]4">
				<description>RESET</description>
				<include content="shortcut_setting_move_button">
					<param name="label" value="                        Remove/Reset"/>
					<param name="width" value="515"/>
					<param name="radio_icon" value="buttons/delete.png"/>
					<param name="radio_posx" value="0"/>
					<param name="radioheight" value="35"/>
				</include>
				<left>0</left>
				<onup>$PARAM[id]2</onup>
				
				<onleft>SetFocus(200)</onleft>
				<onright>$PARAM[id]301</onright>
				<ondown>$PARAM[id]5</ondown>
				
				<onclick conditio="Skin.String(shutdownmenuitem$PARAM[nr]_name)">Skin.Reset(shutdownmenuitem$PARAM[nr]_name)</onclick>
				<onclick conditio="Skin.String(shutdownmenuitem$PARAM[nr]_action)">Skin.Reset(shutdownmenuitem$PARAM[nr]_action)</onclick>
				<onclick conditio="Skin.String(shutdownmenuitem$PARAM[nr]_thumb)">Skin.Reset(shutdownmenuitem$PARAM[nr]_thumb)</onclick>
				

				<onclick>SetFocus($PARAM[id]1)</onclick>
			</control>
			<control type="radiobutton" id="$PARAM[id]301">
				<description>hold prev - force move up</description>
				<include content="shortcut_setting_move_button">
					<param name="radio_icon" value="buttons/spinctrlup.png"/>
				</include>
				<left>520</left>
				
				<onup>$PARAM[id]2</onup>
				<ondown>$PARAM[id]5</ondown>
				<onleft>$PARAM[id]4</onleft>
				<onright>$PARAM[id]302</onright>
				
				<onclick condition="[
					!Skin.string(shutdownmenuitem$PARAM[prev_nr]_name) + 
					!Skin.string(shutdownmenuitem$PARAM[prev_nr]_action) + 
					!Skin.string(shutdownmenuitem$PARAM[prev_nr]_thumb)]">SetProperty(shutdownmenuitem_no_switch,prev)</onclick>
				
				<onclick condition="Skin.string(shutdownmenuitem$PARAM[prev_nr]_name)">SetProperty(hold_prev_shutdownmenuitem_name,$INFO[Skin.String(shutdownmenuitem$PARAM[prev_nr]_name)])</onclick>
				<onclick condition="Skin.string(shutdownmenuitem$PARAM[prev_nr]_action)">SetProperty(hold_prev_shutdownmenuitem_action,$INFO[Skin.String(shutdownmenuitem$PARAM[prev_nr]_action)])</onclick>
				<onclick condition="Skin.string(shutdownmenuitem$PARAM[prev_nr]_thumb)">SetProperty(hold_prev_shutdownmenuitem_thumb,$INFO[Skin.String(shutdownmenuitem$PARAM[prev_nr]_thumb)])</onclick>
				
				<onclick condition="Skin.string(shutdownmenuitem$PARAM[nr]_name)">SetProperty(hold_current_shutdownmenuitem_name,$INFO[Skin.String(shutdownmenuitem$PARAM[nr]_name)])</onclick>
				<onclick condition="Skin.string(shutdownmenuitem$PARAM[nr]_action)">SetProperty(hold_current_shutdownmenuitem_action,$INFO[Skin.String(shutdownmenuitem$PARAM[nr]_action)])</onclick>
				<onclick condition="Skin.string(shutdownmenuitem$PARAM[nr]_thumb)">SetProperty(hold_current_shutdownmenuitem_thumb,$INFO[Skin.String(shutdownmenuitem$PARAM[nr]_thumb)])</onclick>
								
				<onclick>setfocus($PARAM[id]396)</onclick>
			</control>
				
			<control type="radiobutton" id="$PARAM[id]302">
				<description>hold next - force move down</description>
				<include content="shortcut_setting_move_button">
					<param name="radio_icon" value="buttons/spinctrldown.png"/>
				</include>
				<right>0</right>
				
				<onup>$PARAM[id]2</onup>
				<ondown>$PARAM[id]5</ondown>
				<onleft>$PARAM[id]301</onleft>
				<onright>$PARAM[id]301</onright>
				
				<onclick condition="[
					!Skin.string(shutdownmenuitem$PARAM[next_nr]_name) + 
					!Skin.string(shutdownmenuitem$PARAM[next_nr]_action) + 
					!Skin.string(shutdownmenuitem$PARAM[next_nr]_thumb)]">SetProperty(shutdownmenuitem_no_switch,next)</onclick>
					
				<onclick condition="Skin.string(shutdownmenuitem$PARAM[next_nr]_name)">SetProperty(hold_next_shutdownmenuitem_name,$INFO[Skin.string(shutdownmenuitem$PARAM[next_nr]_name)])</onclick>
				<onclick condition="Skin.string(shutdownmenuitem$PARAM[next_nr]_action)">SetProperty(hold_next_shutdownmenuitem_actiom,$INFO[Skin.string(shutdownmenuitem$PARAM[next_nr]_action)])</onclick>
				<onclick condition="Skin.string(shutdownmenuitem$PARAM[next_nr]_thumb)">SetProperty(hold_next_shutdownmenuitem_thumb,$INFO[Skin.string(shutdownmenuitem$PARAM[next_nr]_thumb)])</onclick>
				
				<onclick condition="Skin.string(shutdownmenuitem$PARAM[nr]_name)">SetProperty(hold_current_shutdownmenuitem_name,$INFO[Skin.String(shutdownmenuitem$PARAM[nr]_name)])</onclick>
				<onclick condition="Skin.string(shutdownmenuitem$PARAM[nr]_action)">SetProperty(hold_current_shutdownmenuitem_action,$INFO[Skin.String(shutdownmenuitem$PARAM[nr]_action)])</onclick>
				<onclick condition="Skin.string(shutdownmenuitem$PARAM[nr]_thumb)">SetProperty(hold_current_shutdownmenuitem_thumb,$INFO[Skin.String(shutdownmenuitem$PARAM[nr]_thumb)])</onclick>
								
				<onclick>setfocus($PARAM[id]397)</onclick>
			</control>
				
			<control type="button" id="$PARAM[id]396">
				<description>bump or switch prev - save current </description>
				<include>HiddenObject</include>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_shutdownmenuitem_name))">Skin.SetString(shutdownmenuitem$PARAM[prev_nr]_name,$INFO[Window.Property(hold_current_shutdownmenuitem_name)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_shutdownmenuitem_action))">Skin.SetString(shutdownmenuitem$PARAM[prev_nr]_action,$INFO[Window.Property(hold_current_shutdownmenuitem_action)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_shutdownmenuitem_thumb))">Skin.SetString(shutdownmenuitem$PARAM[prev_nr]_thumb,$INFO[Window.Property(hold_current_shutdownmenuitem_thumb)])</onfocus>
				
				
				<onfocus condition="!String.IsEmpty(Window.Property(shutdownmenuitem_no_switch)) + !String.IsEmpty(Window.Property(hold_current_shutdownmenuitem_name))">Skin.Reset(shutdownmenuitem$PARAM[nr]_name)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(shutdownmenuitem_no_switch)) + !String.IsEmpty(Window.Property(hold_current_shutdownmenuitem_action))">Skin.Reset(shutdownmenuitem$PARAM[nr]_action)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(shutdownmenuitem_no_switch)) + !String.IsEmpty(Window.Property(hold_current_shutdownmenuitem_thumb))">Skin.Reset(shutdownmenuitem$PARAM[nr]_thumb)</onfocus>
				
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_shutdownmenuitem_name))">Skin.SetString(shutdownmenuitem$PARAM[nr]_name,$INFO[Window.Property(hold_prev_shutdownmenuitem_name)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_shutdownmenuitem_action))">Skin.SetString(shutdownmenuitem$PARAM[nr]_action,$INFO[Window.Property(hold_prev_shutdownmenuitem_action)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_shutdownmenuitem_thumb))">Skin.SetString(shutdownmenuitem$PARAM[nr]_thumb,$INFO[Window.Property(hold_prev_shutdownmenuitem_thumb)])</onfocus>
				
				
				<onfocus>setfocus($PARAM[id]398)</onfocus>
			</control>
			<control type="button" id="$PARAM[id]397">
				<description>bump or switch +</description>
				<include>HiddenObject</include>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_shutdownmenuitem_name))">Skin.SetString(shutdownmenuitem$PARAM[next_nr]_name,$INFO[Window.Property(hold_current_shutdownmenuitem_name)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_shutdownmenuitem_action))">Skin.SetString(shutdownmenuitem$PARAM[next_nr]_action,$INFO[Window.Property(hold_current_shutdownmenuitem_action)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_shutdownmenuitem_thumb))">Skin.SetString(shutdownmenuitem$PARAM[next_nr]_thumb,$INFO[Window.Property(hold_current_shutdownmenuitem_thumb)])</onfocus>
				
				<onfocus condition="!String.IsEmpty(Window.Property(shutdownmenuitem_no_switch)) + !String.IsEmpty(Window.Property(hold_current_shutdownmenuitem_name))">Skin.Reset(shutdownmenuitem$PARAM[nr]_name)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(shutdownmenuitem_no_switch)) + !String.IsEmpty(Window.Property(hold_current_shutdownmenuitem_action))">Skin.Reset(shutdownmenuitem$PARAM[nr]_action)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(shutdownmenuitem_no_switch)) + !String.IsEmpty(Window.Property(hold_current_shutdownmenuitem_thumb))">Skin.Reset(shutdownmenuitem$PARAM[nr]_thumb)</onfocus>
				
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_shutdownmenuitem_name))">Skin.SetString(shutdownmenuitem$PARAM[nr]_name,$INFO[Window.Property(hold_next_shutdownmenuitem_name)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_shutdownmenuitem_action))">Skin.SetString(shutdownmenuitem$PARAM[nr]_action,$INFO[Window.Property(hold_next_shutdownmenuitem_action)])</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_shutdownmenuitem_thumb))">Skin.SetString(shutdownmenuitem$PARAM[nr]_thumb,$INFO[Window.Property(hold_next_shutdownmenuitem_thumb)])</onfocus>
				
				<onfocus>setfocus($PARAM[id]399)</onfocus>
			</control>
			<control type="button" id="$PARAM[id]398">
				<include>HiddenObject</include>
				<onfocus condition="!String.IsEmpty(Window.Property(shutdownmenuitem_no_switch))">ClearProperty(shutdownmenuitem_no_switch)</onfocus>
				
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_shutdownmenuitem_name))">ClearProperty(hold_current_shutdownmenuitem_name)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_shutdownmenuitem_action))">ClearProperty(hold_current_shutdownmenuitem_action)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_shutdownmenuitem_thumb))">ClearProperty(hold_current_shutdownmenuitem_thumb)</onfocus>
				
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_shutdownmenuitem_name))">ClearProperty(hold_prev_shutdownmenuitem_name)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_shutdownmenuitem_action))">ClearProperty(hold_prev_shutdownmenuitem_action)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_prev_shutdownmenuitem_thumb))">ClearProperty(hold_prev_shutdownmenuitem_thumb)</onfocus>
				
				<onfocus>SetFocus($PARAM[id]301)</onfocus>
				<onfocus>SetFocus($PARAM[prev_id])</onfocus>
				<onfocus>Action(up)</onfocus>
				<onfocus>Action(up)</onfocus>
				<onfocus>SetFocus($PARAM[prev_id])</onfocus>
			</control>
				
			<control type="button" id="$PARAM[id]399">
				<description>clear holds n focus</description>
				<include>HiddenObject</include>
				<onfocus condition="!String.IsEmpty(Window.Property(shutdownmenuitem_no_switch))">ClearProperty(shutdownmenuitem_no_switch)</onfocus>
				
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_shutdownmenuitem_name))">ClearProperty(hold_current_shutdownmenuitem_name)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_shutdownmenuitem_action))">ClearProperty(hold_current_shutdownmenuitem_action)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_current_shutdownmenuitem_thumb))">ClearProperty(hold_current_shutdownmenuitem_thumb)</onfocus>
				
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_shutdownmenuitem_name))">ClearProperty(hold_next_shutdownmenuitem_name)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_shutdownmenuitem_action))">ClearProperty(hold_next_shutdownmenuitem_action)</onfocus>
				<onfocus condition="!String.IsEmpty(Window.Property(hold_next_shutdownmenuitem_thumb))">ClearProperty(hold_next_shutdownmenuitem_thumb)</onfocus>
				
				<onfocus>SetFocus($PARAM[id]302)</onfocus>
				<onfocus>SetFocus($PARAM[next_id])</onfocus>
				<onfocus>Action(up)</onfocus>
				<onfocus>Action(up)</onfocus>
				<onfocus>SetFocus($PARAM[next_id])</onfocus>
			</control>
		</control>
		
		<control type="group" id="$PARAM[id]5">
			<control type="image">
				<visible>!String.IsEmpty(Skin.String(shutdownmenuitem$PARAM[nr]_thumb))</visible>
				<top>-150</top>
				<left>30</left>
				<height>100</height>
				<width>100</width>
				<bordersize>2</bordersize>
				<texture fallback="">$INFO[Skin.String(shutdownmenuitem$PARAM[nr]_thumb)]</texture>
				<aspectratio aligny="center" align="center">keep</aspectratio>
			</control>
			<control type="image">
				<visible>!String.IsEmpty(Skin.String(shutdownmenuitem$PARAM[nr]_fanart))</visible>
				<top>-136</top>
				<right>30</right>
				<height>80</height>
				<width>200</width>
				<bordersize>2</bordersize>
				<texture fallback="">$INFO[Skin.String(shutdownmenuitem$PARAM[nr]_fanart)]</texture>
				<aspectratio>keep</aspectratio>
			</control>
			<control type="image">
				<visible>String.StartsWith(System.CurrentControlid,$PARAM[id]) + Control.IsVisible($PARAM[id]2)</visible>
				<top>-240</top>
				<height>250</height>
				<width>100%</width>
				<texture border="2">frames/frame.png</texture>
			</control>
		</control>
	
	</include>
	
	
	<include name="shutdownmenu_content">
	<content>
		<include content="shutdownmenu_item">
			<param name="nr" value="1" />
		</include>
		<include content="shutdownmenu_item">
			<param name="nr" value="2" />
		</include>
		<include content="shutdownmenu_item">
			<param name="nr" value="3" />
		</include>
		<include content="shutdownmenu_item">
			<param name="nr" value="4" />
		</include>
		<include content="shutdownmenu_item">
			<param name="nr" value="5" />
		</include>
		<include content="shutdownmenu_item">
			<param name="nr" value="6" />
		</include>
		<include content="shutdownmenu_item">
			<param name="nr" value="7" />
		</include>
		<include content="shutdownmenu_item">
			<param name="nr" value="8" />
		</include>
		<include content="shutdownmenu_item">
			<param name="nr" value="9" />
		</include>
		<include content="shutdownmenu_item">
			<param name="nr" value="10" />
		</include>
		<include content="shutdownmenu_item">
			<param name="nr" value="11" />
		</include>
		<include content="shutdownmenu_item">
			<param name="nr" value="12" />
		</include>
		<include content="shutdownmenu_item">
			<param name="nr" value="13" />
		</include>
		<include content="shutdownmenu_item">
			<param name="nr" value="14" />
		</include>
		<include content="shutdownmenu_item">
			<param name="nr" value="15" />
		</include>
		<include content="shutdownmenu_item">
			<param name="nr" value="16" />
		</include>
		<include content="shutdownmenu_item">
			<param name="nr" value="17" />
		</include>
		<include content="shutdownmenu_item">
			<param name="nr" value="18" />
		</include>
		<include content="shutdownmenu_item">
			<param name="nr" value="19" />
		</include>
		<include content="shutdownmenu_item">
			<param name="nr" value="20" />
		</include>
		<item>
			<label>$LOCALIZE[20126][CR]$INFO[system.profilename]</label>
			<icon>icons/profilelogoff.png</icon>
			<onclick>Dialog.Close(all,true)</onclick>
			<onclick>System.LogOff</onclick>
			<visible>[System.HasLoginScreen | Integer.IsGreater(System.ProfileCount,1)] + System.Loggedon</visible>
		</item>
		<item>
			<label>$LOCALIZE[20046]</label>
			<onclick>mastermode</onclick>
			<visible>!Window.IsVisible(loginscreen) + System.HasLocks + System.IsMaster</visible>
		</item>
		<item>
			<label>$LOCALIZE[20045]</label>
			<onclick>mastermode</onclick>
			<visible>!Window.IsVisible(loginscreen) + System.HasLocks + !System.IsMaster</visible>
		</item>
		<item>
			<description>Allow idle shutdown / Ausschalten bei Leerlauf erlauben ~ System.IsInhibit : when shutdown on idle is disabled; System.HasShutdown is not false ??</description>
			<label>$LOCALIZE[13018]</label>
			<icon>resource://resource.images.skin.swan/tempfoldersqaurethumbs/shutdown-timer.png</icon>
			<onclick>Dialog.Close(all,true)</onclick>
			<onclick>InhibitIdleShutdown(false)</onclick>
			<!-- <visible>System.IsInhibit + !System.HasShutdown</visible> -->
			<visible>!Window.IsVisible(loginscreen) + System.IsInhibit</visible>
		</item>
		<item>
			<description>Inhibit idle shutdown / Ausschalten bei Leerlauf verhindern , System.HasShutdown is not true??</description>
			<label>$LOCALIZE[13017]</label>
			<icon>resource://resource.images.skin.swan/tempfoldersqaurethumbs/shutdown-timer.png</icon>
			<onclick>Dialog.Close(all,true)</onclick>
			<onclick>InhibitIdleShutdown(true)</onclick>
			<!-- <visible>!System.IsInhibit + System.HasShutdown</visible> -->
			<visible>!Window.IsVisible(loginscreen) + !System.IsInhibit</visible>
		</item>
	</content>
</include>
	
</includes>