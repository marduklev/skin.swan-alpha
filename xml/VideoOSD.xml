<?xml version="1.0" encoding="utf-8"?>
<window>
	<defaultcontrol always="true">6103</defaultcontrol>
	
	<!-- core behav - on first start info is false - skin use revert condition to show info -->
	<onload condition="!Skin.HasSetting(ShowPlot_OnStart) + !Player.ShowINFO">info</onload>
	
	<animation effect="slide" start="0,0" end="0,-100" time="250">WindowOpen</animation>
	<animation effect="fade" start="0" end="0" time="200">WindowOpen</animation>
	
	<animation effect="slide" start="0,-100" end="0,0" time="250">WindowClose</animation>
	<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
	<controls>
		
		<control type="group">
			<!-- shared <animation effect="fade" start="100" end="0" time="0" condition="Window.IsVisible(osdvideosettings) | Window.IsVisible(osdaudiosettings) | Window.IsVisible(osdsubtitlesettings) | Window.IsVisible(pvrosdchannels) | Window.IsVisible(Teletext) | !String.IsEmpty(Window(home).Property(service.upnext.dialog))">Conditional</animation> -->
			<visible>![Window.Is(videomenu) | Window.IsVisible(shutdownmenu) | Window.IsVisible(sliderdialog) | Window.IsVisible(osdaudiosettings) | Window.IsVisible(osdvideosettings) | Window.IsVisible(playerprocessinfo) | Window.IsVisible(osdcmssettings) | Window.IsVisible(PVROSDChannels) | Window.IsVisible(pvrchannelguide)]</visible>
			
			<bottom>0</bottom>
			<height>300</height>
			
			
			<control type="group">
				<description>osd seekbar</description>
				
				<include condition="!VideoPlayer.Content(LiveTV) + !Window.IsVisible(fullscreeninfo)" content="VideoOSD_ProgressSlider">
					<param name="info" value="Player.Progress" />
					<param name="slider_action" value="seek" />
					
					<param name="progress_id" value="602" />
					<param name="slider_id" value="601" />
				</include>
				<include condition="VideoPlayer.Content(LiveTV) + !Window.IsVisible(fullscreeninfo)" content="VideoOSD_ProgressSlider">
					<param name="info" value="PVR.TimeshiftProgressPlayPos" />
					<param name="slider_action" value="pvr.seek" />
				</include>
				
				
	        </control>
			
			<control type="group">
				<description>osd buttons</description>
				<animation effect="slide" start="0,0" end="0,-310" time="0" condition="Window.IsVisible(fullscreeninfo)">conditional</animation>
				<visible>!Window.IsVisible(videobookmarks)</visible>
			
				<bottom>-100</bottom>
				<height>100</height>
				<right>100</right>
			
				<control type="grouplist" id="6100">
					<orientation>horizontal</orientation>
					<usecontrolcoords>true</usecontrolcoords>
					<top>20</top>
					<width>100%</width>
					<align>center</align>
					
					<right>0</right>
					<left>0</left>
					
					<itemgap>25</itemgap>
					<onup>601</onup>
					
					<ondown condition="!VideoPlayer.Content(LiveTV) + !Skin.HasSetting(videoosd_ondown_videobookmarks)">Dialog.Close(videoosd,true)</ondown>
					<ondown condition="!VideoPlayer.Content(LiveTV) + !Skin.HasSetting(videoosd_ondown_videobookmarks)">ActivateWindow(fullscreeninfo)</ondown>
					<ondown condition="!VideoPlayer.Content(LiveTV) + Skin.HasSetting(videoosd_ondown_videobookmarks)">ActivateWindow(videobookmarks)</ondown>
					
					<control type="button" id="6101">
						<include content="OSDButton">
							<param name="texture" value="previous"/>
						</include>
						<onclick condition="Player.ChapterCount | Integer.IsGreater(Playlist.Length(video),1) | [Player.SeekEnabled + VideoPlayer.Content(livetv)]">PlayerControl(Previous)</onclick>
						<onclick condition="!Player.SeekEnabled + VideoPlayer.Content(livetv)">Action(ChannelUp)</onclick>
						<visible>VideoPlayer.Content(livetv) | Player.ChapterCount | Integer.IsGreater(Playlist.Length(video),1) | PVR.IsTimeShift</visible>
					</control>
					<control type="button" id="6102">
						<include content="OSDButton">
							<param name="texture" value="rewind"/>
						</include>
						<onclick>PlayerControl(Rewind)</onclick>
						<visible>[Player.SeekEnabled + !VideoPlayer.Content(livetv)] + !Player.Paused</visible>
					</control>
					
					<control type="togglebutton" id="6103">
						<include content="OSDButton">
							<param name="texture" value="play"/>
						</include>
						<alttexturefocus colordiffuse="$VAR[color_osdvideo_button_fo]">buttons/osd/pause_fo.png</alttexturefocus>
						<alttexturenofocus colordiffuse="$VAR[color_osdvideo_button_nf]">buttons/osd/pause.png</alttexturenofocus>
						<usealttexture>!Player.Paused</usealttexture>
						<onclick>PlayerControl(play)</onclick>
					</control>
					
					<control type="button" id="6304">
						<visible>player.paused</visible>
						<include>Animation_Item_Focus</include>
						<texturefocus colordiffuse="$VAR[color_osdvideo_button_fo]">icons/frameadvance.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdvideo_button_nf]">icons/frameadvance.png</texturenofocus>
						<top>13</top>
						<width>35</width>
						<height>35</height>
						<onclick>PlayerControl(FrameAdvance(1))</onclick>
					</control>
					
					<control type="button" id="6104">
						<include content="OSDButton">
							<param name="texture" value="stop"/>
						</include>
						<onclick>PlayerControl(Stop)</onclick>
					</control>
					<control type="togglebutton" id="6105">
						<animation effect="fade" start="100" end="40" time="1000" loop="true" condition="PVR.IsRecordingPlayingChannel">conditional</animation>
						<include condition="true" content="Close_OSD_onfocus" />
						<include>Animation_Item_Focus</include>
						<top>5</top>
						<width>50</width>
						<height>50</height>
						<visible>PVR.CanRecordPlayingChannel + VideoPlayer.Content(livetv)</visible>
						<texturefocus colordiffuse="$VAR[color_osdvideo_button_fo]">buttons/osd/record.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdvideo_button_nf]">buttons/osd/record.png</texturenofocus>
						<alttexturefocus colordiffuse="red">buttons/osd/record.png</alttexturefocus>
						<alttexturenofocus colordiffuse="red">buttons/osd/record.png</alttexturenofocus>
						<usealttexture>PVR.IsRecordingPlayingChannel</usealttexture>
						<onclick>PVR.ToggleRecordPlayingChannel</onclick>
						<onclick>PVR.ToggleRecordPlayingChannel</onclick>
					</control>
					<control type="button" id="6106">
						<include content="OSDButton">
							<param name="texture" value="fforward"/>
						</include>
						<onclick>PlayerControl(Forward)</onclick>
						<visible>[Player.SeekEnabled + !VideoPlayer.Content(livetv)] + !Player.Paused</visible>
					</control>
					<control type="button" id="6107">
						<include content="OSDButton">
							<param name="texture" value="next"/>
						</include>
						<onclick condition="Player.ChapterCount | Integer.IsGreater(Playlist.Length(video),1) | PVR.IsTimeShift">PlayerControl(Next)</onclick>
						<onclick condition="!Player.SeekEnabled + !PVR.IsTimeShift + VideoPlayer.Content(livetv)">Action(ChannelUp)</onclick>
						<visible>VideoPlayer.Content(livetv) | Player.ChapterCount | Integer.IsGreater(Playlist.Length(video),1) | PVR.IsTimeShift</visible>
					</control>
					<control type="button" id="6110">
						<include content="OSDButton">
							<param name="texture" value="menu"/>
						</include>
						<onclick>PlayerControl(ShowVideoMenu)</onclick>
						<visible>VideoPlayer.HasMenu</visible>
						<description>disc menu</description>
					</control>
					<include content="spacer_w">
						<param name="id" value="6120" />
						<param name="gap" value="10" />
					</include>
					<control type="button" id="6121">
						<include content="OSDButton">
							<param name="texture" value="info"/>
						</include>
						<visible>!String.IsEmpty(VideoPlayer.Plot)</visible>
						<onclick>Action(info)</onclick>
					</control>
					<control type="button" id="6122">
						<include content="OSDButton">
							<param name="texture" value="bookmark"/>
							<param name="can_autoclose_osd" value="false" />
						</include>
						<description>bookmarks</description>
						<onclick>ActivateWindow(VideoBookmarks)</onclick>
						<visible>!VideoPlayer.Content(livetv)</visible>
					</control>
					
					<control type="button" id="6123">
						<include content="OSDButton">
							<param name="texture" value="infono_enh"/>
							<param name="can_autoclose_osd" value="false" />
						</include>
						<description>fullscreeninfo</description>
						<onclick>Dialog.Close(videoosd,true)</onclick>
						<onclick>ActivateWindow(fullscreeninfo)</onclick>
						<visible>!VideoPlayer.Content(livetv) + [VideoPlayer.Content(musicvideos) | Skin.HasSetting(videoosd_ondown_videobookmarks)]</visible>
					</control>
					<control type="button" id="6124">
						<include content="OSDButton">
							<param name="texture" value="playlist"/>
							<param name="can_autoclose_osd" value="false" />
						</include>
						<include>Animation_Item_Focus</include>
						<width>60</width>
						<height>60</height>
						<visible>!VideoPlayer.Content(livetv) + [Integer.IsGreater(VideoPlayer.PlaylistLength,1) | !String.IsEmpty(VideoPlayer.Season)]</visible>
						<onclick>SetProperty(VideoBookmarks,custom,home)</onclick>
						<onclick>ActivateWindow(VideoBookmarks)</onclick>
					</control>
					
					<control type="button" id="6140">
						<include content="OSDButton">
							<param name="texture" value="teletext"/>
							<param name="can_autoclose_osd" value="false" />
						</include>
						<onclick>ActivateWindow(Teletext)</onclick>
						<visible>VideoPlayer.HasTeletext</visible>
					</control>
					
					<control type="button" id="6141">
						<include content="OSDButton">
							<param name="texture" value="channelosdcircles"/>
							<param name="can_autoclose_osd" value="false" />
						</include>
						<visible>VideoPlayer.Content(livetv)</visible>
						<onclick>Dialog.Close(VideoOSD)</onclick>
						<onclick>ActivateWindow(PVROSDChannels)</onclick>
					</control>
					<control type="button" id="6142">
						<include condition="Skin.HasSetting(player_videofullcreen_pvrgrid)" content="OSDButton">
							<param name="texture" value="epggrid"/>
							<param name="can_autoclose_osd" value="false" />
						</include>
						<include condition="!Skin.HasSetting(player_videofullcreen_pvrgrid)" content="OSDButton">
							<param name="texture" value="pvr"/>
							<param name="can_autoclose_osd" value="false" />
						</include>
						<onclick>Dialog.Close(VideoOSD)</onclick>
						<onclick>ActivateWindow(pvrchannelguide)</onclick>
						<visible>VideoPlayer.Content(livetv) + VideoPlayer.HasEPG</visible>
					</control>
					
					<include content="spacer_w">
						<param name="id" value="6150" />
						<param name="gap" value="10" />
					</include>
					
					<control type="button" id="6151">
						<top>5</top>
						<width>50</width>
						<height>50</height>
						<include content="OSDButton">
							<param name="texture" value="settings_subtitle"/>
							<param name="can_autoclose_osd" value="false" />
						</include>
						<onclick>ActivateWindow(osdsubtitlesettings)</onclick>
						<visible>!VideoPlayer.Content(livetv)</visible>
					</control>
					<control type="button" id="6152">
						<top>5</top>
						<width>50</width>
						<height>50</height>
						<include content="OSDButton">
							<param name="texture" value="settings_video"/>
							<param name="can_autoclose_osd" value="false" />
						</include>
						<onclick>ActivateWindow(osdvideosettings)</onclick>
						<visible>!VideoPlayer.Content(livetv)</visible>
					</control>
					<control type="button" id="6153">
						<top>5</top>
						<width>50</width>
						<height>50</height>
						<include content="OSDButton">
							<param name="texture" value="settings_sound"/>
							<param name="can_autoclose_osd" value="false" />
						</include>
						<onclick>ActivateWindow(osdaudiosettings)</onclick>
						<visible>!VideoPlayer.Content(livetv)</visible>
					</control>
					<control type="button" id="6154">
						<top>5</top>
						<width>50</width>
						<height>50</height>
						<include content="OSDButton">
							<param name="texture" value="settings_sound"/>
						</include>
						<onclick>DialogClose(videoosd)</onclick>
						<onclick>fullscreen</onclick>
						<visible>false</visible>
						<visible>Player.HasVideo</visible>
					</control>
					<control type="button" id="6155">
						<top>5</top>
						<width>50</width>
						<height>50</height>
						<include content="OSDButton">
							<param name="texture" value="settings_cms"/>
							<param name="can_autoclose_osd" value="false" />
						</include>
						<onclick>ActivateWindow(osdcmssettings)</onclick>
						<visible>System.HasCMS</visible>
						<visible>!VideoPlayer.Content(livetv)</visible>
					</control>
					
					<control type="button" id="6156">
						<description>need filenamenoextension</description>
						<!-- <visible>String.IsEmpty(Player.Art(fanart)) + movie,episode,musicvideo</visible> -->
						<visible>false</visible>
						<include>Animation_Item_Focus</include>
						<texturefocus colordiffuse="$VAR[color_osdvideo_button_fo]">icons/screenshot.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdvideo_button_nf]">icons/screenshot.png</texturenofocus>
						<left>25</left>
						<top>13</top>
						<width>35</width>
						<height>35</height>
						<!-- <onclick condition="String.IsEmpty(VideoPlayer.Year)">$INFO[Player.Folderpath]$INFO[VideoPlayer.Title]$INFO[VideoPlayer.Year, ,.png]</onclick> -->
						<!-- <onclick condition="">$INFO[Player.Folderpath]$INFO[VideoPlayer.Title]$INFO[VideoPlayer.Year, ,.png]</onclick> -->
						<onclick>TakeScreenshot($INFO[Player.Folderpath]$INFO[Player.FileName]-fanart.png)</onclick>
					</control>
				</control>
			</control>
		</control>
		<control type="textbox">
		<visible>Skin.HasSetting(SwanDebug)</visible>
		<font>notosans_16_bold</font>
		<aligny>top</aligny>
		<align>left</align>
		<top>110</top>
		<right>15</right>
		<textcolor>white</textcolor>
		<label>[B]visibility = [COLOR none]seekbar = cyan, [/COLOR]osd = white[/B][CR]
$INFO[Player.SeekTime]        Player.SeekTime            Time to which the user is seeking
$INFO[Player.SeekBar]        Player.SeekBar            Time to which the user is seeking as a percentage (for use in slider controls)
$INFO[Player.SeekOffset]        Player.SeekOffset            Indicates the seek offset after a seek press (eg user presses BigStepForward, player.seekoffset returns +10:00)
$INFO[Player.SeekOffset(hh:mm:ss)]        Player.SeekOffset(format)            Shows hours (hh), minutes (mm) or seconds (ss). Also supported: (hh:mm), (mm:ss), (hh:mm:ss), (hh:mm:ss).
$INFO[Player.SeekStepSize]        Player.SeekStepSize                Displays the seek step size. (v15 addition)


weird
Progress 601    $INFO[Control.GetLabel(601)]
SEEKBAR 602     $INFO[Control.GetLabel(602)]

Progress 401    $INFO[Control.GetLabel(401)]
SEEKBAR 402     $INFO[Control.GetLabel(402)]

Progress 501    $INFO[Control.GetLabel(501)]
SEEKBAR 502     $INFO[Control.GetLabel(502)]

$VAR[Player.DisplayAfterSeek]      Player.DisplayAfterSeek      Retruns true for the first 2.5 seconds after a seek.	
$VAR[Player.Seeking]      Player.Seeking      Returns true if a seek is in progress	
$VAR[Player.SeekEnabled]      Player.SeekEnabled      Returns true if player can seek

[COLOR white]$VAR[seekbar_stepsize, seekbar_stepsize: ,][/COLOR]
[COLOR cyan]$VAR[seekbar_stepsize, seekbar_stepsize: ,][/COLOR]


</label>
	</control>
	</controls>
</window>
