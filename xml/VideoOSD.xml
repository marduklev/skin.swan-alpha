<?xml version="1.0" encoding="utf-8"?>
<window>
	<defaultcontrol always="true">6103</defaultcontrol>
	
	<animation effect="slide" start="0,0" end="0,-100" time="250">WindowOpen</animation>
	<animation effect="fade" start="0" end="0" time="200">WindowOpen</animation>
	
	<animation effect="slide" start="0,-100" end="0,0" time="250">WindowClose</animation>
	<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
	<controls>
		
		<control type="group">
			
			<bottom>0</bottom>
			<height>300</height>
			<!-- <visible>![Window.Is(videomenu) | Window.IsVisible(sliderdialog) | Window.IsVisible(osdaudiosettings) | Window.IsVisible(osdvideosettings) | Window.IsVisible(VideoBookmarks) | Window.IsVisible(playerprocessinfo) | Window.IsVisible(osdcmssettings) | Window.IsVisible(PVROSDChannels) | Window.IsVisible(pvrchannelguide) | Window.IsVisible(seekbar)]</visible> -->
			<!-- enable if touch mode - can i check if no remote us used ? -->
			<visible>![Window.Is(videomenu) | Window.IsVisible(sliderdialog) | Window.IsVisible(osdaudiosettings) | Window.IsVisible(osdvideosettings) | Window.IsVisible(VideoBookmarks) | Window.IsVisible(playerprocessinfo) | Window.IsVisible(osdcmssettings) | Window.IsVisible(PVROSDChannels) | Window.IsVisible(pvrchannelguide)]</visible>
			<animation effect="fade" time="200" end="20" condition="window.isactive(seekbar)">conditional</animation>
			<animation effect="fade" time="200">VisibleChange</animation>
			<control type="group">
				
				<description>top progress n seek bar focusable</description>
				<!-- <visible>Player.SeekEnabled + !window.isactive(seekbar)</visible> -->
				<description>Returns true if player can seek </description>
				<animation effect="slide" start="0,0" end="0,-410" time="200" condition="Window.IsVisible(fullscreeninfo)">conditional</animation>
				<animation effect="slide" start="0,0" end="0,150" time="250" condition="$EXP[osd_video_noinfo]">conditional</animation>
				
				
				<!-- OSD SEEK NEVER SHOW SEEK DIAOG IF OSD ACTIVE-->
				<!-- action 	Can be 'volume' to adjust the volume, 'seek' to change the seek position or 'pvr.seek' for timeshifting in PVR -->
				<include condition="!VideoPlayer.Content(LiveTV)" content="VideoOSD_ProgressSlider">
					<param name="info" value="Player.SeekBar" />
					<param name="slider_action" value="seek" />
				</include>
				<include condition="VideoPlayer.Content(LiveTV)" content="VideoOSD_ProgressSlider">
					<param name="info" value="PVR.TimeshiftProgressPlayPos" />
					<param name="slider_action" value="pvr.seek" />
				</include>
				
				<control type="group">
					<visible>Control.HasFocus(6001)</visible> 
					
					<!-- Integer.IsGreater(Control.GetLabel(6001) - no depoendencie on focus
					6669
					String.StartsWith(System.CurrentControl,**) if Control.HasFocus(6001)  -->
					<!-- mööp
					<animation effect="slide" end="$INFO[Control.GetLabel(6001)]" time="20" condition="String.StartsWith(System.CurrentControl,5)">Conditional</animation>
					 -->
					<left>350</left>
					<right>0</right>
					<bottom>128</bottom>
					<width>100</width>
					<height>40</height>
					<control type="image">
						<description>get arrow</description>
						<centertop>43%</centertop>
						<left>-1</left>
						<width>3</width>
						<height>3</height>
						<texture>colors/white.png</texture>
						
					</control>
					<control type="image">
						<top>2.5</top>
						<width>85</width>
						<height>30</height>
						<texture colordiffuse="$VAR[color_osdvideo_bgpanel]">colors/white.png</texture>
						<bordertexture border="2" colordiffuse="$VAR[color_osdvideo_main]">frames/frame.png</bordertexture>
						<bordersize>1</bordersize>
					</control>
					<control type="textbox">
						<!-- <width min="130" max="150">auto</width> -->
						<!-- <width>200</width>
						<label>+20:00 [B]|[/B] $INFO[Player.SeekTime][CR]</label> -->
						<height>35</height>
						<left>10</left>
						<right>10</right>
						<font>debugtiny</font>
						<textcolor>$VAR[color_osdvideo_main]</textcolor>
						<width>100</width>
						<label>$INFO[Player.SeekStepSize,, [B]|[/B] ]$INFO[Player.SeekTime]</label>			
					</control>
			
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),1)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),2)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),3)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),4)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),5)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),6)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),7)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),8)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),9)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),10)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),11)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),12)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),13)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),14)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),15)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),16)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),17)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),18)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),19)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),20)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),21)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),22)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),23)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),24)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),25)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),26)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),27)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),28)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),29)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),30)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),31)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),32)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),33)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),34)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),35)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),36)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),37)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),38)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),39)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),40)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),41)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),42)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),43)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),44)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),45)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),46)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),47)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),48)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),49)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),50)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),51)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),52)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),53)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),54)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),55)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),56)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),57)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),58)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),59)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),60)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),61)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),62)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),63)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),64)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),65)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),66)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),67)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),68)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),69)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),70)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),71)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),72)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),73)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),74)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),75)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),76)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),77)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),78)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),79)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),80)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),81)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),82)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),83)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),84)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),85)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),86)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),87)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),88)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),89)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),90)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),91)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),92)">Conditional</animation>
			<animation effect="slide" end="16" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),93)">Conditional</animation>
			
			
			<animation effect="slide" end="8.22,0" time="0" condition="Integer.IsGreater(Control.GetLabel(6001),94)">Conditional</animation>
			
					
				</control>
				
				
				
			</control>
			<control type="group">
				<description>VideoOSD_PlayerControls</description>
				<animation effect="slide" start="0,0" end="0,-310" time="0" condition="Window.IsVisible(fullscreeninfo)">conditional</animation>
			
				<bottom>-100</bottom>
				<height>100</height>
				<right>100</right>
			
				<control type="grouplist" id="6100">
					<orientation>horizontal</orientation>
					<usecontrolcoords>true</usecontrolcoords>
					<top>20</top>
					<width>100%</width>
					<align>center</align>
					
					<right>0</right>
					<left>0</left>
					
					<itemgap>25</itemgap>
					<onup>6001</onup>
					
					<ondown condition="!VideoPlayer.Content(LiveTV) + !Skin.HasSetting(videoosd_ondown_videobookmarks)">Dialog.Close(videoosd,true)</ondown>
					<ondown condition="!VideoPlayer.Content(LiveTV) + !Skin.HasSetting(videoosd_ondown_videobookmarks)">ActivateWindow(fullscreeninfo)</ondown>
					<ondown condition="!VideoPlayer.Content(LiveTV) + Skin.HasSetting(videoosd_ondown_videobookmarks)">ActivateWindow(videobookmarks)</ondown>
					
					<control type="button" id="6101">
						<include content="OSDButton">
							<param name="texture" value="previous"/>
						</include>
						<onclick condition="Player.ChapterCount | Integer.IsGreater(Playlist.Length(video),1) | [Player.SeekEnabled + VideoPlayer.Content(livetv)]">PlayerControl(Previous)</onclick>
						<onclick condition="!Player.SeekEnabled + VideoPlayer.Content(livetv)">Action(ChannelUp)</onclick>
						<visible>VideoPlayer.Content(livetv) | Player.ChapterCount | Integer.IsGreater(Playlist.Length(video),1) | PVR.IsTimeShift</visible>
					</control>
					<control type="button" id="6102">
						<include content="OSDButton">
							<param name="texture" value="rewind"/>
						</include>
						<onclick>PlayerControl(Rewind)</onclick>
						<visible>[Player.SeekEnabled + !VideoPlayer.Content(livetv)] + !Player.Paused</visible>
					</control>
					<control type="togglebutton" id="6103">
						<include content="OSDButton">
							<param name="texture" value="play"/>
						</include>
						<alttexturefocus colordiffuse="$VAR[color_osdvideo_button_fo]">buttons/osd/pause_fo.png</alttexturefocus>
						<alttexturenofocus colordiffuse="$VAR[color_osdvideo_button_nf]">buttons/osd/pause.png</alttexturenofocus>
						<usealttexture>!Player.Paused</usealttexture>
						<onclick>PlayerControl(play)</onclick>
					</control>
					<control type="button" id="6104">
						<include content="OSDButton">
							<param name="texture" value="stop"/>
						</include>
						<onclick>PlayerControl(Stop)</onclick>
					</control>
					<control type="togglebutton" id="6105">
						<animation effect="fade" start="100" end="40" time="1000" loop="true" condition="PVR.IsRecordingPlayingChannel">conditional</animation>
						<include condition="true" content="Close_OSD_onfocus" />
						<include>Animation_Item_Focus</include>
						<top>5</top>
						<width>50</width>
						<height>50</height>
						<visible>PVR.CanRecordPlayingChannel + VideoPlayer.Content(livetv)</visible>
						<texturefocus colordiffuse="$VAR[color_osdvideo_button_fo]">buttons/osd/record.png</texturefocus>
						<texturenofocus colordiffuse="$VAR[color_osdvideo_button_nf]">buttons/osd/record.png</texturenofocus>
						<alttexturefocus colordiffuse="red">buttons/osd/record.png</alttexturefocus>
						<alttexturenofocus colordiffuse="red">buttons/osd/record.png</alttexturenofocus>
						<usealttexture>PVR.IsRecordingPlayingChannel</usealttexture>
						<onclick>PVR.ToggleRecordPlayingChannel</onclick>
						<onclick>PVR.ToggleRecordPlayingChannel</onclick>
					</control>
					<control type="button" id="6106">
						<include content="OSDButton">
							<param name="texture" value="fforward"/>
						</include>
						<onclick>PlayerControl(Forward)</onclick>
						<visible>[Player.SeekEnabled + !VideoPlayer.Content(livetv)] + !Player.Paused</visible>
					</control>
					<control type="button" id="6107">
						<include content="OSDButton">
							<param name="texture" value="next"/>
						</include>
						<onclick condition="Player.ChapterCount | Integer.IsGreater(Playlist.Length(video),1) | PVR.IsTimeShift">PlayerControl(Next)</onclick>
						<onclick condition="!Player.SeekEnabled + !PVR.IsTimeShift + VideoPlayer.Content(livetv)">Action(ChannelUp)</onclick>
						<visible>VideoPlayer.Content(livetv) | Player.ChapterCount | Integer.IsGreater(Playlist.Length(video),1) | PVR.IsTimeShift</visible>
					</control>
					<control type="button" id="6110">
						<include content="OSDButton">
							<param name="texture" value="menu"/>
						</include>
						<onclick>PlayerControl(ShowVideoMenu)</onclick>
						<visible>VideoPlayer.HasMenu</visible>
						<description>disc menu</description>
					</control>
					<include content="spacer_w">
						<param name="id" value="6120" />
						<param name="gap" value="10" />
					</include>
					<control type="button" id="6121">
						<include content="OSDButton">
							<param name="texture" value="info"/>
						</include>
						<visible>!String.IsEmpty(VideoPlayer.Plot)</visible>
						<onclick>Info</onclick>
					</control>
					<control type="button" id="6122">
						<include content="OSDButton">
							<param name="texture" value="bookmark"/>
							<param name="can_autoclose_osd" value="false" />
						</include>
						<description>bookmarks</description>
						<onclick>ActivateWindow(VideoBookmarks)</onclick>
						<visible>!VideoPlayer.Content(livetv)</visible>
					</control>
					<control type="button" id="6123">
						<include content="OSDButton">
							<param name="texture" value="playlist"/>
							<param name="can_autoclose_osd" value="false" />
						</include>
						<!-- abuse bookmark window till create own and extend all the expressions -->
						<include>Animation_Item_Focus</include>
						<width>60</width>
						<height>60</height>
						<visible>!VideoPlayer.Content(livetv) + [Integer.IsGreater(VideoPlayer.PlaylistLength,1) | !String.IsEmpty(VideoPlayer.Season)]</visible>
						<onclick>SetProperty(VideoBookmarks,custom,home)</onclick>
						<onclick>ActivateWindow(VideoBookmarks)</onclick>
					</control>
					
					<control type="button" id="6140">
						<include content="OSDButton">
							<param name="texture" value="teletext"/>
							<param name="can_autoclose_osd" value="false" />
						</include>
						<onclick>ActivateWindow(Teletext)</onclick>
						<visible>VideoPlayer.HasTeletext</visible>
					</control>
					
					<control type="button" id="6141">
						<include content="OSDButton">
							<param name="texture" value="channelosdcircles"/>
							<param name="can_autoclose_osd" value="false" />
						</include>
						<visible>VideoPlayer.Content(livetv)</visible>
						<onclick>Dialog.Close(VideoOSD)</onclick>
						<onclick>ActivateWindow(PVROSDChannels)</onclick>
					</control>
					<control type="button" id="6142">
						<include condition="Skin.HasSetting(player_videofullcreen_pvrgrid)" content="OSDButton">
							<param name="texture" value="epggrid"/>
							<param name="can_autoclose_osd" value="false" />
						</include>
						<include condition="!Skin.HasSetting(player_videofullcreen_pvrgrid)" content="OSDButton">
							<param name="texture" value="pvr"/>
							<param name="can_autoclose_osd" value="false" />
						</include>
						<onclick>Dialog.Close(VideoOSD)</onclick>
						<onclick>ActivateWindow(pvrchannelguide)</onclick>
						<visible>VideoPlayer.Content(livetv) + VideoPlayer.HasEPG</visible>
					</control>
					
					<include content="spacer_w">
						<param name="id" value="6150" />
						<param name="gap" value="10" />
					</include>
					
					<control type="button" id="6151">
						<top>5</top>
						<width>50</width>
						<height>50</height>
						<include content="OSDButton">
							<param name="texture" value="settings_subtitle"/>
							<param name="can_autoclose_osd" value="false" />
						</include>
						<onclick>ActivateWindow(osdsubtitlesettings)</onclick>
						<visible>!VideoPlayer.Content(livetv)</visible>
					</control>
					<control type="button" id="6152">
						<top>5</top>
						<width>50</width>
						<height>50</height>
						<include content="OSDButton">
							<param name="texture" value="settings_video"/>
							<param name="can_autoclose_osd" value="false" />
						</include>
						<onclick>ActivateWindow(osdvideosettings)</onclick>
						<visible>!VideoPlayer.Content(livetv)</visible>
					</control>
					<control type="button" id="6153">
						<top>5</top>
						<width>50</width>
						<height>50</height>
						<include content="OSDButton">
							<param name="texture" value="settings_sound"/>
							<param name="can_autoclose_osd" value="false" />
						</include>
						<onclick>ActivateWindow(osdaudiosettings)</onclick>
						<visible>!VideoPlayer.Content(livetv)</visible>
					</control>
					<control type="button" id="6154">
						<top>5</top>
						<width>50</width>
						<height>50</height>
						<include content="OSDButton">
							<param name="texture" value="settings_sound"/>
						</include>
						<onclick>DialogClose(videoosd)</onclick>
						<onclick>fullscreen</onclick>
						<visible>false</visible>
						<visible>Player.HasVideo</visible>
					</control>
					<control type="button" id="6155">
						<top>5</top>
						<width>50</width>
						<height>50</height>
						<include content="OSDButton">
							<param name="texture" value="settings_cms"/>
							<param name="can_autoclose_osd" value="false" />
						</include>
						<onclick>ActivateWindow(osdcmssettings)</onclick>
						<visible>System.HasCMS</visible>
						<visible>!VideoPlayer.Content(livetv)</visible>
					</control>
				</control>
								
				<!--
				WINDOW_DIALOG_KEYBOARD_TOUCH 	10156 	
				
				videobookmarks 	WINDOW_DIALOG_VIDEO_BOOKMARKS 	10125 	VideoOSDBookmarks.xml 
				teletext 	WINDOW_DIALOG_OSD_TELETEXT 	10550 	
				pvrosdchannels 	WINDOW_DIALOG_PVR_OSD_CHANNELS 	10608 	DialogPVRChannelsOSD.xml 
				videomenu 	WINDOW_VIDEO_MENU 	12902 	none
				videotimeseek 	WINDOW_VIDEO_TIME_SEEK 	12905 	none
				-->
				

				<!--
					<onclick>PlayerControl(Previous)</onclick>
						action(skipnext) ; action(skipprevious) ? - keymaps.xml
					<onclick>PlayerControl(Rewind)</onclick>
					
					<onclick>PlayerControl(Forward)</onclick>
				   
					<onclick>PlayerControl(Next)</onclick>
				   
					<description>Record</description>
					<onclick>PVR.ToggleRecordPlayingChannel</onclick>
					<visible>PVR.CanRecordPlayingChannel</visible>
					<visible>!Skin.HasSetting(OSDDisablePlaybackControls)</visible>				
					
					<description>bookmarks</description>
					<onclick>ActivateWindow(VideoBookmarks)</onclick>
					<visible>Player.HasVideo</visible>
					<visible>!VideoPlayer.Content(livetv)</visible>
				
					<description>disc menu</description>
					<onclick>PlayerControl(ShowVideoMenu)</onclick>
					<visible>VideoPlayer.HasMenu</visible>
				
					<description>stereoscopic</description>
					<onclick>StereoMode</onclick>
					<visible>VideoPlayer.IsStereoscopic</visible>
				
					<onclick>ActivateWindow(Teletext)</onclick>
					<visible>VideoPlayer.Content(livetv)</visible>
					<visible>Player.HasVideo</visible>
					
					<visible>VideoPlayer.Content(livetv)</visible>
					<onclick>ActivateWindow(PVROSDChannels)</onclick>
					
					<visible>VideoPlayer.Content(livetv)</visible>
					<onclick>ActivateWindow(pvrchannelguide)</onclick>
				
				common
					<onclick>VolumeUp</onclick>
					<onclick>VolumeDown</onclick>
					
					
				?? custom
					<onclick>Skin.ToggleSetting toggle trough states and sliude some aditional info in ?? (EnableOSDInfo_if 0 do (if)1 do (if)2 do 3</onclick>
				-->
				
			</control>
		</control>
	</controls>
</window>
