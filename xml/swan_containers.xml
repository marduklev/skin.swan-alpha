<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="container_header_simple">
		<param name="align" default="center" />
		<definition>
			<control type="group" id="$PARAM[groupid]">
				<height>40</height>
				<description>merge me later with universal header, used for settings heading,centered big bold</description>
				<visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0) | Container($PARAM[id]).IsUpdating</visible>
				<control type="label">
					<visible>Control.HasFocus($PARAM[id])</visible>
					<top>5</top>
					<width>auto</width>
					<label>[UPPERCASE][B]$PARAM[label][/UPPERCASE][/B]</label>
					<aligny>top</aligny>
					<align>$PARAM[align]</align>
					<textcolor>$VAR[color_global_button_text_fo]</textcolor>
					<font>notosans_32_bold</font>
					<height>24</height>
					<visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0) | !Container($PARAM[id]).IsUpdating</visible>
				</control>
				<control type="label">
					<visible>!Control.HasFocus($PARAM[id])</visible>
					<top>5</top>
					<width>auto</width>
					<label>[UPPERCASE]$PARAM[label][/UPPERCASE]</label>
					<aligny>top</aligny>
					<align>$PARAM[align]</align>
					<textcolor>$VAR[color_global_button_text_nf]</textcolor>
					<font>notosans_32_bold</font>
					<height>24</height>
					<visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0) | !Container($PARAM[id]).IsUpdating</visible>
				</control>
			</control>
		</definition>
	</include>
	
	<include name="container_layout_icon">
		<param name="containertype" default="fixedlist" />
		<param name="containerheight" default="300" />
		<param name="width" default="300" />
		<param name="height" default="150" />
		<param name="movement" default="5" />
		<param name="focusposition" default="0" />
		<param name="builtin_window" default="global" />
		
		<definition>
		<control type="$PARAM[containertype]" id="$PARAM[id]">
			<top>50</top>
			<left>10</left>
			<width>100%</width>
			<height>$PARAM[containerheight]</height>
			
			<focusposition>$PARAM[focusposition]</focusposition>
			<movement>$PARAM[movement]</movement>
			<orientation>horizontal</orientation>
			<scrolltime tween="quadratic">400</scrolltime>
			
			<include condition="!Window.IsVisible(shutdownmenu)" content="Animation_BounceRight">
				<param name="id">$PARAM[id]</param>
			</include>
			<onright condition="!Window.IsVisible(shutdownmenu)">SetProperty(BounceRight,1,home)</onright>
						
			<itemlayout height="$PARAM[height]" width="$PARAM[width]">
				<control type="group">
					<height>$PARAM[height]</height>
					<width>$PARAM[width]</width>
				<control type="image">
					<centerleft>50%</centerleft>
					<width>90%</width>
					<height>90%</height>
					<texture>$INFO[ListItem.Icon]</texture>
					<colordiffuse>$VAR[color_$PARAM[builtin_window]_item_nf]</colordiffuse>
					<aspectratio aligny="top" align="center">keep</aspectratio>
				</control>
				<control type="textbox">
					<height>60</height>
					<top>$PARAM[height].9</top>
					<width>$PARAM[width]</width>
					<align>center</align>
					<wrapmultiline>true</wrapmultiline>
					<label>$INFO[ListItem.Label]</label>
					<textcolor>$VAR[color_$PARAM[builtin_window]_item_nf]</textcolor>
					<font>notosans_25_regular_l_lowline</font>
				</control>
				</control>
			</itemlayout>
			<focusedlayout height="$PARAM[height]" width="$PARAM[width]">
				<control type="button">
					<visible allowhiddenfocus="true">false</visible>
					<onfocus>ClearProperty(menucontrol_active,home)</onfocus>
				</control>
				<control type="group">
					<height>$PARAM[height]</height>
					<width>$PARAM[width]</width>
					<visible>!Control.HasFocus($PARAM[id])</visible>
					<control type="image">
						<centerleft>50%</centerleft>
						<width>90%</width>
						<height>90%</height>
						<texture>$INFO[ListItem.Icon]</texture>
						<colordiffuse>$VAR[color_$PARAM[builtin_window]_item_nf]</colordiffuse>
						<align>center</align>
						<aspectratio aligny="top" align="center">keep</aspectratio>
					</control>
						<control type="textbox">
						<height>60</height>
						<top>$PARAM[height]</top>
						<width>$PARAM[width]</width>
						<align>center</align>
						<wrapmultiline>true</wrapmultiline>
						<label>$INFO[ListItem.Label]</label>
						<textcolor>$VAR[color_$PARAM[builtin_window]_item_nf]</textcolor>
						<font>notosans_25_regular_l_lowline</font>
					</control>
				</control>
				<control type="group">
					<height>$PARAM[height]</height>
					<width>$PARAM[width]</width>
					<visible>Control.HasFocus($PARAM[id])</visible>
					<include>Animation_Item_Focus</include>
				
					<control type="image">
						<centerleft>50%</centerleft>
						<width>90%</width>
						<height>90%</height>
						<texture>$INFO[ListItem.Icon]</texture>
						<colordiffuse>$VAR[color_$PARAM[builtin_window]_item_fo]</colordiffuse>
						<align>center</align>
						<aspectratio aligny="bottom" align="center">keep</aspectratio>
					</control>
					<control type="textbox">
						<height>60</height>
						<top>$PARAM[height]</top>
						<width>106%</width>
						<left>-3%</left>
						<align>center</align>
						<wrapmultiline>true</wrapmultiline>
						<label>$INFO[ListItem.Label,[B],[/B]]</label>
						<textcolor>$VAR[color_$PARAM[builtin_window]_item_fo]</textcolor>
						<font>notosans_25_regular_l_lowline</font>
					</control>
				</control>
			</focusedlayout>
			<nested />
			</control>
		</definition>
	</include>
	
	<include name="spotlight_hor_list_navigation_common">
	
		<onfocus condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">ClearProperty(menucontrol_active,home)</onfocus>
		<onfocus condition="!String.IsEmpty(Window(Home).Property(view_forcefocus))">SetFocus($INFO[Window(Home).Property(view_forcefocus)])</onfocus>

		<onleft condition="Control.IsVisible(8999)">8999</onleft>
		
		<onup condition="Control.IsVisible(61)">61</onup>
		<onup condition="!Control.IsVisible(61) + Control.IsVisible(610)">610</onup>

		<onup condition="$EXP[Has_Trailer] + [!Control.IsVisible(61) + !Control.IsVisible(610)]">PlayMedia($INFO[Window(home).Property(listitemtrailer)],1)</onup>
		<onup condition="$EXP[Has_Trailer] + [!Control.IsVisible(61) + !Control.IsVisible(610)]">SetProperty(TrailerIsPlaying,true,home)</onup>
		<onup condition="$EXP[Has_Trailer] + [!Control.IsVisible(61) + !Control.IsVisible(610)] + [!String.IsEmpty(ListItem.dbtype) + String.IsEmpty(Window.Property(Spotlight_Cast))]">SetProperty(Spotlight_Cast,visible)</onup>

		<onup condition="!$EXP[Has_Trailer] + [!Control.IsVisible(610) + !Control.IsVisible(61)] + Control.IsVisible(19)">19</onup>

		<ondown condition="!Window.IsActive(music) + !String.IsEmpty(ListItem.dbtype) + String.IsEmpty(Window.Property(Spotlight_Cast))">SetProperty(Spotlight_Cast,visible)</ondown>
			
		<ondown condition="!Window.IsActive(music) + !String.IsEmpty(Window.Property(Spotlight_Cast)) + [!String.IsEqual(ListItem.dbtype,set) | !String.IsEqual(ListItem.dbtype,tvshow)]">ClearProperty(Spotlight_Cast)</ondown>
				 
		<ondown condition="!Window.IsActive(music) + !Skin.HasSetting(view_503_focusable_cast) + Control.IsVisible(50352) + [String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,set) | !String.IsEmpty(ListItem.SetId)]">SetFocus(50352,0,absolute)</ondown>
		
		<ondown condition="!Window.IsActive(music) + Skin.HasSetting(view_503_focusable_cast) + [!String.IsEmpty(ListItem.dbtype) + Control.IsVisible(50350) + String.IsEmpty(Window.Property(Spotlight_Cast))]">SetFocus(50350,0,absolute)</ondown>
		<ondown condition="!Window.IsActive(music) + Skin.HasSetting(view_503_focusable_cast) + [!String.IsEmpty(ListItem.dbtype) + Control.IsVisible(50352) + !String.IsEmpty(Window.Property(Spotlight_Cast))]">SetFocus(50352,0,absolute)</ondown>
	</include>
	
	
	<include name="spotlight_hor_list_navigation_cast">
		<include>Action_CastMemberSearchForceOption</include>
		
		<onfocus condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">ClearProperty(menucontrol_active,home)</onfocus>
		<onfocus condition="String.IsEmpty(Window.Property(Spotlight_Cast))">SetProperty(Spotlight_Cast,focused)</onfocus>
		
		<onback condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">ClearProperty(Spotlight_Sets)</onback>
		<onback condition="!String.IsEmpty(Window.Property(Spotlight_Cast))">ClearProperty(Spotlight_Cast)</onback>
		<onback>SetFocus(50)</onback>
			
		<onup condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">ClearProperty(Spotlight_Sets)</onup>
		<onup condition="!String.IsEmpty(Window.Property(Spotlight_Cast))">ClearProperty(Spotlight_Cast)</onup>
		<onup>50</onup>
		
		<ondown condition="[Control.IsVisible(50352) + [String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,set) | !String.IsEmpty(ListItem.SetId)]]">SetFocus(50352,0,absolute)</ondown>
		<ondown condition="![Control.IsVisible(50352) + [String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,set) | !String.IsEmpty(ListItem.SetId)]]">ClearProperty(Spotlight_Cast)</ondown>
		<ondown condition="![Control.IsVisible(50352) + [String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,set) | !String.IsEmpty(ListItem.SetId)]]">50</ondown>
		
		<onleft condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">50350</onleft>
		<onleft condition="String.IsEmpty(Window.Property(Spotlight_Sets))">50</onleft>
	
	</include>
	
	
	<include name="spotlight_hor_list_navigation_nextup">
		<onfocus condition="!String.IsEmpty(Window(Home).Property(view_forcefocus))">ClearProperty(view_forcefocus,home)</onfocus>
		<onfocus condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">ClearProperty(menucontrol_active,home)</onfocus>
		<onfocus condition="String.IsEmpty(Window.Property(Spotlight_Sets))">SetProperty(Spotlight_Sets,true)</onfocus>
		
		
		<onback condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">ClearProperty(Spotlight_Sets)</onback>
		<onback condition="!String.IsEmpty(Window.Property(Spotlight_Cast))">ClearProperty(Spotlight_Cast)</onback>
		<onback>SetFocus(50)</onback>
		
			<onclick>SetProperty(view_forcefocus,$INFO[System.CurrentControlID],home)</onclick>
			<onclick>PlayMedia($INFO[ListItem.FilenameAndPath],resume)</onclick>
			
		<onup condition="Skin.HasSetting(view_503_focusable_cast) + Control.IsVisible(50350)">SetFocus(50350)</onup>
		
		<onup condition="!Skin.HasSetting(view_503_focusable_cast) | !Control.IsVisible(50350)">ClearProperty(Spotlight_Sets)</onup>
		<onup condition="!Skin.HasSetting(view_503_focusable_cast) | !Control.IsVisible(50350)">ClearProperty(Spotlight_Cast)</onup>
		<onup condition="!Skin.HasSetting(view_503_focusable_cast) | !Control.IsVisible(50350)">50</onup>
		
		<ondown>ClearProperty(Spotlight_Sets)</ondown>
		<ondown>ClearProperty(Spotlight_Cast)</ondown>
		<ondown>50</ondown>
		
		<onleft condition="Control.IsVisible(50353)">50353</onleft>
		<onleft condition="!Control.IsVisible(50353)">50352</onleft>
		
		<onright condition="Control.IsVisible(50353)">50353</onright>
		<onright condition="!Control.IsVisible(50353)">50352</onright>
		
		
	</include>
	
	<include name="spotlight_hor_list_navigation_folderpath">
		<onfocus condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">ClearProperty(menucontrol_active,home)</onfocus>
		<onfocus condition="String.IsEmpty(Window.Property(Spotlight_Sets))">SetProperty(Spotlight_Sets,true)</onfocus>
		
		<onback condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">ClearProperty(Spotlight_Sets)</onback>
		<onback condition="!String.IsEmpty(Window.Property(Spotlight_Cast))">ClearProperty(Spotlight_Cast)</onback>
		<onback>SetFocus(50)</onback>
		
		<onup condition="Skin.HasSetting(view_503_focusable_cast) + Control.IsVisible(50350)">SetFocus(50350)</onup>
		
		<onup condition="!Skin.HasSetting(view_503_focusable_cast) | !Control.IsVisible(50350)">ClearProperty(Spotlight_Sets)</onup>
		<onup condition="!Skin.HasSetting(view_503_focusable_cast) | !Control.IsVisible(50350)">ClearProperty(Spotlight_Cast)</onup>
		<onup condition="!Skin.HasSetting(view_503_focusable_cast) | !Control.IsVisible(50350)">50</onup>
		
		<ondown>ClearProperty(Spotlight_Sets)</ondown>
		<ondown>ClearProperty(Spotlight_Cast)</ondown>
		<ondown>50</ondown>
		
		<onleft condition="Control.IsVisible(50352)">50352</onleft>
		<onleft condition="!Control.IsVisible(50352) + Control.IsVisible(8999)">8999</onleft>
		<onright condition="Integer.IsGreater(Container(50353).NumItems,1)">50353</onright>
		<onright condition="Integer.IsEqual(Container(50353).NumItems,1)">50352</onright>
	</include>


	<include name="Scrollbar_Lib_vertical">
		<control type="scrollbar" id="60">
			<animation effect="fade" start="100" end="0" time="250" condition="Control.HasFocus(600)">conditional</animation>
			<visible>!$EXP[Scrollbar_Lib_Horizontal]</visible>
			<right>45</right>
			<top>160</top>
			<height>74%</height>
			<onup>60</onup>
			<ondown>60</ondown>
			<onleft>50</onleft>
			<onright condition="Control.IsVisible(600)">600</onright>
			<onright condition="!Control.IsVisible(600) + Control.IsVisible(19)">19</onright>
			<onright condition="!Control.IsVisible(600) + !Control.IsVisible(19)">50</onright>
		</control>
	</include>
	
	<include name="Scrollbar_Lib_horizontal">
		<control type="scrollbar" id="61">
			<animation effect="slide" start="0,0" end="0,50" time="350" easing="inout" reversible="true" condition="container.content(episodes)">conditional</animation>
			<animation effect="fade" start="100" end="0" time="200" easing="inout" reversible="true" condition="!Control.HasFocus(61)">conditional</animation>
			<orientation>horizontal</orientation>
			<texturesliderbackground colordiffuse="$VAR[color_global_scrollbar_panel]">colors/white.png</texturesliderbackground>
			<texturesliderbar colordiffuse="$VAR[color_global_scrollbar_slider_nf]">colors/white.png</texturesliderbar>
			<texturesliderbarfocus colordiffuse="$VAR[color_global_scrollbar_slider_fo]">colors/white.png</texturesliderbarfocus>
			<visible>$EXP[Scrollbar_Lib_Horizontal]</visible>
			<bottom>380</bottom>
			<height>5</height>
			<left>110</left>
			<width>1810</width>
			<onleft>61</onleft>
			<onright>61</onright>
			<onup condition="Control.IsVisible(610)">610</onup>
			
			<onup condition="$EXP[Has_Trailer] + !Control.IsVisible(610)">PlayMedia($INFO[Window(home).Property(listitemtrailer)],1)</onup>
			<onup condition="$EXP[Has_Trailer] + !Control.IsVisible(610)">SetProperty(TrailerIsPlaying,true,home)</onup>
			<onup condition="$EXP[Has_Trailer] + !Control.IsVisible(610)">SetProperty(Spotlight_Cast,visible)</onup>
			
			<onup condition="[$EXP[Has_Trailer] + !Control.IsVisible(610)] | [!$EXP[Has_Trailer] + !Control.IsVisible(610) + !Control.IsVisible(19)]">50</onup>
			
			<onup condition="!$EXP[Has_Trailer] + !Control.IsVisible(610) + Control.IsVisible(19)">19</onup>
			
			<ondown>50</ondown>
		</control>
	</include>
	<variable name="texture_alphbaetbar_bg">
		<value condition="[Control.IsVisible(503) + Skin.HasSetting(View_503_DisableFooter)] | [Control.IsVisible(504) + Skin.HasSetting(View_504_DisableFooter)]">diffuse/gradientright.png</value>
		<value>colors/white.png</value>
	</variable>
	
	<!-- 
	NextLetter 	Move to the next letter in a list or thumb panel. Note that SHIFT-B on the keyboard will take you to the B's.
PrevLetter 	Move to the previous letter in a list or thumb panel. Note that SHIFT-Z on the keyboard will take you to the Z's.
JumpSMS<2-9> 	Jump through a list using SMS-style input (eg press 2 twice to jump to the B's.)
FilterSMS<2-9> 	Filter a list in music or videos using SMS-style input. 
	 -->
	
	<include name="ScrollBar_Alphabet">
		<control type="group">
			
			<nested />
			<animation effect="fade" start="100" end="0" time="200" easing="inout" reversible="true" condition="!Control.HasFocus($PARAM[id])">conditional</animation>
			
			<height>$PARAM[height]</height>
			
			<control type="image">
				<description>may just use as nested element for hor bar</description>
				<texture colordiffuse="$PARAM[color_1]">$VAR[texture_alphbaetbar_bg]</texture>
				<visible>$PARAM[bg_texture_visible]</visible>
			</control>
			
			<control type="panel" id="$PARAM[id]">
				<visible>[$PARAM[visible] + [Container.HasNext | Container.HasPrevious] + [[Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(artists) | Container.Content(albums) | Container.Content(songs)] + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556])]]]</visible>
				<orientation>$PARAM[orientation]</orientation>
				<scrolltime />
				<width>$PARAM[panel_width]</width>
				
				<include condition="$PARAM[is_vertical]">ScrollBar_Alphabet_ver</include>
				<include condition="!$PARAM[is_vertical]">ScrollBar_Alphabet_hor</include>
				
				
				<focusedlayout height="$PARAM[item_hw]" width="$PARAM[item_hw]">
					<control type="group">
						<control type="image">
							<texture colordiffuse="$PARAM[color_2]">colors/white.png</texture>
						</control>
						<control type="textbox">
							<font>montserrat_16_semibold</font>
							<align>center</align>
							<aligny>center</aligny>
							<textcolor>$PARAM[color_1]</textcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
					</control>
				</focusedlayout>
				<itemlayout height="$PARAM[item_hw]" width="$PARAM[item_hw]">
					<control type="group">
						<control type="image">
							<visible>$PARAM[is_vertical]</visible>
							<texture colordiffuse="$PARAM[color_1]">colors/white.png</texture>
						</control>
						<control type="textbox">
							<font>montserrat_16_extrabold</font>
							<align>center</align>
							<aligny>center</aligny>
							<textcolor>$PARAM[color_2]</textcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
					</control>
				</itemlayout>
				<content>plugin://script.embuary.helper/?info=jumptoletter&amp;showall=true&amp;reload=$INFO[Container.NumItems]</content>
			</control>
		</control>
	</include>
	
	<include name="ScrollBar_Alphabet_ver">
		<width>60</width>
		<left>36</left>
		<onup>600</onup>
		<ondown>600</ondown>
		<onleft>50</onleft>
		<onright>60</onright>
		<centertop>50%</centertop>
		
	</include>
	<include name="ScrollBar_Alphabet_hor">
		<left>110</left>
		<top>15</top>	
		<height>75</height>
		<onup condition="$EXP[Has_Trailer]">PlayMedia($INFO[Window(home).Property(listitemtrailer)],1)</onup>
		<onup condition="$EXP[Has_Trailer]">SetProperty(TrailerIsPlaying,true,home)</onup>
		<onup condition="$EXP[Has_Trailer] + String.IsEmpty(Window.Property(Spotlight_Cast))">SetProperty(Spotlight_Cast,visible)</onup>
		<onup condition="$EXP[Has_Trailer]">50</onup>
		
		<onup condition="!$EXP[Has_Trailer] + Control.IsVisible(19)">19</onup>
	
		<ondown>50</ondown>
		<onleft>$PARAM[id]</onleft>
		<onright>$PARAM[id]</onright>
	</include>
		
	<!-- use global in future - dialog vs common ?
	also check https://kodi.wiki/view/List_of_built-in_functions#Weather_built-in.27s
	<onload>Weather.Refresh</onload> 
	-->
	<!-- make layout_circle -->
	<include name="Circle_CastWidget">
		<control type="image">
			<description>Fallback aspect keep</description>
			<bordertexture colordiffuse="$PARAM[colordiffuse]">artworkdiffuse/circleborder.png</bordertexture>
			<texture background="true" diffuse="artworkdiffuse/circle.png" fallback="defaultactor.png">$INFO[ListItem.Thumb]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="center">scale</aspectratio>
			<bordersize>$PARAM[artwork_bg_bordersize]</bordersize>
		</control>

		<control type="group">
			<control type="textbox">
				<autoscroll delay="2000" time="1500" repeat="1500">$PARAM[infotags_autoscroll]</autoscroll>
				<top>106%</top>
				<left>10</left>
				<right>10</right>
				<wrapmultiline>true</wrapmultiline>
				<height>60</height>
				<font>roboto_22_condensedregular</font>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$VAR[color_spotlightlib_main]</textcolor>
				<selectedcolor>$VAR[color_spotlightlib_accent]</selectedcolor>
				<label>$VAR[Tag_label1][CR][COLOR $VAR[color_spotlightlib_secondary]]$VAR[Tag_label2][/COLOR]</label>
			</control>
		</control>
	</include>
		
	<include name="media_window_attributes">
		<param name="defaultcontrol" default="50" />
		<param name="view_ids" default="50" />
		<definition>
			<defaultcontrol always="true">$PARAM[defaultcontrol]</defaultcontrol>
			<backgroundcolor>$VAR[color_global_background_layer1]</backgroundcolor>
			<views>$PARAM[view_ids]</views>
			<onunload condition="!String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">ClearProperty(shortcutaction_inprogress,home)</onunload>
			<onunload condition="!String.IsEmpty(Window(home).Property(shortcutitem_nr))">ClearProperty(shortcutitem_nr,home)</onunload>
			<include>media_menucontrol</include>
			<include content="Animation_OpenClose_MediaWindow" condition="String.IsEmpty(Window(home).Property(shortcutaction_inprogress))" />
		</definition>
	</include>
	
	<!-- temp solution slide down with footer instead of using botton 0 -->
	<include name="Media_Container_Attributes">
		<param name="left" default="BackgroundPanelLeft" />
		<param name="right" default="BackgroundPanelRight" />
		<param name="bottom" default="Footer" />
		<definition>
			<animation effect="slide" start="0,0" end="0,90" time="350" tween="quadratic" easing="in" delay="100" condition="Skin.HasSetting(View_$PARAM[view_id]_DisableFooter)">conditional</animation>
           
			<orientation>vertical</orientation>
			<preloaditems>2</preloaditems>
			<scrolltime tween="quadratic">400</scrolltime>
            
			<top>Header</top>
			<left>$PARAM[left]</left>
			<right>$PARAM[right]</right>
			<bottom>$PARAM[bottom]</bottom>
		</definition>
	</include>
	
	<!-- use me inside Media_Container_Attributes later - when uncommon param usage is defined -->
	<!-- <include>Oninfo_MovieSetInfo</include> shouldnt be needed in MATRIX -->
	
	<include name="Media_Values_ContainerNavigation">
		<pagecontrol>60</pagecontrol>
		<onfocus condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">ClearProperty(menucontrol_active,home)</onfocus>
		<onleft condition="Control.IsVisible(8999)">8999</onleft>
		<onright condition="Control.IsVisible(60)">60</onright>
	</include>
	
	<!-- 
	
	footer zoom tests
	<animation effect="zoom" start="100,100" end="50,50" time="0" condition="Control.IsVisible(503)">Conditional</animation> -->
					
			<!-- <animation effect="zoom" start="100,100" end="80,80" time="0" condition="Control.IsVisible(503) + Container.Content(episodes)">Conditional</animation>
			<animation effect="slide" start="0,0" end="100,30" time="0" condition="Control.IsVisible(503) + Container.Content(episodes)">Conditional</animation>
			 -->
		<!-- <param name="footer_rating_offsetleft" default="0" /> use media flag width, maybe spacer needed  -->
		
	<!-- 
				<param name="rating_offset_right" default="100" />
				<param name="rating_offset_left" default="0" />
				<param name="rating_offset_right" default="100" /> 
		-->
	<include name="Oninfo_MovieSetInfo">
		<oninfo condition="String.IsEqual(ListItem.dbtype,set)">ActivateWindow(movieinformation,return)</oninfo>
	</include>
	<!-- <oninfo condition="String.IsEqual(ListItem.dbtype,set)">SetProperty(movieinformation,set,home)</oninfo> -->
	
	
	<!-- dialog addon info programs,addonsbrowser -->
	<include name="dialog_addoninfo_buttons_faderight">
			<include content="ButtonList">
			<param name="id" value="8000" />
			<param name="top" value="30%" />
			<param name="bottom" value="0" />
			<param name="left" value="68%" />
			<param name="right" value="0" />
			<param name="itemgap" value="3" />
			<param name="onleft" value="9000" />
			<height>60%</height>
			<width>30%</width>
				<control type="radiobutton" id="6">
					<selected>ListItem.Property(addon.isinstalled) | !Window.IsActive(addonbrowser)</selected>
					<label />
				</control>
				<control type="radiobutton" id="7">
					<selected>!String.StartsWith(Control.GetLabel(7),$LOCALIZE[24022]) | !Window.IsActive(addonbrowser)</selected>
					<label />
				</control>
				<control type="button" id="8">
					<label>$LOCALIZE[24069]</label>
				</control>
				<control type="button" id="9">
					<label>$LOCALIZE[24020]</label>
				</control>
				<control type="button" id="10">
					<label>$LOCALIZE[39024]</label>
				</control>
				<control type="button" id="12">
					<label>$LOCALIZE[518]</label>
				</control>
				<control type="radiobutton" id="13">
					<visible>Control.IsEnabled(13)</visible>
					<label />
				</control>
			</include>
			<control type="panel" id="50">
				<include>HiddenObject</include>
			</control>
		</include>
	include list 1 row - use includes to hide content on windows instead use vis conditions
	
	
	<!-- dont forget to use nested benefit later, and that onunfucus -->
	<include name="hiddenbutton_manage_skinpropertys">
		<control type="button">
			<visible allowhiddenfocus="true">false</visible>
			<nested />
			
			<include condition="Skin.HasSetting(autoplay_trailer_home) + Window.IsActive(home) + String.IsEqual(Skin.String(HomeLayout),WidgetsOnly)">home_listitem_propertys</include>
			
			<onfocus condition="!Window.IsActive(movieinformation) + !String.IsEmpty(Window(home).Property(trailer_avail))">ClearProperty(trailer_avail,home)</onfocus>
			<onfocus condition="!Window.IsActive(movieinformation) + !String.IsEmpty(Window(home).Property(listitemtrailer))">ClearProperty(listitemtrailer,home)</onfocus>
			
			<onfocus condition="!Window.IsActive(movieinformation) + [String.IsEmpty(listitem.trailer) + !String.IsEmpty(listitem.FolderName)] + [String.IsEqual(ListItem.DBtype,tvshow) | String.IsEqual(ListItem.DBtype,movie)]">RunScript(script.embuary.helper,action=lookforfile,file='"$INFO[listitem.path]$INFO[listitem.FolderName,,-trailer.mp4]"',prop=trailer_avail)</onfocus>
			<onfocus condition="!Window.IsActive(movieinformation) + !String.IsEmpty(listitem.trailer)">SetProperty(trailer_avail,listitem,home)</onfocus>
			
			<onfocus condition="!Window.IsActive(movieinformation) + String.IsEmpty(listitem.trailer) + [String.IsEqual(ListItem.DBtype,tvshow) | String.IsEqual(ListItem.DBtype,movie)]">SetProperty(listitemtrailer,$INFO[listitem.path]$INFO[listitem.FolderName,,-trailer.mp4],home)</onfocus>
			<onfocus condition="!Window.IsActive(movieinformation) + !String.IsEmpty(listitem.trailer)">SetProperty(listitemtrailer,$INFO[listitem.trailer],home)</onfocus>
			
			<onfocus condition="String.IsEqual(ListItem.DBtype,tvshow) + !string.IsEmpty(listitem.dbid)">SetProperty(dbid,$INFO[listitem.dbid],home)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.DBtype,tvshow) + !string.IsEmpty(listitem.rating)">SetProperty(rating,$INFO[listitem.rating],home)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.DBtype,tvshow) + [string.IsEmpty(listitem.rating) + !string.IsEmpty(listitem.userrating)]">SetProperty(rating,$INFO[listitem.userrating],home)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.DBtype,tvshow) + !string.IsEmpty(listitem.Property(totalseasons))">SetProperty(totalseasons,$INFO[listitem.Property(totalseasons)],home)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.DBtype,tvshow) + !string.IsEmpty(listitem.Property(totalepisodes))">SetProperty(totalepisodes,$INFO[listitem.Property(totalepisodes)],home)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.DBtype,tvshow) + !string.IsEmpty(listitem.status)">SetProperty(status,$INFO[listitem.status],home)</onfocus>
			
			<onfocus condition="String.IsEqual(ListItem.DBtype,album) + !string.IsEmpty(ListItem.Property(Album_Description))">SetProperty(Album_Description,$ESCINFO[ListItem.Property(Album_Description)])</onfocus>
			<onfocus condition="[String.IsEqual(ListItem.DBtype,album) + string.IsEmpty(ListItem.Property(Album_Description))] | [!String.IsEqual(ListItem.DBtype,song) + !String.IsEqual(ListItem.DBtype,album)] + !String.IsEmpty(Window(music).Property(Album_Description))">ClearProperty(Album_Description,music)</onfocus>
			
			
			<onfocus condition="!String.IsEmpty(Window(home).Property(movie_tmdbid))">ClearProperty(movie_tmdbid,home)</onfocus>
			<onfocus condition="!String.IsEmpty(Window(home).Property(tvshow_tmdbid))">ClearProperty(tvshow_tmdbid,home)</onfocus>
			<onfocus condition="!String.IsEmpty(Window(home).Property(episodetvshow_tmdbid))">ClearProperty(episodetvshow_tmdbid,home)</onfocus>	
			
			<onfocus condition="String.IsEqual(ListItem.DBType,movie) + !String.IsEmpty(listitem.uniqueid(tmdb))">SetProperty(movie_tmdbid,$INFO[listitem.uniqueid(tmdb)],home)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.DBType,movie) + [String.IsEmpty(listitem.uniqueid(tmdb)) + !String.IsEmpty(ListItem.Property(tmdb_id))]">SetProperty(movie_tmdbid,$INFO[ListItem.Property(tmdb_id)],home)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.DBType,movie) + [String.IsEmpty(listitem.uniqueid(tmdb)) + String.IsEmpty(ListItem.Property(tmdb_id))] + !String.IsEmpty(ListItem.Property(id))">SetProperty(movie_tmdbid,$INFO[ListItem.Property(id)],home)</onfocus>
			
			<onfocus condition="String.IsEqual(ListItem.DBType,tvshow) + !String.IsEmpty(listitem.uniqueid(tmdb))">SetProperty(tvshow_tmdbid,$INFO[listitem.uniqueid(tmdb)],home)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.DBType,tvshow) + [String.IsEmpty(listitem.uniqueid(tmdb)) + !String.IsEmpty(ListItem.Property(tmdb_id))]">SetProperty(tvshow_tmdbid,$INFO[ListItem.Property(tmdb_id)],home)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.DBType,tvshow) + [String.IsEmpty(listitem.uniqueid(tmdb)) + String.IsEmpty(ListItem.Property(tmdb_id))] + !String.IsEmpty(ListItem.Property(id))">SetProperty(tvshow_tmdbid,$INFO[ListItem.Property(id)],home)</onfocus>
			
			<onfocus condition="String.IsEqual(ListItem.DBType,episode) + !String.IsEmpty(ListItem.Property(tvshow.tmdb_id))">SetProperty(episodetvshow_tmdbid,$INFO[ListItem.Property(tvshow.tmdb_id)],home)</onfocus>
			<onunfocus condition="!Window.IsActive(movieinformation) + !String.IsEmpty(Window(home).Property(TrailerIsPlaying))">PlayerControl(Stop)</onunfocus>
			
		</control>
	</include>
	
	<!-- MEDIA Windows xmls 
	
	<animation effect="slide" start="0,0" end="1400,610" time="100" easing="inout" reversible="true" condition="Control.HasFocus(610) + [!Skin.HasSetting(view_503_fanart_left) + Control.IsVisible(503)] | [!Skin.HasSetting(view_504_fanart_left) + Control.IsVisible(504)]">conditional</animation>
	

what a shit to do
		<animation effect="slide" start="0,0" end="1400,0" time="0" reversible="true" condition="![Control.HasFocus(610) | Control.HasFocus(19) | Control.HasFocus(199)] + [[!Skin.HasSetting(view_503_fanart_left) + Control.IsVisible(503)] | [!Skin.HasSetting(view_504_fanart_left) + Control.IsVisible(504)]]">conditional</animation>
		<animation effect="slide" start="0,0" end="1400,610" time="0" reversible="true" condition="[[Control.IsVisible(503) + !Skin.HasSetting(View_503_DisableFooter)] | [Control.IsVisible(504) + !Skin.HasSetting(View_504_DisableFooter)]] + [Control.HasFocus(610) | Control.HasFocus(19) | Control.HasFocus(199)]">conditional</animation>
		
	-->
	<include name="NativeString_Filter">
		<control type="group">
		<animation effect="slide" start="0,0" end="1400,0" time="0" reversible="true" condition="[[!Skin.HasSetting(view_503_fanart_left) + Control.IsVisible(503)] | [!Skin.HasSetting(view_504_fanart_left) + Control.IsVisible(504)]]">conditional</animation>
		
		<control type="edit" id="19">
			<visible>!$EXP[Infodialog_IsActive] + !Window.IsActive(shutdownmenu) + !Control.IsVisible(58)</visible>
			<top>15</top>
			<left>110</left>
			<height>60</height>
			<width>360</width>
			<hinttext>$LOCALIZE[587]...</hinttext>
			<texturefocus colordiffuse="$VAR[color_header_backgroundpanel]" diffuse="buttons/button_6to1_Trans.png">colors/white70.png</texturefocus>	
			<texturenofocus diffuse="buttons/button_6to1_Trans.png">colors/white10.png</texturenofocus>
			<font>notosans_24_regular</font>
			<textoffsetx>20</textoffsetx>
			<textoffsety>15</textoffsety>
			<textcolor>$VAR[color_header_text_main]</textcolor>
			<focusedcolor>$VAR[color_header_text_main]</focusedcolor>
			<disabledcolor />
			<invalidcolor />
			<aligny>center</aligny>
			<pulseonselect>no</pulseonselect>
			<onup>50</onup>
			<ondown>50</ondown>
			<onright condition="Control.IsVisible(199)">199</onright>
			<onright condition="!Control.IsVisible(199)">50</onright>
			
			<onleft>menu</onleft>
			<label />
		</control>
		<control type="button">
			<description>touch mode workaround</description>
			<visible>!$EXP[Infodialog_IsActive] + !Window.IsActive(shutdownmenu) + !Control.IsVisible(58)</visible>
			<visible>!String.IsEmpty(Window(home).Property(menucontrol_active))</visible>
			<animation effect="slide" start="0,0" end="90,0" time="250" tween="sine" condition="!ControlGroup(9000).HasFocus() + [!Skin.HasSetting(HideProfile_Header) + Control.IsVisible(97)]">Conditional</animation>
			<height>110</height>
			<texturefocus  />	
			<texturenofocus  />
			<onfocus>ClearProperty(menucontrol_active,home)</onfocus>
			<onfocus>SetFocus(19)</onfocus>
		</control>
		<control type="button" id="199">
			<visible>Container.CanFilterAdvanced</visible>
			<visible>!$EXP[Infodialog_IsActive] + !Window.IsActive(shutdownmenu) + !Control.IsVisible(58)</visible>
			<include>Animation_Item_Focus</include>
			<texturefocus diffuse="buttons/advancedfiltermethod.png" colordiffuse="$VAR[color_header_text_accent]">colors/white70.png</texturefocus>	
			<texturenofocus diffuse="buttons/advancedfiltermethod.png" colordiffuse="$VAR[color_header_text_main]">colors/white50.png</texturenofocus>
			<top>20</top>
			<left>415</left>
			<width>50</width>
			<height>50</height>
			<font>notosans_23_regular_l</font>
			<onup>50</onup>
			<ondown>50</ondown>
			<onright>50</onright>
			<onleft>19</onleft>
			<onclick>Filter</onclick>
			<onfocus>ClearProperty(menucontrol_active,home)</onfocus>
		</control>
		</control>
	</include>
	
	<!-- PAGES - view_58,musicinfo -->
	<include name="page_attribute">
		<param name="top" default="0" />
		<definition>
			<top>$PARAM[top]</top>
			<height>1080</height>
		</definition>
	</include>
	
	<!-- AddonBrowser.xml , DialogSelect.xml -->
	<include name="Dialog_Containers">
		<param name="Container_Height" default="67%" />
		<definition>
		<control type="list" id="$PARAM[id]">
			<animation effect="fade" start="100" end="0" time="200" tween="sine" condition="[Window.IsActive(addonbrowser) | Window.IsActive(programs)] + Window.IsTopMost(addoninformation)">Conditional</animation>
			<viewtype label="535">list</viewtype>
			<posx>640</posx>
			<posy>250</posy>
			<width>640</width>
			<height>$PARAM[Container_Height]</height>
			<onleft>$PARAM[onleft]</onleft>
			<onright>$PARAM[id]60</onright>
			<onup condition="Control.IsVisible(8999)">8999</onup>
			<onup condition="!Control.IsVisible(8999)">$PARAM[id]</onup>
			<onfocus condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">ClearProperty(menucontrol_active,home)</onfocus>
			
			
			<ondown>$PARAM[id]</ondown>
			<pagecontrol>$PARAM[id]60</pagecontrol>
			<scrolltime tween="cubic" easing="out">300</scrolltime>
			<itemlayout height="$PARAM[layout_height]">
				<control type="image">
					<visible>String.IsEmpty(ListItem.Icon)</visible>
					<texture>frames/separator.png</texture>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.Icon)</visible>
					<visible>!ListItem.Property(addon.downloading)</visible>
					<visible>!ListItem.Property(addon.hasupdate)</visible>
					<width>$PARAM[layout_height]</width>
					<height>$PARAM[layout_height]</height>
					<bordersize>7</bordersize>
					<aspectratio scalediffuse="false" aligny="center" align="center">scale</aspectratio>
					<texture diffuse="diffuse/circle.png" fallback="defaultaddon.png">$INFO[ListItem.Icon]</texture>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.Icon)</visible>
					<visible>ListItem.Property(addon.downloading)</visible>
					<width>$PARAM[layout_height]</width>
					<height>$PARAM[layout_height]</height>
					<bordersize>30</bordersize>
					<aspectratio scalediffuse="false" aligny="center" align="center">keep</aspectratio>
					<texture diffuse="diffuse/circle.png" fallback="defaultaddon.png">$INFO[ListItem.Icon]</texture>
					<bordertexture colordiffuse="$VAR[color_global_button_text_nf]">special://skin/extras/busy/busyload2.apng</bordertexture>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.Icon)</visible>
					<visible>ListItem.Property(addon.hasupdate)</visible>
					<visible>!ListItem.Property(addon.downloading)</visible>
					<width>$PARAM[layout_height]</width>
					<height>$PARAM[layout_height]</height>
					<bordersize>30</bordersize>
					<aspectratio scalediffuse="false" aligny="center" align="center">keep</aspectratio>
					<texture diffuse="diffuse/circle.png" fallback="defaultaddon.png">$INFO[ListItem.Icon]</texture>
					<bordertexture colordiffuse="$VAR[color_global_button_text_fo]">icons/update.png</bordertexture>
				</control>
				<control type="image">
					<visible>[!String.IsEmpty(ListItem.AddonBroken) | ListItem.Property(addon.orphaned) | ListItem.Property(addon.isinstalled)]</visible>
					<visible>!ListItem.Property(addon.downloading)</visible>
					<left>85</left>
					<top>5</top>
					<width>32</width>
					<height>32</height>
					<texture colordiffuse="$VAR[color_global_button_text_nf]">$VAR[AddonStatus]</texture>
				</control>
				<control type="group">
					<visible>!String.IsEqual(ListItem.label,..)</visible>
					<control type="label">
						<left>$PARAM[layout_height]</left>
						<label>$INFO[ListItem.Label][CR]$VAR[addonupdate]</label>
						<textcolor>$VAR[color_global_button_text_nf]</textcolor>
						<scroll>true</scroll>
						<visible>$PARAM[icon_visible]</visible>
					</control>
					<control type="label">
						<left>20</left>
						<label>$INFO[ListItem.Label]</label>
						<textcolor>$VAR[color_global_button_text_nf]</textcolor>
						<scroll>true</scroll>
						<visible>!$PARAM[icon_visible]</visible>
					</control>
				</control>
			</itemlayout>
			<focusedlayout height="$PARAM[layout_height]">
				<control type="button">
					<description>allowhiddenfocus true doesnt matter here</description>
					<visible>false</visible>
					<onfocus condition="string.isequal(listitem.label,..) + Integer.IsEqual(Container.NumItems,0)">action(back)</onfocus>
				</control>
				<control type="image">
					<texture>colors/white.png</texture>
					<colordiffuse>$VAR[color_global_button_panel_fo]</colordiffuse>
				</control>
				<control type="image">
					<visible>String.IsEmpty(ListItem.Icon)</visible>
					<texture>frames/separator.png</texture>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.Icon)</visible>
					<visible>!ListItem.Property(addon.downloading)</visible>
					<visible>!ListItem.Property(addon.hasupdate)</visible>
					<width>$PARAM[layout_height]</width>
					<height>$PARAM[layout_height]</height>
					<bordersize>7</bordersize>
					<aspectratio scalediffuse="false" aligny="center" align="center">scale</aspectratio>
					<texture diffuse="diffuse/circle.png" fallback="defaultaddon.png">$INFO[ListItem.Icon]</texture>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.Icon)</visible>
					<visible>ListItem.Property(addon.downloading)</visible>
					<width>$PARAM[layout_height]</width>
					<height>$PARAM[layout_height]</height>
					<bordersize>30</bordersize>
					<aspectratio scalediffuse="false" aligny="center" align="center">keep</aspectratio>
					<texture diffuse="diffuse/circle.png" fallback="defaultaddon.png">$INFO[ListItem.Icon]</texture>
					<bordertexture colordiffuse="$VAR[color_global_button_text_fo]">special://skin/extras/busy/busyload2.apng</bordertexture>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.Icon)</visible>
					<visible>ListItem.Property(addon.hasupdate)</visible>
					<visible>!ListItem.Property(addon.downloading)</visible>
					<width>$PARAM[layout_height]</width>
					<height>$PARAM[layout_height]</height>
					<bordersize>30</bordersize>
					<aspectratio scalediffuse="false" aligny="center" align="center">keep</aspectratio>
					<texture diffuse="diffuse/circle.png" fallback="defaultaddon.png">$INFO[ListItem.Icon]</texture>
					<bordertexture colordiffuse="$VAR[color_global_button_text_fo]">icons/update.png</bordertexture>
				</control>
				<control type="image">
					<visible>[!String.IsEmpty(ListItem.AddonBroken) | ListItem.Property(addon.orphaned) | ListItem.Property(addon.isinstalled)]</visible>
					<visible>!ListItem.Property(addon.downloading)</visible>
					<left>85</left>
					<top>5</top>
					<width>32</width>
					<height>32</height>
					<texture colordiffuse="$VAR[color_global_button_text_fo]">$VAR[AddonStatus]</texture>
					<visible>Window.IsActive(addonbrowser)</visible>
				</control>
				<control type="group">
					<visible>!String.IsEqual(ListItem.label,..)</visible>
					
					<control type="label">
						<left>$PARAM[layout_height].9</left>
						<label>$INFO[ListItem.Label,[B],[/B]][CR]$VAR[addonupdate]</label>
						<textcolor>$VAR[color_global_button_text_fo]</textcolor>
						<scroll>true</scroll>
						<visible>$PARAM[icon_visible]</visible>
					</control>
					<control type="label">
						<left>20</left>
						<label>$INFO[ListItem.Label,[B],[/B]]</label>
						<textcolor>$VAR[color_global_button_text_fo]</textcolor>
						<scroll>true</scroll>
						<visible>!$PARAM[icon_visible]</visible>
					</control>
				</control>
			</focusedlayout>
		</control>
		<control type="scrollbar" id="$PARAM[id]60">
			<left>66.7%</left>
			<posy>250</posy>
			<height>$PARAM[Container_Height]</height>
			<onleft>$PARAM[id]</onleft>
		</control>
		</definition>
	</include>
	<!-- AddonBrowser.xml , DialogSelect.xml -->
	<include name="Dialog_CommonInfo">
		<param name="Def_Icon" default="$INFO[ListItem.Icon]" />
		<param name="Header_posy" default="140" />
		<param name="Header_label" default="[UPPERCASE][B]$INFO[System.CurrentWindow][/B][/UPPERCASE]" />
		<definition>
			<control type="image">
				<left>5%</left>
				<centertop>50%</centertop>
				<width>460</width>
				<height>460</height>
				<aspectratio>keep</aspectratio>
				<fadetime>150</fadetime>
				<texture>$PARAM[Def_Icon]</texture>
			</control>
			<control type="label">
				<posy>$PARAM[Header_posy]</posy>
				<label>$PARAM[Header_label]</label>
				<textcolor>$VAR[color_global_button_text_fo]</textcolor>
				
				<left>33.3%</left>
				<width>33.3%</width>
				<height>120</height>
				<align>center</align>
				<aligny>bottom</aligny>
				<wrapmultiline>true</wrapmultiline>
			</control>
			<control type="textbox">
				<visible>!Window.IsTopMost(addoninformation)</visible>
				<left>68%</left>
				<width>30%</width>
				<height>100%</height>
				<label>$PARAM[Item_Description]</label>
				<textcolor>ffffffff</textcolor>
			</control>
			<control type="textbox">
				<visible>Window.IsTopMost(addoninformation)</visible>
				<left>34%</left>
				<width>30%</width>
				<height>100%</height>
				<label>$PARAM[Item_Description]</label>
				<textcolor>$VAR[color_global_button_text_fo]</textcolor>
			</control>
		</definition>
	</include>
	
	
	<!-- 
	
	compare the layouts and get universal using only fanart vars
	
	- square,circle,disc	Resolution 	1000w x 1000h					Aspect Ratio 	1:1 
	- PosterVar				Resolution 	1000w x 1500h					Aspect Ratio 	2:3 
	- BANNER 				Resolution 	1000w x 185h				 	Aspect Ratio 	200:37 
 	- ClearLogo 			Resolution 	800w x 310h						Aspect Ratio 	80:31 
	- fanart,landscape		Resolution 	1920w x 1080h, 1000w x 562h		Aspect Ratio 	16:9 
										960w x 540h 480x270
	
	-->
	
	unresolved colors - get variable - forced_color
	<include name="FocusOverlay">
		<param name="diffusedimtext" default="colors/white.png" />
		<param name="bordersize" default="8" />
		<definition>
		<control type="group">
			<animation reversible="false" effect="fade" start="0" end="100" time="350" tween="quadratic" easing="in">Focus</animation>
			<animation reversible="false" effect="fade" start="100" end="0" time="0">UnFocus</animation>
			<control type="image">
				<description>temp solution for ... folder</description>
				<visible>![String.Contains(ListItem.Icon,default) + String.IsEqual(ListItem.Label,..)]</visible>
				<bordersize>$PARAM[bordersize]</bordersize>
				<colordiffuse>ff000000</colordiffuse>
				<texture diffuse="$PARAM[diffusedimtext]">overlay/overlaydiffusor.png</texture>
			</control>
			<control type="group">
				<visible>!String.IsEqual(ListItem.Label,$LOCALIZE[284])</visible>
				<visible>![String.IsEqual(ListItem.FileExtension,jpg) | String.IsEqual(ListItem.FileExtension,png)]</visible>
				<description>get listitem.dbtype at container content</description>
				
				<control type="image">
					<centerleft>50%</centerleft>
					<centertop>50%</centertop>
					<width>35%</width>
					<height>35%</height>
					<colordiffuse>$VAR[color_widgetoverlayicon]</colordiffuse>
					<aspectratio scalediffuse="false" align="center" aligny="center">keep</aspectratio>
					<texture>overlay/overlayplay.png</texture>
					<visible>$EXP[Is_MediaFileItem]</visible>
				</control>
				<control type="image">
					<centerleft>50%</centerleft>
					<centertop>50%</centertop>
					<width>25%</width>
					<height>25%</height>
					<colordiffuse>$VAR[color_widgetoverlayicon]</colordiffuse>
					<aspectratio scalediffuse="false" align="center" aligny="center">keep</aspectratio>
					<texture>overlay/overlayfolder.png</texture>
					<visible>$EXP[Is_MediaFolderItem]</visible>
				</control>
			</control>
		</control>
		</definition>
	</include>
	
	
	
	<!-- Container Header : label- sep - focused item label - busy 
	
	fonts
	notosans_32_bold
	roboto_32_condensedregular
	roboto_36_condensedbold
	notosans_22_bold
	
	notosans_23_bold
	notosans_26_semibold
	-->
	<include name="Universal_ContainerHeader">
		<param name="align" default="left" />
		<param name="top" default="60" />
		<param name="show_seperator_and_listitem" default="!Window.IsActive(home) | [Window.IsActive(home) + Skin.HasSetting(ShowFocusedLabelInHeader_Home)]" />
		<param name="label_color" default="$VAR[universalcontainer_headercolor]" />
		
		<definition>
			<control type="grouplist" id="$PARAM[groupid]">
				<description>need get animation in sync</description>
				<top>$PARAM[top]</top>
				<height>60</height>
				<nested />
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				
				<itemgap>10</itemgap>
					<animation condition="Window.IsActive(home) + Skin.HasSetting(Home_SectionWidgets)" type="Visible">
						<effect type="fade" start="0" end="100" time="250" tween="sine" delay="250" easing="out" />
						<effect type="slide" start="320" end="0" time="400" delay="250" tween="cubic" easing="out" />
					</animation>
					<animation condition="Window.IsActive(home) + Skin.HasSetting(Home_SectionWidgets)" type="Hidden">
						<effect type="fade" start="100" end="0" time="0" tween="sine" easing="out" />
						<effect type="slide" start="0" end="320" time="0" tween="cubic" easing="out" />
					</animation>
				
				<align>$PARAM[align]</align>
				
				<control type="label">
					<top>22</top>
					<left>15</left>
					<width>auto</width>
					<label>[B]$PARAM[label][/B]</label>
					<aligny>center</aligny>
					<textcolor>$PARAM[label_color]</textcolor>
					<font>notosans_26_semibold</font>
					<height>24</height>
					<visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0) | !Container($PARAM[id]).IsUpdating</visible>
				</control>
				<control type="label">
					<visible>$PARAM[show_seperator_and_listitem]</visible>
					<visible>Control.HasFocus($PARAM[id]) + [Integer.IsGreater(Container($PARAM[id]).NumItems,0) + !Container($PARAM[id]).IsUpdating]</visible>
					<visible>String.IsEmpty(Window(home).Property(CastMemberThumb))</visible>
					
					<top>17</top>
					<width>auto</width>
					<label>$VAR[Universal_WidgetHeader_Seperator]</label>
					<aligny>center</aligny>
					<textcolor>$VAR[universalcontainer_seperatorcolor]</textcolor>
					<font>notosans_36_bold</font>
					<height>24</height>
					<visible>Control.HasFocus($PARAM[id])</visible>
					<visible>String.IsEmpty(Window(home).Property(CastMemberThumb))</visible>
					<visible>[!Window.IsActive(home) + Control.HasFocus($PARAM[id])] | [[Window.IsActive(home) + Skin.HasSetting(ShowFocusedLabelInHeader_Home)] + Control.HasFocus($PARAM[id])]</visible>
					<visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0) + !Container($PARAM[id]).IsUpdating</visible>
				</control>
				<control type="label">
					<visible>$PARAM[show_seperator_and_listitem]</visible>
					<visible>Control.HasFocus($PARAM[id]) + [Integer.IsGreater(Container($PARAM[id]).NumItems,0) + !Container($PARAM[id]).IsUpdating]</visible>
					<visible>String.IsEmpty(Window(home).Property(CastMemberThumb))</visible>
					<visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Label)</visible>
					<top>20</top>
					<width>auto</width>
					<label>$VAR[Universal_WidgetHeaderListItem]</label>
					<aligny>center</aligny>
					<textcolor>$PARAM[label_color]</textcolor>
					<font>notosans_25_regular_l_lowline</font>
					<height>24</height>
				</control>
				<control type="image">
					<visible>Container($PARAM[id]).IsUpdating</visible>
					<top>10</top>
					<width>40</width>
					<height>40</height>
					<aspectratio scalediffuse="false" align="center" aligny="center">keep</aspectratio>
					<texture colordiffuse="$VAR[universalcontainer_seperatorcolor]">special://skin/extras/busy/skypishball.apng</texture>
					<aspectratio align="center" aligny="center">keep</aspectratio>
				</control>
			</control>
        </definition>
    </include>
	
	<include name="Custom_Container">
		<param name="type" default="panel" />
		<param name="type_height" default="400" />
		<param name="type_pos_top" default="50" />
		<param name="type_orientation" default="horizontal" />
		
		<definition>
		<control type="$PARAM[type]" id="$PARAM[id]">
			<orientation>$PARAM[type_orientation]</orientation>
			<preloaditems>2</preloaditems>
			<scrolltime tween="quadratic">400</scrolltime>
			
			<height>$PARAM[type_height]</height>
			<top>$PARAM[type_pos_top]</top>
			<visible>$PARAM[visible]</visible>
			
			<nested />
		</control>
		</definition>
	</include>
	<!-- ##################### -->
	<!--  Container TYPE UNI   -->
	<!-- ##################### -->
	
	<include name="Universal_Container">
		<param name="type" default="panel" />
		<param name="type_height" default="400" />
		<param name="type_pos_top" default="50" />
		<param name="type_orientation" default="horizontal" />
		
		<param name="item_artwork_bordercolor_fo" default="$VAR[color_universalcontainer_itemframe_fo]" />
		<param name="item_artwork_bordercolor_nf" default="$VAR[color_universalcontainer_itemframe_nf]" />
		
		<param name="item_infotags_visible" default="true" />
		<param name="item_infotags_bgpanel_visible" default="true" />
		
		<param name="item_overlay_circle" default="false" />
		<param name="item_overlay_fanart" default="false" />
		<param name="item_overlay_banner" default="false" />
		
		<param name="item_manage_skinpropertys" default="true" />
		<param name="item_focusoverlay_visible" default="true" />
		
				<param name="item_infobox_right_visible" default="false" />
				<param name="item_infobox_right_width" default="900" />
				
		
		<param name="item_artwork_diffuse_themed" default="String.IsEqual(ListItem.Label,..) | !Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + $EXP[HiddentagPanel]]" />
		<param name="item_artwork_diffuse_override" default="!String.IsEqual(ListItem.Label,..) + Skin.HasTheme(Roundedge) + $EXP[VisibletagPanel]" />
		
		<definition>
		<control type="$PARAM[type]" id="$PARAM[id]">
			<nested />
			<visible>$PARAM[visible]</visible>
			<orientation>$PARAM[type_orientation]</orientation>
			<preloaditems>2</preloaditems>
			<scrolltime tween="quadratic">400</scrolltime>
			<top>$PARAM[type_pos_top]</top>
			<height>$PARAM[type_height]</height>
			<itemlayout height="$PARAM[layout_height]" width="$PARAM[layout_width]">
				<control type="group">
					<width>$PARAM[itemwidth]</width>
					<height>$PARAM[itemheight]</height>
					<include content="universal_itemlayout">
						<param name="artwork" value="$PARAM[item_artwork_name]" />
						<param name="artwork_focusoverlay_visible" value="false" />
						<param name="artwork_bg_bordersize" value="6" />
						<param name="artwork_bordercolor" value="$PARAM[item_artwork_bordercolor_nf]" />
							<param name="artwork_overlay_circle" value="$PARAM[item_overlay_circle]" />
							<param name="artwork_overlay_landscape" value="$PARAM[item_overlay_fanart]" />
							<param name="artwork_overlay_banner" value="$PARAM[item_overlay_banner]" />
						
							<param name="artwork_diffuse_themed" value="$PARAM[item_artwork_diffuse_themed]" />
							<param name="artwork_diffuse_override" value="$PARAM[item_artwork_diffuse_override]" />
						
						<param name="infotags_visible" value="$PARAM[item_infotags_visible]" />
							<param name="infotags_bgpanel_visible" value="$PARAM[item_infotags_bgpanel_visible]" />
							<param name="infotags_bgpanel_color" value="$VAR[color_universalcontainer_itemtag_bgpanel_nf]" />
							<param name="infotags_label1_color" value="$VAR[color_universalcontainer_itemtag_label1_nf]" />
							<param name="infotags_label2_color" value="$VAR[color_universalcontainer_itemtag_label2_nf]" />
							<param name="infotags_autoscroll" value="false" />
					</include>
				</control>
					
					<control type="group">
						<description>info layout - UniversalWidgetInfo</description>
						<animation effect="fade" end="30" condition="true">Conditional</animation>
						<left>$PARAM[itemwidth]</left>
						<height>$PARAM[itemheight]</height>
						<width>$PARAM[item_infobox_right_width]</width>
						<visible>$PARAM[item_infobox_right_visible]</visible>
						<include condition="$PARAM[item_infobox_right_visible]" content="UniversalWidgetInfo" />
					</control>
			</itemlayout>
			<focusedlayout height="$PARAM[layout_height]" width="$PARAM[layout_width]">
				<include condition="$PARAM[item_manage_skinpropertys]" content="hiddenbutton_manage_skinpropertys" />
	
				<control type="group">
					<width>$PARAM[itemwidth]</width>
					<height>$PARAM[itemheight]</height>
					<include condition="true">Animation_Item_Focus</include>
					<include condition="false">AltAnimation_Item_Focus</include>
					<control type="group">
						<include content="universal_itemlayout">
							
							<param name="artwork" value="$PARAM[item_artwork_name]" />
							<param name="artwork_focusoverlay_visible" value="$PARAM[item_focusoverlay_visible]" />
							<param name="artwork_bg_bordersize" value="4" />
							<param name="artwork_bordercolor" value="$PARAM[item_artwork_bordercolor_fo]" />
								<param name="artwork_overlay_circle" value="$PARAM[item_overlay_circle]" />
								<param name="artwork_overlay_landscape" value="$PARAM[item_overlay_fanart]" />
								<param name="artwork_overlay_banner" value="$PARAM[item_overlay_banner]" />
							<param name="artwork_diffuse_themed" value="$PARAM[item_artwork_diffuse_themed]" />
							<param name="artwork_diffuse_override" value="$PARAM[item_artwork_diffuse_override]" />
							
							<param name="infotags_visible" value="$PARAM[item_infotags_visible]" />
								<param name="infotags_bgpanel_visible" value="$PARAM[item_infotags_bgpanel_visible]" />
								<param name="infotags_bgpanel_color" value="$VAR[color_universalcontainer_itemtag_bgpanel_fo]" />
								<param name="infotags_label1_color" value="$VAR[color_universalcontainer_itemtag_label1_fo]" />
								<param name="infotags_label2_color" value="$VAR[color_universalcontainer_itemtag_label2_fo]" />
								<param name="infotags_autoscroll" value="true" />
						</include>
					</control>
				</control>
				<control type="group">
					<left>$PARAM[itemwidth]</left>
					<height>$PARAM[itemheight]</height>
					<width>$PARAM[item_infobox_right_width]</width>
					<visible>$PARAM[item_infobox_right_visible]</visible>
					<include condition="$PARAM[item_infobox_right_visible]" content="UniversalWidgetInfo" />
				</control>
			</focusedlayout>
		</control>
		</definition>
	</include>
	
	
	<include name="universal_itemlayout">
		<param name="artwork_overlay_circle" default="false" />
		<param name="artwork_overlay_landscape" default="false" />
		<param name="artwork_overlay_banner" default="false" />
		<param name="artwork_diffuse_themed" default="String.IsEqual(ListItem.Label,..) | !Skin.HasTheme(Roundedge) | [Skin.HasTheme(Roundedge) + $EXP[HiddentagPanel]]" />
		<param name="artwork_diffuse_override" default="!String.IsEqual(ListItem.Label,..) + Skin.HasTheme(Roundedge) + $EXP[VisibletagPanel]" />
		<param name="infotags_bgpanel_visible" default="true" />
		
		<definition>
		
		<control type="group">
			<visible>$PARAM[artwork_diffuse_themed]</visible>
			<include content="unilayout_subcall_artwork">
				<param name="artwork" value="$PARAM[artwork]" />
				<param name="artwork_bordercolor" value="$PARAM[artwork_bordercolor]" />
				<param name="artwork_bg_bordersize" value="$PARAM[artwork_bg_bordersize]" />
				<param name="themeprefix" value="" />
			</include>
			<include condition="$PARAM[artwork_focusoverlay_visible] + !$PARAM[artwork_overlay_circle]" content="FocusOverlay">
				<param name="diffusedimtext" value="artworkdiffuse/$PARAM[artwork].png" />
			</include>
		</control>
		<control type="group">
			<visible>$PARAM[artwork_diffuse_override]</visible>
			<include content="unilayout_subcall_artwork">
				<param name="artwork" value="$PARAM[artwork]" />
				<param name="artwork_bordercolor" value="$PARAM[artwork_bordercolor]" />
				<param name="artwork_bg_bordersize" value="$PARAM[artwork_bg_bordersize]" />
				<param name="themeprefix" value="/usebganel" />
			</include>
			<include condition="$PARAM[artwork_focusoverlay_visible] + !$PARAM[artwork_overlay_circle]" content="FocusOverlay">
				<param name="diffusedimtext" value="artworkdiffuse/usebganel/$PARAM[artwork].png" />
			</include>
		</control>
		<control type="group">
			<description>ClearLogo Overlay Circle Items</description>
			<visible>$PARAM[artwork_overlay_circle]</visible>
			<control type="image">
				<visible>![[Container.Content(Seasons) | String.IsEqual(ListItem.dbtype,season)] | [Container.Content(Episodes) | String.IsEqual(ListItem.dbtype,episode)] | [Container.Content(Albums) | String.IsEqual(ListItem.dbtype,album)]]</visible>
				<visible>
					!String.IsEmpty(ListItem.Art(tvshow.clearlogo)) | 
					!String.IsEmpty(ListItem.Art(clearlogo)) | 
					!String.IsEmpty(ListItem.Art(artist.clearlogo)) | 
					!String.IsEmpty(ListItem.Art(albumartist.clearlogo))
				</visible>
				<top>70%</top>
				<height>50%</height>
				<left>10</left>
				<right>10</right>
				<texture background="true">$VAR[ListItemClearLogo]</texture>
				<aspectratio align="center" aligny="center">keep</aspectratio>
			</control>
			<control type="textbox">
				<description>43.3 1 row</description>
				<visible>[[Container.Content(Seasons) | String.IsEqual(ListItem.dbtype,season)] | [Container.Content(Episodes) | String.IsEqual(ListItem.dbtype,episode)] | [Container.Content(Albums) | String.IsEqual(ListItem.dbtype,album)]] | 
					String.IsEmpty(ListItem.Art(tvshow.clearlogo)) +
					String.IsEmpty(ListItem.Art(artist.clearlogo)) +
					String.IsEmpty(ListItem.Art(albumartist.clearlogo)) +
					String.IsEmpty(ListItem.Art(clearlogo))
				</visible>
				<visible>!String.IsEqual(ListItem.label,..)</visible>
				<autoscroll delay="3000" time="2000" repeat="3000">$PARAM[infotags_autoscroll]</autoscroll>
				<top>90%</top>
				<left>5</left>
				<right>5</right>
				<wrapmultiline>true</wrapmultiline>
				<height max="100">auto</height>
				<font>roboto_25_condensedbold</font>
				<align>center</align>
				<aligny>top</aligny>
				<textcolor>white</textcolor>
				<shadowcolor>black</shadowcolor>
				<selectedcolor>white</selectedcolor>
				<label>$INFO[ListItem.Label]</label>
			</control>
		</control>
		
		<control type="group">
			<description>ClearLogo Overlay - Fanart Items</description>
			<visible>$PARAM[artwork_overlay_landscape]</visible>
			<animation effect="slide" start="0,0" end="25,-15" condition="Skin.HasTheme(Roundedge)">conditional</animation>
			<control type="image">
				<visible>
				[[$EXP[IsEpisode]] | 
					[[$EXP[IsMovie] | $EXP[IsTVShow] | $EXP[IsSeason] | $EXP[IsArtist]] + 
						String.IsEmpty(ListItem.Art(tvshow.landscape)) +
						String.IsEmpty(ListItem.Art(artist.landscape)) +
						String.IsEmpty(ListItem.Art(albumartist.landscape)) +
						String.IsEmpty(ListItem.Art(landscape))]
				]
				</visible>
				<visible>
					[!String.IsEmpty(ListItem.Art(clearlogo)) + !$EXP[IsEpisode]] | 
					[!String.IsEmpty(ListItem.Art(tvshow.clearlogo)) + [$EXP[IsEpisode] | $EXP[IsSeason]]] | 
					!String.IsEmpty(ListItem.Art(artist.clearlogo)) | 
					!String.IsEmpty(ListItem.Art(albumartist.clearlogo))
				</visible>
				<bottom>20</bottom>
				<left>10</left>
				<right>10</right>
				<height>50%</height>
				<width>50%</width>
				<texture background="true">$VAR[ListItemClearLogo]</texture>
				<aspectratio align="left" aligny="bottom">keep</aspectratio>
			</control>
			
		</control>
		
		<control type="group">
			<description>ClearLogo Overlay - Banner Items</description>
			<visible>$PARAM[artwork_overlay_banner]</visible>
			<control type="image">
				<visible>
					String.IsEmpty(ListItem.Art(tvshow.banner)) +
					String.IsEmpty(ListItem.Art(artist.banner)) +
					String.IsEmpty(ListItem.Art(albumartist.banner)) +
					String.IsEmpty(ListItem.Art(banner))
				</visible>
				<visible>
					[!String.IsEmpty(ListItem.Art(clearlogo)) + !$EXP[IsEpisode]] | 
					[!String.IsEmpty(ListItem.Art(tvshow.clearlogo)) + $EXP[IsEpisode]] | 
					!String.IsEmpty(ListItem.Art(artist.clearlogo)) | 
					!String.IsEmpty(ListItem.Art(albumartist.clearlogo))
				</visible>
				<bordersize>15</bordersize>
				<aspectratio scalediffuse="false" align="center" aligny="center">keep</aspectratio>
				<texture background="true">$VAR[ListItemClearLogo]</texture>
			</control>
			<control type="label">
				<visible>[String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.DBTYPE,episode)] | 
					[!String.IsEqual(ListItem.DBTYPE,album) | !String.IsEqual(ListItem.DBTYPE,song) | !String.IsEqual(ListItem.DBTYPE,episode)] +
					String.IsEmpty(ListItem.Art(tvshow.banner)) +
					String.IsEmpty(ListItem.Art(artist.banner)) +
					String.IsEmpty(ListItem.Art(albumartist.banner)) +
					String.IsEmpty(ListItem.Art(banner)) + 
					String.IsEmpty(ListItem.Art(tvshow.clearlogo)) +
					String.IsEmpty(ListItem.Art(artist.clearlogo)) +
					String.IsEmpty(ListItem.Art(albumartist.clearlogo)) +
					String.IsEmpty(ListItem.Art(clearlogo))
				</visible>
				<visible>!String.IsEqual(ListItem.label,..)</visible>
				<left>5%</left>
				<width>90%</width>
				<height>100%</height>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.Label]</label>
				<font>roboto_32_condensedbold</font>
				<textcolor>white</textcolor>
				<shadowcolor>black</shadowcolor>
			</control>	
		</control>
		
		<control type="group">
			<description>Taglines Bottom</description>
			<visible>$PARAM[infotags_visible]</visible>
			<visible>!$PARAM[artwork_overlay_circle]</visible>
			<visible>!String.IsEqual(ListItem.label,..)</visible>
			<control type="image">
				<visible>$PARAM[infotags_bgpanel_visible]</visible>
				<top>97%</top>
				<bordersize>$PARAM[artwork_bg_bordersize],0,$PARAM[artwork_bg_bordersize],$PARAM[artwork_bg_bordersize]</bordersize>
				<height>80</height>
				<texture colordiffuse="$PARAM[infotags_bgpanel_color]">artworkdiffuse/tagbottom/tagpanel$PARAM[artwork].png</texture>
			</control>
			<control type="textbox">
				<autoscroll delay="2000" time="1500" repeat="1500">$PARAM[infotags_autoscroll]</autoscroll>
				<description>unresolved themerounded offset x, some times h100 is good idea-e.g. profiles</description>
				<top>101%</top>
				<left>10</left>
				<right>10</right>
				<wrapmultiline>true</wrapmultiline>
				<height>60</height>
				<font>roboto_22_condensedregular</font>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>$PARAM[infotags_label1_color]</textcolor>
				<selectedcolor>white</selectedcolor>
				<label>$VAR[Tag_label1][CR][COLOR=$PARAM[infotags_label2_color]]$VAR[Tag_label2][/COLOR]</label>
			</control>
		</control>
		
		<control type="group">
			<visible>!$PARAM[artwork_overlay_circle]</visible>
			<animation effect="slide" start="0,0" end="0,-7" time="0" condition="Control.IsVisible(520)">conditional</animation>
				
			
			<left>10</left>
			<right>10</right>
			<animation type="conditional" condition="Skin.HasTheme(Roundedge) + !$PARAM[infotags_bgpanel_visible]" reversible="false">
				<effect type="zoom" start="100,100" end="70,100" center="50%,100%" time="0" />
			</animation>
			<include content="ProgressBarOverlay" />
		</control>
		</definition>
    </include>
	
	<!-- cant use default via definition here
		<param name="artwork" default="$PARAM[artwork]" />
		<param name="artwork_bordercolor" default="$PARAM[artwork_bordercolor]" />
		<param name="artwork_bg_bordersize" default="$PARAM[artwork_bg_bordersize]" />
	-->
	<include name="unilayout_subcall_artwork">
		<control type="image">
			<description>testing framed border instead fullbg texture</description>
			<texture>artworkdiffuse$PARAM[themeprefix]/$PARAM[artwork]border.png</texture>
			<colordiffuse>$PARAM[artwork_bordercolor]</colordiffuse>
			<bordersize>$PARAM[artwork_bg_bordersize]</bordersize>
		</control>
		<control type="image">
			<description>temp workaround for def white or very bright border, may an if not cond needed def icons</description>
			<texture colordiffuse="66131313">artworkdiffuse$PARAM[themeprefix]/$PARAM[artwork].png</texture>
			<bordersize>8</bordersize>
			<visible>String.Contains(ListItem.Icon,default)</visible>
		</control>
		<control type="image">
			<description>default, aspectratio scalediffuse="true" aligny="center" align="center" stretch</description>
			<texture background="true" diffuse="artworkdiffuse$PARAM[themeprefix]/$PARAM[artwork].png">$VAR[ImageLayout_$PARAM[artwork]]</texture>
			<bordersize>8</bordersize>
			<visible>!String.IsEmpty(ListItem.Art($PARAM[artwork])) + [!String.IsEqual(ListItem.dbtype,studio) | String.IsEmpty(ListItem.ChannelName)]</visible>
		</control>
		<control type="image">
			<description>Fallback aspect scale</description>
			<texture background="true" diffuse="artworkdiffuse$PARAM[themeprefix]/$PARAM[artwork].png">$VAR[ImageLayout_$PARAM[artwork]]</texture>
			<aspectratio scalediffuse="false" aligny="center" align="center">scale</aspectratio>
			<bordersize>8</bordersize>
			<visible>String.IsEmpty(ListItem.Art($PARAM[artwork])) + [!String.IsEqual(ListItem.dbtype,studio) | String.IsEmpty(ListItem.ChannelName)]</visible>
		</control>
		<control type="group">
			<visible>$EXP[label_content]</visible>
			<control type="image">
				<visible>$EXP[label_content]</visible>
				<texture diffuse="artworkdiffuse$PARAM[themeprefix]/$PARAM[artwork].png" colordiffuse="ff131313">colors/white.png</texture>
				<aspectratio scalediffuse="false" aligny="center" align="center">stretch</aspectratio>
				<bordersize>8</bordersize>
			</control>
			<control type="textbox">
				<visible>$EXP[label_content]</visible>
				<label>$VAR[ChannelStudio_Name]</label>
				<centertop>50%</centertop>
				<align>center</align>
				<wrapmultiline>true</wrapmultiline>
				<left>10</left>
				<right>10</right>
				<font>notosans_18_bold</font>
			</control>
			<control type="image">
				<visible>[!Container.Content(playlists) + !String.IsEqual(ListItem.dbtype,genre) + !Container.Content(years) + !String.IsEqual(ListItem.dbtype,tag) + !String.IsEqual(ListItem.dbtype,director) + String.IsEqual(ListItem.dbtype,studio)] | !String.IsEmpty(ListItem.ChannelName)</visible>
				<description>fallback abuse, maybe bad for loading times</description>
				<left>8</left>
				<right>8</right>
				<top>8</top>
				<bottom>8</bottom>
				<bordersize>8</bordersize>
				<bordertexture diffuse="artworkdiffuse$PARAM[themeprefix]/$PARAM[artwork].png" colordiffuse="ff131313">colors/white.png</bordertexture>
				<texture background="true" fallback="$INFO[ListItem.Label,resource://resource.images.studios.color/,.png]" diffuse="artworkdiffuse/usebganel/$PARAM[artwork].png">$VAR[ChannelStudio_Icon]</texture>
				<aspectratio scalediffuse="false" aligny="center" align="center">keep</aspectratio>
			</control>
		</control>
	</include>
	
	
	<include name="UniversalWidgetInfo">
	
		<control type="label">
			<top>0</top>
			<left>50</left>
			<font>notosans_36_bold</font>
			<height>50</height>
			<align>left</align>
			<aligny>bottom</aligny>
			<scroll delay="2000">true</scroll>
			<scrollspeed>40</scrollspeed>
			<textcolor>$VAR[color_lib_accent]</textcolor>
			<info>ListItem.Title</info>
		</control>
		<control type="textbox">
			<top>70</top>
			<left>50</left>
			<font>notosans_27_semibold</font>
			<bottom>50</bottom>
			<align>left</align>
			<aligny>top</aligny>
			<autoscroll>false</autoscroll>
			<textcolor>$VAR[color_lib_text_main]</textcolor>
			<info>ListItem.Plot</info>
		</control>
		<control type="textbox">
			<bottom>0</bottom>
			<left>50</left>
			<font>notosans_18_bold</font>
			<height>30</height>
			<align>left</align>
			<aligny>top</aligny>
			<autoscroll>false</autoscroll>
			<textcolor>$VAR[color_lib_accent]</textcolor>
			<label>$INFO[ListItem().Duration(m),, $LOCALIZE[12391]]</label>
		</control>
		<control type="textbox">
			<bottom>0</bottom>
			<left>50</left>
			<font>notosans_18_bold</font>
			<height>30</height>
			<align>right</align>
			<aligny>top</aligny>
			<autoscroll>false</autoscroll>
			<textcolor>$VAR[color_lib_accent]</textcolor>
			<info>ListItem.Premiered</info>
		</control>
	</include>
	
	<!-- COMMON LAYOUTS - Poster , square, circle , Landscape , Banner -->
	<!-- COMMON xyz -->
	
	<include name="WatchedIndicatorLayout">
		<top>0</top>
		<right>0</right>
    </include>
	<include name="ProgressBarOverlay">
		<control type="progress">
			<description>common</description>
			<bottom>0</bottom>
			<height>3</height>
			<visible>$EXP[IsMovie] | $EXP[IsEpisode]</visible>
			<visible>String.IsEqual(ListItem.Overlay,OverlayUnWatched.png) + ListItem.IsResumable</visible>
			<info>ListItem.PercentPlayed</info>
		</control>
		<control type="image">
			<description>compromise shows in progress 100 percent=Episodes.Count,calc percent=Episodes.Watched</description>
			<bottom>0</bottom>
			<height>3</height>
			<width>50%</width>
			<visible>[$EXP[IsSeason] | [$EXP[IsTVShow]]] + [String.IsEqual(ListItem.Overlay,OverlayUnWatched.png) + !String.IsEqual(ListItem.Property(TotalEpisodes), ListItem.Property(UnWatchedEpisodes))]</visible>
			<texture colordiffuse="$VAR[color_universalcontainer_watchedoverlay_progressbar_progress]">colors/white.png</texture>
		</control>
		<control type="image">
			<description>watched</description>
			<bottom>0</bottom>
			<height>3</height>
			<texture colordiffuse="$VAR[color_universalcontainer_watchedoverlay_progressbar_progress]">colors/white.png</texture>
			<visible>$EXP[IsMovie] | $EXP[IsEpisode] | $EXP[IsSeason] | $EXP[IsTVShow]</visible>
			<visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png) | [Integer.IsGreater(ListItem.PlayCount,0) + !ListItem.IsResumable]</visible>
		</control>
		<control type="image">
			<description>unwatched</description>
			<bottom>0</bottom>
			<height>3</height>
			<visible>false</visible>
			<texture colordiffuse="$VAR[color_universalcontainer_watchedoverlay_progressbar_remain]">colors/white.png</texture>
			<visible>$EXP[IsMovie] | $EXP[IsEpisode] | $EXP[IsSeason] | $EXP[IsTVShow]</visible>
			<visible>String.IsEqual(ListItem.Overlay,OverlayUnWatched.png) + !ListItem.IsResumable</visible>
		</control>
		<control type="progress">
			<description>pvr</description>
			<bottom>0</bottom>
			<height>3</height>
			<visible>ListItem.HasEpg</visible>
			<info>ListItem.Progress</info>
		</control>
	</include>
	
	
	<!-- CIRCLED LAYOUT Param visibility ?default params 
bottom
top-->
	<include name="ClearLogoOverlay">
		
		
		<control type="image">
			<visible>
				[!String.IsEmpty(ListItem.Art(clearlogo)) + !$EXP[IsEpisode]] | 
				[!String.IsEmpty(ListItem.Art(tvshow.clearlogo)) + $EXP[IsEpisode]] | 
				!String.IsEmpty(ListItem.Art(artist.clearlogo)) | 
				!String.IsEmpty(ListItem.Art(albumartist.clearlogo))
			</visible>
			<bottom>-70</bottom>
			<height>50%</height>
			<texture background="true">$VAR[ListItemClearLogo]</texture>
			<aspectratio align="center" aligny="center">keep</aspectratio>
		</control>
		<control type="textbox">
			<visible>
				String.IsEmpty(ListItem.Art(tvshow.clearlogo)) +
				String.IsEmpty(ListItem.Art(artist.clearlogo)) +
				String.IsEmpty(ListItem.Art(albumartist.clearlogo)) +
				String.IsEmpty(ListItem.Art(clearlogo))</visible>
			<visible>!String.IsEqual(ListItem.label,..)</visible>
			<autoscroll delay="2000" time="1500" repeat="1500">$PARAM[infotags_autoscroll]</autoscroll>
			<bottom>-70</bottom>
			<left>5</left>
			<right>5</right>
			<wrapmultiline>true</wrapmultiline>
			<height max="105">auto</height>
			<font>roboto_32_condensedbold</font>
			<align>center</align>
			<aligny>center</aligny>
			<textcolor>$VAR[color_universalcontainer_itemtag_label1_fo]</textcolor>
			<selectedcolor>white</selectedcolor>
			<label>$INFO[ListItem.Label,[B],[/B]]</label>
		</control>
	</include>
	
	<!-- ################ -->
	<!--   ARTWORK ImageLayout_$PARAM[artwork] -->
	<!-- ######### -->
	
	<!-- Artwork Thumb -->
		<!-- optional dimm thumb <animation effect="fade" start="100" end="20" time="0" condition="true">Conditional</animation> -->
		
	<include name="Fanart_Diffused">
		<param name="visible" default="true" />
		<param name="width" default="1344" />
		<param name="height" default="770" />
		<definition>
		<control type="image">
			<description>WRONG FADEOUT CONDITIONS - REVISIT</description>
			
			<visible>$PARAM[visible]</visible>
			<fadetime>350</fadetime>
			<nested />
			<top>0</top>
			<width>$PARAM[width]</width>
			<height>$PARAM[height]</height>         
			<texture background="true" diffuse="$PARAM[diffuse]">$VAR[ArtworkThumb]</texture>
			<aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
			<animation effect="zoom" start="110" end="130" center="auto" time="12000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation)">Conditional</animation>
			<animation effect="slide" start="-10,-10" end="10,10" time="8000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation)">Conditional</animation>
			<animation effect="fade" start="100" end="0" delay="200" time="800" pulse="false" condition="[Player.HasVideo + String.IsEmpty(Window(Home).Property(TrailerIsPlaying))] | [[[Window.IsActive(home) + !Skin.HasSetting(home_trailer_showwidget)] | [!Window.IsActive(home) + !Control.IsVisible(520)]] + !String.IsEmpty(Window(Home).Property(TrailerIsPlaying))]">Conditional</animation>
		</control>
		</definition>
	</include>
	
	<variable name="infopanel_fanart">
		<value condition="!String.IsEmpty(Container().ListItem.Art(keyart)) + !Skin.HasSetting(BlurEnabled)">$INFO[Container().ListItem.Art(keyart)]</value>
		<value>$VAR[ImageLayout_fanart]</value>
	</variable>
	
	 <variable name="ArtworkThumb">
		<value condition="!String.IsEmpty(ListItem.Art(animatedfanart)) + Skin.HasSetting(AnimatedFanart)">$INFO[ListItem.Art(animatedfanart)]</value>
		<value condition="Control.IsVisible(99007)">$INFO[Control.GetLabel(99007)]</value>					 
		<value condition="Control.IsVisible(99006) + !String.IsEmpty(Control.GetLabel(99006))">$INFO[Control.GetLabel(99006)]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Art(fanart))">$INFO[Container.ListItem.Art(fanart)]</value>
	</variable>
	
	<!-- ImageLayout_* overthink dbtype,studio, i use extra group - always? dont load or remove line
unsure about EpgEventIcon is what i think it is
	-->
	<variable name="ImageLayout_poster">
		<value condition="!String.IsEmpty(ListItem.Property(icon))">$INFO[ListItem.Property(icon)]</value>
		<value condition="String.IsEqual(ListItem.Label,..)">defaultfolderback.png</value>
		<value condition="String.IsEqual(ListItem.Label,$LOCALIZE[21452])">defaultaddoninputstream.png</value>
		<value condition="String.IsEqual(ListItem.Label,$LOCALIZE[20462])">defaultaddsource.png</value>
		<value condition="String.IsEqual(ListItem.dbtype,studio)">$INFO[ListItem.Label,resource://resource.images.studios.white/,.png]</value>
		<value condition="Window.IsActive(videos) + String.IsEqual(ListItem.DBTYPE,genre)">defaultgenre.png</value>
		<value condition="Window.IsActive(music) + String.IsEqual(ListItem.DBTYPE,genre)">defaultmusicgenres.png</value>
		<value condition="String.IsEqual(ListItem.dbtype,director)">defaultdirector.png</value>
		<value condition="Container.Content(years)">defaultyear.png</value>
		<value condition="Skin.HasSetting(EnableAnimatedPosters) + !String.IsEmpty(ListItem.Art(animatedposter))">$INFO[ListItem.Art(animatedposter)]</value>
		<value condition="String.StartsWith(ListItem.Label,* ) + !String.IsEmpty(Container.Art(poster))">$INFO[Container.Art(poster)]</value>
		<value condition="String.StartsWith(ListItem.Label,* ) + !String.IsEmpty(Container.Art(thumb))">$INFO[Container.Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="String.IsEmpty(listitem.art(thumb)) + String.IsEqual(listitem.dbtype,artist) + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
			<value condition="Window.IsActive(pvrguideinfo) + !String.IsEmpty(ListItem.EpgEventIcon)">$INFO[ListItem.EpgEventIcon]</value>
		<value condition="Window.IsActive(pvrguideinfo)">$VAR[ChannelStudio_Icon]</value>
		<value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
	</variable>
	
	<variable name="ImageLayout_fanart">
		<value condition="!String.IsEmpty(ListItem.Property(icon))">$INFO[ListItem.Property(icon)]</value>
		<value condition="String.IsEqual(ListItem.Label,..)">defaultfolderback.png</value>
		<value condition="String.IsEqual(ListItem.Label,$LOCALIZE[21452])">defaultaddoninputstream.png</value>
		<value condition="String.IsEqual(ListItem.Label,$LOCALIZE[20462])">defaultaddsource.png</value>
		<value condition="String.IsEqual(ListItem.dbtype,studio)">$INFO[ListItem.Label,resource://resource.images.studios.white/,.png]</value>
		<value condition="Window.IsActive(videos) + String.IsEqual(ListItem.DBTYPE,genre)">defaultgenre.png</value>
		<value condition="Window.IsActive(music) + String.IsEqual(ListItem.DBTYPE,genre)">defaultmusicgenres.png</value>
		<value condition="String.IsEqual(ListItem.dbtype,director)">defaultdirector.png</value>
		<value condition="Container.Content(years)">defaultyear.png</value>
		<value condition="String.StartsWith(ListItem.Label,* ) + !String.IsEmpty(Container.Art(fanart))">$INFO[Container.Art(fanart)]</value>
		<value condition="String.StartsWith(ListItem.Label,* ) + !String.IsEmpty(Container.Art(landscape))">$INFO[Container.Art(landscape)]</value>
		<value condition="[[$EXP[IsEpisode]] | [$EXP[IsAlbum]] | [$EXP[IsSong]] | String.Contains(ListItem.Path,youtube)] + !String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
		<value condition="[$EXP[IsSeason]] + [!String.IsEmpty(ListItem.Art(fanart)) + !String.IsEqual(ListItem.Art(tvshow.fanart), ListItem.Art(fanart))]">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(animatedfanart)) + Skin.HasSetting(PreferAnimatedFanart)">$INFO[ListItem.Art(animatedfanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(season.fanart))">$INFO[ListItem.Art(season.fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.fanart))">$INFO[ListItem.Art(tvshow.fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
    </variable>
	
	<variable name="ImageLayout_circle">
		<value>$VAR[ImageLayout_fanart]</value>
    </variable>
	
	<variable name="ImageLayout_landscape">
		<value condition="!String.IsEmpty(ListItem.Property(icon))">$INFO[ListItem.Property(icon)]</value>
		<value condition="String.IsEqual(ListItem.Label,..)">defaultfolderback.png</value>
		<value condition="String.IsEqual(ListItem.Label,$LOCALIZE[21452])">defaultaddoninputstream.png</value>
		<value condition="String.IsEqual(ListItem.Label,$LOCALIZE[20462])">defaultaddsource.png</value>
		<value condition="String.IsEqual(ListItem.dbtype,studio)">$INFO[ListItem.Label,resource://resource.images.studios.white/,.png]</value>
		<value condition="Window.IsActive(videos) + String.IsEqual(ListItem.DBTYPE,genre)">defaultgenre.png</value>
		<value condition="Window.IsActive(music) + String.IsEqual(ListItem.DBTYPE,genre)">defaultmusicgenres.png</value>
		<value condition="String.IsEqual(ListItem.dbtype,director)">defaultdirector.png</value>
		<value condition="Container.Content(years)">defaultyear.png</value>
		<value condition="String.IsEqual(ListItem.Art(thumb),OverlaySpoiler.png) + !String.IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
		<value condition="String.IsEqual(ListItem.Art(thumb),OverlaySpoiler.png) + !String.IsEmpty(ListItem.Art(tvshow.fanart))">$INFO[ListItem.Art(tvshow.fanart)]</value>
		<value condition="String.StartsWith(ListItem.Label,* ) + !String.IsEmpty(Container.Art(landscape))">$INFO[Container.Art(landscape)]</value>
		<value condition="String.StartsWith(ListItem.Label,* ) + !String.IsEmpty(Container.Art(fanart))">$INFO[Container.Art(fanart)]</value>
		<value condition="String.StartsWith(ListItem.Label,* ) + !String.IsEmpty(Container.Art(thumb))">$INFO[Container.Art(thumb)]</value>
		<value condition="[[$EXP[IsEpisode]] | [$EXP[IsAlbum]] | [$EXP[IsSong]] | String.Contains(ListItem.Path,youtube)] + !String.IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
		<value condition="[$EXP[IsSeason]] + [!String.IsEmpty(ListItem.Art(landscape)) + !String.IsEqual(ListItem.Art(tvshow.landscape), ListItem.Art(landscape))]">$INFO[ListItem.Art(landscape)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(animatedfanart)) + Skin.HasSetting(PreferAnimatedFanart)">$INFO[ListItem.Art(animatedfanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(season.landscape))">$INFO[ListItem.Art(season.landscape)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value condition="String.IsEmpty(ListItem.Art(landscape))">$VAR[ImageLayout_fanart]</value>
	</variable>
	
	<variable name="ImageLayout_banner">
		<value condition="!String.IsEmpty(ListItem.Property(icon))">$INFO[ListItem.Property(icon)]</value>
		<value condition="String.IsEqual(ListItem.Label,..)">defaultfolderback.png</value>
		<value condition="String.IsEqual(ListItem.Label,$LOCALIZE[21452])">defaultaddoninputstream.png</value>
		<value condition="String.IsEqual(ListItem.Label,$LOCALIZE[20462])">defaultaddsource.png</value>
		<value condition="String.IsEqual(ListItem.dbtype,studio)">$INFO[ListItem.Label,resource://resource.images.studios.white/,.png]</value>
		<value condition="Window.IsActive(videos) + String.IsEqual(ListItem.DBTYPE,genre)">defaultgenre.png</value>
		<value condition="Window.IsActive(music) + String.IsEqual(ListItem.DBTYPE,genre)">defaultmusicgenres.png</value>
		<value condition="String.IsEqual(ListItem.dbtype,director)">defaultdirector.png</value>
		<value condition="Container.Content(years)">defaultyear.png</value>
		<value condition="String.StartsWith(ListItem.Label,* ) + !String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value condition="String.StartsWith(ListItem.Label,* ) + !String.IsEmpty(Container.Art(landscape))">$INFO[Container.Art(landscape)]</value>
		<value condition="String.StartsWith(ListItem.Label,* ) + !String.IsEmpty(Container.Art(fanart))">$INFO[Container.Art(fanart)]</value>
		<value condition="String.StartsWith(ListItem.Label,* ) + !String.IsEmpty(Container.Art(thumb))">$INFO[Container.Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(artist.banner))">$INFO[ListItem.Art(artist.banner)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(albumartist.banner))">$INFO[ListItem.Art(albumartist.banner)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(thumb)) + String.IsEqual(ListItem.dbtype,episode)">$INFO[ListItem.Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(artist.fanart))">$INFO[ListItem.Art(artist.fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(albumartist.fanart))">$INFO[ListItem.Art(albumartist.fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.fanart))">$INFO[ListItem.Art(tvshow.fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(season.fanart))">$INFO[ListItem.Art(season.fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="String.IsEmpty(ListItem.Art(banner))">$VAR[ImageLayout_landscape]</value>
	</variable>
	
	<variable name="ImageLayout_square">
	  <value>$VAR[ImageLayout_poster]</value>
    </variable>
	
	<variable name="ImageLayout_thumb">
		<value>$VAR[ImageLayout_poster]</value>
	</variable>
	
</includes>
