<?xml version="1.0" encoding="utf-8"?>
<includes>
	<include name="temp_spotlight_infofade">
		<param name="fade_end" default="0" />
		<definition>
			<animation effect="fade" start="100" end="$PARAM[fade_end]" time="350" easing="inout" reversible="true" condition="!String.IsEmpty(Window.Property(Spotlight_Sets)) + [Container(50350).IsUpdating | Integer.IsGreater(Container(50350).NumItems,0)]">conditional</animation>
		</definition>
	</include>
	
	<variable name="SetLabel">
		<value condition="!String.IsEmpty(ListItem.Set)">$INFO[ListItem.Set]</value>
		<value>$INFO[Container(503).ListItem.Label]</value>
	</variable>
		<!-- <label>$INFO[Container(503).ListItem.Label]</label> -->
					
	<!-- skinsetting view_options in mind / to do
	
		503/504 - overrdie default focus, use fixedframe - low prio, may not do it
		503/504 - behaviour of spotlight icon bar , curr disabled, and unadjusted - need for touch device
		503/504 - adjust anim / header usage
				- add similiar content ?
				- resolve navigation onup trailer vs focus filter ctrl
				- ondown options 
					- 1st focus scollbar/alphabet bar, before going to custom containers / show cast
					- ondown - a) focus  nextup/folderpath/*similiar instead just show cast
							   b) just show cast first, click down again to focus containers (current default behaviour)
							   c) go to nextup/folderpath/*similiar content without show cast


   - NEED RESOLVE NAV/CONTAINER CONDS ISSUES UF USING PLUGIN, ESPECIALLY  IF MIXED CONTENT 

		504 - multirow, single row
	-->
	<!-- goal is use just one include - for spotlight views
		<include content="spotlight_layout">
			<param name="spotlight_artwork_visible_right" value="[!Skin.HasSetting(View503_fanart_left) + Control.IsVisible(503)] | [!Skin.HasSetting(View504_fanart_left) + Control.IsVisible(504)]" />	
			<param name="spotlight_artwork_visible_left" value="[Skin.HasSetting(View503_fanart_left) + Control.IsVisible(503)] | [Skin.HasSetting(View504_fanart_left) + Control.IsVisible(504)]" />	
			<param name="info_visible_left" value="[!Skin.HasSetting(View503_fanart_left) + Control.IsVisible(503)] | [!Skin.HasSetting(View504_fanart_left) + Control.IsVisible(504)]" />
			<param name="info_visible_right" value="[Skin.HasSetting(View503_fanart_left) + Control.IsVisible(503)] | [Skin.HasSetting(View504_fanart_left) + Control.IsVisible(504)]" />
			<param name="info_plot_hidden" value="[Skin.HasSetting(View503_hideplot) + Control.IsVisible(503)] | [Skin.HasSetting(View504_hideplot) + Control.IsVisible(504)]" />
			<param name="metadata_align_left" value="[Skin.HasSetting(View503_metadata_align_left) + Control.IsVisible(503)] | [Skin.HasSetting(View504_metadata_align_left) + Control.IsVisible(504)]" />
			<param name="metadata_align_center" value="[Skin.HasSetting(View503_metadata_align_center) + Control.IsVisible(503)] | [Skin.HasSetting(View504_metadata_align_center) + Control.IsVisible(504)]" />
			<param name="metadata_align_right" value="[Skin.HasSetting(View503_metadata_align_right) + Control.IsVisible(503)] | [Skin.HasSetting(View504_metadata_align_right) + Control.IsVisible(504)]" />
		</include>
	-->
	<!-- footer - diff color and image 
				
				own panel color hardcoded - later use 1a ~ 10% alpha - color_spotlightlib_main - need var
				own footer item(icon/label) color? media/rating - flag
				
				<param name="bottom" value="460" /> match genre line 
				
				<param name="footer_bg_color" value="1affffff" />
					<param name="footer_bg_color" value="white" />
				1affffff
				2affffff	
						vs $VAR[color_spotlightlib_main], like to avoid another custom color
	-->
	
	<include name="view503">
		<control type="group">
			<visible>Control.IsVisible(503)</visible>
		<!-- just testing	<animation effect="fade" start="100" end="30" time="350" easing="inout" reversible="true" condition="!String.IsEmpty(Window.Property(Spotlight_Sets)) | !String.IsEmpty(Window.Property(Spotlight_Nextup))">conditional</animation> -->
			
		<!-- future	first fade	30	<animation effect="fade" start="100" end="30" time="350" easing="inout" reversible="true" condition="!String.IsEmpty(Window.Property(Spotlight_Sets)) | !String.IsEmpty(Window.Property(Spotlight_Nextup))">conditional</animation> -->
	<!-- future	third fade	0	<animation effect="fade" start="100" end="30" time="350" easing="inout" reversible="true" condition="!String.IsEmpty(Window.Property(Spotlight_Sets)) | !String.IsEmpty(Window.Property(Spotlight_Nextup))">conditional</animation> -->
		
		wished - slide info, fade just artwork if needed
1affffff
				<include content="spotlight_layout">
					<param name="spotlight_artwork_visible_right" value="!Skin.HasSetting(View503_fanart_left) + Control.IsVisible(503)" />	
					<param name="spotlight_artwork_visible_left" value="Skin.HasSetting(View503_fanart_left) + Control.IsVisible(503)" />	
					<param name="info_visible_left" value="!Skin.HasSetting(View503_fanart_left)" />
					<param name="info_visible_right" value="Skin.HasSetting(View503_fanart_left)" />
					<param name="info_plot_hidden" value="Skin.HasSetting(View503_hideplot)" />
					<param name="metadata_align_left" value="Skin.HasSetting(View503_metadata_align_left)" />
					<param name="metadata_align_center" value="Skin.HasSetting(View503_metadata_align_center)" />
					<param name="metadata_align_right" value="Skin.HasSetting(View503_metadata_align_right)" />
				</include>
				
				<include content="footer">
					<param name="view_id" value="503" />
					<param name="bottom" value="380" />
					<param name="use_bgpanel" value="true" />
					<!-- <param name="footer_bg_image" value="diffuse/gradientleft.png" /> -->
					<param name="footer_bg_color" value="2affffff" />
					<param name="footer_mediaflag_offsetleft" value="350" />
					<param name="footer_rating_offsetright" value="70" />
					
					temp solution
					<!-- <animation effect="fade" start="100" end="0" time="250" easing="inout" reversible="true" condition="Control.HasFocus(610)">conditional</animation> -->
				
				</include>
				
		</control>
		<control type="group">
			<visible>Control.IsVisible(503)</visible>
			
				<animation effect="slide" start="0,0" end="0,-500" time="350" easing="inout" reversible="true" condition="!String.IsEmpty(Window.Property(Spotlight_Sets)) | !String.IsEmpty(Window.Property(Spotlight_Nextup))">conditional</animation>
				
				<control type="label">
					<description>item heading</description>
					<visible>String.IsEmpty(Window.Property(Spotlight_Sets))</visible>
					<label>$INFO[Container.Content]</label>
					<left>110</left>
					<bottom>340</bottom>
					<height>100</height>
					<!-- <align>center</align> -->
					<!-- <textcolor>$VAR[color_spotlightlib_main]</textcolor> -->
					<!-- <textcolor>99777777</textcolor> -->
					<textcolor>99181818</textcolor>
					<align>left</align>
					<font>Montserrat_ExtraBold_40</font>
					<aligny>top</aligny>
				</control>
				<control type="image">
					<visible>false</visible>
					<visible>Control.HasFocus(50352) | Control.HasFocus(50353)</visible>
					<bottom>300</bottom>
					<height>100</height>
					<colordiffuse>ffffffff</colordiffuse>
					<!-- <texture>colors/white.png</texture> -->
					<texture>diffuse/gradientleftsoft.png</texture>
				</control>
				<control type="label">
					<!-- <visible>!String.IsEmpty(Window.Property(Spotlight_Cast)) | [Control.HasFocus(50352) | Control.HasFocus(50353)]</visible> -->
					<visible>!String.IsEmpty(Window.Property(Spotlight_Cast))</visible>
					<label>$LOCALIZE[206]</label>
					<description>item heading</description>
					<left>400</left>
					<bottom>340</bottom>
					<height>100</height>
					<!-- <align>center</align> -->
					<!-- <textcolor>$VAR[color_spotlightlib_main]</textcolor> -->
					<!-- <textcolor>99777777</textcolor> -->
					<textcolor>99181818</textcolor>
					<align>left</align>
					<font>Montserrat_ExtraBold_40</font>
					<aligny>top</aligny>
				</control>
				
				<control type="label">
					<visible>!String.IsEmpty(Window.Property(Spotlight_Sets)) + ![Container.Content(tvshows) | Container.Content(seasons)]</visible>
					<description>item heading  + !String.IsEmpty(ListItem.SetId)</description>
					<!-- <label>$INFO[Container(503).ListItem.Label]</label> -->
					<label>$VAR[SetLabel]</label>
					<left>100</left>
					<bottom>-160</bottom>
					<height>100</height>
					<!-- <align>center</align> -->
					<!-- <textcolor>$VAR[color_spotlightlib_main]</textcolor> -->
					<!-- <textcolor>99777777</textcolor> -->
					<textcolor>99181818</textcolor>
					<align>left</align>
					<font>Montserrat_ExtraBold_40</font>
					<aligny>top</aligny>
				</control>
				<control type="label">
					<visible>!String.IsEmpty(Window.Property(Spotlight_Sets)) + Container.Content(tvshows)</visible>
					<description>item heading</description>
					<label>$LOCALIZE[33054]</label>
					<!-- <left>100</left> -->
					<left>800</left>
					<bottom>-160</bottom>
					<height>100</height>
					<!-- <align>center</align> -->
					<!-- <textcolor>$VAR[color_spotlightlib_main]</textcolor> -->
					<!-- <textcolor>99777777</textcolor> -->
					<textcolor>99181818</textcolor>
					<align>left</align>
					<font>Montserrat_ExtraBold_40</font>
					<aligny>top</aligny>
				</control>
				<control type="label">
					<visible>!String.IsEmpty(Window.Property(Spotlight_Sets)) + [Container.Content(tvshows) | Container.Content(seasons)]</visible>
					<description>item heading</description>
					<label>Weiterschauen</label>
					<left>100</left>
					<bottom>-160</bottom>
					<height>100</height>
					<!-- <align>center</align> -->
					<!-- <textcolor>$VAR[color_spotlightlib_main]</textcolor> -->
					<!-- <textcolor>99777777</textcolor> -->
					<textcolor>99181818</textcolor>
					<align>left</align>
					<font>Montserrat_ExtraBold_40</font>
					<aligny>top</aligny>
				</control>
			
			
			<control type="fixedlist" id="503">
				
		<!-- test		<animation effect="slide" start="0,0" end="0,-80" time="250" easing="inout" reversible="true" condition="Control.HasFocus(610)">conditional</animation> -->
				<!-- <animation effect="zoom" start="75" end="100" time="250" center="10%,200%" condition="!Control.HasFocus(610)">Conditional</animation> -->
					
				
				<viewtype label="netflixposter">netflixposter list</viewtype>
				<focusposition>1</focusposition>
				<orientation>horizontal</orientation>
				<preloaditems>4</preloaditems>
				<scrolltime tween="quadratic">400</scrolltime>
				<pagecontrol>61</pagecontrol>
				<left>100</left>
				<right>0</right>
				<bottom>0</bottom>
				<height>370</height>
				<visible>!Container.Content(episodes)</visible>
				
					<animation effect="slide" start="0,0" end="-200,0" time="250" easing="inout" reversible="true" condition="!String.IsEmpty(Window.Property(Spotlight_Cast)) + String.IsEmpty(Window.Property(Spotlight_Sets))">conditional</animation>
					<animation effect="fade" start="100" end="0" time="250" easing="inout" reversible="true" condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">conditional</animation>
				
					
				list all onup up shit
				<!-- scrollbars -->
						<onup condition="Control.IsVisible(61)">61</onup>
						<onup condition="!Control.IsVisible(61) + Control.IsVisible(610)">610</onup>
					
				<!-- trailer if no scrollbars -->
						<onup condition="$EXP[Has_Trailer] + [!Control.IsVisible(61) + !Control.IsVisible(610)]">PlayMedia($INFO[Window(home).Property(listitemtrailer)],1)</onup>
						<onup condition="$EXP[Has_Trailer] + [!Control.IsVisible(61) + !Control.IsVisible(610)]">SetProperty(TrailerIsPlaying,true,home)</onup>
						<onup condition="$EXP[Has_Trailer] + [!Control.IsVisible(61) + !Control.IsVisible(610)] + String.IsEmpty(Window.Property(Spotlight_Cast))">SetProperty(Spotlight_Cast,visible)</onup>
					 
				<!-- filter if no scrollbars + no trilers-->
						<onup condition="!$EXP[Has_Trailer] + [!Control.IsVisible(610) + !Control.IsVisible(61)] + Control.IsVisible(19)">19</onup>
					 
				list all ondown up shit		
					
				<!-- show cast if disabled-->
					<ondown condition="!Control.IsVisible(6000) + String.IsEmpty(Window.Property(Spotlight_Cast))">SetProperty(Spotlight_Cast,visible)</ondown>
				<!-- disable cast if not folder item + cast showing-->
					<ondown condition="!Control.IsVisible(6000) + [!String.IsEmpty(Window.Property(Spotlight_Cast)) + [!String.IsEqual(ListItem.dbtype,set) | !String.IsEqual(ListItem.dbtype,tvshow)]]">ClearProperty(Spotlight_Cast)</ondown>
							
							<!-- 
								focus container if season + not plugin
										<ondown condition="!Control.IsVisible(6000) + [!String.StartsWith(container.folderpath,plugin) + String.IsEqual(ListItem.dbtype,tvshow)]">SetFocus(50352,0,absolute)</ondown>
								
								if set enable cast before focus folder items
										<ondown condition="!Control.IsVisible(6000) + [!String.StartsWith(container.folderpath,plugin) + !String.IsEmpty(Window.Property(Spotlight_Cast)) + [String.IsEqual(ListItem.dbtype,set) | !String.IsEmpty(ListItem.SetId)]]">SetFocus(50352,0,absolute)</ondown>
							 -->
					 
					 
				<!-- focus folder content if show,set(item) -->
				<ondown condition="!Control.IsVisible(6000) + Control.IsVisible(50352) + !String.StartsWith(container.folderpath,plugin) + [String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,set) | !String.IsEmpty(ListItem.SetId)]">SetFocus(50352,0,absolute)</ondown>
				
				
				
				<!-- slide menu out of window -->
				<onfocus condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">ClearProperty(menucontrol_active,home)</onfocus>
				<!-- focus premnu icon bar -->
				<onleft condition="Control.IsVisible(8999)">8999</onleft>
				<!-- focus view option indicator bar ? or remove entirely -->
				<ondown condition="Control.IsVisible(6000)">6000</ondown>
				
				<itemlayout height="350" width="202">
					<control type="group">
					<animation effect="fade" start="100" end="0" time="250" condition="!String.IsEmpty(Window.Property(Spotlight_Cast)) | !String.IsEmpty(Window(home).Property(TrailerIsPlaying))">conditional</animation>
					
						<width>200</width>
						<height>282</height>
						<include content="UniversalLayout">
							<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_nf]" />
							<param name="artwork" value="poster" />
							<param name="get_tags" value="!Skin.HasSetting(View_503_DisableTags)" />
							<param name="get_tagbgpanel" value="!Skin.HasSetting(View_503_DisableTags)" />
							<param name="autoscroll" value="false" />
							<param name="bordersize_bg" value="6" />
							<param name="bottompanelcolor" value="$VAR[color_spotlightlib_itemframe_nf]" />
							<param name="bottomtaglabelcolor" value="$VAR[color_spotlightlib_secondary]" />
							<param name="bottomtaglabel2color" value="$VAR[color_spotlightlib_secondary]" />
							<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | Skin.HasSetting(View_503_DisableTags)" />
							<param name="conditional_artworkdiffuse_override" value="Skin.HasTheme(Roundedge) + !Skin.HasSetting(View_503_DisableTags)" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout height="350" width="202">
					<include content="SetPropOnFocus_HiddenButton">
						<onunfocus condition="!String.IsEmpty(Window.Property(Spotlight_Cast))">ClearProperty(Spotlight_Cast)</onunfocus>
					</include>
					<control type="group">
						<width>200</width>
						<height>282</height>
						<description>to avoid relaod skin on disable footer and avoid bottom offset fade out 3rd row of items</description>
						<include>Animation_Item_Focus</include>
						<control type="group">
							<include content="UniversalLayout">
								<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_fo]" />
								<param name="artwork" value="poster" />
								<param name="get_tags" value="!Skin.HasSetting(View_503_DisableTags)" />
								<param name="get_tagbgpanel" value="!Skin.HasSetting(View_503_DisableTags)" />
								<param name="autoscroll" value="true" />
								<param name="bordersize_bg" value="4" />
								<param name="bottompanelcolor" value="$VAR[color_spotlightlib_itemframe_fo]" />
								<param name="bottomtaglabelcolor" value="$VAR[color_spotlightlib_background_layer1]" />
								<param name="bottomtaglabel2color" value="$VAR[color_spotlightlib_background_layer1]" />
								<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | Skin.HasSetting(View_503_DisableTags)" />
								<param name="conditional_artworkdiffuse_override" value="Skin.HasTheme(Roundedge) + !Skin.HasSetting(View_503_DisableTags)" />
							</include>
							<control type="group">
								<visible>!Skin.HasSetting(View_503_DisableTags)</visible>
								<include content="FocusOverlay">
									<param name="diffusedimtext" value="artworkdiffuse/usebganel/poster.png" />
								</include>
							</control>
							<control type="group">
								<visible>Skin.HasSetting(View_503_DisableTags)</visible>
								<include content="FocusOverlay">
									<param name="diffusedimtext" value="artworkdiffuse/poster.png" />
								</include>
							</control>
						</control>
					</control>
				</focusedlayout>
			</control>
		
		
		
			<control type="panel" id="50350">
				<animation effect="slide" start="0,0" end="0,-350" time="350" tween="cubic" condition="!String.IsEmpty(Window.Property(Spotlight_Cast)) | !String.IsEmpty(Window.Property(Spotlight_Sets))">conditional</animation>
				<animation effect="slide" start="0,0" end="-300,100" time="350" tween="cubic" condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">conditional</animation>
				<animation effect="fade" start="0" end="100" time="450" tween="cubic" condition="!String.IsEmpty(Window.Property(Spotlight_Cast)) | !String.IsEmpty(Window.Property(Spotlight_Sets))">conditional</animation>
				
				
				<bottom>-400</bottom>
				<left>400</left>
				<height>400</height>
				<width>200%</width>
				<scrolltime tween="quadratic">400</scrolltime>
				<include>Action_CastMemberSearchForceOption</include>
				<onback>SetFocus(50)</onback>
				<onback>ClearProperty(Spotlight_Sets)</onback>
				<onback>ClearProperty(Spotlight_Cast)</onback>
				<preloaditems>2</preloaditems>
				<orientation>horizontal</orientation>
				
				<onfocus condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">ClearProperty(menucontrol_active,home)</onfocus>
				<itemlayout height="380" width="230">
					<control type="group">
						<height>202</height>
						<width>202</width>
						<control type="group">
							<visible>!String.IsEqual(Container(503).ListItem.Art(thumb), Container(503).ListItem.Art(thumb))</visible>
						
							<include content="Circle_CastWidget">
								<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_nf]" />
								<param name="autoscroll" value="false" />
								<param name="bordersize_bg" value="6" />
							</include>
						</control>
						
						<control type="image">
							<visible>String.IsEqual(Container(503).ListItem.Art(thumb), Container(503).ListItem.Art(thumb))</visible>
							<texture>$INFO[ListItem.thumb]</texture>
						</control>
					</control>
				</itemlayout>
				<focusedlayout height="380" width="230">
					<control type="group">
						<height>220</height>
						<width>220</width>
						<include>Animation_Item_Focus</include>
						<control type="group">
							<visible>!String.IsEqual(Container(503).ListItem.Art(thumb), Container(503).ListItem.Art(thumb))</visible>
						
							<include content="Circle_CastWidget">
								<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_nf]" />
								<param name="autoscroll" value="false" />
								<param name="bordersize_bg" value="6" />
							</include>
						</control>
						
						<!-- 
						<control type="image">
							<description>use poster layout template</description>
							<visible>!Window.IsActive(busydialog)</visible>
							<visible>String.IsEqual(Container(503).ListItem.Art(thumb), Container(503).ListItem.Art(thumb))</visible>
							<texture>$INFO[Container(503).ListItem.Art(thumb)]</texture>
						</control>
						-->
					</control>
				</focusedlayout>
				<!-- use when focus enabled
				<content>
					<item>
						<thumb>$INFO[Container(503).ListItem.Art(thumb)]</thumb>
					</item>
				</content>
				-->
				<content>$VAR[content_cast]</content>
			</control>
			
			<control type="panel" id="50352">
				<animation effect="slide" start="0,0" end="0,-300" time="350" tween="cubic" condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">conditional</animation>
				<!-- <visible>Container(50352).IsUpdating | Integer.IsGreater(Container(50352).NumItems,0)</visible> -->
				<bottom>-830</bottom>
				<left>100</left>
				<onfocus>SetProperty(Spotlight_Sets,true)</onfocus>
				<orientation>horizontal</orientation>
				<height>400</height>
				<preloaditems>2</preloaditems>
				<scrolltime tween="quadratic">400</scrolltime>
				
				<onback>SetFocus(50)</onback>
				<onback>ClearProperty(Spotlight_Sets)</onback>
				<onback>ClearProperty(Spotlight_Cast)</onback>
				
				<onup>ClearProperty(Spotlight_Sets)</onup>
				<onup>ClearProperty(Spotlight_Cast)</onup>
				<onup>503</onup>
				
				<ondown>ClearProperty(Spotlight_Sets)</ondown>
				<ondown>ClearProperty(Spotlight_Cast)</ondown>
				<ondown>503</ondown>
				
				<onleft condition="Control.IsVisible(50353)">50353</onleft>
				<onleft condition="Control.IsVisible(8999)">8999</onleft>
				
				<onright contition="Control.IsVisible(50353)">50353</onright>
				<onright contition="!Control.IsVisible(50353)">50352</onright>
				
				<!-- testing
				w600 vs w500
				-->
				<!-- may use template5077 in generel - just adjust labels n size -->
				<onfocus condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">ClearProperty(menucontrol_active,home)</onfocus>
				<itemlayout height="355" width="600" condition="String.Contains(Container.FolderPath,/tvshows)">
					<include content="template5077">
						<param name="is_focused" value="false" />
					</include>
				</itemlayout>
				<focusedlayout height="355" width="600" condition="String.Contains(Container.FolderPath,/tvshows)">
					
					<!-- <control type="button">
						
						<onfocus condition="String.IsEmpty(Window.Property(autoplayepisode))">PlayMedia($INFO[Container(50352).ListItem.FilenameAndPath],1,resume)</onfocus>
						<onfocus condition="String.IsEmpty(Window.Property(autoplayepisode))">SetProperty(autoplayepisode,1)</onfocus>
					
					</control> -->
					<include content="template5077">
						<param name="is_focused" value="true" />
					</include>
				</focusedlayout>
				<itemlayout height="350" width="202" condition="!String.Contains(Container.FolderPath,/tvshows)">
					<control type="group">
					<!-- <animation effect="fade" start="100" end="0" time="350" condition="!String.IsEmpty(Window.Property(Spotlight_Cast)) | !String.IsEmpty(Window(home).Property(TrailerIsPlaying))">conditional</animation> -->
					
						<width>200</width>
						<height>282</height>
						<include content="UniversalLayout">
							<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_nf]" />
							<param name="artwork" value="poster" />
							<param name="get_tags" value="true" />
							<param name="get_tagbgpanel" value="true" />
							<param name="autoscroll" value="false" />
							<param name="bordersize_bg" value="6" />
							<param name="bottompanelcolor" value="$VAR[color_spotlightlib_itemframe_nf]" />
							<param name="bottomtaglabelcolor" value="$VAR[color_spotlightlib_secondary]" />
							<param name="bottomtaglabel2color" value="$VAR[color_spotlightlib_secondary]" />
							<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | Skin.HasSetting(View_503_DisableTags)" />
							<param name="conditional_artworkdiffuse_override" value="Skin.HasTheme(Roundedge) + !Skin.HasSetting(View_503_DisableTags)" />
						</include>
					</control>
				</itemlayout>
				
				
				<focusedlayout height="350" width="202" condition="!String.Contains(Container.FolderPath,/tvshows)">
					<include content="SetPropOnFocus_HiddenButton">
						<onunfocus condition="!String.IsEmpty(Window.Property(Spotlight_Cast))">ClearProperty(Spotlight_Cast)</onunfocus>
					</include>
					<control type="group">
						<width>200</width>
						<height>282</height>
						<description>to avoid relaod skin on disable footer and avoid bottom offset fade out 3rd row of items</description>
						<include>Animation_Item_Focus</include>
						<control type="group">
							<include content="UniversalLayout">
								<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_fo]" />
								<param name="artwork" value="poster" />
								<param name="get_tags" value="true" />
								<param name="get_tagbgpanel" value="true" />
								<param name="autoscroll" value="true" />
								<param name="bordersize_bg" value="4" />
								<param name="bottompanelcolor" value="$VAR[color_spotlightlib_itemframe_fo]" />
								<param name="bottomtaglabelcolor" value="$VAR[color_spotlightlib_background_layer1]" />
								<param name="bottomtaglabel2color" value="$VAR[color_spotlightlib_background_layer1]" />
								<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | Skin.HasSetting(View_503_DisableTags)" />
								<param name="conditional_artworkdiffuse_override" value="Skin.HasTheme(Roundedge) + !Skin.HasSetting(View_503_DisableTags)" />
							</include>
							<include content="FocusOverlay">
								<param name="diffusedimtext" value="artworkdiffuse/usebganel/poster.png" />
							</include>
						</control>
					</control>
				</focusedlayout>
				
				<include condition="String.Contains(Container.FolderPath,/tvshows)" content="50352_content">
					<param name="sortby" value="playcount" />
					<param name="content" value="$VAR[View503_NextUp]" />
					<param name="limit" value="1" />
				</include>
				<include condition="!String.Contains(Container.FolderPath,/tvshows)" content="50352_content">
					<param name="sortby" value="year" />
					<param name="content" value="$VAR[View_503_Folderpath]" />
					<param name="limit" value="" />
				</include>
				
			</control>
			
			<control description="seasons" type="panel" id="50353">
				<animation effect="slide" start="0,0" end="0,-300" time="350" tween="cubic" condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">conditional</animation>
				<visible>Container.Content(tvshows)</visible>
				<bottom>-830</bottom>
				<left>800</left>
				<onfocus>SetProperty(Spotlight_Sets,true)</onfocus>
				<orientation>horizontal</orientation>
					
				<height>400</height>
				<onback>SetFocus(50)</onback>
				<preloaditems>2</preloaditems>
				<scrolltime tween="quadratic">400</scrolltime>
			
				<onup>ClearProperty(Spotlight_Sets)</onup>
				<onup>503</onup>
				
				<ondown>ClearProperty(Spotlight_Sets)</ondown>
				<ondown>503</ondown>
				
				<onleft>50352</onleft>
				<onright>50352</onright>
				<onfocus condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">ClearProperty(menucontrol_active,home)</onfocus>
				<itemlayout height="350" width="202">
					<control type="group">
					<!-- <animation effect="fade" start="100" end="0" time="350" condition="!String.IsEmpty(Window.Property(Spotlight_Cast)) | !String.IsEmpty(Window(home).Property(TrailerIsPlaying))">conditional</animation> -->
					
						<width>200</width>
						<height>282</height>
						<include content="UniversalLayout">
							<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_nf]" />
							<param name="artwork" value="poster" />
							<param name="get_tags" value="true" />
							<param name="get_tagbgpanel" value="true" />
							<param name="autoscroll" value="false" />
							<param name="bordersize_bg" value="6" />
							<param name="bottompanelcolor" value="$VAR[color_spotlightlib_itemframe_nf]" />
							<param name="bottomtaglabelcolor" value="$VAR[color_spotlightlib_secondary]" />
							<param name="bottomtaglabel2color" value="$VAR[color_spotlightlib_secondary]" />
							<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | Skin.HasSetting(View_503_DisableTags)" />
							<param name="conditional_artworkdiffuse_override" value="Skin.HasTheme(Roundedge) + !Skin.HasSetting(View_503_DisableTags)" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout height="350" width="202">
					<include content="SetPropOnFocus_HiddenButton">
						<onunfocus condition="!String.IsEmpty(Window.Property(Spotlight_Cast))">ClearProperty(Spotlight_Cast)</onunfocus>
					</include>
					<control type="group">
						<width>200</width>
						<height>282</height>
						<description>to avoid relaod skin on disable footer and avoid bottom offset fade out 3rd row of items</description>
						<include>Animation_Item_Focus</include>
						<control type="group">
							<include content="UniversalLayout">
								<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_fo]" />
								<param name="artwork" value="poster" />
								<param name="get_tags" value="true" />
								<param name="get_tagbgpanel" value="true" />
								<param name="autoscroll" value="true" />
								<param name="bordersize_bg" value="4" />
								<param name="bottompanelcolor" value="$VAR[color_spotlightlib_itemframe_fo]" />
								<param name="bottomtaglabelcolor" value="$VAR[color_spotlightlib_background_layer1]" />
								<param name="bottomtaglabel2color" value="$VAR[color_spotlightlib_background_layer1]" />
								<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | Skin.HasSetting(View_503_DisableTags)" />
								<param name="conditional_artworkdiffuse_override" value="Skin.HasTheme(Roundedge) + !Skin.HasSetting(View_503_DisableTags)" />
							</include>
							<include content="FocusOverlay">
								<param name="diffusedimtext" value="artworkdiffuse/usebganel/poster.png" />
							</include>
						</control>
					</control>
				</focusedlayout>
				<content sortby="year" target="videos">$VAR[View_503_Folderpath]</content>
			</control>
				
		</control>
		
		
		
		
		<include content="spotlight_buttongroup_hor" />
		<!-- unhappy but maybe needed and practicable for people without a menu button ?? -->
		
		
		
	</include>
	<include name="50352_content">
		<content sortby="$PARAM[sortby]" limit="$PARAM[limit]">$PARAM[content]</content>
	</include>
	<variable name="View503_NextUp">
		<value condition="[Control.IsVisible(503) + Container.Content(tvshows)] + !String.IsEmpty(Container(503).ListItem.dbid)">videodb://inprogresstvshows/$INFO[Container(503).ListItem.dbid]/-1/?tvshowid=$INFO[Container(503).ListItem.dbid]</value>
		<value condition="[Control.IsVisible(503) + Container.Content(seasons)] + String.EndsWith(Container.Folderpath,/)">$INFO[Container.Folderpath]-1/</value>
		<value condition="[Control.IsVisible(503) + Container.Content(seasons)] + !String.IsEmpty(Window(home).Property(dbid))">videodb://inprogresstvshows/$INFO[Window(home).Property(dbid)]/-1/?tvshowid=$INFO[Window(home).Property(dbid)]</value>
	</variable>
	<variable name="View_503_Folderpath">
		<value condition="Control.IsVisible(503) + Container.Content(tvshows)">videodb://tvshows/titles/$INFO[Container(503).ListItem.dbid]</value>
		<value condition="Control.IsVisible(503) + [String.IsEqual(Container.ListItem.dbtype,set) + System.GetBool(videolibrary.groupmoviesets)]">$INFO[Container.ListItem.FolderPath]</value>
		<value condition="Control.IsVisible(503) + [!String.IsEmpty(Container.ListItem.SetId) + !System.GetBool(videolibrary.groupmoviesets)]">videodb://movies/sets/$INFO[Container.ListItem.setid]/?setid=$INFO[Container.ListItem.setid]</value>
	</variable>
	
		<!-- temp solution is -->
	<include name="view504">
		<control type="group">
			
			<visible>Control.IsVisible(504)</visible>
				<description>decide if using global spotlight lib/common settings instead of write conditions for every viewtype - so use that gloably by make vis for correspondiong ids </description>
				
				<include content="spotlight_layout">
					<param name="spotlight_artwork_visible_right" value="!Skin.HasSetting(View504_fanart_left) + Control.IsVisible(504)" />	
					<param name="spotlight_artwork_visible_left" value="Skin.HasSetting(View504_fanart_left) + Control.IsVisible(504)" />	
					<param name="info_visible_left" value="!Skin.HasSetting(View504_fanart_left)" />
					<param name="info_visible_right" value="Skin.HasSetting(View504_fanart_left)" />
					<param name="info_plot_hidden" value="Skin.HasSetting(View504_hideplot)" />
					<param name="metadata_align_left" value="Skin.HasSetting(View504_metadata_align_left)" />
					<param name="metadata_align_center" value="Skin.HasSetting(View504_metadata_align_center)" />
					<param name="metadata_align_right" value="Skin.HasSetting(View504_metadata_align_right)" />
				</include>
				<include content="footer">
					<param name="view_id" value="504" />
					<param name="bottom" value="380" />
					<param name="use_bgpanel" value="true" />
					<param name="footer_bg_color" value="1affffff" />
					<param name="footer_mediaflag_offsetleft" value="350" />
					<param name="footer_rating_offsetright" value="70" />
				</include>
		</control>
		<control type="group">
			<visible>Control.IsVisible(504)</visible>
				
				
				
			<control type="panel" id="504">
				<description>curr no include and relaod usage, just for testing later fixedlist vs panel</description>
			
				<viewtype label="netflixfanart">netflixfanart list</viewtype>
				<focusposition>0</focusposition>
				
				
				<include condition="Skin.HasSetting(View504_multirow)" content="orientation"><param name="orientation" value="vertical" /></include>
				<include condition="!Skin.HasSetting(View504_multirow)" content="orientation"><param name="orientation" value="horizontal" /></include>
				
				<preloaditems>4</preloaditems>
				<scrolltime tween="quadratic">400</scrolltime>
				<left>100</left>
				<right>0</right>
				<bottom>0</bottom>
				<height>465</height>
				
				<!-- 
				
				include horizontal list offsets
				include horizontal list nav

				-->
				
				<!-- cant use onback to focus menubar - dont like to move to bottom -->
				
				
				<!-- mööp on up supposed play trailer ? -->
				
				<onup condition="!String.IsEmpty(Window(home).Property(listitemtrailer))">PlayMedia($INFO[Window(home).Property(listitemtrailer)],1)</onup>
				<onup condition="!String.IsEmpty(Window(home).Property(listitemtrailer))">SetProperty(TrailerIsPlaying,true,home)</onup>
				
				<!-- <onup condition="Control.IsVisible(19)">19</onup>  -->
				<!-- <onup condition="!Control.IsVisible(19) + Control.IsVisible(8999)">8999</onup> -->
				<ondown condition="!String.IsEmpty(Window(home).Property(TrailerIsPlaying))">PlayerControl(stop)</ondown>
				<onfocus condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">ClearProperty(menucontrol_active,home)</onfocus>
				
				<onleft condition="Control.IsVisible(8999)">8999</onleft>
				
				
				<onright condition="Control.IsVisible(60)">60</onright>
				
				<!-- ondown - cast ?, movieset items ?, scroll/alphabet bar , an icon button grouplist for such actions needed - onup or ondown ? -->
				<!-- <ondown>89898989</ondown> -->
				<!-- <ondown>7777</ondown> -->
				
				<itemlayout height="450" width="460" condition="!Skin.HasSetting(View504_multirow)">
					<control type="group">
						<width>454</width>
						<height>267</height>
						<top>60</top>
						<include content="UniversalLayout">
							<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_nf]" />
							<param name="artwork" value="landscape" />
							<param name="get_tags" value="!Skin.HasSetting(View_504_DisableTags)" />
							<param name="get_tagbgpanel" value="!Skin.HasSetting(View_504_DisableTags)" />
							<param name="autoscroll" value="false" />
							<param name="bordersize_bg" value="6" />
							<param name="bottompanelcolor" value="$VAR[color_spotlightlib_itemframe_nf]" />
							<param name="bottomtaglabelcolor" value="$VAR[color_spotlightlib_secondary]" />
							<param name="bottomtaglabel2color" value="$VAR[color_spotlightlib_secondary]" />
							<param name="get_landscapelogo" value="![$EXP[IsEpisode]]" />
							<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | Skin.HasSetting(View_504_DisableTags)" />
							<param name="conditional_artworkdiffuse_override" value="Skin.HasTheme(Roundedge) + !Skin.HasSetting(View_504_DisableTags)" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout height="450" width="470" condition="!Skin.HasSetting(View504_multirow)">
					<include content="SetPropOnFocus_HiddenButton" />
					<control type="group">
						<width>454</width>
						<height>267</height>
						<top>60</top>
						<description>to avoid relaod skin on disable footer and avoid bottom offset fade out 3rd row of items</description>
						<!-- <include>Animation_Item_Focus</include> -->
						<control type="group">
						<animation type="Focus" reversible="false">
							<effect type="zoom" end="103,103" time="200" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="99,99" time="150" tween="sine" delay="200" easing="out" center="auto" />
						</animation>
							<include content="UniversalLayout">
								<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_fo]" />
								<param name="artwork" value="landscape" />
								<param name="get_tags" value="!Skin.HasSetting(View_504_DisableTags)" />
								<param name="get_tagbgpanel" value="!Skin.HasSetting(View_504_DisableTags)" />
								<param name="autoscroll" value="true" />
								<param name="bordersize_bg" value="4" />
								<param name="bottompanelcolor" value="$VAR[color_spotlightlib_itemframe_fo]" />
								<param name="bottomtaglabelcolor" value="$VAR[color_spotlightlib_background_layer1]" />
								<param name="bottomtaglabel2color" value="$VAR[color_spotlightlib_background_layer1]" />
								<param name="get_landscapelogo" value="![$EXP[IsEpisode]]" />
								<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | Skin.HasSetting(View_504_DisableTags)" />
								<param name="conditional_artworkdiffuse_override" value="Skin.HasTheme(Roundedge) + !Skin.HasSetting(View_504_DisableTags)" />
							</include>
							<control type="group">
								<visible>!Skin.HasSetting(View_504_DisableTags)</visible>
								<include content="FocusOverlay">
									<param name="diffusedimtext" value="artworkdiffuse/usebganel/landscape.png" />
								</include>
							</control>
							<control type="group">
								<visible>Skin.HasSetting(View_504_DisableTags)</visible>
								<include content="FocusOverlay">
									<param name="diffusedimtext" value="artworkdiffuse/landscape.png" />
								</include>
							</control>
						</control>
					</control>
				</focusedlayout>
				
				<!-- multirow -->
				
				<itemlayout height="235" width="435" condition="Skin.HasSetting(View504_multirow)">
					<control type="group">
						<width>440</width>
						<height>240</height>
						<include content="UniversalLayout">
							<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_nf]" />
							<param name="artwork" value="landscape" />
							<param name="get_tags" value="false" />
							<param name="get_tagbgpanel" value="false" />
							<param name="autoscroll" value="false" />
							<param name="bordersize_bg" value="6" />
							<param name="bottompanelcolor" value="$VAR[color_spotlightlib_itemframe_nf]" />
							<param name="bottomtaglabelcolor" value="$VAR[color_spotlightlib_secondary]" />
							<param name="bottomtaglabel2color" value="$VAR[color_spotlightlib_secondary]" />
							<param name="conditional_artworkdiffuse_themed" value="true" />
							<param name="conditional_artworkdiffuse_override" value="false" />
							<param name="get_landscapelogo" value="![$EXP[IsEpisode]]" />
							<param name="conditional_artworkdiffuse_themed" value="true" />
							<param name="conditional_artworkdiffuse_override" value="false" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout height="235" width="435" condition="Skin.HasSetting(View504_multirow)">
					<include content="SetPropOnFocus_HiddenButton" />
					<control type="group">
						<width>440</width>
						<height>240</height>
						<!-- <include>Animation_Item_Focus</include> -->
						<animation type="Focus" reversible="false">
							<effect type="zoom" end="103,103" time="200" tween="sine" easing="out" center="auto" />
							<effect type="zoom" end="99,99" time="150" tween="sine" delay="200" easing="out" center="auto" />
						</animation>
						<control type="group">
							<include content="UniversalLayout">
								<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_fo]" />
								<param name="artwork" value="landscape" />
								<param name="get_tags" value="false" />
								<param name="get_tagbgpanel" value="false" />
								<param name="autoscroll" value="true" />
								<param name="bordersize_bg" value="4" />
								<param name="bottompanelcolor" value="$VAR[color_spotlightlib_itemframe_fo]" />
								<param name="bottomtaglabelcolor" value="$VAR[color_spotlightlib_background_layer1]" />
								<param name="bottomtaglabel2color" value="$VAR[color_spotlightlib_background_layer1]" />
								<param name="conditional_artworkdiffuse_themed" value="true" />
								<param name="conditional_artworkdiffuse_override" value="false" />
								<param name="get_landscapelogo" value="![$EXP[IsEpisode]]" />
							</include>
							<control type="group">
								<include content="FocusOverlay">
									<param name="diffusedimtext" value="artworkdiffuse/landscape.png" />
								</include>
							</control>
						</control>
					</control>
				</focusedlayout>
			</control>
		</control>
		
	</include>
		
	<include name="spotlight_buttongroup_hor">
		<!-- unhappy but maybe needed and practicable for people without a menu button ?? -->
		
		<control type="image">
			<texture colordiffuse="cc000000">colors/white.png</texture>
			<visible>Control.IsVisible(503) | Control.IsVisible(504)</visible>
			<animation effect="slide" start="0,0" end="0,-100" time="200" easing="inout" reversible="true" condition="ControlGroup(6000).HasFocus()">conditional</animation>
			<bottom>-100</bottom>
			<height>100</height>
		</control>
		
		<control type="grouplist" id="6000">
			<description>may bound with alphabet scroll bar</description>
			<visible>false</visible>
			<!-- <visible>Control.HasFocus(610)</visible> -->
			<visible>Control.IsVisible(503) | Control.IsVisible(504)</visible>
			<!-- 
			at bottom
			-->
			<animation effect="slide" start="0,0" end="0,-100" time="200" easing="inout" reversible="true">Focus</animation>
			<bottom>-100</bottom>
			<!-- <bottom>380</bottom> -->
			<height>70</height>
			
			<!-- <animation effect="fade" start="0" end="100" time="200" easing="inout" reversible="true">Focus</animation>
			 at top
			<bottom>470</bottom>
			<height>70</height>
			-->
			<ondown condition="!String.IsEmpty(Window.Property(Spotlight_Cast))">50</ondown>
			<ondown condition="!String.IsEmpty(Window.Property(Spotlight_Cast)) + [!String.IsEqual(ListItem.dbtype,set) | !String.IsEqual(ListItem.dbtype,tvshow)]">ClearProperty(Spotlight_Cast)</ondown>
			<ondown condition="String.IsEmpty(Window.Property(Spotlight_Cast)) + !String.IsEqual(ListItem.DBtype,set)">SetProperty(Spotlight_Cast,visible)</ondown>
			<ondown condition="[!String.IsEmpty(Window.Property(Spotlight_Cast)) + String.IsEqual(ListItem.dbtype,tvshow)] | String.IsEqual(ListItem.dbtype,set)">SetFocus(50352)</ondown>
				
			<animation effect="fade" start="100" end="0" time="350" easing="inout" reversible="false" condition="Container.OnNext | Container.OnPrevious">conditional</animation>
			<!-- just if align left <left>110</left> -->
			<description>maybe animation - 100h slide up easing inout when hit ondown</description>
			<align>center</align>
			
			<orientation>horizontal</orientation>
			<itemgap>50</itemgap>
			<onup>SetFocus(50)</onup>

		
			<control type="radiobutton" id="77772">
				<include content="HUB_ContainerButtons">
					<description>filter</description>
					<param name="texture" value="defaultmusicvideotitle.png" />
				</include>
			</control>
			<control type="radiobutton" id="77773">
				<description>trailaer</description>
				<include content="HUB_ContainerButtons">
					<param name="texture" value="defaultyear.png" />
				</include>
			</control>
			<control type="radiobutton" id="77774">
				<description>cast</description>
				<include content="HUB_ContainerButtons">
					<param name="texture" value="defaultaddoninfoprovider.png" />
				</include>
			</control>
			<control type="radiobutton" id="77775">
				<description>scrollbar - alphabet bar</description>
				<include content="HUB_ContainerButtons">
					<param name="texture" value="defaultmusicplaylists.png" />
				</include>
			</control>
			<control type="radiobutton" id="77776">
				<description>filter?</description>
				<include content="HUB_ContainerButtons">
					<param name="texture" value="defaultmusicplaylists.png" />
				</include>
			</control>
			<control type="radiobutton" id="77777">
				<description>order ?</description>
				<include content="HUB_ContainerButtons">
					<param name="texture" value="defaultmusicplaylists.png" />
				</include>
			</control>
		</control>
		
	</include>
	<include name="orientation">
		<orientation>$PARAM[orientation]</orientation>
	</include>
		
		<include name="template5077">
			<param name="color" default="ff101010" />
			<param name="tc" default="white" />
			<param name="tc_2" default="ffcccccc" />
			<param name="is_focused" default="true" />
			
			<definition>
				<control type="group">
				<top>5</top>
					<nested />
					<control type="image">
						<description>focus frame bad if item bg match global bg</description>
						<texture colordiffuse="$PARAM[tc]">colors/white.png</texture>
						<top>0</top>
						<aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
						<visible>$PARAM[is_focused]</visible>
					</control>
					<control type="image">
						<description>focus frame bad if item bg match global bg</description>
						<texture colordiffuse="$PARAM[tc]">colors/white20.png</texture>
						<top>0</top>
						<aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
						<visible>!$PARAM[is_focused]</visible>
					</control>
					<control type="image">
						<description>tile bg</description>
						<texture colordiffuse="$PARAM[color]">colors/white.png</texture>
						<top>0</top>
						<bordersize>5</bordersize>
						<aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
					</control>
					<control type="image">
						<description>diffused fanart</description>
						<top>10</top>
						<left>10</left>
						<texture background="true" diffuse="diffuse/spotlightrightdiffuse.png">$VAR[ImageLayout_fanart]</texture>
						<aspectratio scalediffuse="false" align="left" aligny="top">scale</aspectratio>
					</control>
					<control type="textbox">
						<description>use outside, slide/fade just vis on focus</description>
						<visible>false</visible>
						<top>130</top>
						<right>20</right>
						<left>510</left>
						<width>20%</width> 
						<bottom>70</bottom>
						<label>$VAR[Plots]</label>
						<font>font20_title</font>
						<textcolor>$PARAM[tc_2]</textcolor>
						<align>center</align>
						<aligny>center</aligny>
						<autoscroll delay="5000" time="4000" repeat="10000">$PARAM[is_focused]</autoscroll>
					</control>
					<control type="group">
						<description>visible condition usage</description>
						<include content="var_rating_workaraound">
							<param name="rating" value="tvdb" />
							<param name="rating_image" value="tvdb" />
						</include>
						<include content="var_rating_workaraound">
							<param name="rating" value="themoviedb" />
							<param name="rating_image" value="themoviedb" />
						</include>
						<include content="var_rating_workaraound">
							<param name="rating" value="imdb" />
							<param name="rating_image" value="imdb" />
						</include>
						<control type="image">
							<visible>
                             !String.IsEmpty(ListItem.Rating) + [
                             String.IsEmpty(ListItem.Rating(tvdb)) + 
                             String.IsEmpty(ListItem.Rating(themoviedb)) + 
                             String.IsEmpty(ListItem.Rating(imdb)) + 
                             String.IsEmpty(ListItem.Rating(metacritic)) + 
                             String.IsEmpty(ListItem.Rating(tomatometerallaudience)) + 
                             String.IsEmpty(ListItem.Rating(tomatometerallcritics)) + 
                             String.IsEmpty(ListItem.Rating(tomatometeravgaudience)) + 
                             String.IsEmpty(ListItem.Rating(tomatometeravgcritics))
                             ]
                            </visible>
							<bottom>15</bottom>
							<right>60</right>
							<width>100</width>
							<height>25</height>
							<texture>flags/ratings/star.png</texture>
							<aspectratio align="right">keep</aspectratio>
						</control>
					</control>
					<control type="button">
						<visible>!String.IsEmpty(Container(50352).ListItem(0).Genre)</visible>
						<align>center</align>
						<textcolor>$PARAM[tc]</textcolor>
						<textoffsetx>10</textoffsetx>
						<disabledcolor>$PARAM[tc]</disabledcolor>
						<texturefocus border="2" colordiffuse="$PARAM[tc]">frames/frame.png</texturefocus>
						<texturenofocus border="2" colordiffuse="$PARAM[tc]">frames/frame.png</texturenofocus>
						<enable>false</enable>
						<bottom>10</bottom>
						<left>10</left>
						<width min="32">auto</width>
						<height>30</height>
						<font>debugtiny</font>
						<label>$INFO[ListItem.Genre]</label>
					</control>
					<control type="label">
						<bottom>75</bottom>
						<left>15</left>
						<width>auto</width>
						<height>30</height>
						<font>MenucontrolItem</font>
						<textcolor>$PARAM[tc]</textcolor>
						<label>Nächste Folge : $INFO[ListItem.Season,Staffel  [B],[/B]]$INFO[ListItem.Episode,   Folge  [B],[/B]]</label>
					</control>
					<control type="label">
						<bottom>50</bottom>
						<left>15</left>
						<width>auto</width>
						<height>30</height>
						<font>MenucontrolItem</font>
						<textcolor>$PARAM[tc]</textcolor>
						<label>$INFO[ListItem.Title,[B],[/B]]</label>
					</control>
					
					<control type="progress">
						<visible>Integer.IsGreater(ListItem.PercentPlayed,0) + ListItem.IsResumable</visible>
						<visible>!Container.Content(sets)</visible>
						<bottom>47</bottom>
						<left>13</left>
						<width>460</width>
						<height>2</height>
						<align>left</align>
						<!-- 
						<texturebg colordiffuse="$VAR[color_spotlightlib_background_layer1]">colors/white.png</texturebg>
						<midtexture colordiffuse="$VAR[color_spotlightlib_accent]">colors/white.png</midtexture>
						-->
						<info>ListItem.PercentPlayed</info>
					</control>
					<control type="videowindow" />
				</control>
				
				
			</definition>
		</include>
</includes>
