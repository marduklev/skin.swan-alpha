<?xml version="1.0" encoding="utf-8"?>
<includes>
	<!-- MATRIX GUI INFOLABEL
	
	new infolabel  ListItem.TvShowDBID  returns the tvshow dbid at season and episode level.
	
	new infobool   Library.HasNode() - This will return True if the specified node is available  eg  Library.HasNode(library://video/movies/titles.xml)
	
	-->
	<!-- skinsetting view_options in mind / to do
	
		504 	- overrdie default focus, use fixedframe - low prio, may not do it
		503/504 - behaviour of spotlight icon bar , curr disabled, and unadjusted - need for touch device, show if alphabet bar focused ? or move to left menucotnrol bar with extended visability
		503/504 - adjust anim / header usage
				- resolve navigation onup trailer (onup for trailer is currently useless, as alphabet bar/scrollbar onup) vs focus filter ctrl
				- ondown options 
					- 1st focus scollbar/alphabet bar, before going to custom containers / show cast
					- ondown - a) focus  nextup/folderpath/*similiar instead just show cast
							   b) just show cast first, click down again to focus containers (current default behaviour)
							   c) go to nextup/folderpath/*similiar content without show cast


					  filter
						|
			menu -   alphabet   - ?
						|
			menu - 	main content
						|
					  cast
						|
				 nextup & folderitems
				 
				 
		503 - music - square instead of poster
			- instead of CAST  - show and focus albums ?
			- instead of seasons - show songs ?
	-->
	<!-- goal is use just one include - for spotlight views
		<include content="spotlight_layout">
			<param name="spotlight_artwork_visible_right" value="[!Skin.HasSetting(view_503_fanart_left) + Control.IsVisible(503)] | [!Skin.HasSetting(view_504_fanart_left) + Control.IsVisible(504)]" />	
			<param name="spotlight_artwork_visible_left" value="[Skin.HasSetting(view_503_fanart_left) + Control.IsVisible(503)] | [Skin.HasSetting(view_504_fanart_left) + Control.IsVisible(504)]" />	
			<param name="info_visible_left" value="[!Skin.HasSetting(view_503_fanart_left) + Control.IsVisible(503)] | [!Skin.HasSetting(view_504_fanart_left) + Control.IsVisible(504)]" />
			<param name="info_visible_right" value="[Skin.HasSetting(view_503_fanart_left) + Control.IsVisible(503)] | [Skin.HasSetting(view_504_fanart_left) + Control.IsVisible(504)]" />
			<param name="info_plot_hidden" value="[Skin.HasSetting(view_503_hideplot) + Control.IsVisible(503)] | [Skin.HasSetting(view_504_hideplot) + Control.IsVisible(504)]" />
			<param name="metadata_align_left" value="[Skin.HasSetting(view_503_metadata_align_left) + Control.IsVisible(503)] | [Skin.HasSetting(view_504_metadata_align_left) + Control.IsVisible(504)]" />
			<param name="metadata_align_center" value="[Skin.HasSetting(view_503_metadata_align_center) + Control.IsVisible(503)] | [Skin.HasSetting(view_504_metadata_align_center) + Control.IsVisible(504)]" />
			<param name="metadata_align_right" value="[Skin.HasSetting(view_503_metadata_align_right) + Control.IsVisible(503)] | [Skin.HasSetting(view_504_metadata_align_right) + Control.IsVisible(504)]" />
		</include>
	-->
	
	
	<include name="view_503_504">
		<control type="group">
			<visible>Control.IsVisible(503)</visible>
			<include content="spotlight_layout">
				<param name="spotlight_artwork_visible_right" value="!Skin.HasSetting(view_503_fanart_left) + Control.IsVisible(503)" />	
				<param name="spotlight_artwork_visible_left" value="Skin.HasSetting(view_503_fanart_left) + Control.IsVisible(503)" />	
				<param name="info_visible_left" value="!Skin.HasSetting(view_503_fanart_left)" />
				<param name="info_visible_right" value="Skin.HasSetting(view_503_fanart_left)" />
				<param name="info_plot_hidden" value="Skin.HasSetting(view_503_hideplot)" />
				<param name="metadata_align_left" value="Skin.HasSetting(view_503_metadata_align_left)" />
				<param name="metadata_align_center" value="Skin.HasSetting(view_503_metadata_align_center)" />
				<param name="metadata_align_right" value="Skin.HasSetting(view_503_metadata_align_right)" />
			</include>
			<include content="footer">
				<param name="view_id" value="503" />
				<param name="bottom" value="380" />
				<param name="footer_mediaflag_offsetleft" value="600" />
				<param name="footer_rating_offsetright" value="70" />
			</include>			
		</control>
		
		<control type="group">
			<visible>Control.IsVisible(504)</visible>
			<include content="spotlight_layout">
				<param name="spotlight_artwork_visible_right" value="!Skin.HasSetting(view_504_fanart_left) + Control.IsVisible(504)" />	
				<param name="spotlight_artwork_visible_left" value="Skin.HasSetting(view_504_fanart_left) + Control.IsVisible(504)" />	
				<param name="info_visible_left" value="!Skin.HasSetting(view_504_fanart_left)" />
				<param name="info_visible_right" value="Skin.HasSetting(view_504_fanart_left)" />
				<param name="info_plot_hidden" value="Skin.HasSetting(view_504_hideplot)" />
				<param name="metadata_align_left" value="Skin.HasSetting(view_504_metadata_align_left)" />
				<param name="metadata_align_center" value="Skin.HasSetting(view_504_metadata_align_center)" />
				<param name="metadata_align_right" value="Skin.HasSetting(view_504_metadata_align_right)" />
			</include>
			<include content="footer">
				<param name="view_id" value="504" />
				<param name="bottom" value="380" />
				<param name="footer_mediaflag_offsetleft" value="600" />
				<param name="footer_rating_offsetright" value="70" />
				
				<animation effect="slide" start="0,0" end="0,50" time="350" easing="inout" reversible="true" condition="container.content(episodes)">conditional</animation>
			
			</include>			
		</control>
		
		<control type="group">
			<visible>Control.IsVisible(503) | Control.IsVisible(504)</visible>
			
			<animation effect="slide" start="0,0" end="0,-500" time="350" easing="inout" reversible="true" condition="!String.IsEmpty(Window.Property(Spotlight_Sets)) | !String.IsEmpty(Window.Property(Spotlight_Nextup))">conditional</animation>
			<animation effect="slide" start="0,0" end="0,40" time="350" easing="inout" reversible="true" condition="container.content(episodes)">conditional</animation>
			
			<include content="content_header_bold">
				<param name="visible" value="String.IsEmpty(Window.Property(Spotlight_Sets))" />
				<param name="label" value="$VAR[Header_InfoTop]" />
			</include>
			<include content="content_header_bold">
				<param name="visible" value="![Container.Content(seasons) | Container.Content(episodes)] + String.IsEmpty(Window(home).Property(TrailerIsPlaying)) + [!String.IsEmpty(Window.Property(Spotlight_Cast)) + String.IsEmpty(Window.Property(Spotlight_Sets))]" />
				<param name="label" value="206" />
				<param name="left" value="400" />
			</include>
			<include content="content_header_bold">
				<param name="visible" value="!String.IsEmpty(Window.Property(Spotlight_Sets))" />
				<param name="label" value="$VAR[SetLabel]" />
				<param name="left" value="100" />
				<param name="bottom" value="-160" />
			</include>
			<include content="content_header_bold">
				<param name="visible" value="!String.IsEmpty(Window.Property(Spotlight_Sets)) + Container.Content(tvshows)" />
				<param name="label" value="33054" />
				<param name="left" value="800" />
				<param name="bottom" value="-160" />
			</include>
			
			<include content="view_503" condition="String.IsEmpty(Skin.String(view_503_disabled))" />
			<include content="view_504" condition="String.IsEmpty(Skin.String(view_504_disabled))" />
			
			<!-- 
			later on something like that
			<include condition="!String.IsEmpty(Skin.String(view_503_disabled)) + !String.IsEmpty(Skin.String(view_504_disabled))">spotlight_extra_content_containers</include> -->
			<include content="spotlight_extra_content_containers" />
			
		
		</control>
	</include>
	
	
	<include name="content_header_bold">
		<param name="left" default="110" />
		<param name="bottom" default="340" />
		<definition>
			<control type="label">
				<visible>$PARAM[visible]</visible>
				<left>$PARAM[left]</left>
				<bottom>$PARAM[bottom]</bottom>
				<label>$PARAM[label]</label>
				<height>100</height>
				<textcolor>$VAR[color_spotlightlib_contentheading]</textcolor>
				<font>Montserrat_ExtraBold_40</font>
				<aligny>top</aligny>
			</control>
		</definition>
	</include>
	<include name="50352_content">
		<content sortby="$PARAM[sortby]" limit="$PARAM[limit]">$PARAM[content]</content>
	</include>
	<variable name="view_503_NextUp">
		<value condition="[Control.IsVisible(503) + Container.Content(tvshows)] + !String.IsEmpty(Container(503).ListItem.dbid)">videodb://inprogresstvshows/$INFO[Container(503).ListItem.dbid]/-1/?tvshowid=$INFO[Container(503).ListItem.dbid]</value>
		<value condition="[Control.IsVisible(503) + Container.Content(seasons)] + String.EndsWith(Container.Folderpath,/)">$INFO[Container.Folderpath]-1/</value>
		<value condition="[Control.IsVisible(503) + Container.Content(seasons)] + !String.IsEmpty(Window(home).Property(dbid))">videodb://inprogresstvshows/$INFO[Window(home).Property(dbid)]/-1/?tvshowid=$INFO[Window(home).Property(dbid)]</value>
		<value condition="[Control.IsVisible(504) + Container.Content(tvshows)] + !String.IsEmpty(Container(504).ListItem.dbid)">videodb://inprogresstvshows/$INFO[Container(504).ListItem.dbid]/-1/?tvshowid=$INFO[Container(504).ListItem.dbid]</value>
		<value condition="[Control.IsVisible(504) + Container.Content(seasons)] + String.EndsWith(Container.Folderpath,/)">$INFO[Container.Folderpath]-1/</value>
		<value condition="[Control.IsVisible(504) + Container.Content(seasons)] + !String.IsEmpty(Window(home).Property(dbid))">videodb://inprogresstvshows/$INFO[Window(home).Property(dbid)]/-1/?tvshowid=$INFO[Window(home).Property(dbid)]</value>
	</variable>
	<variable name="View_503_Folderpath">
		<value condition="Control.IsVisible(503) + [!String.StartsWith(listitem.path,plugin) + Container.Content(tvshows)]">videodb://tvshows/titles/$INFO[Container(503).ListItem.dbid]</value>
		<value condition="Control.IsVisible(503) + [!String.StartsWith(listitem.path,plugin) + String.IsEqual(Container.ListItem.dbtype,set)]">$INFO[Container.ListItem.FolderPath]</value>
		<value condition="Control.IsVisible(503) + [!String.StartsWith(listitem.path,plugin) + !String.IsEmpty(Container.ListItem.SetId)]">videodb://movies/sets/$INFO[Container.ListItem.setid]/?setid=$INFO[Container.ListItem.setid]</value>
		<value condition="Control.IsVisible(504) + [!String.StartsWith(listitem.path,plugin) + Container.Content(tvshows)]">videodb://tvshows/titles/$INFO[Container(504).ListItem.dbid]</value>
		<value condition="Control.IsVisible(504) + [!String.StartsWith(listitem.path,plugin) + String.IsEqual(Container.ListItem.dbtype,set)]">$INFO[Container.ListItem.FolderPath]</value>
		<value condition="Control.IsVisible(504) + [!String.StartsWith(listitem.path,plugin) + !String.IsEmpty(Container.ListItem.SetId)]">videodb://movies/sets/$INFO[Container.ListItem.setid]/?setid=$INFO[Container.ListItem.setid]</value>
		<value condition="String.StartsWith(listitem.path,plugin) + String.IsEqual(Container.ListItem.dbtype,tvshow)">$INFO[Container.ListItem.FolderPath]</value>
	</variable>
	
	
	
	
	
	<include name="view_503">
		<control type="fixedlist" id="503">
			<visible>!Container.Content(episodes) | !Container.Content(sources)</visible>
			<viewtype label="$LOCALIZE[31261]">spotlight poster</viewtype>
			<focusposition>1</focusposition>
			<orientation>horizontal</orientation>
			<preloaditems>4</preloaditems>
			<scrolltime tween="quadratic">400</scrolltime>
			<pagecontrol>61</pagecontrol>
			<left>100</left>
			<right>0</right>
			<bottom>0</bottom>
			<height>370</height>
			
			<animation effect="slide" start="0,0" end="-200,0" time="250" easing="inout" reversible="true" condition="!String.IsEmpty(Window.Property(Spotlight_Cast)) + String.IsEmpty(Window.Property(Spotlight_Sets))">conditional</animation>
			<animation effect="fade" start="100" end="0" time="250" easing="inout" reversible="true" condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">conditional</animation>
			
			<!-- <include content="spotlight_hor_list_navigation_common"><param name="viewid" value="503"/></include> -->
			<include>spotlight_hor_list_navigation_common</include>
			
			<itemlayout height="350" width="202" condition="![Container.Content(albums) | Container.Content(artists)]">
				<control type="group">
					<animation effect="fade" start="100" end="0" time="250" condition="!String.IsEmpty(Window(videos).Property(Spotlight_Cast))">conditional</animation>
				
					<width>200</width>
					<height>282</height>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_nf]" />
						<param name="artwork" value="poster" />
						<param name="get_tags" value="!Skin.HasSetting(View_503_DisableTags)" />
						<param name="get_tagbgpanel" value="!Skin.HasSetting(View_503_DisableTags)" />
						<param name="autoscroll" value="false" />
						<param name="bordersize_bg" value="6" />
						<param name="bottompanelcolor" value="$VAR[color_spotlightlib_itemframe_nf]" />
						<param name="bottomtaglabelcolor" value="$VAR[color_spotlightlib_bottomtag_nf]" />
						<param name="bottomtaglabel2color" value="$VAR[color_spotlightlib_bottomtag_nf]" />
						<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | Skin.HasSetting(View_503_DisableTags)" />
						<param name="conditional_artworkdiffuse_override" value="Skin.HasTheme(Roundedge) + !Skin.HasSetting(View_503_DisableTags)" />
					</include>
				</control>
			</itemlayout>
			<focusedlayout height="350" width="202" condition="![Container.Content(albums) | Container.Content(artists)]">
				<include content="SetPropOnFocus_HiddenButton">
					<onunfocus condition="!String.IsEmpty(Window.Property(Spotlight_Cast))">ClearProperty(Spotlight_Cast)</onunfocus>
				</include>
				<control type="group">
					<width>200</width>
					<height>282</height>
					<include>Animation_Item_Focus</include>
					<control type="group">
						<include content="UniversalLayout">
							<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_fo]" />
							<param name="artwork" value="poster" />
							<param name="get_tags" value="!Skin.HasSetting(View_503_DisableTags)" />
							<param name="get_tagbgpanel" value="!Skin.HasSetting(View_503_DisableTags)" />
							<param name="autoscroll" value="true" />
							<param name="bordersize_bg" value="4" />
							<param name="bottompanelcolor" value="$VAR[color_spotlightlib_itemframe_fo]" />
							<param name="bottomtaglabelcolor" value="$VAR[color_spotlightlib_bottomtag_fo]" />
							<param name="bottomtaglabel2color" value="$VAR[color_spotlightlib_bottomtag_fo]" />
							<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | Skin.HasSetting(View_503_DisableTags)" />
							<param name="conditional_artworkdiffuse_override" value="Skin.HasTheme(Roundedge) + !Skin.HasSetting(View_503_DisableTags)" />
						</include>
						<control type="group">
							<visible>!Skin.HasSetting(View_503_DisableTags)</visible>
							<include content="FocusOverlay">
								<param name="diffusedimtext" value="artworkdiffuse/usebganel/poster.png" />
							</include>
						</control>
						<control type="group">
							<visible>Skin.HasSetting(View_503_DisableTags)</visible>
							<include content="FocusOverlay">
								<param name="diffusedimtext" value="artworkdiffuse/poster.png" />
							</include>
						</control>
					</control>
				</control>
			</focusedlayout>
			
			<itemlayout height="350" width="280" condition="[Container.Content(albums) | Container.Content(artists)]">
				<control type="group">
					<animation effect="fade" start="100" end="0" time="250" condition="!String.IsEmpty(Window(videos).Property(Spotlight_Cast))">conditional</animation>
				
					<width>282</width>
					<height>282</height>
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_nf]" />
						<param name="artwork" value="poster" />
						<param name="get_tags" value="!Skin.HasSetting(View_503_DisableTags)" />
						<param name="get_tagbgpanel" value="!Skin.HasSetting(View_503_DisableTags)" />
						<param name="autoscroll" value="false" />
						<param name="bordersize_bg" value="6" />
						<param name="bottompanelcolor" value="$VAR[color_spotlightlib_itemframe_nf]" />
						<param name="bottomtaglabelcolor" value="$VAR[color_spotlightlib_bottomtag_nf]" />
						<param name="bottomtaglabel2color" value="$VAR[color_spotlightlib_bottomtag_nf]" />
						<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | Skin.HasSetting(View_503_DisableTags)" />
						<param name="conditional_artworkdiffuse_override" value="Skin.HasTheme(Roundedge) + !Skin.HasSetting(View_503_DisableTags)" />
					</include>
				</control>
			</itemlayout>
			<focusedlayout height="350" width="290" condition="[Container.Content(albums) | Container.Content(artists)]">
				<include content="SetPropOnFocus_HiddenButton">
					<onunfocus condition="!String.IsEmpty(Window.Property(Spotlight_Cast))">ClearProperty(Spotlight_Cast)</onunfocus>
				</include>
				<control type="group">
					<width>282</width>
					<height>282</height>
					<left>5</left>
					<include>Animation_Item_Focus</include>
					<control type="group">
						<include content="UniversalLayout">
							<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_fo]" />
							<param name="artwork" value="poster" />
							<param name="get_tags" value="!Skin.HasSetting(View_503_DisableTags)" />
							<param name="get_tagbgpanel" value="!Skin.HasSetting(View_503_DisableTags)" />
							<param name="autoscroll" value="true" />
							<param name="bordersize_bg" value="4" />
							<param name="bottompanelcolor" value="$VAR[color_spotlightlib_itemframe_fo]" />
							<param name="bottomtaglabelcolor" value="$VAR[color_spotlightlib_bottomtag_fo]" />
							<param name="bottomtaglabel2color" value="$VAR[color_spotlightlib_bottomtag_fo]" />
							<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | Skin.HasSetting(View_503_DisableTags)" />
							<param name="conditional_artworkdiffuse_override" value="Skin.HasTheme(Roundedge) + !Skin.HasSetting(View_503_DisableTags)" />
						</include>
						<control type="group">
							<visible>!Skin.HasSetting(View_503_DisableTags)</visible>
							<include content="FocusOverlay">
								<param name="diffusedimtext" value="artworkdiffuse/usebganel/square.png" />
							</include>
						</control>
						<control type="group">
							<visible>Skin.HasSetting(View_503_DisableTags)</visible>
							<include content="FocusOverlay">
								<param name="diffusedimtext" value="artworkdiffuse/square.png" />
							</include>
						</control>
					</control>
				</control>
			</focusedlayout>
		</control>
	</include>
	
	<include name="view_504">
		<control type="fixedlist" id="504">
			
			<visible>!Container.Content(sources)</visible>
			<viewtype label="$LOCALIZE[31261]">spotlight landscape</viewtype>
			<focusposition>0</focusposition>
			<orientation>horizontal</orientation>
			<preloaditems>4</preloaditems>
			<scrolltime tween="quadratic">400</scrolltime>
			<pagecontrol>61</pagecontrol>
			<left>100</left>
			<right>0</right>
			<bottom>0</bottom>
			<height>370</height>
			
			<animation effect="fade" start="100" end="0" time="250" easing="inout" reversible="true" condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">conditional</animation>
			
			<!-- <include content="spotlight_hor_list_navigation_common"><param name="viewid" value="504"/></include> -->
			<include>spotlight_hor_list_navigation_common</include>
		
			<itemlayout height="350" width="447">
				<control type="group">
					<width>450</width>
					<height>250</height>
					<animation effect="fade" start="100" end="0" time="250" condition="!String.IsEmpty(Window(videos).Property(Spotlight_Cast))">conditional</animation>
					
					<include content="UniversalLayout">
						<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_nf]" />
						<param name="artwork" value="landscape" />
						<param name="get_tags" value="!Skin.HasSetting(View_504_DisableTags)" />
						<param name="get_tagbgpanel" value="!Skin.HasSetting(View_504_DisableTags)" />
						<param name="autoscroll" value="false" />
						<param name="bordersize_bg" value="6" />
						<param name="bottompanelcolor" value="$VAR[color_spotlightlib_itemframe_nf]" />
						<param name="bottomtaglabelcolor" value="$VAR[color_spotlightlib_bottomtag_nf]" />
						<param name="bottomtaglabel2color" value="$VAR[color_spotlightlib_bottomtag_nf]" />
						<param name="get_landscapelogo" value="![$EXP[IsEpisode]]" />
						<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | Skin.HasSetting(View_504_DisableTags)" />
						<param name="conditional_artworkdiffuse_override" value="Skin.HasTheme(Roundedge) + !Skin.HasSetting(View_504_DisableTags)" />
					</include>
				</control>
			</itemlayout>
			<focusedlayout height="350" width="460">
				<include content="SetPropOnFocus_HiddenButton">
					<onunfocus condition="!String.IsEmpty(Window.Property(Spotlight_Cast))">ClearProperty(Spotlight_Cast)</onunfocus>
				</include>
				<control type="group">
					<width>450</width>
					<height>250</height>
					<animation effect="zoom" start="100" end="60" time="250" condition="!String.IsEmpty(Window(videos).Property(Spotlight_Cast))">conditional</animation>
					<!-- <include>Animation_Item_Focus</include> -->
					<control type="group">
					<animation type="Focus" reversible="false">
						<effect type="zoom" end="103,103" time="200" tween="sine" easing="out" center="auto" />
						<effect type="zoom" end="99,99" time="150" tween="sine" delay="200" easing="out" center="auto" />
					</animation>
						<include content="UniversalLayout">
							<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_fo]" />
							<param name="artwork" value="landscape" />
							<param name="get_tags" value="!Skin.HasSetting(View_504_DisableTags)" />
							<param name="get_tagbgpanel" value="!Skin.HasSetting(View_504_DisableTags)" />
							<param name="autoscroll" value="true" />
							<param name="bordersize_bg" value="4" />
							<param name="bottompanelcolor" value="$VAR[color_spotlightlib_itemframe_fo]" />
							<param name="bottomtaglabelcolor" value="$VAR[color_spotlightlib_bottomtag_fo]" />
							<param name="bottomtaglabel2color" value="$VAR[color_spotlightlib_bottomtag_fo]" />
							<param name="get_landscapelogo" value="![$EXP[IsEpisode]]" />
							<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | Skin.HasSetting(View_504_DisableTags)" />
							<param name="conditional_artworkdiffuse_override" value="Skin.HasTheme(Roundedge) + !Skin.HasSetting(View_504_DisableTags)" />
						</include>
						<control type="group">
							<visible>!Skin.HasSetting(View_504_DisableTags)</visible>
							<include content="FocusOverlay">
								<param name="diffusedimtext" value="artworkdiffuse/usebganel/landscape.png" />
							</include>
						</control>
						<control type="group">
							<visible>Skin.HasSetting(View_504_DisableTags)</visible>
							<include content="FocusOverlay">
								<param name="diffusedimtext" value="artworkdiffuse/landscape.png" />
							</include>
						</control>
					</control>
				</control>
			</focusedlayout>
		</control>
	</include>
	<include name="spotlight_extra_content_containers">
			<control type="panel" id="50350">
				<animation effect="slide" start="0,0" end="0,-350" time="350" tween="cubic" condition="!String.IsEmpty(Window.Property(Spotlight_Cast)) | !String.IsEmpty(Window.Property(Spotlight_Sets))">conditional</animation>
				<animation effect="slide" start="0,0" end="-300,100" time="350" tween="cubic" condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">conditional</animation>
				<animation effect="fade" start="0" end="100" time="450" tween="cubic" condition="!String.IsEmpty(Window.Property(Spotlight_Cast)) | !String.IsEmpty(Window.Property(Spotlight_Sets))">conditional</animation>
				<!-- keep always visible for trailers <visible>$EXP[spotlight_view_show_cast]</visible> -->
				
				<!-- <visible>Container(50350).IsUpdating | Integer.IsGreater(Container(50350).NumItems,0)</visible> -->
				<description>hate to need for fixedlist</description>
				<bottom>-400</bottom>
				<left>400</left>
				<height>400</height>
				<right>-65</right>
				<scrolltime tween="quadratic">400</scrolltime>
				<preloaditems>2</preloaditems>
				<orientation>horizontal</orientation>
				
				<!-- <include content="spotlight_hor_list_navigation_cast"><param name="viewid" value="503"/></include> -->
				<include>spotlight_hor_list_navigation_cast</include>
				
				<itemlayout height="380" width="230">
					<control type="group">
						<height>202</height>
						<width>202</width>
						<control type="group">
							<include content="Circle_CastWidget">
								<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_nf]" />
								<param name="autoscroll" value="false" />
								<param name="bordersize_bg" value="6" />
							</include>
						</control>
					</control>
				</itemlayout>
				<focusedlayout height="380" width="230">
					<control type="group">
						<height>202</height>
						<width>202</width>
						<include>Animation_Item_Focus</include>
						<control type="group">
							<visible>!Control.HasFocus(50350)</visible>
							<include content="Circle_CastWidget">
								<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_nf]" />
								<param name="autoscroll" value="false" />
								<param name="bordersize_bg" value="6" />
							</include>
						</control>
						<control type="group">
							<visible>Control.HasFocus(50350)</visible>
							<include content="Circle_CastWidget">
								<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_fo]" />
								<param name="autoscroll" value="false" />
								<param name="bordersize_bg" value="4" />
							</include>
						</control>
					</control>
				</focusedlayout>
				<content>$VAR[content_cast]</content>
			</control>
			
			<control type="panel" id="50352">
				<animation effect="slide" start="0,0" end="0,-300" time="350" tween="cubic" condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">conditional</animation>
				<!-- <visible>Container(50352).IsUpdating | Integer.IsGreater(Container(50352).NumItems,0)</visible> -->
				<visible>!String.StartsWith(listitem.path,plugin)</visible>
				
				<bottom>-830</bottom>
				<left>100</left>
				<orientation>horizontal</orientation>
				<height>400</height>
				<preloaditems>2</preloaditems>
				<scrolltime tween="quadratic">400</scrolltime>
				
				<!-- <include content="spotlight_hor_list_navigation_nextup"><param name="viewid" value="503"/></include> -->
				<include>spotlight_hor_list_navigation_nextup</include>
				
				<itemlayout height="355" width="600" condition="String.Contains(Container.FolderPath,/tvshows)">
					<include content="template5077">
						<param name="is_focused" value="false" />
					</include>
				</itemlayout>
				<focusedlayout height="355" width="600" condition="String.Contains(Container.FolderPath,/tvshows)">
					<include content="template5077">
						<param name="is_focused" value="true" />
					</include>
				</focusedlayout>
				<itemlayout height="350" width="202" condition="!String.Contains(Container.FolderPath,/tvshows)">
					<control type="group">
						<width>200</width>
						<height>282</height>
						<include content="UniversalLayout">
							<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_nf]" />
							<param name="artwork" value="poster" />
							<param name="get_tags" value="true" />
							<param name="get_tagbgpanel" value="true" />
							<param name="autoscroll" value="false" />
							<param name="bordersize_bg" value="6" />
							<param name="bottompanelcolor" value="$VAR[color_spotlightlib_itemframe_nf]" />
							<param name="bottomtaglabelcolor" value="$VAR[color_spotlightlib_bottomtag_nf]" />
							<param name="bottomtaglabel2color" value="$VAR[color_spotlightlib_bottomtag_nf]" />
							<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | Skin.HasSetting(View_503_DisableTags)" />
							<param name="conditional_artworkdiffuse_override" value="Skin.HasTheme(Roundedge) + !Skin.HasSetting(View_503_DisableTags)" />
						</include>
					</control>
				</itemlayout>
				
				<focusedlayout height="350" width="202" condition="!String.Contains(Container.FolderPath,/tvshows)">
					<include content="SetPropOnFocus_HiddenButton">
						<onunfocus condition="!String.IsEmpty(Window.Property(Spotlight_Cast))">ClearProperty(Spotlight_Cast)</onunfocus>
					</include>
					<control type="group">
						<width>200</width>
						<height>282</height>
						<include>Animation_Item_Focus</include>
						<control type="group">
							<include content="UniversalLayout">
								<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_fo]" />
								<param name="artwork" value="poster" />
								<param name="get_tags" value="true" />
								<param name="get_tagbgpanel" value="true" />
								<param name="autoscroll" value="true" />
								<param name="bordersize_bg" value="4" />
								<param name="bottompanelcolor" value="$VAR[color_spotlightlib_itemframe_fo]" />
								<param name="bottomtaglabelcolor" value="$VAR[color_spotlightlib_bottomtag_fo]" />
								<param name="bottomtaglabel2color" value="$VAR[color_spotlightlib_bottomtag_fo]" />
								<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | Skin.HasSetting(View_503_DisableTags)" />
								<param name="conditional_artworkdiffuse_override" value="Skin.HasTheme(Roundedge) + !Skin.HasSetting(View_503_DisableTags)" />
							</include>
							<include content="FocusOverlay">
								<param name="diffusedimtext" value="artworkdiffuse/usebganel/poster.png" />
							</include>
						</control>
					</control>
				</focusedlayout>
				
				<include condition="String.Contains(Container.FolderPath,/tvshows)" content="50352_content">
					<param name="sortby" value="playcount" />
					<param name="content" value="$VAR[view_503_NextUp]" />
					<param name="limit" value="1" />
				</include>
				<include condition="!String.Contains(Container.FolderPath,/tvshows)" content="50352_content">
					<param name="sortby" value="year" />
					<param name="content" value="$VAR[View_503_Folderpath]" />
					<param name="limit" value="" />
				</include>
				
			</control>
			
			<control type="panel" id="50353">
				<animation effect="slide" start="0,0" end="0,-300" time="350" tween="cubic" condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">conditional</animation>
				<visible>Container.Content(tvshows)</visible>
				
				<bottom>-830</bottom>
				<height>400</height>
				
				<left>800</left>
				<orientation>horizontal</orientation>
				<preloaditems>2</preloaditems>
				<scrolltime tween="quadratic">400</scrolltime>
			
				<include content="spotlight_hor_list_navigation_folderpath"><param name="viewid" value="503"/></include>
				<onclick condition="!String.IsEmpty(Window(videos).Property(Spotlight_Sets))">ClearProperty(Spotlight_Sets,videos)</onclick>
				<onclick condition="!String.IsEmpty(Window(videos).Property(Spotlight_Cast))">ClearProperty(Spotlight_Cast,videos)</onclick>
				<onclick>ActivateWindow(videos,$INFO[Container(50353).ListItem.Folderpath],return)</onclick>
				
				<itemlayout height="350" width="202">
					<control type="group">
						<width>200</width>
						<height>282</height>
						<include content="UniversalLayout">
							<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_nf]" />
							<param name="artwork" value="poster" />
							<param name="get_tags" value="true" />
							<param name="get_tagbgpanel" value="true" />
							<param name="autoscroll" value="false" />
							<param name="bordersize_bg" value="6" />
							<param name="bottompanelcolor" value="$VAR[color_spotlightlib_itemframe_nf]" />
							<param name="bottomtaglabelcolor" value="$VAR[color_spotlightlib_bottomtag_nf]" />
							<param name="bottomtaglabel2color" value="$VAR[color_spotlightlib_bottomtag_nf]" />
							<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | Skin.HasSetting(View_503_DisableTags)" />
							<param name="conditional_artworkdiffuse_override" value="Skin.HasTheme(Roundedge) + !Skin.HasSetting(View_503_DisableTags)" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout height="350" width="202">
					<control type="group">
						<width>200</width>
						<height>282</height>
						<include>Animation_Item_Focus</include>
						<control type="group">
							<include content="UniversalLayout">
								<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_fo]" />
								<param name="artwork" value="poster" />
								<param name="get_tags" value="true" />
								<param name="get_tagbgpanel" value="true" />
								<param name="autoscroll" value="true" />
								<param name="bordersize_bg" value="4" />
								<param name="bottompanelcolor" value="$VAR[color_spotlightlib_itemframe_fo]" />
								<param name="bottomtaglabelcolor" value="$VAR[color_spotlightlib_bottomtag_fo]" />
								<param name="bottomtaglabel2color" value="$VAR[color_spotlightlib_bottomtag_fo]" />
								<param name="conditional_artworkdiffuse_themed" value="!Skin.HasTheme(Roundedge) | Skin.HasSetting(View_503_DisableTags)" />
								<param name="conditional_artworkdiffuse_override" value="Skin.HasTheme(Roundedge) + !Skin.HasSetting(View_503_DisableTags)" />
							</include>
							<include content="FocusOverlay">
								<param name="diffusedimtext" value="artworkdiffuse/usebganel/poster.png" />
							</include>
						</control>
					</control>
				</focusedlayout>
				<content sortby="year" target="videos">$VAR[View_503_Folderpath]</content>
			</control>
		</include>
	
	<include name="temp_spotlight_infofade">
		<param name="fade_end" default="0" />
		<definition>
			<animation effect="fade" start="100" end="$PARAM[fade_end]" time="350" easing="inout" reversible="true" condition="!String.IsEmpty(Window.Property(Spotlight_Sets)) + [[Container(50350).IsUpdating | Integer.IsGreater(Container(50350).NumItems,0)] | [Container(50450).IsUpdating | Integer.IsGreater(Container(50450).NumItems,0)]]">conditional</animation>
		</definition>
	</include>
	<variable name="SetLabel">
		<value condition="[Container.Content(tvshows) | Container.Content(seasons)] + String.IsEqual(Container(50352).ListItem.dbtype,episode)">$LOCALIZE[31230]</value>
		<value condition="!String.IsEmpty(ListItem.Set)">$INFO[ListItem.Set]</value>
		<value>$INFO[Container(503).ListItem.Label]</value>
	</variable>
	
	
	<include name="template5077">
		<param name="color" default="$VAR[color_spotlightlib_background_layer1]" />
		<param name="tc" default="$VAR[color_spotlightlib_main]" />
		<param name="is_focused" default="true" />
		
		<definition>
			<control type="group">
			<top>3</top>
				<nested />
				
				<control type="image">
					<description>focus frame bad if item bg match global bg</description>
					<texture colordiffuse="$VAR[color_spotlightlib_itemframe_fo]">colors/white.png</texture>
					<top>0</top>
					<aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
					<visible>$PARAM[is_focused]</visible>
				</control>
				<control type="image">
					<description>focus frame bad if item bg match global bg</description>
					<texture colordiffuse="$VAR[color_spotlightlib_itemframe_nf]">colors/white.png</texture>
					<top>0</top>
					<aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
					<visible>!$PARAM[is_focused]</visible>
				</control>
				<control type="image">
					<description>tile bg</description>
					<texture colordiffuse="$PARAM[color]">colors/white.png</texture>
					<top>0</top>
					<bordersize>5</bordersize>
					<aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
				</control>
				
				<control type="group">
					<animation type="focus">
						<effect type="zoom" center="50%,50%" start="100" end="101.3,102.5" time="150" easing="inout" />
					</animation>
					<animation type="unfocus">
						<effect type="zoom" center="50%,50%" start="101.3,102.5" end="100" time="150" easing="inout" />
					</animation>
					<top>10</top>
					<left>10</left>
					<bottom>10</bottom>
					<right>10</right>
					<control type="image">
						<texture background="true">$VAR[ImageLayout_fanart]</texture>
					</control>
					<control type="image">
						<decscription>better use hardcoded</decscription>
						<top>45%</top>
						<texture colordiffuse="ff131313">diffuse/episodeinfogradient.png</texture>
					</control>
					
					
				</control>
					
				<control type="group">
					<bottom>3</bottom>
					<include content="var_rating_workaraound">
						<param name="rating" value="tvdb" />
						<param name="rating_image" value="tvdb" />
					</include>
					<include content="var_rating_workaraound">
						<param name="rating" value="themoviedb" />
						<param name="rating_image" value="themoviedb" />
					</include>
					<include content="var_rating_workaraound">
						<param name="rating" value="imdb" />
						<param name="rating_image" value="imdb" />
					</include>
					<control type="image">
						<visible>
						 !String.IsEmpty(ListItem.Rating) + [
						 String.IsEmpty(ListItem.Rating(tvdb)) + 
						 String.IsEmpty(ListItem.Rating(themoviedb)) + 
						 String.IsEmpty(ListItem.Rating(imdb)) + 
						 String.IsEmpty(ListItem.Rating(metacritic)) + 
						 String.IsEmpty(ListItem.Rating(tomatometerallaudience)) + 
						 String.IsEmpty(ListItem.Rating(tomatometerallcritics)) + 
						 String.IsEmpty(ListItem.Rating(tomatometeravgaudience)) + 
						 String.IsEmpty(ListItem.Rating(tomatometeravgcritics))
						 ]
						</visible>
						<bottom>15</bottom>
						<right>60</right>
						<width>100</width>
						<height>25</height>
						<texture>flags/ratings/star.png</texture>
						<aspectratio align="right">keep</aspectratio>
					</control>
				</control>
				<control type="button">
					<visible>!String.IsEmpty(Container(50352).ListItem(0).Genre)</visible>
					<align>center</align>
					<textoffsetx>10</textoffsetx>
					
					<!-- <textcolor>$PARAM[tc]</textcolor>
					<disabledcolor>$PARAM[tc]</disabledcolor>
					<texturefocus border="2" colordiffuse="$PARAM[tc]">frames/frame.png</texturefocus>
					<texturenofocus border="2" colordiffuse="$PARAM[tc]">frames/frame.png</texturenofocus> -->
					<textcolor>white</textcolor>
					<disabledcolor>white</disabledcolor>
					<texturefocus border="2" colordiffuse="white">frames/frame.png</texturefocus>
					<texturenofocus border="2" colordiffuse="white">frames/frame.png</texturenofocus>
					<enable>false</enable>
					<bottom>15</bottom>
					<left>15</left>
					<width min="32">auto</width>
					<height>30</height>
					<font>debugtiny</font>
					<label>$INFO[ListItem.Genre]</label>
				</control>
				<control type="label">
					<bottom>80</bottom>
					<left>15</left>
					<width>auto</width>
					<height>30</height>
					<font>MenucontrolItem</font>
					<!-- <textcolor>$PARAM[tc]</textcolor> -->
					<textcolor>white</textcolor>
					<label>Nächste Folge : $INFO[ListItem.Season,Staffel  [B],[/B]]$INFO[ListItem.Episode,   Folge  [B],[/B]]</label>
				</control>
				<control type="label">
					<bottom>55</bottom>
					<left>15</left>
					<width>auto</width>
					<height>30</height>
					<font>MenucontrolItem</font>
					<!-- <textcolor>$PARAM[tc]</textcolor> -->
					<textcolor>white</textcolor>
					<label>$INFO[ListItem.Title,[B],[/B]]</label>
				</control>
				<control type="progress">
					<visible>Integer.IsGreater(ListItem.PercentPlayed,0) + ListItem.IsResumable</visible>
					<visible>!Container.Content(sets)</visible>
					<bottom>52</bottom>
					<left>13</left>
					<width>460</width>
					<height>2</height>
					<align>left</align>
					<!-- 
					<texturebg colordiffuse="$VAR[color_spotlightlib_background_layer1]">colors/white.png</texturebg>
					<midtexture colordiffuse="$VAR[color_spotlightlib_accent]">colors/white.png</midtexture>
					-->
					<info>ListItem.PercentPlayed</info>
				</control>
				<include condition="$PARAM[is_focused] + false" content="FocusOverlay">
					<param name="diffusedimtext" value="artworkdiffuse/landscape.png" />
					<param name="bordersize" value="5" />
				</include>
			</control>
				
			
		</definition>
	</include>
</includes>
