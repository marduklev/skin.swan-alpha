<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="osd_channellayout">
		<control type="group">
			<width>$PARAM[width]</width>
			<height>$PARAM[height]</height>
			<animation effect="fade" end="60" condition="!$PARAM[is_focused]">conditional</animation>
			<control type="image">
				<visible>$PARAM[is_focused]</visible>
				<description>focus frame bad if item bg match global bg</description>
				<texture colordiffuse="white">colors/white.png</texture>
				<top>0</top>
				<aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
			</control>
			<control type="image">
				<description>tile bg</description>
				<texture colordiffuse="ff131313">colors/white.png</texture>
				<top>0</top>
				<bordersize>5</bordersize>
				<aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
			</control>
			<control type="group">
				<left>10</left>
				<right>10</right>
				<control type="image">
					<description>diffused previewthumb wished for pvrchannelguide</description>
					<top>10</top>
					<left>10</left>
					<width>40%</width>
					<height>80%</height>
					<texture fallback="defaulttvshows.png">$VAR[ChannelStudio_Icon]</texture>
					<aspectratio scalediffuse="false" align="left" aligny="center">keep</aspectratio>
				</control>
				<control type="textbox">
					<description>genre, like to have it framed but button wont work good</description>
					<visible>!String.IsEmpty(ListItem.Genre)</visible>
					<bottom>15</bottom>
					<left>15</left>
					<width>55%</width>
					<height>40</height>
					<aligny>center</aligny>
					<font>notosans_15_bold</font>
					<textcolor>white</textcolor>
					<label>$INFO[ListItem.Genre]</label>
				</control>
				<control type="progress">
					<visible>ListItem.HasEpg</visible>
					<left>10</left>
					<right>10</right>
					<bottom>10</bottom>
					<height>2</height>
					<align>left</align>
					<info>ListItem.Progress</info>
				</control>
			</control>
			<control type="textbox">
				<top>10</top>
				<right>20</right>
				<height>25</height>
				<width>45%</width> 
				<info>listitem.title</info>
				<font>notosans_15_bold</font>
				<textcolor>white</textcolor>
				<align>right</align>
				<aligny>center</aligny>
			</control>
			<control type="textbox">
				<description>item description e.g. plot</description>
				<autoscroll>$PARAM[is_focused]</autoscroll>
				<top>40</top>
				<right>20</right>
				<bottom>70</bottom>
				<width>45%</width> 
				<label>$VAR[plot]</label>
				<font>notosans_15_bold</font>
				<textcolor>midgrey</textcolor>
				<align>right</align>
				<aligny>center</aligny>
			</control>
			<control type="image">
				<bottom>33</bottom>
				<right>15</right>
				<width>35</width>
				<height>35</height>
				<bordersize>5</bordersize>
				<animation effect="fade" start="100" end="60" condition="ListItem.IsRecording" loop="true" time="1000">conditional</animation>
				<aspectratio align="right">keep</aspectratio>
				<texture colordiffuse="$VAR[PVRTimerIcon_color_fo]">$VAR[PVR_indicator]</texture>
			</control>
			<control type="textbox">
				<bottom>15</bottom>
				<right>20</right>
				<align>right</align>
				<height>25</height>
				<font>notosans_15_bold</font>
				<textcolor>white</textcolor>
				<label>$INFO[ListItem.StartTime] - $INFO[ListItem.EndTime]</label>
			</control>
		</control>
	</include>
	
	<include name="grid_layout">
		<control type="image" id="14">
			<description>main bg</description>
			<bordersize>$PARAM[bordersize]</bordersize>
			<texture colordiffuse="$VAR[color_grid_item_bg_$PARAM[item_color]]">colors/white.png</texture>
		</control>
		<control type="image" id="1">
			<bordersize>$PARAM[bordersize]</bordersize>
			<texture border="2" colordiffuse="$VAR[color_grid_item_frame_$PARAM[item_color]]">frames/frame.png</texture>
		</control>
		<control type="label" id="1">
			<left>10</left>
			<width>30</width>
			<height>32</height>
			<font>notosans_20_regular</font>
			<textcolor>$VAR[color_grid_item_text_main_$PARAM[item_color]]</textcolor>
			<label>[B]$INFO[ListItem.Label][/B]</label>
		</control>
		<control type="label" id="1">
			<visible>!String.IsEmpty(ListItem.Genre)</visible>
			<left>10</left>
			<width>30</width>
			<height>78</height>
			<font>notosans_18_regular</font>
			<textcolor>$VAR[color_grid_item_text_accent_$PARAM[item_color]]</textcolor>
			<label>$INFO[ListItem.Genre]</label>
		</control>
		<control type="label" id="1">
			<visible>Control.IsVisible(52) + !String.IsEmpty(ListItem.EpisodeName)</visible>
			<left>10</left>
			<bottom>28</bottom>
			<width>30</width>
			<height>25</height>
			<font>notosans_16_regular</font>
			<textcolor>$VAR[color_grid_item_text_secondary_$PARAM[item_color]]</textcolor>
			<label>$INFO[ListItem.Season,$LOCALIZE[20373] , • ]$INFO[ListItem.Episode,$LOCALIZE[20452] [B],[/B]  ]$INFO[ListItem.EpisodeName,,]</label>
		</control>
		<control type="label" id="1">
			<description>i can workaround a fake fadelabel using delays, but to tired</description>
			<visible>Control.IsVisible(51) + String.IsEmpty(Window(home).Property(videofullcreen_pvrgrid))</visible>
			<visible>!String.IsEmpty(ListItem.EpisodeName)</visible>
			<left>10</left>
			<bottom>10</bottom>
			<width>30</width>
			<height>25</height>
			<font>notosans_18_regular</font>
			<textcolor>$VAR[color_grid_item_text_secondary_$PARAM[item_color]]</textcolor>
			<label>[COLOR $VAR[color_grid_item_text_accent_$PARAM[item_color]]]$VAR[epg_special,, | ][/COLOR]$INFO[ListItem.Season,$LOCALIZE[20373] , • ]$INFO[ListItem.Episode,$LOCALIZE[20452] [B],[/B]  ]$INFO[ListItem.EpisodeName,,]</label>
		</control>
		<control type="label" id="1">
			<visible>!Control.IsVisible(50) + String.IsEmpty(Window(home).Property(videofullcreen_pvrgrid)) + [ListItem.IsPremiere | ListItem.IsNew | ListItem.IsFinale | ListItem.IsLive]</visible>
			<left>10</left>
			<bottom>8</bottom>
			<width>30</width>
			<height>25</height>
			<font>notosans_18_bold</font>
			<textcolor>$VAR[color_grid_item_text_accent_$PARAM[item_color]]</textcolor>
			<label>[I]Live[/I]</label>
			<label>$VAR[epg_special]</label>
		</control>
		<control type="image" id="1">
			<animation effect="fade" start="100" end="50" condition="ListItem.IsRecording" loop="true" delay="250" time="1000">conditional</animation>
				<bottom>3</bottom>
				<right>7</right>
				<bordersize>3</bordersize>
				<height>30</height>
				<aspectratio align="right" aligny="center">keep</aspectratio>
			<texture colordiffuse="$VAR[PVRTimerIcon_color_$PARAM[item_color]]" diffuse="colors/white.png">$VAR[PVR_indicator]</texture>
		</control>
		<control type="image" id="1">
			<animation effect="slide" end="-30,0" condition="ListItem.IsRecording | ListItem.HasReminder | ListItem.IsPlayable">conditional</animation>
				<bottom>3</bottom>
				<right>5</right>
				<bordersize>3</bordersize>
				<height>30</height>
				<aspectratio align="right" aligny="center">keep</aspectratio>
			<texture colordiffuse="$VAR[color_grid_item_text_main_$PARAM[item_color]]">$VAR[PVRTimerIcon_timer]</texture>
		</control>
	</include>
	
	<!-- 	tested info right
		<right>430</right>
		<height>820</height> 
	-->
	<include name="tawnyowlnest">
		<nested />
	</include>
	
	<include name="epggrid">
		<control type="epggrid" id="$PARAM[grid_id]">
			<viewtype label="$PARAM[grid_vietypelabel]">list</viewtype>
			<left>100</left>
			<right>50</right>
			<include content="tawnyowlnest" condition="String.IsEmpty(Window(home).Property(videofullcreen_pvrgrid))">
				<top>150</top>	
				<height>630</height>
			</include>
			<include content="tawnyowlnest" condition="!String.IsEmpty(Window(home).Property(videofullcreen_pvrgrid))">
				<top>430</top>	
				<height>378</height>
			</include>
			<include content="tawnyowlnest" condition="Skin.HasSetting(Grid_greatertimespan)">
				<timeblocks>15</timeblocks>	
				<rulerunit>3</rulerunit>
			</include>
			<include content="tawnyowlnest" condition="Skin.HasSetting(Grid_commontimespan) | [!Skin.HasSetting(Grid_greatertimespan) + !Skin.HasSetting(Grid_commontimespan) + !Skin.HasSetting(Grid_lesstimespan)]">
				<timeblocks>30</timeblocks>	
				<rulerunit>6</rulerunit>
			</include>
			<include content="tawnyowlnest" condition="Skin.HasSetting(Grid_lesstimespan)">
				<timeblocks>60</timeblocks>	
				<rulerunit>12</rulerunit>
			</include>
			<scrolltime tween="cubic" easing="inout">300</scrolltime>
			<onleft>menu</onleft>
			<onright>menu</onright>
			<onup>11</onup>
			<orientation>$PARAM[orientation]</orientation>
			<progresstexture flipx="true" colordiffuse="$VAR[color_grid_epg_progress_timeline]">diffuse/gradientborderleft.png</progresstexture>
			
			<rulerdatelayout width="1500" height="54">
				<control type="label">
					<description>intented hidden placed on top 1st row of group - dont show if header is present and showing ruler currentdate</description>
					<left>400</left>
					<width>1700</width>
					<height>50</height>
					<font>font24</font>
					<label>$INFO[ListItem.Label]</label>
					<textcolor>00ffffff</textcolor>
					<align>left</align>
					<aligny>center</aligny>
				</control>
			</rulerdatelayout>
			<rulerlayout height="35" width="40">
				<control type="image" id="1">
					<description>rulerlayout placed on top 2st row of group</description>
					<description>id 1 reserved for time full bar</description>
					<width>40</width>
					<height>29</height>
					<left>0</left>
					<top>0</top>
					<texture colordiffuse="$VAR[color_grid_timeline_bg]">colors/white.png</texture>
				</control>
				<control type="label" id="2">
					<description>rulerlayout placed on top 2st row of group</description>
					<description>id 2 reserved for time</description>
					<left>10</left>
					<top>0</top>
					<width>34</width>
					<height>29</height>
					<font>notosans_25_regular_l</font>
					<aligny>center</aligny>
					<textcolor>$VAR[color_grid_timeline_text]</textcolor>
					<selectedcolor>selected</selectedcolor>
					<align>left</align>
					<label>[COLOR $VAR[color_grid_epg_progress_timeline]]|[/COLOR]$INFO[ListItem.Label,,]</label>
				</control>
			</rulerlayout>
			
			<channellayout height="$PARAM[height]" width="300" condition="!Skin.HasSetting(Grid_$PARAM[grid_id]_HideChannelLabels)">
				<control type="image" id="1">
					<texture colordiffuse="$VAR[color_grid_channel_bg_nf]">colors/white.png</texture>
					<bordersize>2</bordersize>
				</control>
				<control type="label">
					<left>10</left>
					<width>20</width>
					<height>$PARAM[height]</height>
					<font>notosans_16_bold</font>
					<align>left</align>
					<aligny>center</aligny>
					<textcolor>$VAR[color_grid_channel_text_nf]</textcolor>
					<selectedcolor>cyan</selectedcolor>
					<label>$INFO[ListItem.ChannelNumberLabel]</label>
				</control>
				<control type="textbox">
					<left>40</left>
					<right>145</right>
					<height>$PARAM[height]</height>
					<font>notosans_16_bold</font>
					<align>left</align>
					<aligny>center</aligny>
					<textcolor>$VAR[color_grid_channel_text_nf]</textcolor>
					<selectedcolor>cyan</selectedcolor>
					<label>$INFO[ListItem.ChannelName]</label>
				</control>
				<control type="image">
					<centertop>50%</centertop>
					<right>15</right>
					<width>70%</width>
					<height>70%</height>
					<aspectratio align="right">keep</aspectratio>
					<texture fallback="defaulttvshows.png">$VAR[ChannelStudio_Icon]</texture>
				</control>
			</channellayout>
			
			<focusedchannellayout height="$PARAM[height]" width="300" condition="!Skin.HasSetting(Grid_$PARAM[grid_id]_HideChannelLabels)">
				<control type="image" id="1">
					<visible>!Control.HasFocus(11)</visible>
					<animation effect="zoom" start="100" end="104,100" center="100%,50%" time="200" tween="cubic" easing="in">Focus</animation>
					<texture colordiffuse="$VAR[color_grid_channel_bg_fo]">colors/white.png</texture>
					<bordertexture border="2" colordiffuse="$VAR[color_grid_channel_focusframe]">frames/frame.png</bordertexture>
					<bordersize>2</bordersize>
				</control>
				<control type="image" id="1">
					<visible>Control.HasFocus(11)</visible>
					<texture colordiffuse="$VAR[color_grid_channel_bg_nf]">colors/white.png</texture>
					<bordersize>2</bordersize>
				</control>
				<control type="label">
					<left>10</left>
					<width>20</width>
					<height>$PARAM[height]</height>
					<font>notosans_16_bold</font>
					<align>left</align>
					<aligny>center</aligny>
					<textcolor>$VAR[color_grid_channel_text_fo]</textcolor>
					<selectedcolor>cyan</selectedcolor>
					<label>$INFO[ListItem.ChannelNumberLabel]</label>
				</control>
				<control type="textbox">
					<left>40</left>
					<right>145</right>
					<height>$PARAM[height]</height>
					<font>notosans_16_bold</font>
					<align>left</align>
					<aligny>center</aligny>
					<textcolor>$VAR[color_grid_channel_text_fo]</textcolor>
					<selectedcolor>cyan</selectedcolor>
					<label>$INFO[ListItem.ChannelName]</label>
				</control>
				<control type="image">
					<centertop>50%</centertop>
					<right>15</right>
					<width>70%</width>
					<height>70%</height>
					<aspectratio align="right">keep</aspectratio>
					<texture fallback="defaulttvshows.png">$VAR[ChannelStudio_Icon]</texture>
				</control>
				
			</focusedchannellayout>
			
			<channellayout height="$PARAM[height]" width="100" condition="Skin.HasSetting(Grid_$PARAM[grid_id]_HideChannelLabels)">
				<control type="image" id="1">
					<texture colordiffuse="$VAR[color_grid_channel_bg_nf]">colors/white.png</texture>
					<bordersize>4</bordersize>
				</control>
				<control type="image">
					<centerleft>50%</centerleft>
					<centertop>50%</centertop>
					<width>45</width>
					<height>45</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture fallback="defaulttvshows.png">$VAR[ChannelStudio_Icon]</texture>
				</control>
			</channellayout>
			<focusedchannellayout height="$PARAM[height]" width="100" condition="Skin.HasSetting(Grid_$PARAM[grid_id]_HideChannelLabels)">
				<control type="image" id="1">
					<texture colordiffuse="$VAR[color_grid_channel_bg_fo]">colors/white.png</texture>
					<bordertexture border="2" colordiffuse="$VAR[color_grid_channel_focusframe]">frames/frame.png</bordertexture>
					<bordersize>4</bordersize>
				</control>
				<control type="image">
					<centerleft>50%</centerleft>
					<centertop>50%</centertop>
					<width>45</width>
					<height>45</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture fallback="defaulttvshows.png">$VAR[ChannelStudio_Icon]</texture>
				</control>
			</focusedchannellayout>
			
			<itemlayout height="$PARAM[height]" width="40">
				<include content="grid_layout">
					<param name="is_unfocused" value="true" />
					<param name="item_color" value="nf" />
					<param name="bordersize" value="3" />
				</include>
			</itemlayout>
			<focusedlayout height="$PARAM[height]" width="40">
				<include content="grid_layout">
					<param name="is_unfocused" value="false" />
					<param name="item_color" value="fo" />
					<param name="bordersize" value="1" />
				</include>
			</focusedlayout>
		</control>
		
		<control type="image">
			<visible>true</visible>
			<left>-50</left>
			<right>-50</right>
			<bottom>-50</bottom>
			<height>320</height>
			<texture border="15" colordiffuse="$VAR[color_grid_infopanel_bg]">buttons/30x30/boldframe.png</texture>
		</control>
		<control type="group">
			<description>info</description>
			<right>100</right>
			<bottom>20</bottom>
			<left>100</left>
			<height>250</height>
			<control type="textbox">
				<visible>String.IsEqual(ListItem.Icon,defaulttvshows.png)</visible>
				<top>25</top>
				<left>0</left>
				<width>230</width>
				<aligny>center</aligny>
				<align>center</align>
				<height min="30" max="75">auto</height>
				<font>notosans_22_regular_lowlined</font>
				<textcolor>$VAR[color_grid_infopanel_text_secondary]</textcolor>
				<label>[B]$INFO[ListItem.ChannelName][/B]</label>
			</control>
			<control type="image">
				<top>35</top>
				<height>160</height>
				<width>240</width>
				<left>0</left>
				<bordersize>2</bordersize>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<texture fallback="defaulttvshows.png">$VAR[ChannelStudio_Icon]</texture>
			</control>
			<control type="textbox">
				<top>10</top>
				<left>290</left>
				<align>left</align>
				<height max="100">auto</height>
				<width>300</width>
				<font>notosans_20_bold_lowline</font>
				<aligny>top</aligny>
				<textcolor>$VAR[color_grid_infopanel_text_main]</textcolor>
				<selectedcolor>selected</selectedcolor>
				<label>$INFO[ListItem.year,   |  ,][CR]$INFO[ListItem.genre][CR]$INFO[ListItem.mpaa,   |  ,]</label>
			</control>
			<control type="label">
				<visible>!String.IsEmpty(ListItem.Duration)</visible>
				<top>95</top>
				<left>290</left>
				<align>left</align>
				<height>120</height>
				<width>300</width>
				<font>notosans_20_bold</font>
				<aligny>top</aligny>
				<textcolor>$VAR[color_grid_infopanel_text_main]</textcolor>
				<selectedcolor>selected</selectedcolor>
				<label>$INFO[ListItem.StartTime] - $INFO[ListItem.EndTime]</label>
			</control>
			<control type="label">
				<visible>!String.IsEmpty(ListItem.Duration)</visible>
				<top>130</top>
				<left>290</left>
				<align>left</align>
				<height>120</height>
				<width>300</width>
				<font>notosans_20_bold</font>
				<aligny>top</aligny>
				<textcolor>$VAR[color_universalcontainer_watchedoverlay_progressbar_progress]</textcolor>
				<selectedcolor>selected</selectedcolor>
				<label>$VAR[ListItemDuration]</label>
			</control>
			<control type="progress">
				<description>pvr</description>
				<top>125</top>
				<left>290</left>
				<align>left</align>
				<height>3</height>
				<width>300</width>
				<visible>ListItem.HasEpg</visible>
				<info>ListItem.Progress</info>
			</control>
			
			<include content="epg_infopanel">
				<param name="right" value="50" />
				<param name="visible" value="String.IsEmpty(ListItem.EpgEventIcon)" />
			</include>
			<include content="epg_infopanel">
				<param name="right" value="470" />
				<param name="visible" value="!String.IsEmpty(ListItem.EpgEventIcon)" />
			</include>
			
			<control type="image">
				<visible>!String.IsEmpty(ListItem.EpgEventIcon)</visible>
				<description>or also  | !String.IsEmpty(ListItem.Art(thumb))</description>
				<width>410</width>
				<right>20</right>
				<top>20</top>
				<bottom>20</bottom>
				<bordersize>2</bordersize>
				<aspectratio align="right" aligny="center">stretch</aspectratio>
				<bordertexture colordiffuse="$VAR[color_grid_infopanel_text_main]">colors/white80.png</bordertexture>
				<texture>$INFO[ListItem.EpgEventIcon]</texture>
			</control>
		</control>
	</include>
	
	<include name="epg_infopanel">
		<control type="grouplist">
			<top>20</top>
			<bottom>20</bottom>
			<left>670</left>
			<orientation>vertical</orientation>
			<visible>$PARAM[visible]</visible>
			<right>$PARAM[right]</right>
			<control type="textbox">
				<description>ListItem.EpgEventTitle vs ListItem.Title ??</description>
				<height min="42" max="84">auto</height>
				<align>left</align>
				<font>montserrat_32_semibold</font>
				<aligny>bottom</aligny>
				<wrapmultiline>true</wrapmultiline>
				<textcolor>$VAR[color_grid_infopanel_text_main]</textcolor>
				<selectedcolor>selected</selectedcolor>
				<label>$INFO[ListItem.Title]</label>
			</control>
			<control type="textbox">
				<top>-5</top>
				<visible>!String.IsEmpty(ListItem.EpisodeName)</visible>
				<height min="28" max="56">auto</height>
				<align>left</align>
				<font>montserrat_22_semibold_lowline</font>
				<aligny>bottom</aligny>
				<wrapmultiline>true</wrapmultiline>
				<textcolor>$VAR[color_grid_infopanel_text_accent]</textcolor>
				<selectedcolor>selected</selectedcolor>
				<label>$INFO[ListItem.Season,$LOCALIZE[20373] , • ]$INFO[ListItem.Episode,$LOCALIZE[20452] [B],[/B]  ]$INFO[ListItem.EpisodeName,,]</label>
			</control>
			<control type="textbox">
				<top>5</top>
				<description>plot</description>
				<height>100</height>
				<align>justify</align>
				<font>montserrat_20_semibold_lowlined</font>
				<aligny>bottom</aligny>
				<wrapmultiline>true</wrapmultiline>
				<textcolor>$VAR[color_grid_infopanel_text_secondary]</textcolor>
				<selectedcolor>selected</selectedcolor>
				<label>$VAR[plot]</label>
			</control>		
		</control>
	</include>
	<variable name="PVRTimerIcon_color_fo">
		<value condition="ListItem.IsRecording"></value>
		<value>$VAR[color_grid_item_text_main_fo]</value>
	</variable>
	<variable name="PVRTimerIcon_color_nf">
		<value condition="ListItem.IsRecording"></value>
		<value>$VAR[color_grid_item_text_main_nf]</value>
	</variable>
	<variable name="epg_special">
		<value condition="ListItem.IsPremiere">• $LOCALIZE[838] •</value>
		<value condition="ListItem.IsNew">$LOCALIZE[842][/B]</value> 
		<value condition="ListItem.IsFinale">$LOCALIZE[849] $LOCALIZE[20452]</value>
		<value condition="ListItem.IsLive">[I]$LOCALIZE[839][/I]</value>
	</variable>
	<variable name="PVR_indicator">
		<value condition="ListItem.IsRecording">pvr/record.png</value>
		<value condition="ListItem.HasReminder">pvr/bell.png</value>
		<value condition="ListItem.IsPlayable">icons/play.png</value>
	</variable>
	<variable name="PVRTimerIcon_timer">
		<value condition="[ListItem.HasTimerSchedule + ListItem.TimerHasError] | [ListItem.HasTimer + ListItem.TimerHasError] | [ListItem.HasTimerSchedule + ListItem.TimerHasConflict] | [ListItem.HasTimer + ListItem.TimerHasConflict]">pvr/pvr-hastimererror.png</value>
		<value condition="ListItem.HasRecording">pvr/pvr-hasrecording.png</value>
		<value condition="ListItem.HasTimerSchedule + !ListItem.TimerIsActive">pvr/pvr-hastimerscheduledisabled.png</value>
		<value condition="ListItem.HasTimer + !ListItem.TimerIsActive">pvr/pvr-hastimerdisabled.png</value>
		<value condition="ListItem.HasTimerSchedule">pvr/pvr-hastimerschedule.png</value>
		<value condition="ListItem.HasTimer">pvr/pvr-hastimer.png</value>
	</variable>
	
	
<!-- 
$INFO[PVR.NowRecordingTitle]       Title of the programme being recorded 	
$INFO[PVR.NowRecordingDateTime]       Start date and time of the current recording]       
$INFO[PVR.NowRecordingChannel]       Channel number that's being recorded]       
$INFO[PVR.NextRecordingTitle]       Title of the next programme that will be recorded]       
$INFO[PVR.NextRecordingDateTime]       Start date and time of the next recording]       
$INFO[PVR.NextRecordingChannel]       Channel name of the next recording]       
$INFO[PVR.BackendName]       Name of the backend being used]       
$INFO[PVR.BackendVersion]       Version of the backend that's being used]       
$INFO[PVR.BackendHost]       Backend hostname]       
$INFO[PVR.BackendDiskSpace]       Available diskspace on the backend]       
$INFO[PVR.BackendChannels]       Number of available channels the backend provides]       
$INFO[PVR.BackendTimers]       Number of timers set for the backend]       
$INFO[PVR.BackendRecordings]       Number of recording available on the backend]       
$INFO[PVR.BackendDiskspace]       Free diskspace available for recordings on the backend]       
$INFO[PVR.BackendNumber]       Backend number]       
$INFO[PVR.TotalDiscSpace]       Total diskspace available for recordings]       
$INFO[PVR.NextTimer]       Next timer date]       
$INFO[PVR.EpgEventDuration[(format)]]       Returns the duration of the currently played title on TV. See ListItem.Duration for optinional formatting options]       
$INFO[PVR.EpgEventElapsedTime[(format)]]       Returns the time position of the currently played title on TV. See ListItem.Duration for optinional formatting options]       
$INFO[PVR.EpgEventRemainingTime[(format)]]       Returns the remaining time for currently playing epg event. See ListItem.Duration for optinional formatting options]       v18
$INFO[PVR.EpgEventFinishTime[(format)]]       Returns the time the currently playing epg event will end. See ListItem.Duration for optinional formatting options]       v18
$INFO[PVR.EpgEventSeekTime[(format)]]       Returns the seek time of the currently playing epg event. See ListItem.Duration for optinional formatting options]       v18
$INFO[PVR.EpgEventProgress]       Returns the position of currently played title on TV as integer]       
$INFO[PVR.TimeShiftStart[(format)]]       Start position of the timeshift. See ListItem.Duration for optinional formatting options]       
$INFO[PVR.TimeShiftEnd[(format)]]       End position of the timeshift. See ListItem.Duration for optinional formatting options]       
$INFO[PVR.TimeShiftCur[(format)]]       Current position of the timeshift. See ListItem.Duration for optinional formatting options
$INFO[PVR.TimeShiftOffset[(format)]]       Current offset of the timeshift. See ListItem.Duration for optinional formatting options]       
$INFO[PVR.TimeShiftProgress]       Returns the position of currently timeshifted title on TV as interger]       
$INFO[PVR.ActStreamClient]       Stream client name]       
$INFO[PVR.ActStreamDevice]       Stream device name]       
$INFO[PVR.ActStreamStatus]       Status of the stream]       
$INFO[PVR.ActStreamSignal]       Signal quality of the stream]       
$INFO[PVR.ActStreamSnr]       Signal to noise ratio of the stream]       
$INFO[PVR.ActStreamBer]       Bit error rate of the stream]       
$INFO[PVR.ActStreamUnc]       UNC value of the stream]       
$INFO[PVR.ActStreamVideoBitRate]       Video bitrate of the stream]       
$INFO[PVR.ActStreamAudioBitRate]       Audio bitrate of the stream]       
$INFO[PVR.ActStreamDolbyBitRate]       Dolby bitrate of the stream]       
$INFO[PVR.ActStreamProgrSignal]       Signal quality of the programme]       
$INFO[PVR.ActStreamProgrSnr]       Signal to noise ratio of the programme]       
$INFO[PVR.ActStreamEncryptionName]       Encryption used on the stream]       
$INFO[PVR.TVNowRecordingTitle]       Title of the tv programme being recorded]       v17 Addition
$INFO[PVR.TVNowRecordingDateTime]       Start date and time of the current tv recording]       v17 Addition
$INFO[PVR.TVNowRecordingChannel]       Channel name of the current tv recording]       v17 Addition
$INFO[PVR.TVNowRecordingChannelIcon]       Icon of the current recording TV channel]       v17 Addition
$INFO[PVR.TVNextRecordingTitle]       Title of the next tv programme that will be recorded]       v17 Addition
$INFO[PVR.TVNextRecordingDateTime]       Start date and time of the next tv recording]       v17 Addition
$INFO[PVR.TVNextRecordingChannel]       Channel name of the next tv recording]       v17 Addition
$INFO[PVR.TVNextRecordingChannelIcon]       Icon of the next recording tv channel]       v17 Addition
$INFO[PVR.RadioNowRecordingTitle]       Title of the radio programme being recorded]       v17 Addition
$INFO[PVR.RadioNowRecordingDateTime]       Start date and time of the current radio recording]       v17 Addition
$INFO[PVR.RadioNowRecordingChannel]       Channel name of the current radio recording]       v17 Addition
$INFO[PVR.RadioNowRecordingChannelIcon]       Icon of the current recording radio channel]       v17 Addition
$INFO[PVR.RadioNextRecordingTitle]       Title of the next radio programme that will be recorded]       v17 Addition
$INFO[PVR.RadioNextRecordingDateTime]       Start date and time of the next radio recording]       v17 Addition
$INFO[PVR.RadioNextRecordingChannel]       Channel name of the next radio recording]       v17 Addition
$INFO[PVR.ChannelNumberInput]       Label displaying the number the user entered on remote or keyboard]       v18
$INFO[PVR.TimeshiftProgressDuration]       Returns the duration of the PVR timeshift progress in the format hh:mm:ss. hh: will be omitted if hours value is zero]       v18
$INFO[PVR.TimeshiftProgressDuration(format)]       Returns the duration of the PVR timeshift progress in different formats, hours (hh), minutes (mm) or seconds (ss)]       v18
$INFO[PVR.TimeshiftProgressStartTime]       Returns the start time of the PVR timeshift progress in the format hh:mm:ss. hh: will be omitted if hours value is zero]       v18
$INFO[PVR.TimeshiftProgressStartTime(format)]       Returns the start time of the PVR timeshift progress in different formats, hours (hh), minutes (mm) or seconds (ss)]       v18
$INFO[PVR.TimeshiftProgressEndTime]       Returns the end time of the PVR timeshift progress in the format hh:mm:ss. hh: will be omitted if hours value is zero]       v18
$INFO[PVR.TimeshiftProgressEndTime(format)]       Returns the end time of the PVR timeshift progress in different formats, hours (hh), minutes (mm) or seconds (ss)]       v18
$INFO[PVR.TimeshiftProgressPlayPos]       Returns the percentage of the current play position within the PVR timeshift progress]       v18
$INFO[PVR.TimeshiftProgressEpgStart]       Returns the percentage of the start of the currently playing epg event within the PVR timeshift progress]       v18
$INFO[PVR.TimeshiftProgressEpgEnd]       Returns the percentage of the end of the currently playing epg event within the PVR timeshift progress]       v18
$INFO[PVR.TimeshiftProgressBufferStart]       Returns the percentage of the start of the timeshift buffer within the PVR timeshift progress]       v18
$INFO[PVR.TimeshiftProgressBufferEnd]       Returns the percentage of the end of the timeshift buffer within the PVR timeshift progress]       v18
$INFO[PVR.TimeShiftSeekbar]       This is the equivalent of Player.Seekbar, but for LiveTV (can be used in a slider control and indicates the position being seeked to) 	v19
 -->

</includes>
