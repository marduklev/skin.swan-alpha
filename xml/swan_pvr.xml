<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="osd_channellayout">
		<control type="group">
			<width>$PARAM[width]</width>
			<height>$PARAM[height]</height>
			<animation effect="fade" end="60" condition="!$PARAM[is_focused]">conditional</animation>
			<control type="image">
				<visible>$PARAM[is_focused]</visible>
				<description>focus frame bad if item bg match global bg</description>
				<texture colordiffuse="white">colors/white.png</texture>
				<top>0</top>
				<aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
			</control>
			<control type="image">
				<description>tile bg</description>
				<texture colordiffuse="ff131313">colors/white.png</texture>
				<top>0</top>
				<bordersize>5</bordersize>
				<aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
			</control>
			
			<control type="group">
				<left>10</left>
				<right>10</right>
				<control type="image">
					<description>diffused fanart</description>
					<top>10</top>
					<left>10</left>
					<width>40%</width>
					<height>80%</height>
					<texture background="true">$VAR[ImageLayout_fanart]</texture>
					<aspectratio scalediffuse="false" align="left" aligny="center">keep</aspectratio>
				</control>
				<control type="textbox">
					<description>genre, like to have it framed but button wont work good</description>
					<visible>!String.IsEmpty(ListItem.Genre)</visible>
					<bottom>15</bottom>
					<left>15</left>
					<width>55%</width>
					<height>40</height>
					<aligny>center</aligny>
					<font>NotoSans_bold15</font>
					<textcolor>white</textcolor>
					<label>$INFO[ListItem.Genre]</label>
				</control>
				<control type="progress">
					<visible>ListItem.HasEpg</visible>
					<left>10</left>
					<right>10</right>
					<bottom>10</bottom>
					<height>2</height>
					<align>left</align>
					<info>ListItem.Progress</info>
				</control>
			</control>
			<control type="textbox">
				<top>10</top>
				<right>20</right>
				<height>25</height>
				<width>45%</width> 
				<info>listitem.title</info>
				<font>NotoSans_bold15</font>
				<textcolor>white</textcolor>
				<align>right</align>
				<aligny>center</aligny>
			</control>
			<control type="textbox">
				<description>item description e.g. plot</description>
				<autoscroll>$PARAM[is_focused]</autoscroll>
				<top>40</top>
				<right>20</right>
				<bottom>70</bottom>
				<width>45%</width> 
				<label>$VAR[plot]</label>
				<font>NotoSans_bold15</font>
				<textcolor>midgrey</textcolor>
				<align>right</align>
				<aligny>center</aligny>
			</control>
			<control type="image">
				<bottom>33</bottom>
				<right>15</right>
				<width>35</width>
				<height>35</height>
				<bordersize>5</bordersize>
				<animation effect="fade" start="100" end="60" condition="ListItem.IsRecording" loop="true" time="1000">conditional</animation>
				<aspectratio align="right">keep</aspectratio>
				<texture colordiffuse="$VAR[PVRTimerIcon_color_fo]">$VAR[PVR_indicator]</texture>
			</control>
			<control type="textbox">
				<bottom>15</bottom>
				<right>20</right>
				<align>right</align>
				<height>25</height>
				<font>NotoSans_bold15</font>
				<textcolor>white</textcolor>
				<label>$INFO[ListItem.StartTime] - $INFO[ListItem.EndTime]</label>
			</control>
		</control>
	</include>
	<!-- grids -->
	
	<!-- colors -->
	grid_progress ff881556
	
	
	
	<include name="grid_test">
		<control type="epggrid" id="$PARAM[grid_id]">
			<top>150</top>
			<description>EPG Grid</description>
			<left>100</left>
			<!-- tested info right
				<right>430</right>
				<height>820</height>
			-->
			<right>100</right>
			<height>610</height>
			<scrolltime tween="cubic" easing="in">300</scrolltime>
			<onleft>menu</onleft><!--  later scrollbar left, scrollbar focus menu -->
			<onright>menu</onright>
			<onup>11</onup>
			<orientation>$PARAM[orientation]</orientation>
			<timeblocks>63</timeblocks>
			<rulerunit>6</rulerunit>
			
			<progresstexture flipx="true" colordiffuse="ff881556">diffuse/gradientborderleft.png</progresstexture>
			
			<rulerdatelayout width="1500" height="55">
				<control type="label">
					<description>placed on top 1st row of group - dont show if header is present and showing system.date</description>
					<description>move to header ?</description>
					<left>400</left>
					<width>1700</width>
					<height>50</height>
					<font>font24</font>
					<label>$INFO[ListItem.Label]</label>
					<textcolor>00000000</textcolor>
					<align>left</align>
					<aligny>center</aligny>
				</control>
			</rulerdatelayout>
			
			<rulerlayout height="35" width="40">
				<control type="image" id="1">
				<description>rulerlayout placed on top 2st row of group</description>
					<description>id 1 reserved for time full bar</description>
					<width>40</width>
					<height>29</height>
					<left>0</left>
					<top>0</top>
					<texture colordiffuse="ff000000">colors/white30.png</texture>
				</control>
				<control type="label" id="2">
				<description>rulerlayout placed on top 2st row of group</description>
					<description>id 2 reserved for time</description>
					<left>10</left>
					<top>0</top>
					<width>34</width>
					<height>29</height>
					<font>font12</font>
					<aligny>center</aligny>
					<textcolor>white</textcolor>
					<selectedcolor>selected</selectedcolor>
					<align>left</align>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</rulerlayout>
			<channellayout height="52" width="100">
				<!-- 
				<control type="image" id="1">
					<texture colordiffuse="grey">colors/white10.png</texture>
					<bordersize>4</bordersize>
				</control>
				-->
				<control type="label">
					<left>5</left>
					<top>5</top>
					<font>font12</font>
					<align>left</align>
					<aligny>center</aligny>
					<textcolor>grey</textcolor>
					<selectedcolor>grey</selectedcolor>
					<label>$INFO[ListItem.ChannelNumberLabel]</label>
				</control>
				<control type="image">
					<centerleft>50%</centerleft>
					<centertop>50%</centertop>
					<width>45</width>
					<height>45</height>
					<aspectratio>keep</aspectratio>
					<texture>$INFO[ListItem.Icon]</texture>
				</control>
			</channellayout>
			
			<focusedchannellayout height="52" width="100">
				<control type="image">
					<width>1920</width>
					<texture colordiffuse="grey">colors/white20.png</texture>
					<bordersize>4</bordersize>
				</control>
				<control type="image" id="1">
					<texture colordiffuse="grey">colors/white10.png</texture>
					<bordertexture border="2" colordiffuse="white">frames/frame.png</bordertexture>
					<bordersize>4</bordersize>
				</control>
				<control type="label">
					<left>5</left>
					<top>5</top>
					<height>35</height>
					<font>debugtiny</font>
					<align>left</align>
					<aligny>center</aligny>
					<textcolor>red</textcolor>
					<selectedcolor>grey</selectedcolor>
					<label>$INFO[ListItem.ChannelNumberLabel]</label>
				</control>
				<control type="image">
					<centerleft>50%</centerleft>
					<centertop>50%</centertop>
					<width>45</width>
					<height>45</height>
					<aspectratio>keep</aspectratio>
					<texture>$INFO[ListItem.Icon]</texture>
				</control>
				
			</focusedchannellayout>
			
			<itemlayout height="52" width="40">
				
				<control type="image" id="14">
					<bordersize>4</bordersize>
					<texture colordiffuse="grey">colors/white10.png</texture>
					<animation effect="fade" end="40" condition="true">conditional</animation>
				</control>
				<control type="image" id="1">
					<bordersize>4</bordersize>
					<animation effect="fade" end="40" condition="true">conditional</animation>
					<texture border="2" colordiffuse="grey">frames/frame.png</texture>
				</control>
				<control type="label" id="1">
					<animation effect="fade" end="40" condition="true">conditional</animation>
					<left>10</left>
					<width>30</width>
					<height>52</height>
					<font>debugtiny</font>
					<aligny>center</aligny>
					<textcolor>grey</textcolor>
					<selectedcolor>selected</selectedcolor>
					<align>left</align>
					<label>$INFO[ListItem.Label]</label>
				</control>
				<control type="image" id="1">
					<visible>ListItem.IsNew | ListItem.IsPremiere | ListItem.IsFinale | ListItem.IsLive</visible>
					<bordersize>12</bordersize>
					<top>-5</top>
					<right>-5</right>
					<width>45</width>
					<height>45</height>
					<aspectratio align="right">keep</aspectratio>
					<texture>pvr/premiere.png</texture>
				</control>
				<control type="image" id="1">
					<animation effect="fade" start="100" end="60" condition="ListItem.IsRecording" loop="true" time="1000">conditional</animation>
					<animation effect="slide" start="0,0" end="-40,0" condition="ListItem.IsNew | ListItem.IsPremiere | ListItem.IsFinale | ListItem.IsLive">Conditional</animation>
					<bordersize>12</bordersize>
					<top>-5</top>
					<right>-5</right>
					<width>45</width>
					<height>45</height>
					<aspectratio align="right">keep</aspectratio>
					<texture colordiffuse="$VAR[PVRTimerIcon_color_nf]" diffuse="colors/white40.png">$VAR[PVR_indicator]</texture>
				</control>
				<control type="image" id="1">
					<bordersize>12</bordersize>
					<top>-5</top>
					<right>23</right>
					<width>45</width>
					<height>45</height>
					<aspectratio align="right">keep</aspectratio>
					<texture colordiffuse="grey" diffuse="colors/white40.png">$VAR[PVRTimerIcon_timer]</texture>
				</control>
			</itemlayout>
			
			<focusedlayout height="52" width="40">
				<!-- <control type="image">
					<width>1920</width>
					<texture colordiffuse="grey">colors/white10.png</texture>
					<bordersize>4</bordersize>
				</control> -->
				<control type="image" id="14">
					<bordersize>4</bordersize>
					<texture colordiffuse="FF3A0079">colors/white60.png</texture>
				</control>
				<control type="image" id="2">
					<texture border="2" colordiffuse="cyan">frames/frame.png</texture>
				</control>
				<control type="label" id="1">
					<left>10</left>
					<width>30</width>
					<height>52</height>
					<font>debugtiny</font>
					<aligny>center</aligny>
					<textcolor>white</textcolor>
					<selectedcolor>selected</selectedcolor>
					<align>left</align>
					<label>$INFO[ListItem.Label]</label>
				</control>
				<control type="image" id="1">
					<visible>ListItem.IsNew | ListItem.IsPremiere | ListItem.IsFinale | ListItem.IsLive</visible>
					<bordersize>12</bordersize>
					<top>-5</top>
					<right>-5</right>
					<width>45</width>
					<height>45</height>
					<aspectratio align="right">keep</aspectratio>
					<texture>pvr/premiere.png</texture>
				</control>
				<control type="image" id="1">
					<animation effect="fade" start="100" end="60" condition="ListItem.IsRecording" loop="true" time="1000">conditional</animation>
					<animation effect="slide" start="0,0" end="-25,0" condition="ListItem.IsNew | ListItem.IsPremiere | ListItem.IsFinale | ListItem.IsLive">Conditional</animation>
					<bordersize>12</bordersize>
					<top>-5</top>
					<right>-5</right>
					<width>45</width>
					<height>45</height>
					<aspectratio align="right">keep</aspectratio>
					<texture colordiffuse="$VAR[PVRTimerIcon_color_fo]">$VAR[PVR_indicator]</texture>
				</control>
				<control type="image" id="1">
					<bordersize>12</bordersize>
					<top>-5</top>
					<right>23</right>
					<width>45</width>
					<height>45</height>
					<aspectratio align="right">keep</aspectratio>
					<texture>$VAR[PVRTimerIcon_timer]</texture>
				</control>
			</focusedlayout>
		</control>
		
		<control type="group">
			<visible>false</visible>
			<description>info</description>
			<visible>Control.IsVisible(50)</visible>
			<right>10</right>
			<top>240</top>
			<width>400</width>
			<height>740</height>
			<control type="image">
				<bordersize>4</bordersize>
				<bordertexture border="2" colordiffuse="white">frames/frame.png</bordertexture>
				<texture colordiffuse="22000000">colors/white.png</texture>
			</control>
			<control type="label">
				<top>10</top>
				<left>10</left>
				<align>left</align>
				<height>30</height>
				<font>debugtiny</font>
				<aligny>center</aligny>
				<textcolor>white</textcolor>
				<selectedcolor>selected</selectedcolor>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type="image">
				<top>65</top>
				<height>130</height>
				<width>210</width>
				<left>10</left>
				<right>300</right>
				<bordersize>2</bordersize>
				<bordertexture border="2" colordiffuse="white">frames/frame.png</bordertexture>
				<aspectratio>scale</aspectratio>
				<texture>$VAR[ImageLayout_landscape]</texture>
			</control>
			<control type="textbox">
				<top>70</top>
				<left>230</left>
				<align>left</align>
				<height>120</height>
				<width>150</width>
				<font>debugtiny</font>
				<aligny>center</aligny>
				<textcolor>white</textcolor>
				<selectedcolor>selected</selectedcolor>
				<label>$INFO[ListItem.StartTime] - $INFO[ListItem.EndTime][CR]$INFO[ListItem.mpaa,   |  ,]$INFO[ListItem.year,   |  ,][CR]$INFO[ListItem.genre]</label>
			</control>
			<control type="textbox">
				<description>plot</description>
				<width>370</width>
				<top>200</top>
				<height>400</height>
				<right>20</right>
				<align>justify</align>
				<font>font_Montserrat_16_semibold</font>
				<aligny>bottom</aligny>
				<wrapmultiline>true</wrapmultiline>
				<textcolor>FF3A0079</textcolor>
				<selectedcolor>selected</selectedcolor>
				<label>$INFO[ListItem.Plot]</label>
			</control>
		</control>
		
		
		<control type="group">
			<description>info</description>
			<!-- <visible>Control.IsVisible(50)</visible> -->
			<right>100</right>
			<top>800</top>
			<left>200</left>
			<height>250</height>
			
			<control type="image">
				<bordersize>4</bordersize>
				<bordertexture border="2" colordiffuse="white">frames/frame.png</bordertexture>
				<texture colordiffuse="22000000">colors/white.png</texture>
			</control>
			<control type="label">
				<top>5</top>
				<left>10</left>
				<align>left</align>
				<height>30</height>
				<font>debugtiny</font>
				<textcolor>white</textcolor>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type="image">
				<top>45</top>
				<height>130</height>
				<width>210</width>
				<left>10</left>
				<bordersize>2</bordersize>
				<bordertexture border="2" colordiffuse="white">frames/frame.png</bordertexture>
				<aspectratio>scale</aspectratio>
				<texture>$VAR[ImageLayout_landscape]</texture>
			</control>
			<control type="textbox">
				<top>40</top>
				<left>230</left>
				<align>left</align>
				<height>120</height>
				<width>150</width>
				<font>debugtiny</font>
				<aligny>top</aligny>
				<textcolor>white</textcolor>
				<selectedcolor>selected</selectedcolor>
				<label>$INFO[ListItem.StartTime] - $INFO[ListItem.EndTime][CR]$INFO[ListItem.mpaa,   |  ,]$INFO[ListItem.year,   |  ,][CR]$INFO[ListItem.genre]</label>
			</control>
			<control type="textbox">
				<description>plot</description>
				<top>40</top>
				<left>500</left>
				<height>140</height>
				<right>320</right>
				<align>justify</align>
				<font>font_Montserrat_16_semibold</font>
				<aligny>bottom</aligny>
				<wrapmultiline>true</wrapmultiline>
				<textcolor>grey</textcolor>
				<selectedcolor>selected</selectedcolor>
				<label>$INFO[ListItem.Plot]</label>
			</control>
		</control>
	</include>
	
	<variable name="PVR_indicator">
		<value condition="ListItem.IsRecording">buttons/osd/record.png</value>
		<value condition="ListItem.HasReminder">pvr/timers/bell.png</value>
		<value condition="ListItem.IsPlayable">icons/play.png</value>
	</variable>
	
	<variable name="PVRTimerIcon_timer">
	<value condition="ListItem.HasTimerSchedule + ListItem.TimerHasError">pvr/PVR-HasTimerScheduleError.png</value>
		<value condition="ListItem.HasTimer + ListItem.TimerHasError">pvr/PVR-HasTimerError.png</value>
		<value condition="ListItem.HasTimerSchedule + ListItem.TimerHasConflict">pvr/PVR-HasTimerScheduleConflict.png</value>
		<value condition="ListItem.HasTimer + ListItem.TimerHasConflict">pvr/PVR-HasTimerConflict.png</value>
		<value condition="ListItem.HasRecording">pvr/PVR-HasRecording.png</value>
		<value condition="ListItem.HasTimerSchedule + !ListItem.TimerIsActive">pvr/PVR-HasTimerScheduleDisabled.png</value>
		<value condition="ListItem.HasTimer + !ListItem.TimerIsActive">pvr/PVR-HasTimerDisabled.png</value>
		<value condition="ListItem.HasTimerSchedule">pvr/PVR-HasTimerSchedule.png</value>
		<value condition="ListItem.HasTimer">pvr/PVR-HasTimer.png</value>
	</variable>
	
	
	<variable name="PVRTimerIcon_color_fo">
		<value condition="ListItem.IsPlayable">green</value>
		
		<value condition="ListItem.IsRecording">red</value>
		<value></value>
	</variable>
	<variable name="PVRTimerIcon_color_nf">
		<value condition="ListItem.IsRecording">red</value>
		<value>grey</value>
	</variable>
	
<!-- 
$INFO[PVR.NowRecordingTitle]       Title of the programme being recorded 	
$INFO[PVR.NowRecordingDateTime]       Start date and time of the current recording]       
$INFO[PVR.NowRecordingChannel]       Channel number that's being recorded]       
$INFO[PVR.NextRecordingTitle]       Title of the next programme that will be recorded]       
$INFO[PVR.NextRecordingDateTime]       Start date and time of the next recording]       
$INFO[PVR.NextRecordingChannel]       Channel name of the next recording]       
$INFO[PVR.BackendName]       Name of the backend being used]       
$INFO[PVR.BackendVersion]       Version of the backend that's being used]       
$INFO[PVR.BackendHost]       Backend hostname]       
$INFO[PVR.BackendDiskSpace]       Available diskspace on the backend]       
$INFO[PVR.BackendChannels]       Number of available channels the backend provides]       
$INFO[PVR.BackendTimers]       Number of timers set for the backend]       
$INFO[PVR.BackendRecordings]       Number of recording available on the backend]       
$INFO[PVR.BackendDiskspace]       Free diskspace available for recordings on the backend]       
$INFO[PVR.BackendNumber]       Backend number]       
$INFO[PVR.TotalDiscSpace]       Total diskspace available for recordings]       
$INFO[PVR.NextTimer]       Next timer date]       
$INFO[PVR.EpgEventDuration[(format)]]       Returns the duration of the currently played title on TV. See ListItem.Duration for optinional formatting options]       
$INFO[PVR.EpgEventElapsedTime[(format)]]       Returns the time position of the currently played title on TV. See ListItem.Duration for optinional formatting options]       
$INFO[PVR.EpgEventRemainingTime[(format)]]       Returns the remaining time for currently playing epg event. See ListItem.Duration for optinional formatting options]       v18
$INFO[PVR.EpgEventFinishTime[(format)]]       Returns the time the currently playing epg event will end. See ListItem.Duration for optinional formatting options]       v18
$INFO[PVR.EpgEventSeekTime[(format)]]       Returns the seek time of the currently playing epg event. See ListItem.Duration for optinional formatting options]       v18
$INFO[PVR.EpgEventProgress]       Returns the position of currently played title on TV as integer]       
$INFO[PVR.TimeShiftStart[(format)]]       Start position of the timeshift. See ListItem.Duration for optinional formatting options]       
$INFO[PVR.TimeShiftEnd[(format)]]       End position of the timeshift. See ListItem.Duration for optinional formatting options]       
$INFO[PVR.TimeShiftCur[(format)]]       Current position of the timeshift. See ListItem.Duration for optinional formatting options
$INFO[PVR.TimeShiftOffset[(format)]]       Current offset of the timeshift. See ListItem.Duration for optinional formatting options]       
$INFO[PVR.TimeShiftProgress]       Returns the position of currently timeshifted title on TV as interger]       
$INFO[PVR.ActStreamClient]       Stream client name]       
$INFO[PVR.ActStreamDevice]       Stream device name]       
$INFO[PVR.ActStreamStatus]       Status of the stream]       
$INFO[PVR.ActStreamSignal]       Signal quality of the stream]       
$INFO[PVR.ActStreamSnr]       Signal to noise ratio of the stream]       
$INFO[PVR.ActStreamBer]       Bit error rate of the stream]       
$INFO[PVR.ActStreamUnc]       UNC value of the stream]       
$INFO[PVR.ActStreamVideoBitRate]       Video bitrate of the stream]       
$INFO[PVR.ActStreamAudioBitRate]       Audio bitrate of the stream]       
$INFO[PVR.ActStreamDolbyBitRate]       Dolby bitrate of the stream]       
$INFO[PVR.ActStreamProgrSignal]       Signal quality of the programme]       
$INFO[PVR.ActStreamProgrSnr]       Signal to noise ratio of the programme]       
$INFO[PVR.ActStreamEncryptionName]       Encryption used on the stream]       
$INFO[PVR.TVNowRecordingTitle]       Title of the tv programme being recorded]       v17 Addition
$INFO[PVR.TVNowRecordingDateTime]       Start date and time of the current tv recording]       v17 Addition
$INFO[PVR.TVNowRecordingChannel]       Channel name of the current tv recording]       v17 Addition
$INFO[PVR.TVNowRecordingChannelIcon]       Icon of the current recording TV channel]       v17 Addition
$INFO[PVR.TVNextRecordingTitle]       Title of the next tv programme that will be recorded]       v17 Addition
$INFO[PVR.TVNextRecordingDateTime]       Start date and time of the next tv recording]       v17 Addition
$INFO[PVR.TVNextRecordingChannel]       Channel name of the next tv recording]       v17 Addition
$INFO[PVR.TVNextRecordingChannelIcon]       Icon of the next recording tv channel]       v17 Addition
$INFO[PVR.RadioNowRecordingTitle]       Title of the radio programme being recorded]       v17 Addition
$INFO[PVR.RadioNowRecordingDateTime]       Start date and time of the current radio recording]       v17 Addition
$INFO[PVR.RadioNowRecordingChannel]       Channel name of the current radio recording]       v17 Addition
$INFO[PVR.RadioNowRecordingChannelIcon]       Icon of the current recording radio channel]       v17 Addition
$INFO[PVR.RadioNextRecordingTitle]       Title of the next radio programme that will be recorded]       v17 Addition
$INFO[PVR.RadioNextRecordingDateTime]       Start date and time of the next radio recording]       v17 Addition
$INFO[PVR.RadioNextRecordingChannel]       Channel name of the next radio recording]       v17 Addition
$INFO[PVR.ChannelNumberInput]       Label displaying the number the user entered on remote or keyboard]       v18
$INFO[PVR.TimeshiftProgressDuration]       Returns the duration of the PVR timeshift progress in the format hh:mm:ss. hh: will be omitted if hours value is zero]       v18
$INFO[PVR.TimeshiftProgressDuration(format)]       Returns the duration of the PVR timeshift progress in different formats, hours (hh), minutes (mm) or seconds (ss)]       v18
$INFO[PVR.TimeshiftProgressStartTime]       Returns the start time of the PVR timeshift progress in the format hh:mm:ss. hh: will be omitted if hours value is zero]       v18
$INFO[PVR.TimeshiftProgressStartTime(format)]       Returns the start time of the PVR timeshift progress in different formats, hours (hh), minutes (mm) or seconds (ss)]       v18
$INFO[PVR.TimeshiftProgressEndTime]       Returns the end time of the PVR timeshift progress in the format hh:mm:ss. hh: will be omitted if hours value is zero]       v18
$INFO[PVR.TimeshiftProgressEndTime(format)]       Returns the end time of the PVR timeshift progress in different formats, hours (hh), minutes (mm) or seconds (ss)]       v18
$INFO[PVR.TimeshiftProgressPlayPos]       Returns the percentage of the current play position within the PVR timeshift progress]       v18
$INFO[PVR.TimeshiftProgressEpgStart]       Returns the percentage of the start of the currently playing epg event within the PVR timeshift progress]       v18
$INFO[PVR.TimeshiftProgressEpgEnd]       Returns the percentage of the end of the currently playing epg event within the PVR timeshift progress]       v18
$INFO[PVR.TimeshiftProgressBufferStart]       Returns the percentage of the start of the timeshift buffer within the PVR timeshift progress]       v18
$INFO[PVR.TimeshiftProgressBufferEnd]       Returns the percentage of the end of the timeshift buffer within the PVR timeshift progress]       v18
$INFO[PVR.TimeShiftSeekbar]       This is the equivalent of Player.Seekbar, but for LiveTV (can be used in a slider control and indicates the position being seeked to) 	v19 -->

</includes>
