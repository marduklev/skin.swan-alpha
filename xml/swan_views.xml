<?xml version="1.0" encoding="utf-8"?>
<includes>
	<include name="media_window_attributes">
		<param name="defaultcontrol" default="50" />
		<param name="view_ids" default="50" />
		<definition>
			<defaultcontrol always="true">$PARAM[defaultcontrol]</defaultcontrol>
			<backgroundcolor>$VAR[color_global_background_layer1]</backgroundcolor>
			<views>$PARAM[view_ids]</views>
			<onunload condition="!String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">ClearProperty(shortcutaction_inprogress,home)</onunload>
			<onunload condition="!String.IsEmpty(Window(home).Property(shortcutitem_nr))">ClearProperty(shortcutitem_nr,home)</onunload>
			<include content="media_menucontrol_9000" condition="!Skin.HasSetting(menucontrol_forcedfocus_premenu)" />
			<include content="media_menucontrol_8999" condition="Skin.HasSetting(menucontrol_forcedfocus_premenu)" />
			<include content="Animation_OpenClose_FadeZoom" condition="String.IsEmpty(Window(home).Property(shortcutaction_inprogress))" />
		</definition>
	</include>
	<include name="media_menucontrol_9000">
		<menucontrol>9000</menucontrol>
	</include>
	<include name="media_menucontrol_8999">
		<menucontrol>8999</menucontrol>
	</include>
	
	<include name="media_container_attributes">
		<param name="left" default="BackgroundPanelLeft" />
		<param name="right" default="BackgroundPanelRight" />
		<param name="bottom" default="Footer" />
		<param name="common_nav" default="true" />
		<definition>
			<animation effect="slide" start="0,0" end="0,90" time="350" tween="quadratic" easing="in" delay="100" condition="Skin.HasSetting(View_$PARAM[view_id]_DisableFooter)">conditional</animation>
			<orientation>vertical</orientation>
			<preloaditems>2</preloaditems>
			<scrolltime tween="quadratic">400</scrolltime>
            <top>Header</top>
			<left>$PARAM[left]</left>
			<right>$PARAM[right]</right>
			<bottom>$PARAM[bottom]</bottom>
			<include condition="$PARAM[common_nav]" content="media_container_navigation" />
		</definition>
	</include>
	<include name="media_container_navigation">
		<param name="pagecontrol" default="60" />
		<definition>
			<pagecontrol>$PARAM[pagecontrol]</pagecontrol>
			<onfocus condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">ClearProperty(menucontrol_active,home)</onfocus>
			<onleft condition="Control.IsVisible(8999)">8999</onleft>
			<onright condition="Control.IsVisible($PARAM[pagecontrol])">$PARAM[pagecontrol]</onright>
			<onright condition="!Control.IsVisible($PARAM[pagecontrol]) + !Window.IsActive(musicplaylist) + [MusicPlayer.Offset(-1).Exists | MusicPlayer.Offset(1).Exists]">SetProperty(CurrentPlaylistVisible,mediawindow,home)</onright>
			<onright condition="!Control.IsVisible($PARAM[pagecontrol]) + !Window.IsActive(musicplaylist) + [MusicPlayer.Offset(-1).Exists | MusicPlayer.Offset(1).Exists]">ActivateWindow(1140)</onright>
		</definition>
	</include>
	<include name="media_filter">
		<control type="group">
		<animation effect="slide" start="0,0" end="1400,0" time="0" reversible="true" condition="[[!Skin.HasSetting(view_503_fanart_left) + Control.IsVisible(503)] | [!Skin.HasSetting(view_504_fanart_left) + Control.IsVisible(504)]]">conditional</animation>
		<visible>Container.CanFilter | Container.Filtered | Container.CanFilterAdvanced</visible>
			
		<control type="edit" id="19">
			<visible>!$EXP[Infodialog_IsActive] + !Window.IsActive(shutdownmenu) + !Control.IsVisible(58)</visible>
			<top>15</top>
			<left>110</left>
			<height>60</height>
			<width>360</width>
			<hinttext>$LOCALIZE[587]...</hinttext>
			<texturefocus colordiffuse="$VAR[color_header_backgroundpanel]" diffuse="buttons/button_6to1_Trans.png">colors/white70.png</texturefocus>	
			<texturenofocus diffuse="buttons/button_6to1_Trans.png">colors/white10.png</texturenofocus>
			<font>notosans_24_regular</font>
			<textoffsetx>20</textoffsetx>
			<textoffsety>15</textoffsety>
			<textcolor>$VAR[color_header_text_main]</textcolor>
			<focusedcolor>$VAR[color_header_text_main]</focusedcolor>
			<disabledcolor />
			<invalidcolor />
			<onup>50</onup>
			<ondown>50</ondown>
			<onright condition="Control.IsVisible(199)">199</onright>
			<onright condition="!Control.IsVisible(199)">50</onright>
			<onleft>menu</onleft>
			<label />
		</control>
		<control type="button" id="199">
			<visible>Container.CanFilterAdvanced</visible>
			<visible>!$EXP[Infodialog_IsActive] + !Window.IsActive(shutdownmenu) + !Control.IsVisible(58)</visible>
			<include>Animation_Item_Focus</include>
			<texturefocus diffuse="buttons/advancedfiltermethod.png" colordiffuse="$VAR[color_header_text_accent]">colors/white70.png</texturefocus>	
			<texturenofocus diffuse="buttons/advancedfiltermethod.png" colordiffuse="$VAR[color_header_text_main]">colors/white50.png</texturenofocus>
			<top>20</top>
			<left>415</left>
			<width>50</width>
			<height>50</height>
			<font>notosans_23_regular_l</font>
			<onup>50</onup>
			<ondown>50</ondown>
			<onright>50</onright>
			<onleft>19</onleft>
			<onclick>Filter</onclick>
			<onfocus>ClearProperty(menucontrol_active,home)</onfocus>
		</control>
		</control>
	</include>
	
	<include name="mediawindow_layout">
		<control type="group">
			<control type="group">
				<visible>!Skin.HasSetting(BlurEnabled)</visible>
				<visible>String.IsEmpty(Window(home).Property(shortcutaction_inprogress))</visible>
				<include>global_background</include>
			</control>
			<control type="group">
				<visible>Skin.HasSetting(BlurEnabled)</visible>
				<visible>String.IsEmpty(Window(home).Property(shortcutaction_inprogress))</visible>
				<include>blurred_background</include>
			</control>
			<control type="group">
				<description>viewtypes</description>
				<animation type="conditional" condition="$EXP[Infodialog_IsActive] | Window.IsActive(mediasource) | [Window.IsActive(shutdownmenu) + !$EXP[Spotlight_ViewType]] | Window.IsActive(1104)">
					<effect type="fade" start="100" end="0" time="250" tween="sine" easing="out" />
					<effect type="zoom" center="50%,50%" start="100" end="0" time="300" tween="cubic" easing="out" />
				</animation>
				<include condition="!string.isempty(window(home).property(shortcutaction_inprogress))" content="SwanShortcuts_Container" />
				<include condition="String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">view_layer4</include>
				<include condition="String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">Media_Container_Infopanel</include>
				
				<include condition="String.IsEmpty(Skin.String($PARAM[window]_disabled_view_50)) + String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">view_50</include>
				<include condition="String.IsEmpty(Skin.String($PARAM[window]_disabled_view_51)) + String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">view_51</include>
				<include condition="String.IsEmpty(Skin.String($PARAM[window]_disabled_view_52)) + String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">view_52</include>
				<include condition="String.IsEmpty(Skin.String($PARAM[window]_disabled_view_53)) + String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">view_53</include>
				<include condition="String.IsEmpty(Skin.String($PARAM[window]_disabled_view_54)) + String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">view_54</include>
				<include condition="String.IsEmpty(Skin.String($PARAM[window]_disabled_view_56)) + String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">view_56</include>
				<include condition="String.IsEmpty(Skin.String($PARAM[window]_disabled_view_58)) + [Window.IsActive(videos) + String.IsEmpty(Window(home).Property(shortcutaction_inprogress))]">view_58</include>
				<include condition="String.IsEmpty(Skin.String($PARAM[window]_disabled_view_502)) + String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">view_502</include>
				<include condition="[String.IsEmpty(Skin.String($PARAM[window]_disabled_view_503)) + String.IsEmpty(Skin.String($PARAM[window]_disabled_view_504))] + String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">view_503_504</include>
				<include condition="String.IsEmpty(Skin.String($PARAM[window]_disabled_view_510)) + String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">view_510</include>
				<include condition="String.IsEmpty(Skin.String($PARAM[window]_disabled_view_511)) + String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">view_511</include>
				<include condition="String.IsEmpty(Skin.String($PARAM[window]_disabled_view_512)) + String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">view_512</include>
				<include condition="String.IsEmpty(Skin.String($PARAM[window]_disabled_view_513)) + String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">view_513</include>
				<include condition="String.IsEmpty(Skin.String($PARAM[window]_disabled_view_520)) + String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">view_520</include>
				
				<include condition="String.IsEmpty(Window(home).Property(shortcutaction_inprogress))" content="ScrollBar_Alphabet">
					<right>0</right>
					<width>100</width>
					<top>110</top>
					<param name="id" value="600" />
					<param name="visible" value="!$EXP[Scrollbar_Lib_Horizontal] + !String.IsEqual(Container.ViewMode,$LOCALIZE[31263])" />
					<param name="orientation" value="vertical" />
					<param name="panel_width" value="60" />
					<param name="height" value="880" />
					<param name="item_hw" value="32.5" />
					<param name="bg_texture_visible" value="true" />
					<param name="is_vertical" value="true" />
					<param name="color_1" value="ff131313" />
					<param name="color_2" value="ffffffff" />
				</include>
				<include condition="String.IsEmpty(Window(home).Property(shortcutaction_inprogress))" content="ScrollBar_Alphabet">
					<bottom>380</bottom>
					<animation effect="slide" start="0,0" end="380,10" condition="[Control.IsVisible(503) + Skin.HasSetting(View_503_DisableFooter) | Control.IsVisible(504) + Skin.HasSetting(View_504_DisableFooter)]">conditional</animation>
					<param name="id" value="610" />
					<param name="visible" value="$EXP[Scrollbar_Lib_Horizontal] + !Control.IsVisible(58)" />
					<param name="orientation" value="horizontal" />
					<param name="panel_width" value="1720" />
					<param name="height" value="90" />
					<param name="item_hw" value="50" />
					<param name="bg_texture_visible" value="true" />
					<param name="is_vertical" value="false" />
					<param name="color_1" value="ff131313" />
					<param name="color_2" value="ffffffff" />
				</include>
				<include condition="String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">Scrollbar_Lib_vertical</include>
				<include condition="String.IsEmpty(Window(home).Property(shortcutaction_inprogress))">Scrollbar_Lib_horizontal</include>
			</control>
			<include condition="String.IsEmpty(Window(home).Property(shortcutaction_inprogress))" content="HeaderBar">
				<param name="HasBGPanel" value="Skin.HasSetting(MediaWindow_UseHeaderBG)" />
			</include>
			<include content="PreMenucontrol" />
			<control type="group">
				<animation effect="slide" start="-450,0" end="0,0" time="300" tween="cubic" easing="inout">VisibleHidden</animation>
				<visible>String.IsEqual(Window(Home).Property(menucontrol_active),common)</visible>
				<include condition="String.IsEmpty(Window(home).Property(shortcutaction_inprogress))" content="menucontrol_global" />
			</control>
			<include condition="String.IsEmpty(Window(home).Property(shortcutaction_inprogress))" content="media_filter" />
		</control>
		
		
				
				<control type="group">
					<animation effect="fade" start="0" end="100" time="200" reversible="true">VisibleChange</animation>
					<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
					<visible>!Skin.HasSetting(disable_scrollletters)</visible>
					<visible>Container.Scrolling</visible>
					<visible>Container.SortMethod(1) | Container.SortMethod(4) | Container.SortMethod(12) | Container.SortMethod(10) | Container.SortMethod(7) | Container.SortMethod(29) | Container.SortMethod(17)</visible>
					<control type="image">
						<texture colordiffuse="ff131313">colors/white60.png</texture>
					</control>
					<control type="group">
						
						<animation effect="slide" start="0,0" end="0,325" time="0" condition="control.isvisible(503) | control.isvisible(504)">conditional</animation>
						<animation effect="slide" start="0,0" end="0,250" time="0" condition="control.isvisible(520)">conditional</animation>
						<animation effect="slide" start="0,0" end="-600,0" time="0" condition="control.isvisible(56)">conditional</animation>
					
						<centertop>50%</centertop>
						<centerleft>50%</centerleft>
						<height>150</height>
						<width>150</width>
						<control type="image">
							<visible>false</visible>
							
							<bordersize>1</bordersize>
							<bordertexture colordiffuse="grey">diffuse/dialog.png</bordertexture>
							<texture colordiffuse="ff131313">diffuse/dialog.png</texture>
							<aspectratio align="center" aligny="center">keep</aspectratio>
						</control>
						<control type="image">
							<description>100x100?</description>
							<bordersize>5</bordersize>
							<bordertexture colordiffuse="grey">diffuse/bordercircle_100.png</bordertexture>
							<texture colordiffuse="ff131313" diffuse="colors/white80.png">diffuse/circle.png</texture>
							<aspectratio align="center" aligny="center">keep</aspectratio>
						</control>
						<control type="label">
							<textcolor>grey</textcolor>
							<info>ListItem.SortLetter</info>
							<font>notosans_45_bold</font>
							<width>100%</width>
							<height>150</height>
							<align>center</align>
						</control>
					</control>
				</control>
		<include condition="Skin.HasSetting(window_frame)" content="window_frame" />
	</include>
	
	<include name="view_locking">
		<visible>
			[Container.Content() + [String.IsEmpty(skin.string(view_locked_listing)) | String.IsEqual(skin.string(view_locked_listing),$PARAM[view_id])]] | 
			[Container.Content(movies) + [String.IsEmpty(skin.string(view_locked_movies)) | String.IsEqual(skin.string(view_locked_movies),$PARAM[view_id])]] | 
			[Container.Content(sets) + [String.IsEmpty(skin.string(view_locked_sets)) | String.IsEqual(skin.string(view_locked_sets),$PARAM[view_id])]] | 
			[Container.Content(tvshows) + [String.IsEmpty(skin.string(view_locked_tvshows)) | String.IsEqual(skin.string(view_locked_tvshows),$PARAM[view_id])]] | 
			[Container.Content(seasons) + [String.IsEmpty(skin.string(view_locked_seasons)) | String.IsEqual(skin.string(view_locked_seasons),$PARAM[view_id])]] | 
			[Container.Content(episodes) + [String.IsEmpty(skin.string(view_locked_episodes)) | String.IsEqual(skin.string(view_locked_episodes),$PARAM[view_id])]] | 
			[Container.Content(musicvideos) + [String.IsEmpty(skin.string(view_locked_musicvideos)) | String.IsEqual(skin.string(view_locked_musicvideos),$PARAM[view_id])]] |
			[Container.Content(artists) + [String.IsEmpty(skin.string(view_locked_artists)) | String.IsEqual(skin.string(view_locked_artists),$PARAM[view_id])]] | 
			[Container.Content(albums) + [String.IsEmpty(skin.string(view_locked_albums)) | String.IsEqual(skin.string(view_locked_albums),$PARAM[view_id])]] | 
			[Container.Content(songs) + [String.IsEmpty(skin.string(view_locked_songs)) | String.IsEqual(skin.string(view_locked_songs),$PARAM[view_id])]] | 
			[Container.Content(files) + [String.IsEmpty(skin.string(view_locked_files)) | String.IsEqual(skin.string(view_locked_files),$PARAM[view_id])]] | 
			[Container.Content(sources) + [String.IsEmpty(skin.string(view_locked_sources)) | String.IsEqual(skin.string(view_locked_sources),$PARAM[view_id])]] | 
			[Container.Content(actors) + [String.IsEmpty(skin.string(view_locked_actors)) | String.IsEqual(skin.string(view_locked_actors),$PARAM[view_id])]] |
			[Container.Content(roles) + [String.IsEmpty(skin.string(view_locked_roles)) | String.IsEqual(skin.string(view_locked_roles),$PARAM[view_id])]] | 
			[Container.Content(directors) + [String.IsEmpty(skin.string(view_locked_directors)) | String.IsEqual(skin.string(view_locked_directors),$PARAM[view_id])]] | 
			[Container.Content(tags) + [String.IsEmpty(skin.string(view_locked_tags)) | String.IsEqual(skin.string(view_locked_tags),$PARAM[view_id])]] | 
			[Container.Content(genres) + [String.IsEmpty(skin.string(view_locked_genres)) | String.IsEqual(skin.string(view_locked_genres),$PARAM[view_id])]] | 
			[Container.Content(years) + [String.IsEmpty(skin.string(view_locked_years)) | String.IsEqual(skin.string(view_locked_years),$PARAM[view_id])]] | 
			[Container.Content(studios) + [String.IsEmpty(skin.string(view_locked_studios)) | String.IsEqual(skin.string(view_locked_studios),$PARAM[view_id])]] |
			[Container.Content(countries) + [String.IsEmpty(skin.string(view_locked_countries)) | String.IsEqual(skin.string(view_locked_countries),$PARAM[view_id])]] | 
			[Container.Content(playlists) + [String.IsEmpty(skin.string(view_locked_playlists)) | String.IsEqual(skin.string(view_locked_playlists),$PARAM[view_id])]] | 
			[Container.Content(images) + [String.IsEmpty(skin.string(view_locked_images)) | String.IsEqual(skin.string(view_locked_images),$PARAM[view_id])]] | 
			[Container.Content(games) + [String.IsEmpty(skin.string(view_locked_games)) | String.IsEqual(skin.string(view_locked_games),$PARAM[view_id])]] |
			[Container.Content(addons) + [String.IsEmpty(skin.string(view_locked_addons)) | String.IsEqual(skin.string(view_locked_addons),$PARAM[view_id])]] | 
			[Container.Content(livetv) + [String.IsEmpty(skin.string(view_locked_livetv)) | String.IsEqual(skin.string(view_locked_livetv),$PARAM[view_id])]] | 
			[Container.Content(mixed) + [String.IsEmpty(skin.string(view_locked_mixed)) | String.IsEqual(skin.string(view_locked_mixed),$PARAM[view_id])]] |
			[Container.Content(unknown) + [String.IsEmpty(skin.string(view_locked_unknown)) | String.IsEqual(skin.string(view_locked_unknown),$PARAM[view_id])]] | 
			[Container.Content(plugins) + [String.IsEmpty(skin.string(view_locked_plugins)) | String.IsEqual(skin.string(view_locked_plugins),$PARAM[view_id])]] |
			[!Container.Content() + 
			 !Container.Content(movies) + !Container.Content(sets) + !Container.Content(tvshows) + !Container.Content(seasons) + !Container.Content(episodes) + 
			 !Container.Content(musicvideos) + !Container.Content(artists) + !Container.Content(albums) + !Container.Content(songs) + 
			 !Container.Content(files) + !Container.Content(sources) + !Container.Content(actors) + !Container.Content(roles) + !Container.Content(directors) + 
			 !Container.Content(tags) + !Container.Content(genres) + !Container.Content(years) + !Container.Content(studios) + !Container.Content(countries) + !Container.Content(playlists) + 
			 !Container.Content(images) + !Container.Content(games) + !Container.Content(addons) + !Container.Content(livetv) + 
			 !Container.Content(mixed) + !Container.Content(unknown) + !Container.Content(plugins)
			]
		</visible>
	</include>
	
	<expression name="content_not_locked">
	[String.IsEmpty(skin.string(view_locked_listing)) + 
	 String.IsEmpty(skin.string(view_locked_movies)) + 
	 String.IsEmpty(skin.string(view_locked_sets)) + 
	 String.IsEmpty(skin.string(view_locked_tvshows)) + 
	 String.IsEmpty(skin.string(view_locked_seasons)) + 
	 String.IsEmpty(skin.string(view_locked_episodes)) + 
	 String.IsEmpty(skin.string(view_locked_musicvideos)) + 
	 String.IsEmpty(skin.string(view_locked_artists)) + 
	 String.IsEmpty(skin.string(view_locked_albums)) + 
	 String.IsEmpty(skin.string(view_locked_songs)) + 
	 String.IsEmpty(skin.string(view_locked_files)) + 
	 String.IsEmpty(skin.string(view_locked_sources)) + 
	 String.IsEmpty(skin.string(view_locked_actors)) + 
	 String.IsEmpty(skin.string(view_locked_roles)) + 
	 String.IsEmpty(skin.string(view_locked_directors)) + 
	 String.IsEmpty(skin.string(view_locked_tags)) + 
	 String.IsEmpty(skin.string(view_locked_genres)) + 
	 String.IsEmpty(skin.string(view_locked_years)) + 
	 String.IsEmpty(skin.string(view_locked_studios)) + 
	 String.IsEmpty(skin.string(view_locked_countries)) + 
	 String.IsEmpty(skin.string(view_locked_playlists)) + 
	 String.IsEmpty(skin.string(view_locked_images)) + 
	 String.IsEmpty(skin.string(view_locked_games)) + 
	 String.IsEmpty(skin.string(view_locked_addons)) + 
	 String.IsEmpty(skin.string(view_locked_livetv)) + 
	 String.IsEmpty(skin.string(view_locked_mixed)) + 
	 String.IsEmpty(skin.string(view_locked_unknown)) + 
	 String.IsEmpty(skin.string(view_locked_plugins))
	]
	</expression>

	<include name="view_56_noLocking">
		<visible>Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(episodes) | Container.Content(artists) | Container.Content(albums)</visible>
	</include>
	<include name="view_58_noLocking">
		<visible>Container.Content(seasons)</visible>
	</include>
	<include name="view_503_noLocking">
		<visible>!Container.Content(episodes) + !Container.Content(sources)</visible>
	</include>
	<include name="view_504_noLocking">
		<visible>!Container.Content(sources)</visible>
	</include>
	<include name="view_510_noLocking">
		<visible>Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(musicvideos) | Container.Content(artists) | Container.Content(albums) | Container.Content(mixed) | Container.Content(images) | Container.Content(videos) | Container.Content(games) | Container.Content(plugins)</visible>
	</include>
	<include name="view_511_noLocking">
		<visible>Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(musicvideos) | Container.Content(artists) | Container.Content(albums) | Container.Content(mixed) | Container.Content(images) | Container.Content(videos) | Container.Content(games) | Container.Content(plugins)</visible>
	</include>
	<include name="view_512_noLocking">
		<visible>Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(musicvideos) | Container.Content(artists) | Container.Content(albums) | Container.Content(mixed) | Container.Content(images) | Container.Content(videos) | Container.Content(games) | Container.Content(plugins)</visible>
	</include>
	<include name="view_513_noLocking">
		<visible>Container.Content(artists) | Container.Content(albums) | Container.Content(mixed) | Container.Content(images) | Container.Content(games) | Container.Content(plugins)</visible>
	</include>
	
	<include name="spotlight_hor_list_navigation_common">
		<onfocus condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">ClearProperty(menucontrol_active,home)</onfocus>
		<onfocus condition="!String.IsEmpty(Window(Home).Property(view_forcefocus))">SetFocus($INFO[Window(Home).Property(view_forcefocus)])</onfocus>
		<onleft condition="Control.IsVisible(8999)">8999</onleft>
		<onup condition="Control.IsVisible(61)">61</onup>
		<onup condition="!Control.IsVisible(61) + Control.IsVisible(610)">610</onup>
		<onup condition="$EXP[Has_Trailer] + [!Control.IsVisible(61) + !Control.IsVisible(610)]">PlayMedia($INFO[Window(home).Property(listitemtrailer)],1)</onup>
		<onup condition="$EXP[Has_Trailer] + [!Control.IsVisible(61) + !Control.IsVisible(610)]">SetProperty(TrailerIsPlaying,true,home)</onup>
		<onup condition="$EXP[Has_Trailer] + [!Control.IsVisible(61) + !Control.IsVisible(610)] + [!String.IsEmpty(ListItem.dbtype) + String.IsEmpty(Window.Property(Spotlight_Cast))]">SetProperty(Spotlight_Cast,visible)</onup>
		<onup condition="!$EXP[Has_Trailer] + [!Control.IsVisible(610) + !Control.IsVisible(61)] + Control.IsVisible(19)">19</onup>
		<ondown condition="!Window.IsActive(music) + !String.IsEmpty(ListItem.dbtype) + String.IsEmpty(Window.Property(Spotlight_Cast))">SetProperty(Spotlight_Cast,visible)</ondown>	
		<ondown condition="!Window.IsActive(music) + !String.IsEmpty(Window.Property(Spotlight_Cast)) + [!String.IsEqual(ListItem.dbtype,set) | !String.IsEqual(ListItem.dbtype,tvshow)]">ClearProperty(Spotlight_Cast)</ondown>		 
		<ondown condition="!Window.IsActive(music) + !Skin.HasSetting(view_503_focusable_cast) + Control.IsVisible(50352) + [String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,set) | !String.IsEmpty(ListItem.SetId)]">SetFocus(50352,0,absolute)</ondown>
		<ondown condition="!Window.IsActive(music) + Skin.HasSetting(view_503_focusable_cast) + [!String.IsEmpty(ListItem.dbtype) + Control.IsVisible(50350) + String.IsEmpty(Window.Property(Spotlight_Cast))]">SetFocus(50350,0,absolute)</ondown>
		<ondown condition="!Window.IsActive(music) + Skin.HasSetting(view_503_focusable_cast) + [!String.IsEmpty(ListItem.dbtype) + Control.IsVisible(50352) + !String.IsEmpty(Window.Property(Spotlight_Cast))]">SetFocus(50352,0,absolute)</ondown>
	</include>
	<include name="spotlight_hor_list_navigation_cast">
		<include>Action_CastMemberSearchForceOption</include>
		<onfocus condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">ClearProperty(menucontrol_active,home)</onfocus>
		<onfocus condition="String.IsEmpty(Window.Property(Spotlight_Cast))">SetProperty(Spotlight_Cast,focused)</onfocus>
		<onback condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">ClearProperty(Spotlight_Sets)</onback>
		<onback condition="!String.IsEmpty(Window.Property(Spotlight_Cast))">ClearProperty(Spotlight_Cast)</onback>
		<onback>SetFocus(50)</onback>
		<onup condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">ClearProperty(Spotlight_Sets)</onup>
		<onup condition="!String.IsEmpty(Window.Property(Spotlight_Cast))">ClearProperty(Spotlight_Cast)</onup>
		<onup>50</onup>
		<ondown condition="[Control.IsVisible(50352) + [String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,set) | !String.IsEmpty(ListItem.SetId)]]">SetFocus(50352,0,absolute)</ondown>
		<ondown condition="![Control.IsVisible(50352) + [String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,set) | !String.IsEmpty(ListItem.SetId)]]">ClearProperty(Spotlight_Cast)</ondown>
		<ondown condition="![Control.IsVisible(50352) + [String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,set) | !String.IsEmpty(ListItem.SetId)]]">50</ondown>
		<onleft condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">50350</onleft>
		<onleft condition="String.IsEmpty(Window.Property(Spotlight_Sets))">50</onleft>
	</include>
	<include name="spotlight_hor_list_navigation_nextup">
		<onfocus condition="!String.IsEmpty(Window(Home).Property(view_forcefocus))">ClearProperty(view_forcefocus,home)</onfocus>
		<onfocus condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">ClearProperty(menucontrol_active,home)</onfocus>
		<onfocus condition="String.IsEmpty(Window.Property(Spotlight_Sets))">SetProperty(Spotlight_Sets,true)</onfocus>
		<onback condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">ClearProperty(Spotlight_Sets)</onback>
		<onback condition="!String.IsEmpty(Window.Property(Spotlight_Cast))">ClearProperty(Spotlight_Cast)</onback>
		<onback>SetFocus(50)</onback>
		<onclick>SetProperty(view_forcefocus,$INFO[System.CurrentControlID],home)</onclick>
		<onclick>PlayMedia($INFO[ListItem.FilenameAndPath],resume)</onclick>
		<onup condition="Skin.HasSetting(view_503_focusable_cast) + Control.IsVisible(50350)">SetFocus(50350)</onup>
		<onup condition="!Skin.HasSetting(view_503_focusable_cast) | !Control.IsVisible(50350)">ClearProperty(Spotlight_Sets)</onup>
		<onup condition="!Skin.HasSetting(view_503_focusable_cast) | !Control.IsVisible(50350)">ClearProperty(Spotlight_Cast)</onup>
		<onup condition="!Skin.HasSetting(view_503_focusable_cast) | !Control.IsVisible(50350)">50</onup>
		<ondown>ClearProperty(Spotlight_Sets)</ondown>
		<ondown>ClearProperty(Spotlight_Cast)</ondown>
		<ondown>50</ondown>
		<onleft condition="Control.IsVisible(50353)">50353</onleft>
		<onleft condition="!Control.IsVisible(50353)">50352</onleft>
		<onright condition="Control.IsVisible(50353)">50353</onright>
		<onright condition="!Control.IsVisible(50353)">50352</onright>
	</include>
	<include name="spotlight_hor_list_navigation_folderpath">
		<onfocus condition="String.IsEqual(Window(Home).Property(menucontrol_active),common)">ClearProperty(menucontrol_active,home)</onfocus>
		<onfocus condition="String.IsEmpty(Window.Property(Spotlight_Sets))">SetProperty(Spotlight_Sets,true)</onfocus>
		<onback condition="!String.IsEmpty(Window.Property(Spotlight_Sets))">ClearProperty(Spotlight_Sets)</onback>
		<onback condition="!String.IsEmpty(Window.Property(Spotlight_Cast))">ClearProperty(Spotlight_Cast)</onback>
		<onback>SetFocus(50)</onback>
		<onup condition="Skin.HasSetting(view_503_focusable_cast) + Control.IsVisible(50350)">SetFocus(50350)</onup>
		<onup condition="!Skin.HasSetting(view_503_focusable_cast) | !Control.IsVisible(50350)">ClearProperty(Spotlight_Sets)</onup>
		<onup condition="!Skin.HasSetting(view_503_focusable_cast) | !Control.IsVisible(50350)">ClearProperty(Spotlight_Cast)</onup>
		<onup condition="!Skin.HasSetting(view_503_focusable_cast) | !Control.IsVisible(50350)">50</onup>
		<ondown>ClearProperty(Spotlight_Sets)</ondown>
		<ondown>ClearProperty(Spotlight_Cast)</ondown>
		<ondown>50</ondown>
		<onleft condition="Control.IsVisible(50352)">50352</onleft>
		<onleft condition="!Control.IsVisible(50352) + Control.IsVisible(8999)">8999</onleft>
		<onright condition="Integer.IsGreater(Container(50353).NumItems,1)">50353</onright>
		<onright condition="Integer.IsEqual(Container(50353).NumItems,1)">50352</onright>
	</include>

	<include name="Scrollbar_Lib_vertical">
		<control type="scrollbar" id="60">
			<animation effect="fade" start="100" end="0" time="250" condition="Control.HasFocus(600) | Window.IsActive(1140)">conditional</animation>
			<visible>!$EXP[Scrollbar_Lib_Horizontal]</visible>
			<visible>!String.IsEqual(Container.ViewMode,$LOCALIZE[31263])</visible>
			<right>45</right>
			<top>160</top>
			<height>74%</height>
			<onup>60</onup>
			<ondown>60</ondown>
			<onleft>50</onleft>
			<onright condition="Control.IsVisible(600)">600</onright>
			<onright condition="!Control.IsVisible(600) + !Window.IsActive(musicplaylist) + [MusicPlayer.Offset(-1).Exists | MusicPlayer.Offset(1).Exists]">SetProperty(CurrentPlaylistVisible,mediawindow,home)</onright>
			<onright condition="!Control.IsVisible(600) + !Window.IsActive(musicplaylist) + [MusicPlayer.Offset(-1).Exists | MusicPlayer.Offset(1).Exists]">activatewindow(1140)</onright>
			<onright condition="!Control.IsVisible(600) + Control.IsVisible(19) + !Window.IsActive(musicplaylist) + !MusicPlayer.Offset(-1).Exists + !MusicPlayer.Offset(1).Exists">19</onright>
			<onright condition="!Control.IsVisible(600) + !Control.IsVisible(19) + !MusicPlayer.Offset(-1).Exists + !MusicPlayer.Offset(1).Exists">50</onright>
		</control>
	</include>
	<include name="Scrollbar_Lib_horizontal">
		<control type="scrollbar" id="61">
			<animation effect="slide" start="0,0" end="0,50" time="350" easing="inout" reversible="true" condition="container.content(episodes)">conditional</animation>
			<animation effect="fade" start="100" end="0" time="200" easing="inout" reversible="true" condition="!Control.HasFocus(61)">conditional</animation>
			<orientation>horizontal</orientation>
			<texturesliderbackground colordiffuse="$VAR[color_global_scrollbar_panel]">colors/white.png</texturesliderbackground>
			<texturesliderbar colordiffuse="$VAR[color_global_scrollbar_slider_nf]">colors/white.png</texturesliderbar>
			<texturesliderbarfocus colordiffuse="$VAR[color_global_scrollbar_slider_fo]">colors/white.png</texturesliderbarfocus>
			<visible>$EXP[Scrollbar_Lib_Horizontal]</visible>
			<bottom>380</bottom>
			<height>5</height>
			<left>110</left>
			<width>1810</width>
			<onleft>61</onleft>
			<onright>61</onright>
			<onup condition="Control.IsVisible(610)">610</onup>
			<onup condition="$EXP[Has_Trailer] + !Control.IsVisible(610)">PlayMedia($INFO[Window(home).Property(listitemtrailer)],1)</onup>
			<onup condition="$EXP[Has_Trailer] + !Control.IsVisible(610)">SetProperty(TrailerIsPlaying,true,home)</onup>
			<onup condition="$EXP[Has_Trailer] + !Control.IsVisible(610)">SetProperty(Spotlight_Cast,visible)</onup>
			<onup condition="[$EXP[Has_Trailer] + !Control.IsVisible(610)] | [!$EXP[Has_Trailer] + !Control.IsVisible(610) + !Control.IsVisible(19)]">50</onup>
			<onup condition="!$EXP[Has_Trailer] + !Control.IsVisible(610) + Control.IsVisible(19)">19</onup>
			<ondown>50</ondown>
		</control>
	</include>
	
	<include name="ScrollBar_Alphabet">
		<control type="group">
			<nested />
			<animation effect="fade" start="100" end="3" time="200" easing="inout" reversible="true" condition="!Control.HasFocus($PARAM[id])">conditional</animation>
			<height>$PARAM[height]</height>
			<control type="image">
				<description>may just use as nested element for hor bar</description>
				<texture colordiffuse="$PARAM[color_1]">$VAR[texture_alphbaetbar_bg]</texture>
				<visible>$PARAM[bg_texture_visible]</visible>
			</control>
			<control type="panel" id="$PARAM[id]">
				<visible>[$PARAM[visible] + [Container.HasNext | Container.HasPrevious] + [[Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(artists) | Container.Content(albums) | Container.Content(songs)] + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556])]]]</visible>
				<orientation>$PARAM[orientation]</orientation>
				<scrolltime />
				<width>$PARAM[panel_width]</width>
				<include condition="$PARAM[is_vertical]">ScrollBar_Alphabet_ver</include>
				<include condition="!$PARAM[is_vertical]">ScrollBar_Alphabet_hor</include>
				<focusedlayout height="$PARAM[item_hw]" width="$PARAM[item_hw]">
					<control type="group">
						<control type="image">
							<texture colordiffuse="$PARAM[color_2]">colors/white.png</texture>
						</control>
						<control type="textbox">
							<font>montserrat_16_semibold</font>
							<align>center</align>
							<aligny>center</aligny>
							<textcolor>$PARAM[color_1]</textcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
					</control>
				</focusedlayout>
				<itemlayout height="$PARAM[item_hw]" width="$PARAM[item_hw]">
					<control type="group">
						<control type="image">
							<visible>$PARAM[is_vertical]</visible>
							<texture colordiffuse="$PARAM[color_1]">colors/white.png</texture>
						</control>
						<control type="textbox">
							<font>montserrat_16_extrabold</font>
							<align>center</align>
							<aligny>center</aligny>
							<textcolor>$PARAM[color_2]</textcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
					</control>
				</itemlayout>
				
				<content>
					<include>staticletters</include>
				</content>
				<!-- <content>plugin://script.embuary.helper/?info=jumptoletter&amp;showall=true&amp;reload=$INFO[Container.NumItems]</content> -->
			</control>
		</control>
	</include>
	
	<include name="staticletters">
		
		<include content="letter_content" condition="false">
			<param name="letter" value="." />
			<param name="intput_v" value="1" />
		</include>
		<include content="letter_content" condition="false">
			<param name="letter" value="!" />
			<param name="intput_v" value="1" />
			<param name="input_2" value="true" />
		</include>
		<include content="letter_content" condition="false">
			<param name="letter" value="?" />
			<param name="intput_v" value="1" />
			<param name="input_2" value="true" />
			<param name="input_3" value="true" />
		</include>
	
		sms2
		<include content="letter_content">
			<param name="letter" value="A" />
			<param name="intput_v" value="2" />
		</include>
		<include content="letter_content">
			<param name="letter" value="B" />
			<param name="intput_v" value="2" />
			<param name="input_2" value="true" />
		</include>
		<include content="letter_content">
			<param name="letter" value="C" />
			<param name="intput_v" value="2" />
			<param name="input_2" value="true" />
			<param name="input_3" value="true" />
		</include>
	sms3
		<include content="letter_content">
			<param name="letter" value="D" />
			<param name="intput_v" value="3" />
		</include>
		<include content="letter_content">
			<param name="letter" value="E" />
			<param name="intput_v" value="3" />
			<param name="input_2" value="true" />
		</include>
		<include content="letter_content">
			<param name="letter" value="F" />
			<param name="intput_v" value="3" />
			<param name="input_2" value="true" />
			<param name="input_3" value="true" />
		</include>
	sms4
		<include content="letter_content">
			<param name="letter" value="G" />
			<param name="intput_v" value="4" />
		</include>
		<include content="letter_content">
			<param name="letter" value="H" />
			<param name="intput_v" value="4" />
			<param name="input_2" value="true" />
		</include>
		<include content="letter_content">
			<param name="letter" value="I" />
			<param name="intput_v" value="4" />
			<param name="input_2" value="true" />
			<param name="input_3" value="true" />
		</include>
	sms5
		<include content="letter_content">
			<param name="letter" value="J" />
			<param name="intput_v" value="5" />
		</include>
		<include content="letter_content">
			<param name="letter" value="K" />
			<param name="intput_v" value="5" />
			<param name="input_2" value="true" />
		</include>
		<include content="letter_content">
			<param name="letter" value="L" />
			<param name="intput_v" value="5" />
			<param name="input_2" value="true" />
			<param name="input_3" value="true" />
		</include>
		
	sms6
		<include content="letter_content">
			<param name="letter" value="M" />
			<param name="intput_v" value="6" />
		</include>
		<include content="letter_content">
			<param name="letter" value="N" />
			<param name="intput_v" value="6" />
			<param name="input_2" value="true" />
		</include>
		<include content="letter_content">
			<param name="letter" value="O" />
			<param name="intput_v" value="6" />
			<param name="input_2" value="true" />
			<param name="input_3" value="true" />
		</include>
	sms7 - 4
		<include content="letter_content">
			<param name="letter" value="P" />
			<param name="intput_v" value="7" />
		</include>
		<include content="letter_content">
			<param name="letter" value="Q" />
			<param name="intput_v" value="7" />
			<param name="input_2" value="true" />
		</include>
		<include content="letter_content">
			<param name="letter" value="R" />
			<param name="intput_v" value="7" />
			<param name="input_2" value="true" />
			<param name="input_3" value="true" />
		</include>
		<include content="letter_content">
			<param name="letter" value="S" />
			<param name="intput_v" value="7" />
			<param name="input_2" value="true" />
			<param name="input_3" value="true" />
			<param name="input_4" value="true" />
		</include>
	sms8
		<include content="letter_content">
			<param name="letter" value="T" />
			<param name="intput_v" value="8" />
		</include>
		<include content="letter_content">
			<param name="letter" value="U" />
			<param name="intput_v" value="8" />
			<param name="input_2" value="true" />
		</include>
		<include content="letter_content">
			<param name="letter" value="V" />
			<param name="intput_v" value="8" />
			<param name="input_2" value="true" />
			<param name="input_3" value="true" />
		</include>
	sms9 - 4
		<include content="letter_content">
			<param name="letter" value="W" />
			<param name="intput_v" value="9" />
		</include>
		<include content="letter_content">
			<param name="letter" value="X" />
			<param name="intput_v" value="9" />
			<param name="input_2" value="true" />
		</include>
		<include content="letter_content">
			<param name="letter" value="Y" />
			<param name="intput_v" value="9" />
			<param name="input_2" value="true" />
			<param name="input_3" value="true" />
		</include>
		<include content="letter_content">
			<param name="letter" value="Z" />
			<param name="intput_v" value="9" />
			<param name="input_2" value="true" />
			<param name="input_3" value="true" />
			<param name="input_4" value="true" />
		</include>
		
		
	</include>
		<!-- <include content="letter_content">
			<param name="letter" value="A" />
		</include>
		<include content="letter_content">
			<param name="letter" value="B" />
		</include>
		<include content="letter_content">
			<param name="letter" value="C" />
		</include>
		<include content="letter_content">
			<param name="letter" value="D" />
		</include>
		<include content="letter_content">
			<param name="letter" value="E" />
		</include>
		<include content="letter_content">
			<param name="letter" value="F" />
		</include>
		<include content="letter_content">
			<param name="letter" value="G" />
		</include>
		<include content="letter_content">
			<param name="letter" value="H" />
		</include>
		<include content="letter_content">
			<param name="letter" value="I" />
		</include>
		<include content="letter_content">
			<param name="letter" value="J" />
		</include>
		<include content="letter_content">
			<param name="letter" value="K" />
		</include>
		<include content="letter_content">
			<param name="letter" value="L" />
		</include>
		<include content="letter_content">
			<param name="letter" value="M" />
		</include>
		<include content="letter_content">
			<param name="letter" value="N" />
		</include>
		<include content="letter_content">
			<param name="letter" value="O" />
		</include>
		<include content="letter_content">
			<param name="letter" value="P" />
		</include>
		<include content="letter_content">
			<param name="letter" value="Q" />
		</include>
		<include content="letter_content">
			<param name="letter" value="R" />
		</include>
		<include content="letter_content">
			<param name="letter" value="S" />
		</include>
		<include content="letter_content">
			<param name="letter" value="T" />
		</include>
		<include content="letter_content">
			<param name="letter" value="U" />
		</include>
		<include content="letter_content">
			<param name="letter" value="V" />
		</include>
		<include content="letter_content">
			<param name="letter" value="W" />
		</include>
		<include content="letter_content">
			<param name="letter" value="X" />
		</include>
		<include content="letter_content">
			<param name="letter" value="Y" />
		</include>
		<include content="letter_content">
			<param name="letter" value="Z" />
		</include> -->
	
	
	
	<!-- fuck
	
	there some stack but no timeout ?! when use jumpsms
	sms2
		<include content="letter_content">
			<param name="letter" value="A" />
			<param name="intput_v" value="2" />
		</include>
		<include content="letter_content">
			<param name="letter" value="B" />
			<param name="intput_v" value="2" />
			<param name="input_2" value="true" />
		</include>
		<include content="letter_content">
			<param name="letter" value="C" />
			<param name="intput_v" value="2" />
			<param name="input_2" value="true" />
			<param name="input_3" value="true" />
		</include>
	sms3
		<include content="letter_content">
			<param name="letter" value="D" />
			<param name="intput_v" value="3" />
		</include>
		<include content="letter_content">
			<param name="letter" value="E" />
			<param name="intput_v" value="3" />
			<param name="input_2" value="true" />
		</include>
		<include content="letter_content">
			<param name="letter" value="F" />
			<param name="intput_v" value="3" />
			<param name="input_2" value="true" />
			<param name="input_3" value="true" />
		</include>
	sms4
		<include content="letter_content">
			<param name="letter" value="G" />
			<param name="intput_v" value="4" />
		</include>
		<include content="letter_content">
			<param name="letter" value="H" />
			<param name="intput_v" value="4" />
			<param name="input_2" value="true" />
		</include>
		<include content="letter_content">
			<param name="letter" value="I" />
			<param name="intput_v" value="4" />
			<param name="input_2" value="true" />
			<param name="input_3" value="true" />
		</include>
	sms5
		<include content="letter_content">
			<param name="letter" value="J" />
			<param name="intput_v" value="5" />
		</include>
		<include content="letter_content">
			<param name="letter" value="K" />
			<param name="intput_v" value="5" />
			<param name="input_2" value="true" />
		</include>
		<include content="letter_content">
			<param name="letter" value="L" />
			<param name="intput_v" value="5" />
			<param name="input_2" value="true" />
			<param name="input_3" value="true" />
		</include>
		
	sms6
		<include content="letter_content">
			<param name="letter" value="M" />
			<param name="intput_v" value="6" />
		</include>
		<include content="letter_content">
			<param name="letter" value="N" />
			<param name="intput_v" value="6" />
			<param name="input_2" value="true" />
		</include>
		<include content="letter_content">
			<param name="letter" value="O" />
			<param name="intput_v" value="6" />
			<param name="input_2" value="true" />
			<param name="input_3" value="true" />
		</include>
	sms7
		<include content="letter_content">
			<param name="letter" value="P" />
			<param name="intput_v" value="7" />
		</include>
		<include content="letter_content">
			<param name="letter" value="Q" />
			<param name="intput_v" value="7" />
			<param name="input_2" value="true" />
		</include>
		<include content="letter_content">
			<param name="letter" value="R" />
			<param name="intput_v" value="7" />
			<param name="input_2" value="true" />
			<param name="input_3" value="true" />
		</include>
	sms8
		<include content="letter_content">
			<param name="letter" value="S" />
			<param name="intput_v" value="8" />
		</include>
		<include content="letter_content">
			<param name="letter" value="T" />
			<param name="intput_v" value="8" />
			<param name="input_2" value="true" />
		</include>
		<include content="letter_content">
			<param name="letter" value="U" />
			<param name="intput_v" value="8" />
			<param name="input_2" value="true" />
			<param name="input_3" value="true" />
		</include>
	sms9
		<include content="letter_content">
			<param name="letter" value="V" />
			<param name="intput_v" value="9" />
		</include>
		<include content="letter_content">
			<param name="letter" value="W" />
			<param name="intput_v" value="9" />
			<param name="input_2" value="true" />
		</include>
		<include content="letter_content">
			<param name="letter" value="X" />
			<param name="intput_v" value="9" />
			<param name="input_2" value="true" />
			<param name="input_3" value="true" />
		</include>
		
	sms? hä 
		<include content="letter_content">
			<param name="letter" value="Y" />
			<param name="intput_v" value="5" />
		</include>
		<include content="letter_content">
			<param name="letter" value="Z" />
			<param name="intput_v" value="5" />
			<param name="input_2" value="true" />
		</include>
	

	-->
	
	<!-- 
		info 
			JumpSMS<2-9> 	Jump through a list using SMS-style input (eg press 2 twice to jump to the B's.)
			FilterSMS<2-9> 	Filter a list in music or videos using SMS-style input_1
			
			
				<onclick>setfocus(50)</onclick>
				<onclick condition="$PARAM[input_1]">JumpSMS$PARAM[intput_v]</onclick>
				<onclick condition="$PARAM[input_2]">JumpSMS$PARAM[intput_v]</onclick>
				<onclick condition="$PARAM[input_3]">JumpSMS$PARAM[intput_v]</onclick>
				
			
	-->
		<!-- good, but cant jump filter again due to xsp updte  -->
		<!-- <onclick>Container.Update($INFO[Container().FolderPath]/?xsp=%7B%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22startswith%22%2C%22value%22%3A%5B%22$PARAM[letter]%22%5D%7D%5D%7D%2C%22type%22%3A%22$INFO[Container.Content]%22%7D)</onclick> -->
		<!-- but what if -->
		<!-- <onclick>Container.Update($INFO[Container().FolderPath]/?xsp=%7B%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22startswith%22%2C%22value%22%3A%5B%22$PARAM[letter]%22%5D%7D%5D%7D%2C%22type%22%3A%22$INFO[Container.Content]%22%7D)</onclick> -->
		
		
				<!-- <onclick condition="!String.Contains(Container().FolderPath,xsp)">SetProperty(prev_test,$INFO[Container.FolderPath],home)</onclick> -->
				<!-- <onclick condition="!String.Contains(Container().FolderPath,xsp)">Container.Update($INFO[Container.FolderPath]/?xsp=%7B%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22startswith%22%2C%22value%22%3A%5B%22$PARAM[letter]%22%5D%7D%5D%7D%2C%22type%22%3A%22$INFO[Container.Content]%22%7D)</onclick> -->
				
				
				<!-- <onclick condition="String.Contains(Container.FolderPath,xsp)">Container.Update($INFO[Window(home).Property(prev_test)]?xsp=%7B%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22startswith%22%2C%22value%22%3A%5B%22$PARAM[letter]%22%5D%7D%5D%7D%2C%22type%22%3A%22$INFO[Container.Content]%22%7D)</onclick> -->
				
				
				<!-- <onclick condition="false + !String.IsEmpty(Window(home).Property(prev_test))">ClearProperty(prev_test,home)</onclick> -->
				
				
				<!-- <onclick>setfocus(50)</onclick> -->
		
	<include name="letter_content">
		<param name="input_1" default="true" />
		<param name="input_2" default="false" />
		<param name="input_3" default="false" />
		<param name="input_4" default="false" />
		
		<definition>
			<item>
				<description>SMS JUMP method is good, but if button press belong to sam sms'nr' there wasnt a reset before</description>
				<visible>true</visible>
				
				<label>$PARAM[letter]</label>
				<onclick>setfocus(50)</onclick>
				<onclick condition="$PARAM[input_1]">JumpSMS$PARAM[intput_v]</onclick>
				<onclick condition="$PARAM[input_2]">JumpSMS$PARAM[intput_v]</onclick>
				<onclick condition="$PARAM[input_3]">JumpSMS$PARAM[intput_v]</onclick>
				<onclick condition="$PARAM[input_4]">JumpSMS$PARAM[intput_v]</onclick>
				<visible>!String.IsEqual(ListItem.SortLetter,$PARAM[letter])</visible>
				<onclick></onclick>
				
				
			</item>
			
			<item>
				<description>container update method - not good as stacks history + xsp workaraound needed, Container.Refresh will not stack</description>
				<visible>false</visible>
				
				<label>$PARAM[letter]</label>
				<onclick condition="!String.Contains(Container().FolderPath,xsp)">SetProperty(prev_test,$INFO[Container.FolderPath],home)</onclick>
				<onclick condition="!String.Contains(Container().FolderPath,xsp)">Container.Refresh($INFO[Container.FolderPath]/?xsp=%7B%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22startswith%22%2C%22value%22%3A%5B%22$PARAM[letter]%22%5D%7D%5D%7D%2C%22type%22%3A%22$INFO[Container.Content]%22%7D)</onclick>
				
				<onclick condition="String.Contains(Container.FolderPath,xsp)">Container.Refresh($INFO[Window(home).Property(prev_test)]?xsp=%7B%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22startswith%22%2C%22value%22%3A%5B%22$PARAM[letter]%22%5D%7D%5D%7D%2C%22type%22%3A%22$INFO[Container.Content]%22%7D)</onclick>
				
				
				<onclick condition="false + !String.IsEmpty(Window(home).Property(prev_test))">ClearProperty(prev_test,home)</onclick>
				
				<onclick>setfocus(50)</onclick>
			</item>
		</definition>
	</include>
					
	
	<include name="ScrollBar_Alphabet_ver">
		<animation effect="fade" start="100" end="0" time="250" condition="Window.IsActive(1140)">conditional</animation>
		<width>60</width>
		<left>36</left>
		<onup>600</onup>
		<ondown>600</ondown>
		<onleft>50</onleft>
		<onright condition="!Window.IsActive(musicplaylist) + [MusicPlayer.Offset(-1).Exists | MusicPlayer.Offset(1).Exists]">SetProperty(CurrentPlaylistVisible,mediawindow,home)</onright>
		<onright condition="!Window.IsActive(musicplaylist) + [MusicPlayer.Offset(-1).Exists | MusicPlayer.Offset(1).Exists]">activatewindow(1140)</onright>
		<onright condition="Control.IsVisible(19) + !MusicPlayer.Offset(-1).Exists + !MusicPlayer.Offset(1).Exists">19</onright>
		<onright condition="!Control.IsVisible(19) + !MusicPlayer.Offset(-1).Exists + !MusicPlayer.Offset(1).Exists">50</onright>
		<centertop>50%</centertop>
	</include>
	<include name="ScrollBar_Alphabet_hor">
		<left>110</left>
		<top>15</top>	
		<height>75</height>
		<onup condition="$EXP[Has_Trailer]">PlayMedia($INFO[Window(home).Property(listitemtrailer)],1)</onup>
		<onup condition="$EXP[Has_Trailer]">SetProperty(TrailerIsPlaying,true,home)</onup>
		<onup condition="$EXP[Has_Trailer] + String.IsEmpty(Window.Property(Spotlight_Cast))">SetProperty(Spotlight_Cast,visible)</onup>
		<onup condition="$EXP[Has_Trailer]">50</onup>
		<onup condition="!$EXP[Has_Trailer] + Control.IsVisible(19)">19</onup>
		<ondown>50</ondown>
		<onleft>$PARAM[id]</onleft>
		<onright>$PARAM[id]</onright>
	</include>
	<variable name="texture_alphbaetbar_bg">
		<value condition="[Control.IsVisible(503) + Skin.HasSetting(View_503_DisableFooter)] | [Control.IsVisible(504) + Skin.HasSetting(View_504_DisableFooter)]">diffuse/gradientright.png</value>
		<value>colors/white.png</value>
	</variable>

	<include name="Fanart_Diffused">
		<param name="visible" default="true" />
		<param name="width" default="1344" />
		<param name="height" default="770" />
		<definition>
		<control type="image">
			<description>WRONG FADEOUT CONDITIONS - REVISIT</description>
			<visible>$PARAM[visible]</visible>
			<fadetime>350</fadetime>
			<nested />
			<top>0</top>
			<width>$PARAM[width]</width>
			<height>$PARAM[height]</height>         
			<texture background="true" diffuse="$PARAM[diffuse]">$VAR[spotlight_fanartbackground]</texture>
			<aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
			<animation effect="zoom" start="110" end="130" center="auto" time="12000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation)">Conditional</animation>
			<animation effect="slide" start="-10,-10" end="10,10" time="8000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation)">Conditional</animation>
			<animation effect="fade" start="100" end="0" delay="200" time="800" pulse="false" condition="[Player.HasVideo + String.IsEmpty(Window(Home).Property(TrailerIsPlaying))] | [[[Window.IsActive(home) + !Skin.HasSetting(home_trailer_showwidget)] | [!Window.IsActive(home) + !Control.IsVisible(520)]] + !String.IsEmpty(Window(Home).Property(TrailerIsPlaying))]">Conditional</animation>
		</control>
		</definition>
	</include>
	
	
	
</includes>