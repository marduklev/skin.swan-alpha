<?xml version="1.0" encoding="UTF-8"?>
<includes>

	
	<!-- SUBMISSION NOTICE TO SORT THE UNMERCIFUL CONDITIONAL THINGS 
					maybe better prepare with
						$PARAM[mediawindow eg*viedo]view_locked_movies when set the strings ?
					if so than later
					 
					 
visiblecondition  [not content X | [content is X + [X has no locks | X is locked for id]]]

window			visiblecondition	
videos			[Container.Content(movies) + [String.IsEmpty(skin.string(view_locked_movies)) | String.IsEqual(skin.string(view_locked_movies),$PARAM[view_id])]] | 
				[Container.Content(sets) + [String.IsEmpty(skin.string(view_locked_sets)) | String.IsEqual(skin.string(view_locked_sets),$PARAM[view_id])]] | 
				[Container.Content(tvshows) + [String.IsEmpty(skin.string(view_locked_tvshows)) | String.IsEqual(skin.string(view_locked_tvshows),$PARAM[view_id])]] | 
				[Container.Content(seasons) + [String.IsEmpty(skin.string(view_locked_seasons)) | String.IsEqual(skin.string(view_locked_seasons),$PARAM[view_id])]] | 
				[Container.Content(episodes) + [String.IsEmpty(skin.string(view_locked_episodes)) | String.IsEqual(skin.string(view_locked_episodes),$PARAM[view_id])]] | 
				
				[Container.Content(actors) + [String.IsEmpty(skin.string(view_locked_actors)) | String.IsEqual(skin.string(view_locked_actors),$PARAM[view_id])]] | 
				[Container.Content(directors) + [String.IsEmpty(skin.string(view_locked_directors)) | String.IsEqual(skin.string(view_locked_directors),$PARAM[view_id])]] | 
				[Container.Content(tags) + [String.IsEmpty(skin.string(view_locked_tags)) | String.IsEqual(skin.string(view_locked_tags),$PARAM[view_id])]] | 
				[Container.Content(countries) + [String.IsEmpty(skin.string(view_locked_countries)) | String.IsEqual(skin.string(view_locked_countries),$PARAM[view_id])]] | 
				[Container.Content(studios) + [String.IsEmpty(skin.string(view_locked_studios)) | String.IsEqual(skin.string(view_locked_studios),$PARAM[view_id])]] | 
			
music			[Container.Content(songs) + [String.IsEmpty(skin.string(view_locked_songs)) | String.IsEqual(skin.string(view_locked_songs),$PARAM[view_id])]] | 
				[Container.Content(sources) + [String.IsEmpty(skin.string(view_locked_sources)) | String.IsEqual(skin.string(view_locked_sources),$PARAM[view_id])]] | 
				
*shared*	
videos|music	[Container.Content(musicvideos) + [String.IsEmpty(skin.string(view_locked_musicvideos)) | String.IsEqual(skin.string(view_locked_musicvideos),$PARAM[view_id])]] |
				[Container.Content(artists) + [String.IsEmpty(skin.string(view_locked_artists)) | String.IsEqual(skin.string(view_locked_artists),$PARAM[view_id])]] |
				[Container.Content(albums) + [String.IsEmpty(skin.string(view_locked_albums)) | String.IsEqual(skin.string(view_locked_albums),$PARAM[view_id])]] |
		
			[Container.Content(files) + [String.IsEmpty(skin.string(view_locked_files)) | String.IsEqual(skin.string(view_locked_files),$PARAM[view_id])]] | 
			[Container.Content(genres) + [String.IsEmpty(skin.string(view_locked_genres)) | String.IsEqual(skin.string(view_locked_genres),$PARAM[view_id])]] | 
			[Container.Content(years) + [String.IsEmpty(skin.string(view_locked_years)) | String.IsEqual(skin.string(view_locked_years),$PARAM[view_id])]] |
			[Container.Content(playlists) + [String.IsEmpty(skin.string(view_locked_playlists)) | String.IsEqual(skin.string(view_locked_playlists),$PARAM[view_id])]] |
			
			[Container.Content(addons) + [String.IsEmpty(skin.string(view_locked_addons)) | String.IsEqual(skin.string(view_locked_addons),$PARAM[view_id])]] | 
			[Container.Content(livetv) + [String.IsEmpty(skin.string(view_locked_livetv)) | String.IsEqual(skin.string(view_locked_livetv),$PARAM[view_id])]] | 
			[Container.Content(mixed) + [String.IsEmpty(skin.string(view_locked_mixed)) | String.IsEqual(skin.string(view_locked_mixed),$PARAM[view_id])]] |
			
			[Container.Content(unknown) + [String.IsEmpty(skin.string(view_locked_unknown)) | String.IsEqual(skin.string(view_locked_unknown),$PARAM[view_id])]] |
			[Container.Content(images) + [String.IsEmpty(skin.string(view_locked_images)) | String.IsEqual(skin.string(view_locked_images),$PARAM[view_id])]] |
			[Container.Content(games) + [String.IsEmpty(skin.string(view_locked_games)) | String.IsEqual(skin.string(view_locked_games),$PARAM[view_id])]] |

		
videos						   [!Container.Content(videos) + !Container.Content(movies) + !Container.Content(sets) + !Container.Content(tvshows) + !Container.Content(seasons) + !Container.Content(episodes) + !Container.Content(musicvideos) + 
								!Container.Content(actors) + !Container.Content(directors) + !Container.Content(tags) + !Container.Content(countries) + !Container.Content(studios) + 

music					 		!Container.Content(songs) + !Container.Content(sources) + 

*shared in media*		 		!Container.Content(files) + !Container.Content(genres) + !Container.Content(years) + !Container.Content(playlists) + 
	*music |videos(mvid)		!Container.Content(artists) + !Container.Content(albums) + 
								
	*video|music|games			!Container.Content(addons) + 
	*htsp (tvheadend) dir		!Container.Content(livetv) + 
	
	*set by	plugins		 		!Container.Content(mixed) + 
	*none/empty			 		!Container.Content() + 
	*?							!Container.Content(unknown) + 
	
	*videos|pictures			!Container.Content(images) + 
		-e.g. netflix profile select set container.content=images
				 		
*games	- 						!Container.Content(games)] | 

*playlistvideo|playlistmusic	Window.IsActive(MyPlaylist.xml)
		
-->


	<!-- 
	NOTES
bool				  bool
Container.Content() = String.IsEmpty(Container.Content)
	
	currently didnt go over whole contents, just respect the things which are done actually 
					[String.IsEqual(Window(home).Property(view_disable_mediawindow),videos) + 
						   [String.IsEqual(skin.string(view_locked_movies),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_sets),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_tvshows),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_seasons),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_episodes),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_musicvideos),$PARAM[view_id]) |
							String.IsEqual(skin.string(view_locked_artists),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_albums),$PARAM[view_id])]]
							| 
					[String.IsEqual(Window(home).Property(view_disable_mediawindow),music) + 
						   [String.IsEqual(skin.string(view_locked_musicvideos),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_artists),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_albums),$PARAM[view_id]) | 
							String.IsEqual(skin.string(view_locked_songs),$PARAM[view_id])]]	
	-->
	
	<include name="view_locking">
				<visible>
				Container.Content() | 
		[Container.Content(movies) + [String.IsEmpty(skin.string(view_locked_movies)) | String.IsEqual(skin.string(view_locked_movies),$PARAM[view_id])]] | 
		[Container.Content(sets) + [String.IsEmpty(skin.string(view_locked_sets)) | String.IsEqual(skin.string(view_locked_sets),$PARAM[view_id])]] | 
		[Container.Content(tvshows) + [String.IsEmpty(skin.string(view_locked_tvshows)) | String.IsEqual(skin.string(view_locked_tvshows),$PARAM[view_id])]] | 
		[Container.Content(seasons) + [String.IsEmpty(skin.string(view_locked_seasons)) | String.IsEqual(skin.string(view_locked_seasons),$PARAM[view_id])]] | 
		[Container.Content(episodes) + [String.IsEmpty(skin.string(view_locked_episodes)) | String.IsEqual(skin.string(view_locked_episodes),$PARAM[view_id])]] | 
		[Container.Content(musicvideos) + [String.IsEmpty(skin.string(view_locked_musicvideos)) | String.IsEqual(skin.string(view_locked_musicvideos),$PARAM[view_id])]] |
		[Container.Content(artists) + [String.IsEmpty(skin.string(view_locked_artists)) | String.IsEqual(skin.string(view_locked_artists),$PARAM[view_id])]] | 
		[Container.Content(albums) + [String.IsEmpty(skin.string(view_locked_albums)) | String.IsEqual(skin.string(view_locked_albums),$PARAM[view_id])]] | 
		[Container.Content(songs) + [String.IsEmpty(skin.string(view_locked_songs)) | String.IsEqual(skin.string(view_locked_songs),$PARAM[view_id])]] | 
		[Container.Content(files) + [String.IsEmpty(skin.string(view_locked_files)) | String.IsEqual(skin.string(view_locked_files),$PARAM[view_id])]] | 
		[Container.Content(sources) + [String.IsEmpty(skin.string(view_locked_sources)) | String.IsEqual(skin.string(view_locked_sources),$PARAM[view_id])]] | 
		[Container.Content(actors) + [String.IsEmpty(skin.string(view_locked_actors)) | String.IsEqual(skin.string(view_locked_actors),$PARAM[view_id])]] |
		[Container.Content(roles) + [String.IsEmpty(skin.string(view_locked_roles)) | String.IsEqual(skin.string(view_locked_roles),$PARAM[view_id])]] | 
		[Container.Content(directors) + [String.IsEmpty(skin.string(view_locked_directors)) | String.IsEqual(skin.string(view_locked_directors),$PARAM[view_id])]] | 
		[Container.Content(tags) + [String.IsEmpty(skin.string(view_locked_tags)) | String.IsEqual(skin.string(view_locked_tags),$PARAM[view_id])]] | 
		[Container.Content(genres) + [String.IsEmpty(skin.string(view_locked_genres)) | String.IsEqual(skin.string(view_locked_genres),$PARAM[view_id])]] | 
		[Container.Content(years) + [String.IsEmpty(skin.string(view_locked_years)) | String.IsEqual(skin.string(view_locked_years),$PARAM[view_id])]] | 
		[Container.Content(studios) + [String.IsEmpty(skin.string(view_locked_studios)) | String.IsEqual(skin.string(view_locked_studios),$PARAM[view_id])]] |
		[Container.Content(countries) + [String.IsEmpty(skin.string(view_locked_countries)) | String.IsEqual(skin.string(view_locked_countries),$PARAM[view_id])]] | 
		[Container.Content(playlists) + [String.IsEmpty(skin.string(view_locked_playlists)) | String.IsEqual(skin.string(view_locked_playlists),$PARAM[view_id])]] | 
		[Container.Content(images) + [String.IsEmpty(skin.string(view_locked_images)) | String.IsEqual(skin.string(view_locked_images),$PARAM[view_id])]] | 
		[Container.Content(addons) + [String.IsEmpty(skin.string(view_locked_addons)) | String.IsEqual(skin.string(view_locked_addons),$PARAM[view_id])]] | 
		[Container.Content(livetv) + [String.IsEmpty(skin.string(view_locked_livetv)) | String.IsEqual(skin.string(view_locked_livetv),$PARAM[view_id])]] | 
		[Container.Content(mixed) + [String.IsEmpty(skin.string(view_locked_mixed)) | String.IsEqual(skin.string(view_locked_mixed),$PARAM[view_id])]] |
		[Container.Content(unknown) + [String.IsEmpty(skin.string(view_locked_unknown)) | String.IsEqual(skin.string(view_locked_unknown),$PARAM[view_id])]] | 
		[Container.Content(plugins) + [String.IsEmpty(skin.string(view_locked_plugins)) | String.IsEqual(skin.string(view_locked_plugins),$PARAM[view_id])]] |
		
		[
		 !Container.Content(movies) + !Container.Content(sets) + !Container.Content(tvshows) + !Container.Content(seasons) + !Container.Content(episodes) + 
		 !Container.Content(musicvideos) + !Container.Content(artists) + !Container.Content(albums) + !Container.Content(songs) + 
		 !Container.Content(files) + !Container.Content(sources) + !Container.Content(actors) + !Container.Content(roles) + !Container.Content(directors) + 
		 !Container.Content(tags) + !Container.Content(genres) + !Container.Content(years) + !Container.Content(studios) + !Container.Content(countries) + 
		 !Container.Content(playlists) + !Container.Content(images) + 
		 !Container.Content(addons) + !Container.Content(livetv) + !Container.Content(mixed) + !Container.Content(unknown) + !Container.Content(plugins)
		]
		</visible>
	</include>
	<expression name="content_not_locked">
	[
	 String.IsEmpty(skin.string(view_locked_movies)) + 
	 String.IsEmpty(skin.string(view_locked_sets)) + 
	 String.IsEmpty(skin.string(view_locked_tvshows)) + 
	 String.IsEmpty(skin.string(view_locked_seasons)) + 
	 String.IsEmpty(skin.string(view_locked_episodes)) + 
	 String.IsEmpty(skin.string(view_locked_musicvideos)) + 
	 String.IsEmpty(skin.string(view_locked_artists)) + 
	 String.IsEmpty(skin.string(view_locked_albums)) + 
	 String.IsEmpty(skin.string(view_locked_songs)) + 
	 String.IsEmpty(skin.string(view_locked_files)) + 
	 String.IsEmpty(skin.string(view_locked_sources)) + 
	 String.IsEmpty(skin.string(view_locked_actors)) + 
	 String.IsEmpty(skin.string(view_locked_roles)) + 
	 String.IsEmpty(skin.string(view_locked_directors)) + 
	 String.IsEmpty(skin.string(view_locked_tags)) + 
	 String.IsEmpty(skin.string(view_locked_genres)) + 
	 String.IsEmpty(skin.string(view_locked_years)) + 
	 String.IsEmpty(skin.string(view_locked_studios)) + 
	 String.IsEmpty(skin.string(view_locked_countries)) + 
	 String.IsEmpty(skin.string(view_locked_playlists)) + 
	 String.IsEmpty(skin.string(view_locked_images)) + 
	 String.IsEmpty(skin.string(view_locked_addons)) + 
	 String.IsEmpty(skin.string(view_locked_livetv)) + 
	 String.IsEmpty(skin.string(view_locked_mixed)) + 
	 String.IsEmpty(skin.string(view_locked_unknown)) + 
	 String.IsEmpty(skin.string(view_locked_plugins))
	]
	 </expression>

	<include name="view_56_noLocking">
		<visible>Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(episodes) | Container.Content(artists) | Container.Content(albums)</visible>
	</include>
	<include name="view_58_noLocking">
		<visible>Container.Content(seasons)</visible>
	</include>
	<include name="view_503_noLocking">
		<visible>!Container.Content(episodes) | !Container.Content(sources)</visible>
	</include>
	<include name="view_504_noLocking">
		<visible>!Container.Content(sources)</visible>
	</include>

	<include name="mediawindow_layout">
			
			<control type="group">
				<visible>!Skin.HasSetting(BlurEnabled)</visible>
				<visible>String.IsEmpty(Window(home).Property(SetShortcutInProgress))</visible>
				<include>global_background</include>
			</control>
			<control type="group">
				<visible>Skin.HasSetting(BlurEnabled)</visible>
				<visible>String.IsEmpty(Window(home).Property(SetShortcutInProgress))</visible>
				<include>GlobalBlurredBackground</include>
			</control>
	
			<control type="group" id="70">
				<description>viewtypes</description>
				<include content="Animation_Close_MediaContainer" condition="String.IsEmpty(Window(home).Property(SetShortcutInProgress))" />
				
				<animation type="Conditional" condition="$EXP[Infodialog_IsActive] | Window.IsActive(mediasource) | [Window.IsActive(shutdownmenu) + !$EXP[IsSpotlight_View]]">
					<effect type="fade" start="100" end="0" time="250" tween="sine" easing="out" />
					<effect type="zoom" center="50%,50%" start="100" end="0" time="300" tween="cubic" easing="out" />
				</animation>
				
				<include condition="!string.isempty(window(home).property(shortcutitem_nr))" content="SwanShortcuts_Container"  />
				
				<include condition="String.IsEmpty(Window(home).Property(SetShortcutInProgress))">view_layer4</include>
				
				<include condition="String.IsEmpty(Skin.String($PARAM[window]_disabled_view_50)) + String.IsEmpty(Window(home).Property(SetShortcutInProgress))">view_50</include>
				<include condition="String.IsEmpty(Skin.String($PARAM[window]_disabled_view_51)) + String.IsEmpty(Window(home).Property(SetShortcutInProgress))">view_51</include>
				<include condition="String.IsEmpty(Skin.String($PARAM[window]_disabled_view_52)) + String.IsEmpty(Window(home).Property(SetShortcutInProgress))">view_52</include>
				<include condition="String.IsEmpty(Skin.String($PARAM[window]_disabled_view_53)) + String.IsEmpty(Window(home).Property(SetShortcutInProgress))">view_53</include>
				<include condition="String.IsEmpty(Skin.String($PARAM[window]_disabled_view_54)) + String.IsEmpty(Window(home).Property(SetShortcutInProgress))">view_54</include>
				<include condition="String.IsEmpty(Skin.String($PARAM[window]_disabled_view_56)) + String.IsEmpty(Window(home).Property(SetShortcutInProgress))">view_56</include>
				
				<include condition="String.IsEmpty(Skin.String($PARAM[window]_disabled_view_58)) + [Window.IsActive(videos) + String.IsEmpty(Window(home).Property(SetShortcutInProgress))]">view_58</include>
				
				<include condition="String.IsEmpty(Skin.String($PARAM[window]_disabled_view_502)) + String.IsEmpty(Window(home).Property(SetShortcutInProgress))">view_502</include>
				
				<include condition="[String.IsEmpty(Skin.String($PARAM[window]_disabled_view_503)) + String.IsEmpty(Skin.String($PARAM[window]_disabled_view_503))] + String.IsEmpty(Window(home).Property(SetShortcutInProgress))">view_503_504</include>
				
				<include condition="String.IsEmpty(Window(home).Property(SetShortcutInProgress))" content="ScrollBar_Alphabet">
					<right>0</right>
					<width>100</width>
					<top>110</top>
					
					<param name="id" value="600" />
					<param name="visible" value="[Control.IsVisible(50) | Control.IsVisible(51) | Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(54) | Control.IsVisible(56) | Control.IsVisible(502)]" />
					<param name="orientation" value="vertical" />
					<param name="panel_width" value="60" />
					<param name="height" value="880" />
					<param name="item_hw" value="32.5" />
					<param name="bg_texture_visible" value="true" />
					<param name="is_vertical" value="true" />
					<param name="color_1" value="ff131313" />
					<param name="color_2" value="ffffffff" />
				</include>
				<include condition="String.IsEmpty(Window(home).Property(SetShortcutInProgress))" content="ScrollBar_Alphabet">
					<bottom>380</bottom>
					<animation effect="slide" start="0,0" end="380,10" condition="[Control.IsVisible(503) + Skin.HasSetting(View_503_DisableFooter) | Control.IsVisible(504) + Skin.HasSetting(View_504_DisableFooter)]">conditional</animation>
				
					<param name="id" value="610" />
					<param name="visible" value="[Control.IsVisible(503) | Control.IsVisible(504)]" />
					<param name="orientation" value="horizontal" />
					<param name="panel_width" value="1720" />
					<param name="height" value="90" />
					<param name="item_hw" value="50" />
					<param name="bg_texture_visible" value="true" />
					<param name="is_vertical" value="false" />
					<param name="color_1" value="ff131313" />
					<param name="color_2" value="ffffffff" />
				</include>
				
				<include condition="String.IsEmpty(Window(home).Property(SetShortcutInProgress))">Scrollbar_Lib_vertical</include>
				<include condition="String.IsEmpty(Window(home).Property(SetShortcutInProgress))">Scrollbar_Lib_horizontal</include>
				
			</control>
			
			<include content="HeaderBar">
				<param name="HasBGPanel" value="Skin.HasSetting(MediaWindow_UseHeaderBG)" />
			</include>
			
			<include content="PreMenucontrol" />
			
			<control type="group">
				<animation effect="slide" start="-450,0" end="0,0" time="300" tween="cubic" easing="inout">VisibleHidden</animation>
				<visible>String.IsEqual(Window(Home).Property(menucontrol_active),common)</visible>
				<include content="menucontrol_global" condition="String.IsEmpty(Window(home).Property(SetShortcutInProgress))" />
			</control>
			
			<include condition="[[Window.IsActive(videos) | Window.IsActive(music)] + String.IsEmpty(Window(home).Property(SetShortcutInProgress))]" content="NativeString_Filter" />
			
		</include>
</includes>