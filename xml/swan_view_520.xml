<?xml version="1.0" encoding="utf-8"?>
<includes>
	
	<variable name="list_item_rootinfo">
		<value condition="String.StartsWith(Container.Folderpath,library) | Container.Content()">$INFO[System.CurrentWindow,[B],[/B]]</value>
		<value condition="$EXP[IsEpisode]">$INFO[Container.ListItem.TVShowTitle,[B],[/B]]</value>
		<value condition="$EXP[IsSeason]">$INFO[Container.ListItem.TVShowTitle,[B],[/B]]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Artist)">$INFO[Container.ListItem.Artist,[B],[/B]]</value>
		<value condition="Container.Content(playlists) | Container.Content(genres) | Container.Content(studios) | Container.Content(tags) | Container.Content(countries) | Container.Content(years)">[UPPERCASE][B]$INFO[Container.FolderName][/B][/UPPERCASE]</value>
		<value condition="Container.Content(actors) | Container.Content(directors)">[COLOR $VAR[color_spotlightlib_accent]]$INFO[Container.ListItem.Label,[B],[/B]][/COLOR]</value>
		<value condition="!Container.Content(years) + String.EndsWith(Container.ListItem.Label, Container.ListItem.Year)">$INFO[Container.ListItem.Label,[B],[/B]]</value>
		<value>$INFO[Container.ListItem.Label,[B],[/B]]$INFO[Container.ListItem.Year,   (,)]</value>
	</variable>
	<variable name="list_item_subinfo">
		<value condition="String.StartsWith(Container.Folderpath,library) | Container.Content() | [String.IsEmpty(listitem.dbtype) + !Container.Content(years)]">[COLOR $VAR[color_spotlightlib_accent]]$INFO[Container.ListItem.Label][/COLOR]</value>
		<value condition="$EXP[IsEpisode]">$INFO[Container.ListItem.Season,$LOCALIZE[20373] ,]$INFO[Container.ListItem.Year,  ([LIGHT],[/LIGHT])]  | $INFO[Container.ListItem.Episode,[CAPITALIZE]$LOCALIZE[20452][/CAPITALIZE] ,]$INFO[Container.ListItem.Title, : ,]</value>
		<value condition="$EXP[IsSeason]">$INFO[Container.ListItem.Label]$INFO[Container.ListItem.Year,  ([LIGHT],[/LIGHT])]</value>
		<value condition="$EXP[IsTVShow]">$VAR[TVShow_Propertys]</value>
		<value condition="Container.Content(actors) | Container.Content(directors)">[B]$INFO[Container.FolderName][/B]</value>
		<value condition="Container.Content(genres) | Container.Content(studios) | Container.Content(tags) | Container.Content(countries) | Container.Content(years)">[COLOR $VAR[color_spotlightlib_accent]]$INFO[Container.ListItem.Label,[B],[/B]][/COLOR]</value>
	</variable>
	
	<variable name="TVShow_Propertys">
		<value condition="!String.IsEmpty(Window(home).Property(totalseasons)) + !String.IsEmpty(Window(home).Property(totalepisodes))">$INFO[Window(home).Property(totalseasons)] $VAR[Season_PluSing] | $INFO[Window(home).Property(totalepisodes)] $VAR[Episode_PluSing]$VAR[ListItemStatus]</value>
		<value condition="String.IsEmpty(Window(home).Property(totalseasons)) + !String.IsEmpty(Window(home).Property(totalepisodes))">$INFO[Window(home).Property(totalseasons)] $VAR[Season_PluSing] | $INFO[Window(home).Property(totalepisodes)] $VAR[Episode_PluSing]$VAR[ListItemStatus]</value>
		<value condition="[String.IsEmpty(Window(home).Property(totalseasons)) + String.IsEmpty(Window(home).Property(totalepisodes)) + Skin.HasSetting(TMDbHelper.Service)] + !String.IsEmpty(Window(home).Property(TMDbHelper.ListItem.Season)) + !String.IsEmpty(Window(home).Property(TMDbHelper.ListItem.Episode))">$INFO[Window(Home).Property(TMDbHelper.ListItem.Season)] $VAR[Season_PluSing] | $INFO[Window(Home).Property(TMDbHelper.ListItem.Episode)] $VAR[Episode_PluSing]$VAR[ListItemStatus]</value>
		<value condition="[String.IsEmpty(Window(home).Property(totalseasons)) + String.IsEmpty(Window(home).Property(totalepisodes)) + Skin.HasSetting(TMDbHelper.Service)] + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Next_Aired))">$VAR[ListItemStatus]$INFO[Window(Home).Property(TMDbHelper.ListItem.Next_Aired),   |   Next Episode airing: ,]</value>
	</variable>
	<variable name="ListItemStatus">
		<value condition="!String.IsEmpty(ListItem.Status)">$INFO[ListItem.Status, | ,]</value>
		<value condition="!String.IsEmpty(Window(home).Property(status))">$INFO[Window(home).Property(status), | ,]</value>
		<value condition="!String.IsEmpty(Window(home).Property(TMDbHelper.ListItem.Status))">$INFO[Window(home).Property(TMDbHelper.ListItem.Status), | ,]</value>
	</variable>
	
	<variable name="520_music_infobottom">
		<value condition="String.IsEqual(listitem.dbtype,artist)">$INFO[Container.ListItem.Property(Artist_Formed),$LOCALIZE[21894] : ,  ]$INFO[Container.ListItem.Property(Artist_Disbanded),$LOCALIZE[21896] : ,]$INFO[Container.ListItem.Property(Artist_YearsActive),  â€¢   $LOCALIZE[21898] : ,]</value>
		<value condition="String.IsEqual(listitem.dbtype,album)">$VAR[ListItemDuration,$LOCALIZE[180] : ,]$INFO[Container.ListItem.DateAdded,  |  $LOCALIZE[570] : ,]</value>
		<value condition="String.IsEqual(listitem.dbtype,song)">$INFO[container.numitems,$LOCALIZE[134]: ,]$INFO[Container.ListItem.TotalDiscs, |  $LOCALIZE[14087]: , ]$INFO[Container.Totaltime, | $LOCALIZE[558] $LOCALIZE[180] : ,]$INFO[Container.ListItem.DateAdded,  |  $LOCALIZE[570] : ,]$INFO[ListItem.AlbumStatus,  |  $LOCALIZE[38081] : ,]</value>
	</variable>
	
	<include name="view_520">
		<control type="group">
			<visible>Control.IsVisible(520)</visible>
			<control type="image">
				<visible>Player.HasVideo + String.IsEmpty(Window(Home).Property(TrailerIsPlaying))</visible>
				<texture colordiffuse="$VAR[color_spotlightlib_background_layer1]">colors/white90.png</texture>
			</control>
			<include content="Fanart_Diffused">
				<animation effect="fade" start="100" end="25" time="350" easing="inout" reversible="true" condition="true">conditional</animation>
				<visible>!Skin.HasSetting(View_520_FanartBG)</visible>
				<right>0</right>
				<param name="width" value="1267" />
				<param name="height" value="731" />
				<param name="diffuse" value="diffuse/spotlightleftdiffuse.png" />
				<param name="visible" value="true" />
			</include>
			<include content="Fanart_Diffused">
				<animation effect="fade" start="100" end="10" time="350" easing="inout" reversible="true" condition="true">conditional</animation>
				<visible>Skin.HasSetting(View_520_FanartBG)</visible>
				<right>0</right>
				<param name="width" value="1820" />
				<param name="height" value="950" />
				<param name="diffuse" value="diffuse/spotlightleftdiffuse.png" />
				<param name="visible" value="true" />
			</include>
			<control type="grouplist">
				<visible>Control.IsVisible(520)</visible>
				<orientation>horizontal</orientation>
				<itemgap>20</itemgap>
				<left>150</left>
				<top>200</top>
				<height>385</height>
				<animation effect="slide" end="-50,-80" time="150" condition="String.IsEqual(Container.ViewMode,$LOCALIZE[31263]) + String.IsEmpty(Container.PluginName) + String.IsEmpty(listitem.dbtype) + Container.Content()">conditional</animation>
	
				<control type="image">
					<description>polaroid square</description>
					<visible>!String.StartsWith(container().listitem.label,*) + [!window.isactive(music) + !Skin.HasSetting(View_520_disabledart_video)] | !Window.IsActive(videos)</visible>
					<visible>!string.isempty(listitem.dbtype) + !Container.Content() + !Container.Content(directors) + !Container.Content(actors) + !Container.Content(studios) + !Container.Content(genres) + !Container.Content(years) + !Container.Content(tags) + !Container.Content(countries)  + !Container.Content(sources) + !String.StartsWith(ListItem.Icon,defaultartist)</visible>
					<visible>[String.IsEmpty(listitem.art(poster)) + String.IsEmpty(listitem.art(season.poster))] | [string.contains(Container.PluginName,amazon) + [$EXP[IsTVShow] | $EXP[IsSeason] | $EXP[IsEpisode]] + String.Contains(listitem.icon,amazon.com)]</visible>
					<height>350</height>
					<width>350</width>
					<bordersize>10</bordersize>
					<bordertexture>colors/white.png</bordertexture>
					<texture diffuse="colors/white80.png">$VAR[ImageLayout_poster]</texture>
					<aspectratio scalediffuse="true" align="left" aligny="top">keep</aspectratio>
				</control>
				<control type="image">
					<description>polaroid  w 243 POSTER , polaroid poster - may scale it as it'll be better for the eyes - in compromise of cropping- curr best get a static with instead of keep to w+h</description>
					<bottom>30</bottom>
					<visible>[!window.isactive(music) + !Skin.HasSetting(View_520_disabledart_video)] | !Window.IsActive(videos)</visible>
					<visible>!string.isempty(listitem.dbtype) + !Container.Content() + !Container.Content(studios) + !Container.Content(genres) + !Container.Content(years) + !Container.Content(tags) + !Container.Content(countries) + !Container.Content(sources) + !String.StartsWith(ListItem.Icon,defaultartist)</visible>
					<visible>[!string.contains(Container.PluginName,amazon) + [!String.IsEmpty(listitem.art(poster)) | !String.IsEmpty(listitem.art(season.poster))]] | [$EXP[IsMovie] + String.Contains(listitem.icon,amazon.com)] | [[$EXP[IsTVShow] | $EXP[IsSeason] | $EXP[IsEpisode]] + !String.Contains(listitem.icon,amazon.com)] | [Container.Content(directors) + System.HasAddon(resource.images.moviedirectorthumbs)] | [Container.Content(actors) + !String.IsEqual(ListItem.Icon,defaultactor.png)]</visible>
					<width>252</width>
					<bordersize>10</bordersize>
					<bordertexture>colors/white.png</bordertexture>
					<aspectratio scalediffuse="true" align="left" aligny="bottom">stretch</aspectratio>
					<texture background="true" diffuse="colors/white80.png">$VAR[ImageLayout_poster]</texture>
				</control>
				<control type="image">
					<visible>[!window.isactive(music) + !Skin.HasSetting(View_520_disabledart_video)] | !Window.IsActive(videos)</visible>
					<visible>[Container.Content(actors) + String.IsEqual(ListItem.Icon,defaultactor.png)] | String.StartsWith(ListItem.Icon,defaultartist)</visible>
					<description>thumb real border</description>
					<height>350</height>
					<width>350</width>
					<bordersize>10</bordersize>
					<bordertexture>artworkdiffuse_unthemed/thumbborder.png</bordertexture>
					<texture diffuse="colors/white80.png">$VAR[ImageLayout_poster]</texture>
					<aspectratio scalediffuse="true" align="left" aligny="top">keep</aspectratio>
				</control>
				
				<control type="group">
					<animation effect="zoom" start="0,100" end="100,100" time="250" easing="inout" reversible="true">VisibleChange</animation>
					<description>trailer preview videowindow</description>
					<visible>$EXP[TrailerIsPlaying]</visible>
					<width>612</width>
					<height>355</height>
					<bottom>30</bottom>
					<control type="image">
						<texture>colors/black.png</texture>
						<bordersize>2</bordersize>
						<bordertexture>colors/white.png</bordertexture>
					</control>
					<control type="videowindow">
						<top>2</top>
						<bottom>2</bottom>
						<left>9</left>
						<width>97%</width>
					</control>
				</control>
				
				<control type="group">
					<control type="grouplist">
						<visible>Control.IsVisible(520)</visible>
						<orientation>vertical</orientation>
						<top>35</top>
						<left>30</left>
						<right>200</right>
						<width>1166</width>
						<height>350</height>
						<aligny>bottom</aligny>
						
						
						<animation effect="slide" start="0,0" end="0,-30" time="350" easing="inout" reversible="true" condition="!Skin.HasSetting(view_520_hideplot) + !Skin.HasSetting(View_520_Hide_Touch_Controls) + !Skin.HasSetting(View_520_DisableFooter)">conditional</animation>
						<animation effect="slide" start="0,0" end="0,200" time="350" easing="inout" reversible="true" condition="Skin.HasSetting(view_520_hideplot) + Skin.HasSetting(View_520_Hide_Touch_Controls)">conditional</animation>
						<animation effect="slide" start="0,0" end="0,130" time="350" easing="inout" reversible="true" condition="Skin.HasSetting(view_520_hideplot) + !Skin.HasSetting(View_520_Hide_Touch_Controls)">conditional</animation>
						<animation effect="slide" start="0,0" end="0,80" time="350" easing="inout" reversible="true" condition="Skin.HasSetting(view_520_hideplot) + Skin.HasSetting(View_520_DisableFooter)">conditional</animation>
						
						<control type="textbox">
							<description>TITLE def</description>
							<visible>String.IsEmpty(Window(Home).Property(TrailerIsPlaying))</visible>
							<height min="40" max="85">auto</height>
							<aligny>bottom</aligny>
							<label>$VAR[list_item_rootinfo]</label>
							<textcolor>$VAR[color_spotlightlib_main]</textcolor>
							<font>notosans_30_semibold</font>
						</control>
						<control type="textbox">
							<description>TITLE low width when trailer playing</description>
							<visible>!String.IsEmpty(Window(Home).Property(TrailerIsPlaying))</visible>
							<height min="40" max="85">auto</height>
							<width>71%</width>
							<aligny>bottom</aligny>
							<label>$VAR[list_item_rootinfo]</label>
							<textcolor>$VAR[color_spotlightlib_main]</textcolor>
							<font>notosans_30_semibold</font>
						</control>
						<control type="label">
							<description>GENRE - videos, else if not a subitem</description>
							<height>13</height>
							<visible>window.isactive(videos) | String.IsEqual(listitem.dbtype,artist)</visible>
							<textcolor>$VAR[color_spotlightlib_accent]</textcolor>
							<label fallback="">$INFO[listitem.genre]</label>
							<font>notosans_16_bold</font>
						</control>
						
						<include content="spacer_h" condition="window.isactive(music)">
							<param name="gap" value="13" />
							<param name="visible" value="!String.IsEqual(listitem.dbtype,artist)" />
						</include>
						<include content="spacer_h">
							<param name="gap" value="25" />
							<param name="visible" value="$EXP[IsEpisode] | $EXP[IsSeason] | $EXP[IsTVShow]" />
						</include>
						<include content="spacer_h" description="height can use negative values, therefore dont use a nested top -25">
							<param name="gap" value="-15" />
							<param name="visible" value="String.StartsWith(Container.Folderpath,library) | Container.Content()" />
						</include>
						<control type="label">
	                        <visible>!String.IsEmpty(listitem.dbtype) + !Container.Content()</visible>
                            <visible>$EXP[IsEpisode] | $EXP[IsSeason] | $EXP[IsTVShow] | Container.Content(genres) | Container.Content(studios) | Container.Content(tags) | Container.Content(countries) | Container.Content(actors) | Container.Content(directors) | Container.Content(years) | Container.Content(playlists)</visible>
							<height>20</height>
							<label>$VAR[list_item_subinfo]</label>
							<textcolor>$VAR[color_spotlightlib_main]</textcolor>
							<font>notosans_21_semibold</font>
						</control>
						<control type="label">
							<visible>String.IsEmpty(listitem.dbtype) + Container.Content()</visible>
							<height>50</height>
							<label>$VAR[list_item_subinfo]</label>
							<textcolor>$VAR[color_spotlightlib_main]</textcolor>
							<font>notosans_60_bold</font>
						</control>
						<control type="label">
							<visible>Container.Content(songs) | Container.Content(albums)</visible>
							<height>25</height>
							<label>$INFO[ListItem.Album,[B],[/B]]$INFO[ListItem.Year,    (,)]</label>
							<textcolor>$VAR[color_spotlightlib_secondary]</textcolor>
							<font>notosans_21_semibold</font>
						</control>
						<control type="label">
							<visible>Integer.IsGreater(ListItem.TotalDiscs,1) + [!String.IsEmpty(ListItem.DiscNumber) | !String.IsEmpty(ListItem.DiscTitle)]</visible>
							<height>25</height>
							<label>[B]âˆŸ[/B]$INFO[ListItem.DiscNumber, $LOCALIZE[427]   ,]$INFO[ListItem.DiscTitle,   [B]â€¢[/B]   ,]</label>
							<textcolor>$VAR[color_spotlightlib_secondary]</textcolor>
							<font>notosans_16_regular</font>
						</control>
						<control type="label">
							<height>30</height>
							<visible>window.isactive(music) + !String.IsEqual(listitem.dbtype,artist)</visible>
							<textcolor>$VAR[color_spotlightlib_accent]</textcolor>
							<label fallback="">$INFO[listitem.genre]</label>
							<font>notosans_16_bold</font>
						</control>
						<control type="textbox">
							<top>20</top>
							<visible>String.IsEmpty(Window(Home).Property(TrailerIsPlaying)) + !Skin.HasSetting(view_520_hideplot)</visible>
							<height>113</height>
							<width>80%</width>
							<label>$VAR[plot]</label>
							<textcolor>$VAR[color_spotlightlib_secondary]</textcolor>
							<font>notosans_22_regular_lowlined</font>
						</control>
						<control type="textbox">
							<top>20</top>
							<visible>!String.IsEmpty(Window(Home).Property(TrailerIsPlaying)) + !Skin.HasSetting(view_520_hideplot)</visible>
							<height>113</height>
							<width>50%</width>
							<label>$VAR[plot]</label>
							<textcolor>$VAR[color_spotlightlib_secondary]</textcolor>
							<font>notosans_22_regular_lowlined</font>
						</control>
						
						<control type="label">	
							<visible>Window.IsActive(music)</visible>
							<animation effect="fade" end="50" time="0" condition="true">conditional</animation>
							<height>25</height>
							<align>left</align>
							<font>notosans_16_bold</font>
							<textcolor>$VAR[color_spotlightlib_accent]</textcolor>
							<label>$VAR[520_music_infobottom]</label>
						</control>
						
						<control type="group">
							<top>10</top>
							<height>40</height>
							<visible>!Window.IsActive(music) + !String.IsEmpty(ListItem.Duration) + !Skin.HasSetting(view_520_hideplot)</visible>
							<visible>![$EXP[IsTVShow] | $EXP[IsSeason] | $EXP[IsEpisode]]</visible>
							<control type="image">
								<bordersize>4</bordersize>
								<width>30</width>
								<height>30</height>
								<texture colordiffuse="$PARAM[color_main]">resource://resource.images.skin.swan/tempfoldersqaurethumbs/time.png</texture>
								<aspectratio>keep</aspectratio>
							</control>
							<control type="label">	
								<left>35</left>
								<height>30</height>
								<align>left</align>
								<font>notosans_18_bold</font>
								<textcolor>$VAR[color_spotlightlib_main]</textcolor>
								<label>$VAR[ListItemDuration]</label>
							</control>
						</control>
						
						<control type="grouplist">
							<description>TOUCH CONTROL  Buttons</description>
							<visible>Control.IsVisible(520)</visible>
							<visible>!Skin.HasSetting(View_520_Hide_Touch_Controls)</visible>
							
							<animation effect="fade" start="100" end="0" time="350" easing="inout" reversible="true" condition="$EXP[TrailerIsPlaying]">conditional</animation>
							<animation effect="slide" start="0,0" end="0,50" time="0" condition="Skin.HasSetting(View_520_DisableFooter)">conditional</animation>
							
							<height>50</height>
							<itemgap>10</itemgap>
							<orientation>horizontal</orientation>
							<onup></onup>
							<ondown></ondown>
							<control type="radiobutton" id="52001">
								<include content="HUB_ContainerButtons">
									<description>Order Direction</description>
									<param name="texture" value="defaultmusicvideotitle.png" />
									<param name="frame_radius" value="50" />
									<param name="button_radius" value="40" />
									<param name="button_offsetadd" value="5" />
								</include>
								<onclick>SendClick(4)</onclick>
								<onclick>Notification([B]$INFO[Container.Content][/B] [I]Sort Order[/I],$INFO[Container.SortOrder])</onclick>
								<onclick>SetFocus(520)</onclick>
							</control>
							<control type="radiobutton" id="52002">
								<include content="HUB_ContainerButtons">
									<description>Sort Method</description>
									<param name="texture" value="buttons/advancedfiltermethod.png" />
									<param name="frame_radius" value="50" />
									<param name="button_radius" value="40" />
									<param name="button_offsetadd" value="5" />
								</include>
								<onclick>SendClick(3)</onclick>
								<onclick>Notification([B]$INFO[Container.Content][/B] [I]Sort Method[/I],$INFO[Container.SortMethod])</onclick>
								<onclick>SetFocus(520)</onclick>
							</control>
							
							<!-- play  WIP  -->
							<control type="radiobutton" id="52005">
								<left>20</left>
								<description>later on ? | container.content(tvshows) | container.content(seasons) | *all albums...</description>
								<visible>window.isactive(music) + [!string.isempty(container.listitem.dbtype) | [container.content(albums) + string.startswith(listitem.label, *)]] + [container.content(artists) | container.content(albums) | container.content(playlists) | container.content(genres) | container.content(years)]</visible>
				                <include content="HUB_ContainerButtons">
									<param name="texture" value="buttons/osd/play.png" />
									<param name="frame_radius" value="50" />
									<param name="button_radius" value="40" />
									<param name="button_offsetadd" value="5" />
								</include>
								<onclick>setfocus(520)</onclick>
								<onclick>RunScript(script.playlist.helper,action=select)</onclick>
								
			                </control>
							<control type="radiobutton" id="52004">
								<include content="HUB_ContainerButtons">
									<description>Open Info</description>
									<param name="texture" value="defaultaddoninfoprovider.png" />
									<param name="frame_radius" value="50" />
									<param name="button_radius" value="40" />
									<param name="button_offsetadd" value="5" />
								</include>
								<onclick>SetFocus(520)</onclick>
								<onclick>Action(info)</onclick>
							</control>
							
							<!-- slide playlist in, from right, 1140 need viewtype adjustments  -->
							<control type="radiobutton" id="52009">
								<include content="HUB_ContainerButtons">
									<param name="texture" value="defaultmusicplaylists.png" />
									<param name="frame_radius" value="50" />
									<param name="button_radius" value="40" />
									<param name="button_offsetadd" value="5" />
								</include>
								<visible>MusicPlayer.Offset(-1).Exists | MusicPlayer.Offset(1).Exists</visible>
								<onclick>SetProperty(CurrentPlaylistVisible,mediawindow,home)</onclick>
								<onclick>activatewindow(1140)</onclick>
							</control>
							<!-- toggle playlist states (random,repeatone etc  -->
							<control type="radiobutton" id="52010">
								<left>20</left>
								<include content="HUB_ContainerButtons">
									<param name="texture" value="buttons/osd/repeat.png" />
									<param name="frame_radius" value="50" />
									<param name="button_radius" value="40" />
									<param name="button_offsetadd" value="5" />
								</include>
								<visible>Player.HasMedia</visible>
								<onclick>PlayerControl(Repeat)</onclick>
					            <onclick condition="!Playlist.IsRepeatOne + !Playlist.IsRepeat">Notification(Repeat,[B]A l l[/B],10,buttons/osd/repeatall.png)</onclick>
					            <onclick condition="Playlist.IsRepeat">Notification(Repeat,[B]T i t l e[/B],10,buttons/osd/repeatone.png)</onclick>
					            <onclick condition="Playlist.IsRepeatOne">Notification(Repeat,[B]D i s a b l e d[/B],10,buttons/osd/repeatoff.png)</onclick>
							</control>
						</control>
					</control>
					
					<include content="MediaFlagGroup_Footer">
						<visible>String.IsEqual(Container.ViewMode,$LOCALIZE[31263]) + !Skin.HasSetting(View_520_DisableFooter)</visible>
						<bottom>-265</bottom>
						<animation effect="slide" start="0,90" end="0,0" time="350" tween="quadratic" easing="out" delay="100">VisibleChange</animation>
						<animation effect="zoom" start="100" end="80" center="-10,350" condition="true">conditional</animation>
						<animation effect="slide" start="0,0" end="-645,0" time="0" condition="$EXP[TrailerIsPlaying]">conditional</animation>
						<!-- <animation effect="slide" start="0,0" end="-480,0" time="0" condition="$EXP[IsEpisode] + String.Contains(listitem.icon,amazon.com)">conditional</animation> -->
						<param name="mediaflag_offset_left" value="30"/>
						<param name="mediaflag_offset_align" value="left" />
						<param name="mediaflag_width" value="500" />
					</include>
				</control>
			</control>
			
			
			<include condition="window.IsActive(videos)" content="latestcontent_info">
				<param name="cat_1_target_url" value="videodb://recentlyaddedmovies/" />
				<param name="cat_1_header" value="$LOCALIZE[20386]" />
				<param name="cat_1" value="LatestMovie" />
				<param name="cat_1_artwork" value="poster" />
				<param name="cat_2_header" value="$LOCALIZE[20387]" />
				<param name="cat_2_target_url" value="videodb://recentlyaddedepisodes/" />
				<param name="cat_2" value="LatestEpisode" />
				<param name="cat_2_value" value="ShowTitle" />
				<param name="cat_2_artwork" value="showthumb" />
				<param name="cat_3_target_url" value="videodb://recentlyaddedmusicvideos/" />
				<param name="cat_3_header" value="$LOCALIZE[20390]" />
				<param name="cat_3" value="LatestMusicvideo" />
				<param name="cat_3_artwork" value="fanart" />
			</include>
			<include condition="window.IsActive(music)" content="latestcontent_info">
				<param name="cat_1_target_url" value="musicdb://recentlyaddedalbums/" />
				<param name="cat_1_header" value="$LOCALIZE[359]" />
				<param name="cat_1" value="LatestAlbum" />
				<param name="cat_1_artwork" value="thumb" />
				<param name="cat_2_target_url" value="musicdb://recentlyaddedalbums/-1/" />
				<param name="cat_2_header" value="$LOCALIZE[20382] $LOCALIZE[134]" />
				<param name="cat_2" value="LatestSong" />
				<param name="cat_2_value" value="Title" />
				<param name="cat_2_artwork" value="thumb" />
				<param name="cat_3_target_url" value="videodb://recentlyaddedmusicvideos/" />
				<param name="cat_3_header" value="$LOCALIZE[359]" />
				<param name="cat_3" value="LatestMusicvideo" />
				<param name="cat_3_artwork" value="fanart" />
			</include>
			
			<control type="group">
				<visible>Control.IsVisible(520) + !Skin.HasSetting(View_520_DisableFooter)</visible>
				<animation effect="slide" start="0,90" end="0,0" time="350" tween="quadratic" easing="out" delay="100">VisibleChange</animation>
				<animation effect="slide" start="0,0" end="130,0" time="350" easing="inout" reversible="true" condition="Container.Content(albums)">conditional</animation>
				<height>110</height>
				<top>470</top>
				<right>300</right>
					
				<include content="Ratings_Footer">
					<animation effect="zoom" start="100" end="80" center="1590,100" condition="true">conditional</animation>
					<visible>!$EXP[TrailerIsPlaying]</visible>
					<param name="rating_offset_left" value="0" />
					<param name="rating_offset_right" value="0" />
					<param name="rating_align" value="right" />
				</include>
				<include content="Ratings_Footer">
					<animation effect="zoom" start="100" end="80" center="5300,100" condition="true">conditional</animation>
					<visible>$EXP[TrailerIsPlaying]</visible>
					<param name="rating_offset_left" value="0" />
					<param name="rating_offset_right" value="0" />
					<param name="rating_align" value="left" />
				</include>
			</control>
			
			<include content="songsheet_colums">
				<param name="visible" value="Container.Content(Songs)"/>
				<param name="top" value="580"/>
				<param name="left" value="150"/>
			</include>
			
			<control type="panel" id="520">
				
				<animation effect="fade" start="100" end="0" time="350" easing="inout" reversible="true" condition="$EXP[TrailerIsPlaying]">conditional</animation>
					
				<description>genres,years,tags,years,directors ??</description>
				<preloaditems>2</preloaditems>
				<orientation>vertical</orientation>
				<onup condition="Control.IsVisible(19)">SetFocus(19)</onup>
				<include content="view_locking" condition="skin.hassetting(skin_locked_views)">
					<param name="view_id" value="520" />
				</include>
				<include content="media_container_navigation">
					<param name="pagecontrol" value="52060" />
				</include>
				<viewtype label="$LOCALIZE[31263]">icon</viewtype>
				<top>570</top>
				<left>150</left>
				<right>180</right>
				<height>450</height>
				<onleft>menu</onleft>
				<onup>41</onup>
				<ondown>42</ondown>
				
				<animation effect="slide" start="0,0" end="0,60" time="250" condition="Container.Content(Songs)">conditional</animation>
				<scrolltime tween="quadratic">400</scrolltime>
				<itemlayout height="150" width="290" condition="!Container.Content(albums) + !Container.Content(songs) + !Container.Content(actors) + !Container.Content(images)">
					<control type="group">
						<width>296</width>
						<height>150</height>
						<include content="universal_itemlayout">
							<param name="artwork_bordercolor" value="$VAR[color_universalcontainer_itemframe_nf]" />
							<param name="artwork" value="landscape" />
							<param name="artwork_focusoverlay_visible" value="false" />
							<param name="infotags_visible" value="false" />
							<param name="infotags_bgpanel_visible" value="false" />
							<param name="infotags_autoscroll" value="false" />
							<param name="artwork_bg_bordersize" value="6" />
							<param name="infotags_bgpanel_color" value="$VAR[color_universalcontainer_itemtag_bgpanel_nf]" />
							<param name="infotags_label1_color" value="$VAR[color_universalcontainer_itemtag_label1_nf]" />
							<param name="infotags_label2_color" value="$VAR[color_universalcontainer_itemtag_label2_nf]" />
							<param name="artwork_diffuse_themed" value="true" />
							<param name="artwork_diffuse_override" value="false" />
							<param name="artwork_overlay_landscape" value="![$EXP[IsEpisode]]" />
						</include>
							<control type="image">
								<visible>Container.Content(episodes) | [String.IsEmpty(ListItem.dbtype) + [Container.Content() | Container.Content(images)]] | Container.Content(sources)</visible>
								<height>50</height>
								<animation effect="slide" end="0,1" condition="[String.IsEqual(ListItem.Overlay,OverlayUnWatched.png) + !ListItem.IsResumable] | [String.IsEmpty(ListItem.dbtype) + Container.Content()] | Container.Content(sources)">conditional</animation>
								<bottom>9</bottom>
								<left>8</left>
								<right>8</right>
								<texture colordiffuse="ff131313">diffuse/episodeinfogradient.png</texture>
							</control>
							<control type="label">
								<visible>Container.Content(episodes) + !String.Contains(container.folderpath,/-1/)</visible>
								<height>20</height>
								<bottom>10</bottom>
								<left>12</left>
								<right>2</right>
								<font>notosans_12_semibold</font>
								<textcolor>white</textcolor>
								<label>$INFO[ListItem.Episode,  $LOCALIZE[20359] ,]</label>
							</control>
							<control type="label">
								<visible>Container.Content(episodes) + String.Contains(container.folderpath,/-1/)</visible>
								<height>20</height>
								<bottom>10</bottom>
								<left>12</left>
								<right>2</right>
								<font>notosans_12_semibold</font>
								<textcolor>white</textcolor>
								<label>$INFO[ListItem.Season,$LOCALIZE[20373] ,]$INFO[ListItem.Episode,  $LOCALIZE[20359] ,]</label>
							</control>
							<control type="label">
								<visible>Container.Content(episodes)</visible>
								<height>20</height>
								<bottom>10</bottom>
								<right>12</right>
								<align>right</align>
								<font>notosans_12_semibold</font>
								<textcolor>white</textcolor>
								<label>$INFO[ListItem.Duration(mm),, min.]</label>
							</control>
							<control type="label">
								<visible>[String.IsEmpty(ListItem.dbtype) + [Container.Content() | Container.Content(images)]] | Container.Content(sources)</visible>
								<height>20</height>
								<bottom>10</bottom>
								<left>12</left>
								<right>2</right>
								<font>notosans_12_semibold</font>
								<textcolor>white</textcolor>
								<label>$INFO[ListItem.Label]</label>
								<align>center</align>
							</control>
					</control>
				</itemlayout>
				<focusedlayout height="150" width="290" condition="!Container.Content(albums) + !Container.Content(songs) + !Container.Content(actors) + !Container.Content(images)">
					<include content="hiddenbutton_manage_skinpropertys" />
					<control type="group">
						<width>296</width>
						<height>150</height>
						
						<include>Animation_Item_Focus</include>
						<control type="group">
							<include content="universal_itemlayout">
								<param name="artwork_bordercolor" value="$VAR[color_universalcontainer_itemframe_fo]" />
								<param name="artwork" value="landscape" />
								<param name="artwork_focusoverlay_visible" value="true" />
								<param name="infotags_visible" value="false" />
								<param name="infotags_bgpanel_visible" value="false" />
								<param name="infotags_autoscroll" value="true" />
								<param name="artwork_bg_bordersize" value="4" />
								<param name="infotags_bgpanel_color" value="$VAR[color_universalcontainer_itemtag_bgpanel_fo]" />
								<param name="infotags_label1_color" value="$VAR[color_universalcontainer_itemtag_label1_fo]" />
								<param name="infotags_label2_color" value="$VAR[color_universalcontainer_itemtag_label2_fo]" />
								<param name="artwork_diffuse_themed" value="true" />
								<param name="artwork_diffuse_override" value="false" />
								<param name="artwork_overlay_landscape" value="![$EXP[IsEpisode]]" />
							</include>
							<control type="label">
								<visible>Container.Content(episodes) + !String.Contains(container.folderpath,/-1/)</visible>
								<height>20</height>
								<bottom>12</bottom>
								<left>12</left>
								<right>2</right>
								<font>notosans_12_semibold</font>
								<textcolor>white</textcolor>
								<label>$INFO[ListItem.Episode,  $LOCALIZE[20359] ,]</label>
							</control>
							<control type="label">
								<visible>Container.Content(episodes) + String.Contains(container.folderpath,/-1/)</visible>
								<height>20</height>
								<bottom>12</bottom>
								<left>12</left>
								<right>2</right>
								<font>notosans_12_semibold</font>
								<textcolor>white</textcolor>
								<label>$INFO[ListItem.Season,$LOCALIZE[20373] ,]$INFO[ListItem.Episode,  $LOCALIZE[20359] ,]</label>
							</control>
							<control type="label">
								<visible>Container.Content(episodes)</visible>
								<height>20</height>
								<bottom>10</bottom>
								<right>12</right>
								<align>right</align>
								<font>notosans_12_semibold</font>
								<textcolor>white</textcolor>
								<label>$INFO[ListItem.Duration(mm),, min.]</label>
							</control>
							<control type="label">
								<visible>[String.IsEmpty(ListItem.dbtype) + [Container.Content() | Container.Content(images)]] | Container.Content(sources)</visible>
								<height>20</height>
								<bottom>10</bottom>
								<left>12</left>
								<right>2</right>
								<font>notosans_12_semibold</font>
								<textcolor>white</textcolor>
								<label>$INFO[ListItem.Label]</label>
								<align>center</align>
							</control>
						</control>
					</control>
				</focusedlayout>
				<itemlayout height="225" width="225" condition="Container.Content(albums) | Container.Content(actors) | Container.Content(images)">
					<control type="group">
						<width>230</width>
						<height>230</height>
						<include content="universal_itemlayout">
							<param name="artwork_bordercolor" value="$VAR[color_universalcontainer_itemframe_nf]" />
							<param name="artwork" value="square" />
							<param name="artwork_focusoverlay_visible" value="false" />
							<param name="infotags_visible" value="false" />
							<param name="infotags_bgpanel_visible" value="false" />
							<param name="infotags_autoscroll" value="false" />
							<param name="artwork_bg_bordersize" value="6" />
							<param name="infotags_bgpanel_color" value="$VAR[color_universalcontainer_itemtag_bgpanel_nf]" />
							<param name="infotags_label1_color" value="$VAR[color_universalcontainer_itemtag_label1_nf]" />
							<param name="infotags_label2_color" value="$VAR[color_universalcontainer_itemtag_label2_nf]" />
							<param name="artwork_diffuse_themed" value="true" />
							<param name="artwork_diffuse_override" value="false" />
							<param name="artwork_overlay_landscape" value="![$EXP[IsEpisode]]" />
						</include>
						<control type="image">
							<visible>[Container.Content(actors) + !String.IsEqual(ListItem.Icon,defaultactor.png)] | [String.IsEmpty(ListItem.dbtype) + [Container.Content() | Container.Content(images)]]</visible>
							<height>50</height>
							<bottom>8.5</bottom>
							<left>8</left>
							<right>8</right>
							<texture colordiffuse="ff131313">diffuse/episodeinfogradient.png</texture>
						</control>
						<control type="label">
							<visible>[Container.Content(actors) + !String.IsEqual(ListItem.Icon,defaultactor.png)] | [String.IsEmpty(ListItem.dbtype) + [Container.Content() | Container.Content(images)]]</visible>
							<height>20</height>
							<bottom>10</bottom>
							<left>12</left>
							<right>2</right>
							<font>notosans_12_semibold</font>
							<textcolor>white</textcolor>
							<align>center</align>
							<label>$INFO[ListItem.Label]</label>
						</control>
					</control>
				</itemlayout>
				<focusedlayout height="225" width="225" condition="Container.Content(albums) | Container.Content(actors) | Container.Content(images)">
					<include content="hiddenbutton_manage_skinpropertys" />
					<control type="group">
						<width>230</width>
						<height>230</height>
						<include>Animation_Item_Focus</include>
						<control type="group">
							<include content="universal_itemlayout">
								<param name="artwork_bordercolor" value="$VAR[color_universalcontainer_itemframe_fo]" />
								<param name="artwork" value="square" />
								<param name="artwork_focusoverlay_visible" value="true" />
								<param name="infotags_visible" value="false" />
								<param name="infotags_bgpanel_visible" value="false" />
								<param name="infotags_autoscroll" value="true" />
								<param name="artwork_bg_bordersize" value="4" />
								<param name="infotags_bgpanel_color" value="$VAR[color_universalcontainer_itemtag_bgpanel_fo]" />
								<param name="infotags_label1_color" value="$VAR[color_universalcontainer_itemtag_label1_fo]" />
								<param name="infotags_label2_color" value="$VAR[color_universalcontainer_itemtag_label2_fo]" />
								<param name="artwork_diffuse_themed" value="true" />
								<param name="artwork_diffuse_override" value="false" />
								<param name="artwork_overlay_landscape" value="![$EXP[IsEpisode]]" />
							</include>
						</control>
						<control type="image">
							<visible>[Container.Content(actors) + !String.IsEqual(ListItem.Icon,defaultactor.png)] | [String.IsEmpty(ListItem.dbtype) + [Container.Content() | Container.Content(images)]]</visible>
							<height>50</height>
							<bottom>8.5</bottom>
							<left>8</left>
							<right>8</right>
							<texture colordiffuse="ff131313">diffuse/episodeinfogradient.png</texture>
						</control>
						<control type="label">
							<visible>[Container.Content(actors) + !String.IsEqual(ListItem.Icon,defaultactor.png)] | [String.IsEmpty(ListItem.dbtype) + [Container.Content() | Container.Content(images)]]</visible>
							<height>20</height>
							<bottom>10</bottom>
							<left>12</left>
							<right>2</right>
							<font>notosans_12_semibold</font>
							<textcolor>white</textcolor>
							<label>$INFO[ListItem.Label]</label>
							<align>center</align>
						</control>
					</control>
				</focusedlayout>
				<itemlayout height="38" condition="Container.Content(songs)">
					<include content="songsheet_row_container">
						<param name="focsed" value="false"/>
						<param name="text_main" value="$VAR[color_spotlightlib_secondary]"/>
						<param name="text_secondary" value="$VAR[color_spotlightlib_secondary]"/>
						<param name="text_accent" value="$VAR[color_spotlightlib_secondary]"/>
					</include>
				</itemlayout>
				<focusedlayout height="38" condition="Container.Content(songs)">
					<include content="songsheet_row_container">
						<param name="focsed" value="true"/>
						<param name="text_main" value="$VAR[color_spotlightlib_main]"/>
						<param name="text_secondary" value="$VAR[color_spotlightlib_secondary]"/>
						<param name="text_accent" value="$VAR[color_spotlightlib_accent]"/>
					</include>
				</focusedlayout>
			</control>
			
			
			<control type="grouplist">
				<description>Test Script Usage</description>
				<visible>false + System.HasAddon(script.swan.helper) + Control.IsVisible(520)</visible>
				<top>300</top>
				<height>200</height>
				<itemgap>10</itemgap>
				<width>90%</width>
				<align>center</align>
				<orientation>horizontal</orientation>
					<control type="button" id="8881">
						<label>checkexist</label>
						<width>300</width>
						<height>100</height>
		                <texturefocus colordiffuse="black">colors/white.png</texturefocus>
		                <texturenofocus colordiffuse="white">colors/white.png</texturenofocus>
		                <focusedcolor>white</focusedcolor>
		                <textcolor>black</textcolor>
						
						<onclick>SetFocus(520)</onclick>
						<!-- <onclick>RunScript(script.swan.helper,action=lookforfile,file="test",property=trailer_avail)</onclick> -->
						<onclick>RunScript(script.swan.helper,action=checkexist,file=$INFO[listitem.path]$INFO[listitem.FolderName,,-trailer.mp4],property=trailer_avail)</onclick>
					</control>
					<control type="button" id="8882">
						<label>encode</label>
						<width>300</width>
						<height>100</height>
					    <texturefocus colordiffuse="black">colors/white.png</texturefocus>
		                <texturenofocus colordiffuse="white">colors/white.png</texturenofocus>
		                <focusedcolor>white</focusedcolor>
		                <textcolor>black</textcolor>
						<onclick>SetFocus(520)</onclick>
						<!-- <onclick>RunScript(script.swan.helper,action=encode,string='"$INFO[ListItem.Label]"',property=propexist_name)</onclick> -->
						<!-- <onclick>RunScript(script.swan.helper,action=encode,string='$ESCINFO[ListItem.Label]',property=propexist_name)</onclick> -->
						<onclick>RunScript(script.swan.helper,action=encode,string=$INFO[ListItem.Label],property=encoded_string)</onclick>
						
						<!-- <onclick>RunScript(script.swan.helper,action=encode,string='"$INFO[MusicPlayer.Artist]"',prop=MusicPlayer_EncodedArtist)</onclick> -->
					</control>
					<control type="button" id="8883">
						<label>decode</label>
						<width>300</width>
						<height>100</height>
						<texturefocus colordiffuse="black">colors/white.png</texturefocus>
		                <texturenofocus colordiffuse="white">colors/white.png</texturenofocus>
		                <focusedcolor>white</focusedcolor>
		                <textcolor>black</textcolor>
						<onclick>SetFocus(520)</onclick>
						<onclick>RunScript(script.swan.helper,action=decode,string=$INFO[ListItem.Label],property=decoded_string)</onclick>
					</control>
					<control type="button" id="8884">
						<label>createselect</label>
						<width>300</width>
						<height>100</height>
						<texturefocus colordiffuse="black">colors/white.png</texturefocus>
		                <texturenofocus colordiffuse="white">colors/white.png</texturenofocus>
		                <focusedcolor>white</focusedcolor>
		                <textcolor>black</textcolor>
						<onclick>SetFocus(520)</onclick>
						<!-- <onclick>RunScript(script.swan.helper,action=createselect,header=$INFO[ListItem.Label],list=one | two | 3 | 4 | $INFO[ListItem.Label] | $LOCALIZE[1000])</onclick> -->
						<onclick>RunScript(script.swan.helper,action=createselect,header=$INFO[ListItem.Label],list=)</onclick> 
					</control>
			</control>
			
			
			<control type="scrollbar" id="52060">
				
				<hitrect x="1625" y="575" w="100" h="440" />
				
				<animation effect="slide" start="0,0" end="100,0" time="0" condition="Container.Content(albums) | Container.Content(actors) | Container.Content(images)">conditional</animation>
				<animation effect="slide" start="0,0" end="120,50" time="0" condition="Container.Content(songs)">conditional</animation>
				<animation effect="fade" start="100" end="0" time="250" condition="Control.HasFocus(520600) | Window.IsActive(1140)">conditional</animation>
				<visible>String.IsEqual(Container.ViewMode,$LOCALIZE[31263])</visible>
				<right>285</right>
				<top>575</top>
				<height>440</height>
				<onup>52060</onup>
				<ondown>52060</ondown>
				<onleft>50</onleft>
				<width>2</width>
				<onright condition="Control.IsVisible(520600)">520600</onright>
				<onright condition="!Control.IsVisible(520600) + !Window.IsActive(musicplaylist) + [MusicPlayer.Offset(-1).Exists | MusicPlayer.Offset(1).Exists]">SetProperty(CurrentPlaylistVisible,mediawindow,home)</onright>
				<onright condition="!Control.IsVisible(520600) + !Window.IsActive(musicplaylist) + [MusicPlayer.Offset(-1).Exists | MusicPlayer.Offset(1).Exists]">activatewindow(1140)</onright>
				<onright condition="!Control.IsVisible(520600) + Control.IsVisible(19) + !Window.IsActive(musicplaylist) + !MusicPlayer.Offset(-1).Exists + !MusicPlayer.Offset(1).Exists">19</onright>
			    <onright condition="!Control.IsVisible(520600) + !Control.IsVisible(19) + !MusicPlayer.Offset(-1).Exists + !MusicPlayer.Offset(1).Exists">50</onright>
			</control>
			<include condition="String.IsEmpty(Window(home).Property(shortcutaction_inprogress))" content="ScrollBar_Alphabet">
				<right>110</right>
				<width>150</width>
				<top>650</top>
				<height>260</height>
				<onright condition="!Window.IsActive(musicplaylist) + [MusicPlayer.Offset(-1).Exists | MusicPlayer.Offset(1).Exists]">SetProperty(CurrentPlaylistVisible,mediawindow,home)</onright>
				<onright condition="!Window.IsActive(musicplaylist) + [MusicPlayer.Offset(-1).Exists | MusicPlayer.Offset(1).Exists]">activatewindow(1140)</onright>
				<onright condition="!MusicPlayer.Offset(-1).Exists + !MusicPlayer.Offset(1).Exists">19</onright>
			    <onright condition="!MusicPlayer.Offset(-1).Exists + !MusicPlayer.Offset(1).Exists">50</onright>
				<param name="id" value="520600" />
				<param name="visible" value="String.IsEqual(Container.ViewMode,$LOCALIZE[31263])" />
				<param name="orientation" value="vertical" />
				<param name="panel_width" value="130" />
				<param name="height" value="260" />
				<param name="item_hw" value="32.5" />
				<param name="bg_texture_visible" value="false" />
				<param name="is_vertical" value="true" />
				<param name="color_1" value="ff131313" />
				<param name="color_2" value="ffffffff" />
			</include>
			
			<include content="Cast_Contents" condition="Window.IsActive(videos)" />
			
			
		</control>
	</include>
	
	<include name="latestcontent_info">
			<control type="group">
				<description>something usefull ,using templates later on </description>
				<height>350</height>
				<width>1600</width>
				<top>200</top>
				<left>650</left>
				<visible>![Window.IsActive(tvguide) | Window.IsActive(tvchannels) | Window.IsActive(tvrecordings) | Window.IsActive(tvtimers) | Window.IsActive(tvtimerrules) | Window.IsActive(tvsearch) | Window.IsActive(radioguide) | Window.IsActive(radiochannels) | Window.IsActive(radiorecordings) | Window.IsActive(radiotimers) | Window.IsActive(radiotimerrules)  | Window.IsActive(radiosearch)]</visible>
				<visible>String.IsEqual(Container.ViewMode,$LOCALIZE[31263]) + String.IsEmpty(Container.PluginName) + String.IsEmpty(dbtype) + Container.Content()</visible>
				<animation effect="fade" end="50" condition="true">conditional</animation>
				
				<control type="button">
					<texturefocus /><texturenofocus /><label />
					<left>0</left>
					<width>400</width>
					<height>360</height>
					<onclick>setfocus(50)</onclick>
					<onclick>Container.Update($PARAM[cat_1_target_url])</onclick>
				</control>
				<control type="button">
					<texturefocus /><texturenofocus /><label />
					<left>400</left>
					<width>400</width>
					<height>360</height>
					<onclick>setfocus(50)</onclick>
					<onclick>Container.Update($PARAM[cat_2_target_url])</onclick>
				</control>
				<control type="button">
					<texturefocus /><texturenofocus /><label />
					<left>800</left>
					<width>400</width>
					<height>360</height>
					<onclick>setfocus(50)</onclick>
					<onclick>Container.Update($PARAM[cat_3_target_url])</onclick>
				</control>
				
				<control type="grouplist">
					<description>1</description>
					<animation effect="zoom" start="100" end="75" time="0" easing="inout" tween="cubic" condition="true">conditional</animation>
					<animation effect="slide" end="0,30" condition="true">conditional</animation>
					<top>150</top>
					<orientation>horizontal</orientation>
					<visible>String.IsEmpty(dbtype) + Container.Content()</visible>
					<control type="textbox">
						<description>property like new movie numvbers n name blabla as info when ROOT LIB is visible (root lib nodes)</description>
						<height>200</height>
						<width>400</width>
						<align>right</align>
						<autoscroll>false</autoscroll>
						<label>[COLOR $VAR[color_spotlightlib_main]][B]$PARAM[cat_1_header][/B][/COLOR]        $INFO[Window(home).Property($PARAM[cat_1].1.Title),[CR]   ,]$INFO[Window(home).Property($PARAM[cat_1].2.Title),[CR]   ,    ]$INFO[Window(home).Property($PARAM[cat_1].3.Title),[CR]   ,         ]$INFO[Window(home).Property($PARAM[cat_1].4.Title),[CR]   ,   ]$INFO[Window(home).Property($PARAM[cat_1].5.Title),[CR]   ,        ]</label>
						<textcolor>$VAR[color_spotlightlib_accent]</textcolor>
						<font>notosans_22_regular_lowlined</font>
					</control>
					<control type="fadelabel">
						<visible>false</visible>
						<randomize>false</randomize>
						<pauseatend>1000</pauseatend>
						<scroll>false</scroll>
						<scrollout>true</scrollout>
						Â´<width>200</width>
						<info>container.listitem(0).label</info>
						<info>container.listitem(1).label</info>
						<info>container.listitem(2).label</info>
					</control>
					<control type="image">
						<description>Fallback aspect keep</description>
						<height>200</height>
						<width>200</width>
						<bordertexture colordiffuse="$VAR[color_spotlightlib_accent]">artworkdiffuse/circleborder.png</bordertexture>
						<texture background="true" diffuse="artworkdiffuse/circle.png" fallback="defaultactor.png">$INFO[Window(home).Property($PARAM[cat_1].2.$PARAM[cat_1_artwork])]</texture>
						<aspectratio scalediffuse="false" aligny="top" align="center">scale</aspectratio>
						<bordersize>10</bordersize>
					</control>
				</control>
				<control type="grouplist">
					<description>2</description>
					<animation effect="zoom" end="75" condition="true">conditional</animation>
					<top>10</top>
					<left>240</left>
					<orientation>horizontal</orientation>
					<visible>String.IsEmpty(dbtype) + Container.Content()</visible>
					<control type="textbox">
						<description>property like new movie numvbers n name blabla as info when ROOT LIB is visible (root lib nodes)</description>
						<height>200</height>
						<width>400</width>
						<align>right</align>
						<autoscroll>false</autoscroll>
						<label>[COLOR $VAR[color_spotlightlib_main]][B]$PARAM[cat_2_header][/B][/COLOR]        $INFO[Window(home).Property($PARAM[cat_2].1.$PARAM[cat_2_value]),[CR]   ,       ]$INFO[Window(home).Property($PARAM[cat_2].2.$PARAM[cat_2_value]),[CR]   ,    ]$INFO[Window(home).Property($PARAM[cat_2].3.$PARAM[cat_2_value]),[CR]   ,         ]$INFO[Window(home).Property($PARAM[cat_2].4.$PARAM[cat_2_value]),[CR]   ,   ]$INFO[Window(home).Property($PARAM[cat_2].5.$PARAM[cat_2_value]),[CR]   ,        ]</label>
						<textcolor>$VAR[color_spotlightlib_accent]</textcolor>
						<font>notosans_22_regular_lowlined</font>
					</control>
					<control type="fadelabel">
						<visible>false</visible>
						<randomize>false</randomize>
						<pauseatend>1000</pauseatend>
						<scroll>false</scroll>
						<scrollout>true</scrollout>
						Â´<width>200</width>
						<info>container.listitem(0).label</info>
						<info>container.listitem(1).label</info>
						<info>container.listitem(2).label</info>
					</control>
					<control type="image">
						<description>Fallback aspect keep</description>
						<height>200</height>
						<width>200</width>
						<bordertexture colordiffuse="$VAR[color_spotlightlib_accent]">artworkdiffuse/circleborder.png</bordertexture>
						<texture background="true" diffuse="artworkdiffuse/circle.png" fallback="defaultactor.png">$INFO[Window(home).Property($PARAM[cat_2].1.$PARAM[cat_2_artwork])]</texture>
						<aspectratio scalediffuse="false" aligny="top" align="center">scale</aspectratio>
						<bordersize>10</bordersize>
					</control>
				</control>
				<control type="grouplist">
					<description>3</description>
					<animation effect="zoom" end="65" condition="true">conditional</animation>
					<animation effect="slide" end="0,40" condition="true">conditional</animation>
					<left>660</left>
					<top>150</top>
					<orientation>horizontal</orientation>
					<visible>String.IsEmpty(dbtype) + Container.Content()</visible>
					<control type="textbox">
						<description>property like new movie numvbers n name blabla as info when ROOT LIB is visible (root lib nodes)</description>
						<height>200</height>
						<width>400</width>
						<align>right</align>
						<autoscroll>false</autoscroll>
						<label>[COLOR $VAR[color_spotlightlib_main]][B]$PARAM[cat_3_header][/B][/COLOR]        $INFO[Window(home).Property($PARAM[cat_3].1.Title),[CR]   ,  ]$INFO[Window(home).Property($PARAM[cat_3].2.Title),[CR]   ,      ]$INFO[Window(home).Property($PARAM[cat_3].3.Title),[CR]   ,         ]$INFO[Window(home).Property($PARAM[cat_3].4.Title),[CR]   ,   ]$INFO[Window(home).Property($PARAM[cat_3].5.Title),[CR]   ,        ]</label>
						<textcolor>$VAR[color_spotlightlib_accent]</textcolor>
						<font>notosans_22_regular_lowlined</font>
					</control>
					<control type="fadelabel">
						<visible>false</visible>
						<randomize>false</randomize>
						<pauseatend>1000</pauseatend>
						<scroll>false</scroll>
						<scrollout>true</scrollout>
						<width>200</width>
						<info>container.listitem(0).label</info>
						<info>container.listitem(1).label</info>
						<info>container.listitem(2).label</info>
					</control>
					<control type="image">
						<description>Fallback aspect keep</description>
						<height>200</height>
						<width>200</width>
						<bordertexture colordiffuse="$VAR[color_spotlightlib_accent]">artworkdiffuse/circleborder.png</bordertexture>
						<texture background="true" diffuse="artworkdiffuse/circle.png" fallback="$INFO[Window(home).Property($PARAM[cat_3].2.Thumb)]">$INFO[Window(home).Property($PARAM[cat_3].2.$PARAM[cat_3_artwork])]</texture>
						<aspectratio scalediffuse="false" aligny="center" align="center">scale</aspectratio>
						<bordersize>10</bordersize>
					</control>
				</control>
			</control>
			</include>
	<include name="Cast_Contents">
		<control type="label">
			<animation effect="fade" start="0" end="100" time="500" easing="inout" reversible="true">VisibleChange</animation>
			<visible>Control.IsVisible(520) + $EXP[TrailerIsPlaying]</visible>
			<bottom>0</bottom>
			<left>180</left>
			<height>470</height>
			<right>20</right>
			<label>$LOCALIZE[206]</label>
			<textcolor>$VAR[color_spotlightlib_main]</textcolor>
			<font>montserrat_40_extrabold</font>
			<aligny>top</aligny>
		</control>
		<control type="panel" id="52001">
			<animation effect="fade" start="0" end="100" time="500" easing="inout" reversible="true">VisibleChange</animation>
			<visible>Control.IsVisible(520)</visible>
			<visible>$EXP[TrailerIsPlaying]</visible>
			<bottom>0</bottom>
			<left>180</left>
			<height>400</height>
			<right>20</right>
			<scrolltime tween="quadratic">400</scrolltime>
			<preloaditems>2</preloaditems>
			<orientation>horizontal</orientation>
			
			<itemlayout height="380" width="200">
				<control type="group">
					<height>170</height>
					<width>170</width>
					<control type="group">
						<include content="container_cast_circleframe">
							<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_fo]" />
							<param name="infotags_autoscroll" value="false" />
							<param name="artwork_bg_bordersize" value="6" />
						</include>
					</control>
				</control>
			</itemlayout>
			<focusedlayout height="380" width="200">
				<control type="group">
					<height>170</height>
					<width>170</width>
					<include>Animation_Item_Focus</include>
					<control type="group">
						<include content="container_cast_circleframe">
							<param name="colordiffuse" value="$VAR[color_spotlightlib_itemframe_fo]" />
							<param name="infotags_autoscroll" value="false" />
							<param name="artwork_bg_bordersize" value="4" />
						</include>
					</control>
				</control>
			</focusedlayout>
			<content>$VAR[content_cast]</content>
		</control>
	</include>
</includes>
