<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<!-- Files -->
	<include file="Defaults.xml" />
	
	<include file="SkinSwan_DebugOverlay.xml" />
	<include file="SkinSwan_Animations.xml" />
	<include file="SkinSwan_Player.xml" />
	<include file="SkinSwan_Flags.xml" />
	
	<include file="SkinSwan_VideoInfo.xml" />
	
	<include file="SkinSwan_BackgroundBuilding.xml" />
	
	<include file="SkinSwan_HomeLayouts.xml" />
	
	<include file="SkinSwan_Menucontrol.xml" />
	<include file="SkinSwan_WidgetShortcuts.xml" />
	
	<include file="SkinName_View50.xml" />
	<include file="SkinName_Views_SimplePanels.xml" />
	<include file="SkinName_View56.xml" />
	<include file="SkinName_View58.xml" />
	
	<include file="SkinSwan_CustomSearch.xml" />
	
	<include file="_SkinName_MoveCode.xml" />
	<include file="SkinName_Include_Skinsettings.xml" />
	<include file="Includes_fonts.xml" />
	
	<include file="SkinName_EXP.xml" />
	<include file="SkinName_Constants.xml" />
	
	<include file="SkinName_HUBs.xml" />
	<include file="SkinName_Widgets.xml" />
	<include file="SkinSwan_ContainerLayouts.xml" />
	
	<include file="SkinName_Variables.xml" />


<!-- constants stereoscopcic estuary -->
	<constant name="DepthDialog">0.50</constant>
	<constant name="DepthDialog+">0.52</constant>
	<constant name="DepthDialog-">0.48</constant>
	<constant name="DepthMax">0.54</constant>
	<constant name="DepthOSD">0.40</constant>
	<constant name="DepthOSD+">0.44</constant>
	<constant name="DepthContentPopout">0.10</constant>
	<constant name="DepthContentPanel">0.05</constant>
	<constant name="DepthBars">0.12</constant>
	<constant name="DepthBackground">-0.80</constant>
	<constant name="DepthBackground2">-0.78</constant>
	<constant name="DepthSideBlade">0.10</constant>
	
	
	<constant name="bg_alpha">79</constant>
	<constant name="dialogbuttons_itemgap">-20</constant>
	<constant name="list_y_offset">0</constant>
	<constant name="list_item_height">80</constant>
	
	<variable name="EmbuaryHelper_GetInfo_dbid">
		<value condition="ListItem.IsParentFolder + String.IsEqual(ListItemAbsolute(1).DBType,movie) + Integer.IsGreater(ListItemAbsolute(1).DBID,0)">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[ListItemAbsolute(1).DBID]&amp;type=movie&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="ListItem.IsParentFolder + String.IsEqual(ListItemAbsolute(1).DBType,tvshow) + Integer.IsGreater(ListItemAbsolute(1).DBID,0)">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[ListItemAbsolute(1).DBID]&amp;type=tvshow&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="ListItem.IsParentFolder + String.IsEqual(ListItemAbsolute(1).DBType,season) + Integer.IsGreater(ListItemAbsolute(1).DBID,0)">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[ListItemAbsolute(1).DBID]&amp;type=tvshow&amp;idtype=season&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="ListItem.IsParentFolder + String.IsEqual(ListItemAbsolute(1).DBType,season) + Integer.IsGreater(ListItemAbsolute(1).DBID,0)">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[ListItemAbsolute(1).DBID]&amp;type=tvshow&amp;idtype=season&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="!Container.HasParent + String.IsEqual(ListItem.Label,$LOCALIZE[20366]) + String.IsEqual(ListItemAbsolute(1).DBType,season) + Integer.IsGreater(ListItemAbsolute(1).DBID,0)">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[ListItemAbsolute(1).DBID]&amp;type=tvshow&amp;idtype=season&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="Container.HasParent + String.IsEqual(ListItem.Label,$LOCALIZE[20366]) + String.IsEqual(ListItemAbsolute(2).DBType,season) + Integer.IsGreater(ListItemAbsolute(2).DBID,0)">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[ListItemAbsolute(2).DBID]&amp;type=tvshow&amp;idtype=season&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="ListItem.IsParentFolder + String.IsEqual(ListItemAbsolute(1).DBType,episode) + Integer.IsGreater(ListItemAbsolute(1).DBID,0)">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[ListItem.DBID]&amp;type=tvshow&amp;idtype=episode&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.IsEqual(ListItem.DBType,movie) + Integer.IsGreater(ListItem.DBID,0)">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[ListItem.DBID]&amp;type=movie&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.IsEqual(ListItem.DBType,tvshow) + Integer.IsGreater(ListItem.DBID,0)">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[ListItem.DBID]&amp;type=tvshow&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.IsEqual(ListItem.DBType,season) + Integer.IsGreater(ListItem.DBID,0)">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[ListItem.DBID]&amp;type=tvshow&amp;idtype=season&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="String.IsEqual(ListItem.DBType,episode) + Integer.IsGreater(ListItem.DBID,0)">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[ListItem.DBID]&amp;type=tvshow&amp;idtype=episode&amp;reload=$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value>-</value>
	</variable>
	
	<!-- may not needed -->
	<variable name="EmbuaryHelper_NextUp">
		<value condition="Container.Content(seasons) + String.StartsWith(ListItem.Path,plugin://plugin.video.embycon) + !String.IsEmpty(ListItemAbsolute(0).Property(series_id))">plugin://plugin.video.embycon/?mode=GET_CONTENT&amp;use_cache=false&amp;media_type=Episodes&amp;url=%7Bserver%7D%2Femby%2FShows%2FNextUp%3FSeriesId%3D$INFO[ListItemAbsolute(0).Property(series_id)]%26UserId%3D%7Buserid%7D%26IsVirtualUnAired%3Dfalse%26IsMissing%3Dfalse%26Fields%3D%7Bfield_filters%7D%26format%3Djson&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="Container.Content(seasons) + String.StartsWith(ListItem.Path,plugin://plugin.video.embycon) + !String.IsEmpty(ListItemAbsolute(1).Property(series_id))">plugin://plugin.video.embycon/?mode=GET_CONTENT&amp;use_cache=false&amp;media_type=Episodes&amp;url=%7Bserver%7D%2Femby%2FShows%2FNextUp%3FSeriesId%3D$INFO[ListItemAbsolute(1).Property(series_id)]%26UserId%3D%7Buserid%7D%26IsVirtualUnAired%3Dfalse%26IsMissing%3Dfalse%26Fields%3D%7Bfield_filters%7D%26format%3Djson&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="Container.Content(seasons) + String.StartsWith(ListItem.Path,plugin://plugin.video.embycon) + !String.IsEmpty(ListItemAbsolute(2).Property(series_id))">plugin://plugin.video.embycon/?mode=GET_CONTENT&amp;use_cache=false&amp;media_type=Episodes&amp;url=%7Bserver%7D%2Femby%2FShows%2FNextUp%3FSeriesId%3D$INFO[ListItemAbsolute(2).Property(series_id)]%26UserId%3D%7Buserid%7D%26IsVirtualUnAired%3Dfalse%26IsMissing%3Dfalse%26Fields%3D%7Bfield_filters%7D%26format%3Djson&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]$INFO[Window(home).Property(EmbuaryWidgetUpdate)]</value>
		<value condition="Container.Content(seasons) + Integer.IsGreater(Container(2000).ListItem.Property(watchedepisodes),0) + Integer.IsGreater(Container(2000).ListItem.Property(unwatchedepisodes),0) + Integer.IsGreater(Container(2000).ListItem.DBID,0)">videodb://inprogresstvshows/$INFO[Container(2000).ListItem.DBID]/-2/?tvshowid=$INFO[Container(2000).ListItem.DBID]</value>
		<value>-</value>
	</variable>
	
	<include name="NativeString_Filter">
	
		
		<control type="edit" id="19">
			<visible>!$EXP[Infodialog_IsActive] + !Window.IsActive(shutdownmenu) + !Control.IsVisible(58)</visible>
			<visible>String.IsEmpty(Window(home).Property(SetShortcutInProgress))</visible>
			<description>default menucontrol as option ?, add container based on vis ?</description>
			
			<onup>50</onup>
			<ondown>50</ondown>
			<onright>50</onright>
			
			<top>15</top>
			<left>110</left>
			<height>60</height>
			<width>360</width>
			<hinttext>$LOCALIZE[19140]</hinttext>
			<texturefocus colordiffuse="$VAR[color_header_backgroundpanel]" diffuse="buttons/button_6to1_Trans.png">colors/white70.png</texturefocus>	
			<texturenofocus diffuse="buttons/button_6to1_Trans.png">colors/white10.png</texturenofocus>
			<font>SearchControl</font>
			<textoffsetx>20</textoffsetx>
			<textoffsety>15</textoffsety>
			<textcolor>$VAR[color_header_text_main]</textcolor>
			<focusedcolor>$VAR[color_header_text_main]</focusedcolor>
			<disabledcolor />
			<invalidcolor />
			<aligny>center</aligny>
			<pulseonselect>no</pulseonselect>
			<label />
		</control>
		<control type="button">
			<description>touch mode workaround</description>
			<animation effect="slide" start="0,0" end="90,0" time="250" tween="sine" condition="!ControlGroup(9000).HasFocus() + [!Skin.HasSetting(HideProfile_Header) + Control.IsVisible(97)]">Conditional</animation>
			<visible>!String.IsEmpty(Window(home).Property(MenucontrolActive))</visible>
			<height>110</height>
			<texturefocus  />	
			<texturenofocus  />
			<onfocus>ClearProperty(MenucontrolActive,Home)</onfocus>
			<onfocus>SetFocus(19)</onfocus>
		</control>
	</include>
	
	<include name="SetPropOnFocus_HiddenButton">
		<control type="button">
			<visible allowhiddenfocus="true">false</visible>
			
			<onfocus condition="!String.IsEmpty(Window(home).Property(trailer_avail))">ClearProperty(trailer_avail,home)</onfocus>
			<onfocus condition="!String.IsEmpty(Window(home).Property(listitemtrailer))">ClearProperty(listitemtrailer,home)</onfocus>
			<onfocus condition="[String.IsEqual(ListItem.DBtype,tvshow) | String.IsEqual(ListItem.DBtype,movie)]">RunScript(script.embuary.helper,action=lookforfile,file='"$INFO[listitem.path]$INFO[listitem.FolderName,,-trailer.mp4]"',prop=trailer_avail)</onfocus>
			<onfocus condition="[String.IsEqual(ListItem.DBtype,tvshow) | String.IsEqual(ListItem.DBtype,movie)]">SetProperty(listitemtrailer,$INFO[listitem.path]$INFO[listitem.FolderName,,-trailer.mp4],home)</onfocus>
			
			<onfocus condition="String.IsEqual(ListItem.DBtype,tvshow) + !string.IsEmpty(listitem.dbid)">SetProperty(dbid,$INFO[listitem.dbid],home)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.DBtype,tvshow) + !string.IsEmpty(listitem.rating)">SetProperty(rating,$INFO[listitem.rating],home)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.DBtype,tvshow) + [string.IsEmpty(listitem.rating) + !string.IsEmpty(listitem.userrating)]">SetProperty(rating,$INFO[listitem.userrating],home)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.DBtype,tvshow) + !string.IsEmpty(listitem.Property(totalseasons))">SetProperty(totalseasons,$INFO[listitem.Property(totalseasons)],home)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.DBtype,tvshow) + !string.IsEmpty(listitem.Property(totalepisodes))">SetProperty(totalepisodes,$INFO[listitem.Property(totalepisodes)],home)</onfocus>
			<onfocus condition="String.IsEqual(ListItem.DBtype,tvshow) + !string.IsEmpty(listitem.status)">SetProperty(status,$INFO[listitem.status],home)</onfocus>

		</control>
	</include>
	
	<!-- Layout Positioning -->
	<include name="height">
		<height>$PARAM[height]</height>
	</include>
	
	<include name="width">
		<width>$PARAM[width]</width>
	</include>
	
	<include name="pos_left">
		<param name="left" default="0" />
		<definition>
			<left>$PARAM[left]</left>
		</definition>
	</include>
	
	<include name="pos_right">
		<param name="right" default="0" />
		<definition>
			<right>$PARAM[right]</right>
		</definition>
	</include>
	
	<include name="pos_alignx">
		<param name="align" default="left" />
		<definition>
			<align>$PARAM[align]</align>
		</definition>
	</include>
	<include name="pos_top">
		<top>$PARAM[top]</top>
	</include>
	
	<include name="bg_gradientmulticolor">
		<param name="layer1_top" default="color_hub_menu_panel_gradienttop" />
		<param name="layer1_bottom" default="color_hub_menu_panel_gradientcenter" />
		<param name="layer2" default="color_hub_menu_panel_gradientbottom" />
		<definition>
			<control type="image">
				<texture flipy="true" colordiffuse="$VAR[color_hub_menu_panel_gradientcenter]">hub/diffuse_linear_vert_50_trans.png</texture>
				<bordertexture colordiffuse="$VAR[color_hub_menu_panel_gradienttop]">hub/diffuse_linear_vert.png</bordertexture>
				<aspectratio>stretch</aspectratio>
			</control>
			<control type="image">
				<texture colordiffuse="$VAR[color_hub_menu_panel_gradientbottom]" flipy="true">hub/diffuse_linear_vert_50_trans.png</texture>
				<aspectratio>stretch</aspectratio>
			</control>
		</definition>
	</include>

	<include name="DefaultDialogButton">
		<param name="width">300</param>
		<param name="height">100</param>
		<param name="wrapmultiline">false</param>
		<param name="font">font25_title</param>
		<param name="visible">true</param>
		<definition>
			<control type="button" id="$PARAM[id]">
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<label>$PARAM[label]</label>
				<font>$PARAM[font]</font>
				<textoffsetx>30</textoffsetx>
				<wrapmultiline>$PARAM[wrapmultiline]</wrapmultiline>
				<align>center</align>
				<visible>$PARAM[visible]</visible>
			</control>
		</definition>
	</include>
	
	<include name="HiddenObject">
		<left>-3000</left>
		<top>-3000</top>
		<width>1</width>
		<height>1</height>
		<texturefocus />
		<texturenofocus />
		<label/>
		<font/>
	</include>
	
	<include name="HiddenContainer">
		<left>-3000</left>
		<top>-3000</top>
		<width>1</width>
		<height>1</height>
		<texturefocus />
		<texturenofocus />
		<label/>
		<font/>
		<itemlayout height="10" width="10" />
		<focusedlayout height="10" width="10" />
	</include>
	
	<include name="FullScreenDimensions">
		<width>100%</width>
		<height>100%</height>
	</include>
	
	<include name="HiddenMenuControl">
		<param name="container" default="9000" />
		<definition>
			<control type="button" id="$PARAM[menucontrol]">
				<include>HiddenObject</include>
				<onfocus>$PARAM[action1]</onfocus>
			</control>
		</definition>
	</include>

	<include name="spacer_h">
		<param name="id" />
		<param name="gap" default="30" />
		<param name="visible" default="true" />
		<definition>
			<control type="label" id="$PARAM[id]">
				<visible>$PARAM[visible]</visible>
				<height>$PARAM[gap]</height>
				<font />
				<textcolor />
			</control>
		</definition>
	</include>
	<include name="spacer_w">
		<param name="id" />
		<param name="gap" default="30" />
		<param name="visible" default="true" />
		<definition>
			<control type="label" id="$PARAM[id]">
				<visible>$PARAM[visible]</visible>
				<width>$PARAM[gap]</width>
				<font />
				<textcolor />
			</control>
		</definition>
	</include>
	
	<include name="DiscArt">
		<param name="prefix" default="ListItem"/>
		<definition>
		<control type="image">
			<nested />
			<width>$PARAM[size]</width>
			<height>$PARAM[size]</height>
			<texture background="true" diffuse="diffuse/cdmask_new.png">$VAR[$PARAM[prefix]Art_Discart]</texture>
			<aspectratio scalediffuse="false" align="center" aligny="center">keep</aspectratio>
		</control>
		</definition>
	</include>
	
	
	 <variable name="MovieGenreIconVarList">
       <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.poster/)">resource://resource.images.moviegenreicons.poster/$INFO[ListItem.Label].jpg</value>
       <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.coloured/)">resource://resource.images.moviegenreicons.coloured/$INFO[ListItem.Label].jpg</value>
       <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.white/)">resource://resource.images.moviegenreicons.white/$INFO[ListItem.Label].jpg</value>
       <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.transparent/)">resource://resource.images.moviegenreicons.transparent/$INFO[ListItem.Label].jpg</value>
       <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.grey/)">resource://resource.images.moviegenreicons.grey/$INFO[ListItem.Label].jpg</value>
       <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.filmstrip/)">resource://resource.images.moviegenreicons.filmstrip/$INFO[ListItem.Label].jpg</value>
       <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.arctic.zephyr/)">resource://resource.images.moviegenreicons.arctic.zephyr/$INFO[ListItem.Label].png</value>
       <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.xzener-flat/)">resource://resource.images.moviegenreicons.xzener-flat/$INFO[ListItem.Label].png</value>
       <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.xzener-reflection/)">resource://resource.images.moviegenreicons.xzener-reflection/$INFO[ListItem.Label].png</value>
       <value condition="Skin.String(MovieGenreIconPack.path,resource://resource.images.moviegenreicons.arctic.zephyr/)">resource://resource.images.moviegenreicons.arctic.zephyr/$INFO[ListItem.Label].png</value>
       <value condition="Skin.String(MovieGenreIconPack.path)">http://localhost:52307/getvarimage&amp;title=$INFO{Skin.String(MovieGenreIconPack.path)}$INFO[ListItem.Label]$INFO{Skin.String(MovieGenreIconPack.ext)}&amp;fallback=DefaultGenre.png</value>
       <value>DefaultGenre.png</value>
     </variable>
	   <variable name="MusicGenreIconVarList">
       <value condition="Skin.String(MusicGenreIconPack.path,resource://resource.images.musicgenreicons.text/)">resource://resource.images.musicgenreicons.text/$INFO[ListItem.Label].jpg</value>
       <value condition="Skin.String(MusicGenreIconPack.path,resource://resource.images.musicgenreicons.grey/)">resource://resource.images.musicgenreicons.grey/$INFO[ListItem.Label].jpg</value>
       <value condition="Skin.String(MusicGenreIconPack.path,resource://resource.images.musicgenreicons.poster/)">resource://resource.images.musicgenreicons.poster/$INFO[ListItem.Label].jpg</value>
       <value condition="Skin.String(MusicGenreIconPack.path,resource://resource.images.musicgenreicons.coloured/)">resource://resource.images.musicgenreicons.coloured/$INFO[ListItem.Label].jpg</value>
       <!-- last resort: use webservice - will only work for non-texture packed resource addons or manual folders -->
       <value condition="Skin.String(MusicGenreIconPack.path)">http://localhost:52307/getvarimage&amp;title=$INFO{Skin.String(MusicGenreIconPack.path)}$INFO[ListItem.Label]$INFO{Skin.String(MusicGenreIconPack.ext)}&amp;fallback=DefaultGenre.png</value>
       <value>DefaultGenre.png</value>
     </variable>

</includes>
