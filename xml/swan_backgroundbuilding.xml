<?xml version="1.0" encoding="utf-8"?>
<includes>
	<include name="HeaderBar">
		<param name="HasBGPanel" default="true" />
		<definition>
			<control type="group">
				
				<visible>!$EXP[Infodialog_IsActive]</visible>
				<visible>![Control.IsVisible(503) | Control.IsVisible(504)]</visible>
				<!-- <animation effect="slide" start="0,0" end="-460,0" time="300" tween="cubic" easing="in" condition="window.isactive(1140)">conditional</animation> -->
				<animation type="Conditional" condition="Window.IsActive(shutdownmenu)">
					<effect type="fade" start="100" end="0" time="250" tween="sine" easing="out" />
					<effect type="zoom" center="50%,50%" start="100" end="0" time="300" tween="cubic" easing="out" />
				</animation>
				<animation reversible="true" effect="slide" start="0,0" end="0,-110" tween="quadratic" time="400" condition="Control.IsVisible(58) + !Control.HasFocus(58001)">conditional</animation>
				<width>100%</width>
				<height>110</height>	
				<control type="image">
					<description>BG PANEL</description>
					<visible>!control.isvisible(520)</visible>
					<visible>$PARAM[HasBGPanel]</visible>
					<width>100%</width>
					<height>100%</height>
					<texture colordiffuse="$VAR[color_header_backgroundpanel]">$VAR[texture_global_headerbar]</texture>
					<aspectratio>stretch</aspectratio>
				</control>
				<control type="grouplist">
					<width>45%</width>
					<height>110</height>	
					<left>20</left>
					<orientation>horizontal</orientation>
					<itemgap>10</itemgap>
					<usecontrolcoords>true</usecontrolcoords>
					<align>left</align>
					<control type="group">
						<description>unlucky layout position...act custom and LoadProfile(), logoff()</description>
						<visible>!Skin.HasSetting(HideProfile_Header)</visible>
						<width>100</width>
						<height>110</height>	
						<control type="button" id="7777">
							<width>110</width>
							<height>110</height>
							<texturenofocus />
							<texturefocus />
							<onclick>System.LogOff</onclick>
						</control>
						<control type="image">
							<left>5</left>
							<top>3</top>
							<width>80</width>
							<height>80</height>	
							<bordersize>4</bordersize>
							<bordertexture colordiffuse="ff181818">artworkdiffuse/circle.png</bordertexture>
							<texture diffuse="artworkdiffuse/circle.png">$INFO[System.ProfileThumb]</texture>
							<aspectratio scalediffuse="true">scale</aspectratio>
						</control>
						<control type="label">
							<top>87</top>
							<width>85</width>
							<height>15</height>
							<align>center</align>
							<info>System.ProfileName</info>
							<font>notosans_16_bold</font>
							<textcolor>$VAR[color_header_text_accent]</textcolor>
						</control>
					</control>
					<control type="image">
						<visible>!Skin.HasSetting(HideProfile_Header)</visible>
						<top>10</top>
						<height>90</height>
						<width>2</width>
						<texture colordiffuse="white">colors/white30.png</texture>
						<aspectratio align="right">stretch</aspectratio>
					</control>
					<control type="group">
						<description>Non media Cur Window</description>
						<visible>!Window.IsMedia</visible>
						<width>1650</width>
						<height>110</height>	
						<control type="label">
							<include content="pos_top" condition="!Skin.HasSetting(HideSubHeaderInfo)">
								<param name="top" value="10" />
							</include>
							<include content="pos_top" condition="Skin.HasSetting(HideSubHeaderInfo)">
								<param name="top" value="25" />
							</include>
							<height>50</height>
							<align>left</align>
							<label>$VAR[Header_InfoTop]</label>
							<font>notosans_50_regular</font>
							<textcolor>$VAR[color_header_text_main]</textcolor>
						</control>
						<control type="label">
							<top>60</top>
							<height>30</height>
							<align>left</align>
							<label>$VAR[CurrentContent_Info]</label>
							<font>notosans_22_regular</font>
							<textcolor>$VAR[color_header_text_main]</textcolor>
							<visible>!Skin.HasSetting(HideSubHeaderInfo)</visible>
						</control>
					</control>
				</control>
				<control type="grouplist">
					<width>30%</width>
					<height>110</height>	
					<right>10</right>
					<orientation>horizontal</orientation>
					<itemgap>10</itemgap>
					<usecontrolcoords>true</usecontrolcoords>
					<align>right</align>
					<visible>![Skin.HasSetting(HideTimeDate_Header) + Skin.HasSetting(HideWeather_Header)]</visible>
					<control type="group">
						<description>time and date</description>
						<visible>!Skin.HasSetting(HideTimeDate_Header)</visible>
						<top>10</top>
						<width>370</width>
						<height>110</height>
						<control type="label">
							<width>100%</width>
							<height>50</height>
							<align>right</align>
							<info>System.Time</info>
							<font>roboto_70_thin</font>
							<textcolor>$VAR[color_header_text_accent]</textcolor>
						</control>
						<control type="label">
							<right>2</right>
							<top>60</top>
							<width>100%</width>
							<height>20</height>
							<align>right</align>
							<info>System.Date</info>
							<font>notosans_21_semibold</font>
							<textcolor>$VAR[color_header_text_main]</textcolor>
						</control>
					</control>
					<control type="group">
						<description>weather</description>
						<visible>!Window.IsActive(weather)</visible>
						<visible>!Skin.HasSetting(HideWeather_Header) + [!String.Contains(Weather.Temperature,$LOCALIZE[503]) | [!String.IsEqual(Weather.fanartcode,na) + Weather.IsFetched]]</visible>
						<width>110</width>
						<height>110</height>
						<control type="image">
							<left>8</left>
							<description>seperator</description>
							<visible>!Skin.HasSetting(HideTimeDate_Header)</visible>
							<top>9</top>
							<height>90</height>
							<width>1</width>
							<texture colordiffuse="white">colors/white30.png</texture>
							<aspectratio align="left">stretch</aspectratio>
						</control>
						<control type="label">
							<top>63</top>
							<width>110</width>
							<height>20</height>
							<align>center</align>
							<aligny>bottom</aligny>
							<label>$INFO[Weather.Temperature]</label>
							<font>notosans_22_bold</font>
							<textcolor>$VAR[color_header_text_main]</textcolor>
						</control>
						<control type="image">
							<top>5</top>
							<height>65</height>
							<width>110</width>
							<texture colordiffuse="$VAR[color_header_text_main]">$INFO[Weather.FanartCode,resource://resource.images.weathericons.outline-hd/,.png]</texture>
							<aspectratio align="center">keep</aspectratio>
						</control>
					</control>
				</control>
				<control type="group">
					<description>center main header media</description>
					<visible>Window.IsMedia</visible>
					<width>50%</width>
					<height>110</height>	
					<left>25%</left>
					<right>25%</right>
					<animation effect="slide" start="0,0" end="0,-110" time="200" easing="inout" reversible="true" delay="300" condition="String.IsEqual(Container.ViewMode,$LOCALIZE[31263])">conditional</animation>
					<control type="label">
						<include content="pos_top" condition="!Skin.HasSetting(HideSubHeaderInfo)">
							<param name="top" value="10" />
						</include>
						<include content="pos_top" condition="Skin.HasSetting(HideSubHeaderInfo)">
							<param name="top" value="35" />
						</include>
						<height>50</height>
						<align>center</align>
						<label>$VAR[Header_InfoTop]</label>
						<font>notosans_50_regular</font>
						<textcolor>$VAR[color_header_text_main]</textcolor>
					</control>
					<control type="label">
						<top>60</top>
						<height>30</height>
						<align>center</align>
						<label>$VAR[CurrentContent_Info]</label>
						<font>notosans_22_regular</font>
						<textcolor>$VAR[color_header_text_main]</textcolor>
						<visible>!Skin.HasSetting(HideSubHeaderInfo)</visible>
						<visible>!Control.IsVisible(58)</visible>
					</control>
				</control>
			</control>
		</definition>
	</include>
	<variable name="texture_global_headerbar">
		<value condition="!String.IsEmpty(Skin.String(texture_global_headerbar))">$INFO[Skin.String(texture_global_headerbar)]</value>
		<value>colors/white.png</value>
	</variable>
	<variable name="Header_InfoTop">
		<value condition="Window.Is(1120)">[UPPERCASE][B]$LOCALIZE[283][/B][/UPPERCASE]</value>
		<value condition="Window.IsActive(1122)">$LOCALIZE[20410]</value>
		<value condition="String.IsEqual(Container.FolderName,$LOCALIZE[10024]) + Container.Content(movies)">[UPPERCASE][B]$LOCALIZE[342][/B][/UPPERCASE]</value>
		<value condition="String.IsEqual(Container.FolderName,$LOCALIZE[10024]) + Container.Content(tvshows)">[UPPERCASE][B]$LOCALIZE[20343][/B][/UPPERCASE]</value>
		<value condition="String.IsEqual(Container.FolderName,$LOCALIZE[10024]) + Container.Content(seasons)">[UPPERCASE][B]$LOCALIZE[33054][/B][/UPPERCASE]</value>
 		<value condition="String.IsEqual(Container.FolderName,$LOCALIZE[10024]) + Container.Content(sets)">[UPPERCASE][B]$LOCALIZE[20434][/B][/UPPERCASE]</value>
		<value condition="String.IsEqual(Container.FolderName,$LOCALIZE[10024]) + Container.Content(images)">[UPPERCASE][B]$LOCALIZE[10002][/B][/UPPERCASE]</value>
		<value condition="String.IsEqual(Container.FolderName,$LOCALIZE[10024]) + Container.Content(artists)">[UPPERCASE][B]$LOCALIZE[133][/B][/UPPERCASE]</value>
		<value condition="String.IsEqual(Container.FolderName,$LOCALIZE[10024]) + Container.Content(albums)">[UPPERCASE][B]$LOCALIZE[132][/B][/UPPERCASE]</value>
		<value condition="String.IsEqual(Container.FolderName,$LOCALIZE[10024]) + Container.Content(musicvideos)">[UPPERCASE][B]$LOCALIZE[20389][/B][/UPPERCASE]</value>
		<value condition="String.IsEqual(Container.FolderName,$LOCALIZE[10024]) + Container.Content(songs)">[UPPERCASE][B]$LOCALIZE[134][/B][/UPPERCASE]</value>
		<value condition="Container.Content(episodes) + [Control.IsVisible(503) | Control.IsVisible(504)]">[UPPERCASE][B]$INFO[ListItem.Season,$LOCALIZE[20373]  ,][/B][/UPPERCASE]</value>
		<value condition="Container.Content(episodes)">[UPPERCASE][B]$INFO[Container.ShowTitle][/B][/UPPERCASE]</value>
		<value condition="!String.IsEmpty(Container.FolderName)">[UPPERCASE][B]$INFO[Container.FolderName][/B][/UPPERCASE]</value>
		<value condition="Window.IsMedia">[UPPERCASE][B]$INFO[System.CurrentWindow][/B][/UPPERCASE]</value>
		<value>$INFO[System.CurrentWindow]</value>
	</variable>
	<variable name="CurrentContent_Info">
		<value condition="[Window.IsActive(tvguide) | Window.IsActive(radioguide)] + Control.IsVisible(29)">[COLOR=$VAR[color_header_text_accent]]$INFO[Control.GetLabel(29)]$INFO[Control.GetLabel(30), • ,][/COLOR]</value>
		<value condition="Window.Is(1120)">Search Term Is : [B][COLOR=$VAR[color_header_text_accent]]$INFO[Skin.string(searchterm)][/COLOR][/B]</value>
		<value condition="Window.IsActive(1122)">[B][COLOR=$VAR[color_header_text_accent]]$INFO[listitem.title][/COLOR][/B]</value>
		<value condition="Container.Content(movies)">$LOCALIZE[20161] : [COLOR=$VAR[color_header_text_accent]]$INFO[Window(Home).Property(Movies.Count)][/COLOR] [B]|[/B] $LOCALIZE[16101] : [COLOR=$VAR[color_header_text_accent]]$INFO[Window(Home).Property(Movies.UnWatched)][/COLOR]</value>
		<value condition="Container.Content(tvshows)">$LOCALIZE[20161] : [COLOR=$VAR[color_header_text_accent]]$INFO[Window(Home).Property(TVShows.Count)][/COLOR] [B]|[/B] $LOCALIZE[16101] : [COLOR=$VAR[color_header_text_accent]]$INFO[Window(Home).Property(TVShows.UnWatched)][/COLOR]</value>
		<value condition="Container.Content(episodes)">[UPPERCASE][B]$INFO[listitem.season,$LOCALIZE[20373]  ,  •  ][/B][/UPPERCASE]$LOCALIZE[20161] : [COLOR=$VAR[color_header_text_accent]]$INFO[Container(id).NumItems][/COLOR] [B]|[/B] $LOCALIZE[16101] : [COLOR=$VAR[color_header_text_accent]]$INFO[Container.TotalUnWatched][/COLOR]</value>
		<value condition="Window.IsMedia">$LOCALIZE[20161] : [COLOR=$VAR[color_header_text_accent]]$INFO[Container(id).NumItems][/COLOR] [B]|[/B] $LOCALIZE[16101] : [COLOR=$VAR[color_header_text_accent]]$INFO[Container.TotalUnWatched][/COLOR]</value>
		<value condition="Window.IsActive(weather)">[COLOR=$VAR[color_header_text_accent]]$INFO[Window(weather).Property(WeatherProvider)][/COLOR]</value>
		<value>[COLOR=$VAR[color_header_text_accent]]$INFO[System.CurrentControl][/COLOR]</value>
	</variable>
	<variable name="CurrentContent_Info_left">
		<value condition="Window.Is(1120)">Search Term Is</value>
		<value condition="Container.Content(movies)">$LOCALIZE[20161] : [COLOR=$VAR[color_header_text_accent]]$INFO[Window(Home).Property(Movies.Count)][/COLOR]</value>
		<value condition="Container.Content(tvshows)">$LOCALIZE[20161] : [COLOR=$VAR[color_header_text_accent]]$INFO[Window(Home).Property(TVShows.Count)][/COLOR]</value>
		<value>$LOCALIZE[20161] : [COLOR=$VAR[color_header_text_accent]]$INFO[Container(id).NumItems][/COLOR]</value>
	</variable>
	<variable name="CurrentContent_Info_center">
		<value condition="Window.Is(1120)"> [B]:[/B] </value>
		<value> [B]|[/B] </value>
	</variable>
	<variable name="CurrentContent_Info_right">
		<value condition="Window.Is(1120)">[B][COLOR=$VAR[color_header_text_accent]]$INFO[Skin.string(searchterm)][/COLOR][/B]</value>
		<value condition="Container.Content(movies)">$LOCALIZE[16101] : [COLOR=$VAR[color_header_text_accent]]$INFO[Window(Home).Property(Movies.UnWatched)][/COLOR]</value>
		<value condition="Container.Content(tvshows)">$LOCALIZE[16101] : [COLOR=$VAR[color_header_text_accent]]$INFO[Window(Home).Property(TVShows.UnWatched)][/COLOR]</value>
		<value>$LOCALIZE[16101] : [COLOR=$VAR[color_header_text_accent]]$INFO[Container.TotalUnWatched][/COLOR]</value>
	</variable>
	
	<include name="global_background">
		<control type="group">
			<include>HiddenObject</include>
			<control type="image" id="99006">
				<texture background="true">$VAR[common_fanartbackground]</texture>
				<visible>Skin.HasSetting(ShowFanartBackground) | $EXP[Spotlight_Layout] | Window.IsActive(filebrowser)</visible>
			</control>
			<include condition="[Skin.HasSetting(ShowFanartBackground) + Skin.HasSetting(EnableRotatingExtraFanart)] | [[Window.IsActive(videos) + Skin.HasSetting(RotatingFanart_videocontent)] | [Window.IsActive(music) + Skin.HasSetting(RotatingFanart_musiccontent)]]">rotating_fanartbackground</include>
			<include condition="Skin.HasSetting(BlurEnabled)">blurred_fanartbackground</include>
		
		</control>
				
		<control type="group">
			<include>video_background</include>
			<control type="image">
				<description>Layer2 Artwork</description>
				
				<visible>[[$EXP[Spotlight_Layout]] + Skin.HasSetting(spotlight_blur)] | !$EXP[Spotlight_Layout]</visible>
				
				
				<visible>String.IsEmpty(Window(home).Property(videofullcreen_pvrgrid))</visible>
				<animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation) | Window.Is(settings)">Conditional</animation>
				<animation effect="slide" start="-10,-10" end="10,10" time="8000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation) | Window.Is(settings)">Conditional</animation>
				<depth>DepthBackground</depth>
				<fadetime>600</fadetime>
				<texture diffuse="colors/white.png" background="true">$VAR[layer2_image]</texture>
				<aspectratio align="center" aligny="center">scale</aspectratio>
				<include condition="!Skin.HasSetting(bg_use_coloredglass) + !window.isactive(weather)" content="colordiffuse_layer2_tint" />
				
					<animation effect="fade" end="35" condition="Skin.HasSetting(spotlight_blur) + Control.IsVisible(503) | Control.IsVisible(504)">conditional</animation>
					<animation effect="fade" end="10" condition="Skin.HasSetting(spotlight_blur) + Control.IsVisible(520)">conditional</animation>
				
			</control>
			<control type="image">
				<description>Layer2 pellucidoverlay - if artwork tint is unwished</description>
				<visible>Skin.HasSetting(bg_use_coloredglass) | window.isactive(weather)</visible>
				<visible>!$EXP[Spotlight_Layout]</visible>
				<visible>String.IsEmpty(Window(home).Property(videofullcreen_pvrgrid))</visible>
				<depth>DepthBackground</depth>
				<colordiffuse>$VAR[color_universal_background_layer2]</colordiffuse>
				<texture>$VAR[texture_layer2_coloredglassoverlay]</texture>
			</control>
			
			<include content="backgroundbuilding_layer3" />
		</control>
		
    </include>
	
	
	<!-- STILL: need reload skin to force show bg artwork, when sitch between common n spotlight layout views - EXP check ? -->
	
	<variable name="layer2_image">
		<value condition="$EXP[IsCurrentyPlayingCommon] + !Skin.HasSetting(bg_use_coloredglass)">colors/white70.png</value>
		<value condition="$EXP[IsCurrentyPlayingCommon] + Skin.HasSetting(bg_use_coloredglass)">colors/none.png</value>
		<value condition="!String.IsEmpty(ListItem.Art(animatedfanart)) + Skin.HasSetting(animatedfanart)">$INFO[ListItem.Art(animatedfanart)]</value>
		<!-- <value condition="Skin.HasSetting(TMDbHelper.EnableBlur) + !string.isempty(window(home).property(TMDbHelper.ListItem.BlurImage))">$INFO[Window(Home).Property(TMDbHelper.ListItem.BlurImage)]</value> -->
		<value condition="Control.IsVisible(99005) + [[[$EXP[Spotlight_Layout]] + Skin.HasSetting(spotlight_blur)] | [!$EXP[Spotlight_Layout]]]">$INFO[Window(home).Property(listitem_blurred)]</value>
		<value condition="Control.IsVisible(99007) + !String.IsEmpty(Control.GetLabel(99007))">$INFO[Control.GetLabel(99007)]</value>
		<value condition="Control.IsVisible(99006) + !String.IsEmpty(Control.GetLabel(99006))">$INFO[Control.GetLabel(99006)]</value>
		<value condition="Window.IsActive(weather) + [!Skin.HasSetting(weather_background_multiimage) + !Skin.HasSetting(weather_background_singleimage)]">special://skin/extras/weather/clouds.gif</value>
		<value condition="Window.IsActive(weather) + Skin.HasSetting(weather_background_multiimage)"></value>
		<value condition="Window.IsActive(weather) + Skin.HasSetting(weather_background_singleimage)">$INFO[Weather.FanartCode,resource://resource.images.weatherfanart.single/,.jpg]</value>
		<value condition="!$EXP(IsHome) + Skin.String(texture_global_background_layer2)">$INFO[Skin.String(texture_global_background_layer2)]</value>
		<value>resource://resource.images.skin.swan/backgroundimages/gradienta-bKESVqfxass-unsplash.jpg</value>
	</variable>
	<variable name="spotlight_fanartbackground">
		<value condition="!String.IsEmpty(ListItem.Art(animatedfanart)) + Skin.HasSetting(AnimatedFanart)">$INFO[ListItem.Art(animatedfanart)]</value>
		<value condition="Control.IsVisible(99007) + !String.IsEmpty(Control.GetLabel(99007))">$INFO[Control.GetLabel(99007)]</value>					 
		<value condition="Control.IsVisible(99006) + !String.IsEmpty(Control.GetLabel(99006))">$INFO[Control.GetLabel(99006)]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Art(fanart))">$INFO[Container.ListItem.Art(fanart)]</value>
		<value condition="Window.Is(home) + !String.IsEmpty(ListItem.Property(fanart))">$INFO[ListItem.Property(fanart)]</value>
	</variable>
	
	<include name="colordiffuse_layer2_tint">
		<colordiffuse>$VAR[color_universal_background_layer2]</colordiffuse>
	</include>
	<variable name="texture_layer2_coloredglassoverlay">
		<value condition="!Window.IsActive(MyPVRGuide.xml) + $EXP[IsCurrentyPlayingCommon]">colors/white70.png</value>
		<value condition="Window.IsActive(weather) + [Skin.HasSetting(weather_background_multiimage) | Skin.HasSetting(weather_background_singleimage)]">colors/white40.png</value>
		<value>colors/white80.png</value>
	</variable>
	<include name="backgroundbuilding_layer3">
		<control type="image">
			<description>temp disabled for spotligth views, else share same image, maybe just optional share or disable in lib</description>
			<visible>!$EXP[Spotlight_Layout]</visible>
			<depth>DepthBackground2</depth>
			<texture>$VAR[backgroundbuilding_layer3_texture]</texture>
			<colordiffuse>$VAR[backgroundbuilding_layer3_color]</colordiffuse>
		</control>
	</include>
	<variable name="backgroundbuilding_layer3_texture">
		<value condition="$EXP[IsHome] + !String.IsEmpty(Skin.String(texture_home_background_layer3))">$INFO[Skin.String(texture_home_background_layer3)]</value>
		<value condition="!$EXP[IsHome]">$INFO[Skin.String(texture_global_background_layer3)]</value>
	</variable>
	<variable name="backgroundbuilding_layer3_color">
		<value condition="$EXP[IsHome] + !String.IsEmpty(Skin.String(texture_home_background_layer3))">$VAR[color_home_background_layer3]</value>
		<value condition="!$EXP[IsHome]">$VAR[color_global_background_layer3]</value>
	</variable>
	<include name="backgroundbuilding_layer4">
		<control type="image">
			<description>optional panel</description>
			<left>0</left>
			<right>0</right>
			<width>100%</width>
			<top>0</top>
			<bottom>0</bottom>
			<texture colordiffuse="$VAR[color_lib_backgroundlayer4]">colors/white50.png</texture>
		</control>
		<control type="image">
			<description>optional panel left</description>
			<left>0</left>
			<width>$PARAM[width2]</width>
			<top>0</top>
			<bottom>0</bottom>
			<texture colordiffuse="$VAR[color_lib_backgroundlayer4]">colors/white50.png</texture>
		</control>
		<control type="image">
			<description>optional panel right</description>
			<right>0</right>
			<width>$PARAM[width3]</width>
			<top>0</top>
			<bottom>0</bottom>
			<texture colordiffuse="$VAR[color_lib_backgroundlayer4]">colors/white50.png</texture>
		</control>
	</include>
	
	
	<!-- <value condition="Skin.HasSetting(TMDbHelper.EnableBlur) + !string.isempty(window(home).property(TMDbHelper.ListItem.BlurImage))">$INFO[Window(Home).Property(TMDbHelper.ListItem.BlurImage)]</value> -->
		
		
    <variable name="common_fanartbackground">
		<value condition="[[$EXP[IsEpisode]] | [$EXP[IsSeason]]] + [!String.IsEmpty(ListItem.Art(fanart)) + !String.IsEqual(ListItem.Art(tvshow.fanart), ListItem.Art(fanart))]">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(Season.Fanart))">$INFO[ListItem.Art(season.fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(artist.fanart))">$INFO[ListItem.Art(artist.fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(albumartist.fanart))">$INFO[ListItem.Art(albumartist.fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.fanart))">$INFO[ListItem.Art(tvshow.fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Art(fanart))">$INFO[Container.ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Container.Art(fanart))">$INFO[Container.Art(fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(set.fanart))">$INFO[ListItem.Art(set.fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(album.thumb))">$INFO[ListItem.Art(album.thumb)]</value>
		<value condition="Window.IsActive(pictures) + !String.EndsWith(ListItem.Filenameandpath,.mp4)">$INFO[ListItem.Filenameandpath]</value>
		<value condition="Window.Is(home) + !String.IsEmpty(ListItem.Property(fanart))">$INFO[ListItem.Property(fanart)]</value>
	</variable>
	<include name="blurred_fanartbackground">
		<control type="image" id="99005">
			<description>blur container</description>
			<include>HiddenObject</include>
			<texture background="true">$VAR[common_fanartbackground]</texture>
		</control>
	</include>
	<include name="rotating_fanartbackground">
		<control type="fadelabel" id="99007">
			<visible>Window.IsMedia | Window.IsActive(home)</visible>
			
			<include condition="Skin.HasSetting(ShowFanartBackground)" content="sub_rotating_fanartbackground" />
			<include condition="!Skin.HasSetting(ShowFanartBackground) + Window.IsActive(music) + Skin.HasSetting(RotatingFanart_musiccontent)" content="sub_rotating_fanartbackground_music" />
			<include condition="!Skin.HasSetting(ShowFanartBackground) + Window.IsActive(videos) + Skin.HasSetting(RotatingFanart_videocontent)" content="sub_rotating_fanartbackground_videos" />
	
			<randomize>true</randomize>
			<pauseatend>5000</pauseatend>
			<scroll>false</scroll>
			<scrollout>false</scrollout>
		</control>
	</include>
	
	<include name="sub_rotating_fanartbackground">
			<info>Container.ListItem.Art(fanart)</info>
			<info>Container.ListItem.Art(fanart1)</info>
			<info>Container.ListItem.Art(fanart2)</info>
			<info>Container.ListItem.Art(fanart3)</info>
			<info>Container.ListItem.Art(fanart4)</info>
			<info>Container.ListItem.Art(fanart5)</info>
			<info>Container.ListItem.Art(fanart6)</info>
			<info>Container.ListItem.Art(fanart7)</info>
			<info>Container.ListItem.Art(fanart8)</info>
			<info>Container.ListItem.Art(fanart9)</info>
			<info>Container.ListItem.Art(fanart10)</info>
			<info>Container.ListItem.Art(fanart11)</info>
			<info>Container.ListItem.Art(fanart12)</info>
			<info>Container.ListItem.Art(fanart13)</info>
			<info>Container.ListItem.Art(fanart14)</info>
			<info>Container.ListItem.Art(fanart15)</info>
			<info>Container.ListItem.Art(fanart16)</info>
			<info>Container.ListItem.Art(fanart17)</info>
			<info>Container.ListItem.Art(fanart18)</info>
			<info>Container.ListItem.Art(fanart19)</info>
			<info>Container.ListItem.Art(fanart20)</info>
			<info>Container.ListItem.Art(tvshow.fanart)</info>
			<info>Container.ListItem.Art(tvshow.fanart1)</info>
			<info>Container.ListItem.Art(tvshow.fanart2)</info>
			<info>Container.ListItem.Art(tvshow.fanart3)</info>
			<info>Container.ListItem.Art(tvshow.fanart4)</info>
			<info>Container.ListItem.Art(tvshow.fanart5)</info>
			<info>Container.ListItem.Art(tvshow.fanart6)</info>
			<info>Container.ListItem.Art(tvshow.fanart7)</info>
			<info>Container.ListItem.Art(tvshow.fanart8)</info>
			<info>Container.ListItem.Art(tvshow.fanart9)</info>
			<info>Container.ListItem.Art(tvshow.fanart10)</info>
			<info>Container.ListItem.Art(tvshow.fanart11)</info>
			<info>Container.ListItem.Art(tvshow.fanart12)</info>
			<info>Container.ListItem.Art(tvshow.fanart13)</info>
			<info>Container.ListItem.Art(tvshow.fanart14)</info>
			<info>Container.ListItem.Art(tvshow.fanart15)</info>
			<info>Container.ListItem.Art(tvshow.fanart16)</info>
			<info>Container.ListItem.Art(tvshow.fanart17)</info>
			<info>Container.ListItem.Art(tvshow.fanart18)</info>
			<info>Container.ListItem.Art(tvshow.fanart19)</info>
			<info>Container.ListItem.Art(tvshow.fanart20)</info>
			<info>Container.ListItem.Art(artist.fanart)</info>
			<info>Container.ListItem.Art(artist.fanart1)</info>
			<info>Container.ListItem.Art(artist.fanart2)</info>
			<info>Container.ListItem.Art(artist.fanart3)</info>
			<info>Container.ListItem.Art(artist.fanart4)</info>
			<info>Container.ListItem.Art(artist.fanart5)</info>
			<info>Container.ListItem.Art(artist.fanart6)</info>
			<info>Container.ListItem.Art(artist.fanart7)</info>
			<info>Container.ListItem.Art(artist.fanart8)</info>
			<info>Container.ListItem.Art(artist.fanart9)</info>
			<info>Container.ListItem.Art(artist.fanart10)</info>
			<info>Container.ListItem.Art(artist.fanart11)</info>
			<info>Container.ListItem.Art(artist.fanart12)</info>
			<info>Container.ListItem.Art(artist.fanart13)</info>
			<info>Container.ListItem.Art(artist.fanart14)</info>
			<info>Container.ListItem.Art(artist.fanart15)</info>
			<info>Container.ListItem.Art(artist.fanart16)</info>
			<info>Container.ListItem.Art(artist.fanart17)</info>
			<info>Container.ListItem.Art(artist.fanart18)</info>
			<info>Container.ListItem.Art(artist.fanart19)</info>
			<info>Container.ListItem.Art(artist.fanart20)</info>
		</include>
	<include name="sub_rotating_fanartbackground_music">
		<info>Window(Home).Property(LatestAlbum.1.Fanart)</info>
		<info>Window(Home).Property(LatestAlbum.2.Fanart)</info>
		<info>Window(Home).Property(LatestAlbum.3.Fanart)</info>
		<info>Window(Home).Property(LatestAlbum.4.Fanart)</info>
		<info>Window(Home).Property(LatestAlbum.5.Fanart)</info>
		<info>Window(Home).Property(LatestAlbum.6.Fanart)</info>
		<info>Window(Home).Property(LatestAlbum.7.Fanart)</info>
		<info>Window(Home).Property(LatestAlbum.8.Fanart)</info>
		<info>Window(Home).Property(LatestAlbum.9.Fanart)</info>
		<info>Window(Home).Property(LatestAlbum.10.Fanart)</info>	
	</include>
	<include name="sub_rotating_fanartbackground_videos">
		<info>Window(Home).Property(LatestMovie.1.Fanart)</info>
		<info>Window(Home).Property(LatestMovie.2.Fanart)</info>
		<info>Window(Home).Property(LatestMovie.3.Fanart)</info>
		<info>Window(Home).Property(LatestMovie.4.Fanart)</info>
		<info>Window(Home).Property(LatestMovie.5.Fanart)</info>
		<info>Window(Home).Property(LatestMovie.6.Fanart)</info>
		<info>Window(Home).Property(LatestMovie.7.Fanart)</info>
		<info>Window(Home).Property(LatestMovie.8.Fanart)</info>
		<info>Window(Home).Property(LatestMovie.9.Fanart)</info>
		<info>Window(Home).Property(LatestMovie.10.Fanart)</info>
		<info>Window(Home).Property(LatestMusicVideo.1.Fanart)</info>
		<info>Window(Home).Property(LatestMusicVideo.2.Fanart)</info>
		<info>Window(Home).Property(LatestMusicVideo.3.Fanart)</info>
		<info>Window(Home).Property(LatestMusicVideo.4.Fanart)</info>
		<info>Window(Home).Property(LatestMusicVideo.5.Fanart)</info>
		<info>Window(Home).Property(LatestMusicVideo.6.Fanart)</info>
		<info>Window(Home).Property(LatestMusicVideo.7.Fanart)</info>
		<info>Window(Home).Property(LatestMusicVideo.8.Fanart)</info>
		<info>Window(Home).Property(LatestMusicVideo.9.Fanart)</info>
		<info>Window(Home).Property(LatestMusicVideo.10.Fanart)</info>
		<info>Window(Home).Property(LatestEpisode.1.Fanart)</info>
		<info>Window(Home).Property(LatestEpisode.2.Fanart)</info>
		<info>Window(Home).Property(LatestEpisode.3.Fanart)</info>
		<info>Window(Home).Property(LatestEpisode.4.Fanart)</info>
		<info>Window(Home).Property(LatestEpisode.5.Fanart)</info>
		<info>Window(Home).Property(LatestEpisode.6.Fanart)</info>
		<info>Window(Home).Property(LatestEpisode.7.Fanart)</info>
		<info>Window(Home).Property(LatestEpisode.8.Fanart)</info>
		<info>Window(Home).Property(LatestEpisode.9.Fanart)</info>
		<info>Window(Home).Property(LatestEpisode.10.Fanart)</info>
	</include>
	
	<include name="video_background">
		<control type="videowindow">
			<visible>![Control.IsVisible(503) | Control.IsVisible(504)]</visible>
			<visible>$EXP[IsCurrentyPlayingCommon]</visible>
		</control>
	</include>
	
	<include name="window_frame">
		<control type="image">
			<visible>Skin.HasSetting(window_frame)</visible>
			<texture border="50" colordiffuse="ff000000" diffuse="diffuse/bordercircle_100_inverted.png">diffuse/white_100_hardedge.png</texture>
			<bordertexture border="50" colordiffuse="$VAR[window_frame_border_color]" diffuse="diffuse/bordercircle_100.png">diffuse/white_100_hardedge.png</bordertexture>
			<aspectratio scalediffuse="false">stretch</aspectratio>
		</control>
	</include>
	<variable name="window_frame_border_color">
		<value condition="Window.IsActive(addonsettings)">$VAR[color_global_dialog_accent]</value>
		<value>00ffffff</value>
	</variable>
	
	<include name="dialog_background_triplepanel">
		<control type="image">
			<description>fs bg center,use cdiffuse global middle layer</description>
			<left>0</left>
			<top>0</top>
			<width>100%</width>
			<height>100%</height>
			<texture>colors/white.png</texture>
			<colordiffuse>$VAR[color_global_background_layer2]</colordiffuse>
		</control>
		<control type="image">
			<description>leftbg alpha60</description>
			<left>0</left>
			<top>0</top>
			<width>33.3%</width>
			<height>100%</height>
            <texture border="2">colors/white60.png</texture>
            <colordiffuse>ff000000</colordiffuse>
		</control>
		<control type="image">
			<description>center alpha80</description>
			<left>33.3%</left>
			<top>0</top>
			<width>33.3%</width>
			<height>100%</height>
            <texture border="2">colors/white80.png</texture>
            <colordiffuse>ff000000</colordiffuse>
		</control>
		<control type="image">
			<description>right alpha100</description>
			<left>66.6%</left>
			<top>0</top>
			<width>33.4%</width>
			<height>100%</height>
            <texture>colors/white.png</texture>
            <colordiffuse>FF000000</colordiffuse>
		</control>
	</include>
	<variable name="texture_profilelogin_background">
		<value condition="Skin.String(texture_profilelogin_background)">$INFO[Skin.String(texture_profilelogin_background)]</value>
		<value>resource://resource.images.skin.swan/backgroundimages/76256.jpg</value>
	</variable>
	
	<include name="rotating_player_fanartbackground">
		<control type="fadelabel" id="77707">
			<visible>!Skin.HasSetting(musicplayer_force_unrelatedart)</visible>
			<visible>!string.isempty(Player.Art(artist.fanart)) | !string.isempty(Player.Art(albumartist.fanart)) | !string.isempty(player.art(album.thumb))</visible>
			<info>Player.Art(artist.fanart)</info>
			<info>Player.Art(artist.fanart1)</info>
			<info>Player.Art(artist.fanart2)</info>
			<info>Player.Art(artist.fanart3)</info>
			<info>Player.Art(artist.fanart4)</info>
			<info>Player.Art(artist.fanart5)</info>
			<info>Player.Art(artist.fanart6)</info>
			<info>Player.Art(artist.fanart7)</info>
			<info>Player.Art(artist.fanart8)</info>
			<info>Player.Art(artist.fanart9)</info>
			<info>Player.Art(artist.fanart10)</info>
			<info>Player.Art(artist.fanart11)</info>
			<info>Player.Art(artist.fanart12)</info>
			<info>Player.Art(artist.fanart13)</info>
			<info>Player.Art(artist.fanart14)</info>
			<info>Player.Art(artist.fanart15)</info>
			<info>Player.Art(artist.fanart16)</info>
			<info>Player.Art(artist.fanart17)</info>
			<info>Player.Art(artist.fanart18)</info>
			<info>Player.Art(artist.fanart19)</info>
			<info>Player.Art(artist.fanart20)</info>
			<info>Player.Art(artist.landscape)</info>
			<info>Player.Art(artist.landscape1)</info>
			<info>Player.Art(artist.landscape2)</info>
			<info>Player.Art(artist.landscape3)</info>
			<info>Player.Art(artist.landscape4)</info>
			<info>Player.Art(artist.landscape5)</info>
			<info>Player.Art(artist.landscape6)</info>
			<info>Player.Art(artist.landscape7)</info>
			<info>Player.Art(artist.landscape8)</info>
			<info>Player.Art(artist.landscape9)</info>
			<info>Player.Art(artist.landscape10)</info>
			<info>Player.Art(artist.landscape11)</info>
			<info>Player.Art(artist.landscape12)</info>
			<info>Player.Art(artist.landscape13)</info>
			<info>Player.Art(artist.landscape14)</info>
			<info>Player.Art(artist.landscape15)</info>
			<info>Player.Art(artist.landscape16)</info>
			<info>Player.Art(artist.landscape17)</info>
			<info>Player.Art(artist.landscape18)</info>
			<info>Player.Art(artist.landscape19)</info>
			<info>Player.Art(artist.landscape20)</info>
			<info>Player.Art(album.thumb)</info>
			<randomize>true</randomize>
			<pauseatend>5000</pauseatend>
			<scroll>false</scroll>
			<scrollout>false</scrollout>
		</control>
		<control type="fadelabel" id="77708">
			<description>fallback if no player artowrk exist, later non hiden group of album thumbs which fades at different times and change source differently to each other - lib thumbs</description>
			<visible>!Skin.HasSetting(musicplayer_force_unrelatedart) + [Library.HasContent(music) | Library.HasContent(musicvideo)]</visible>
			<visible>string.isempty(Player.Art(artist.fanart)) + string.isempty(player.art(album.thumb))</visible>
			<info>Window(Home).Property(LatestMusicVideo.1.Fanart)</info>
	        <info>Window(Home).Property(LatestAlbum.1.Fanart)</info>
	        <info>Window(home).Property(EmbuaryBackgroundMusic)</info>
	        <randomize>true</randomize>
			<pauseatend>5000</pauseatend>
			<scroll>false</scroll>
			<scrollout>false</scrollout>
		</control>
		<control type="multiimage" id="77709">
			<description>forced fallback, future some more</description>
			<visible>Skin.HasSetting(musicplayer_force_unrelatedart) | [string.isempty(Player.Art(artist.fanart)) + string.isempty(player.art(album.thumb)) + !Library.HasContent(music) + !Library.HasContent(musicvideo)]</visible>
			<depth>DepthBackground</depth>
			<fadetime>3000</fadetime>
			<imagepath>$VAR[musicplayer_unrelatedart]</imagepath>
		</control>
	</include>
	
	<variable name="musicplayer_unrelatedart">
		<value condition="Skin.String(texturepath_playerartwork)">$INFO[Skin.String(texturepath_playerartwork)]</value>
		<value>resource://resource.images.skin.swan/musicplayer_fallback/</value>
	</variable>
	<variable name="musicplayer_fanart">
		<value condition="Skin.HasSetting(Rotating_MusicPlayerFanart) + Control.IsVisible(77707) + !String.IsEmpty(Control.GetLabel(77707))">$INFO[Control.GetLabel(77707)]</value>
		<value condition="Skin.HasSetting(Rotating_MusicPlayerFanart) + Control.IsVisible(77708) + !String.IsEmpty(Control.GetLabel(77708))">$INFO[Control.GetLabel(77708)]</value>
		<value condition="Skin.HasSetting(Rotating_MusicPlayerFanart) + Control.IsVisible(77709) + !String.IsEmpty(Control.GetLabel(77709))">$INFO[Control.GetLabel(77709)]</value>
		<value condition="!Skin.HasSetting(Rotating_MusicPlayerFanart)">$VAR[common_player_fanartbackground]</value>
	</variable>
	<variable name="common_player_fanartbackground">
		<value condition="!String.IsEmpty(Player.Art(artist.fanart))">$INFO[Player.Art(artist.fanart)]</value>
		<value condition="!String.IsEmpty(Player.Art(albumartist.fanart)) + !String.Contains(Player.Art(albumartist.fanart),various-artists)">$INFO[Player.Art(albumartist.fanart)]</value>
		<value condition="!String.IsEmpty(Player.Art(albumartist.thumb)) + !String.Contains(Player.Art(albumartist.thumb),various-artists)">$INFO[Player.Art(albumartist.thumb)]</value>
		<value condition="!String.IsEmpty(Player.Art(fanart)) + !String.Contains(Player.Art(fanart),various-artists)">$INFO[Player.Art(fanart)]</value>
		<value condition="!String.IsEmpty(Player.Art(album.thumb))">$INFO[Player.Art(album.thumb)]</value>
		<value>resource://resource.images.skin.swan/musicplayer_fallback/fallback_single2.jpg</value>
	</variable>
</includes>